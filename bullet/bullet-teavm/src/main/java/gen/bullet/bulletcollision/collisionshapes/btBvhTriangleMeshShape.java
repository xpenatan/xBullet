/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.bullet.bulletcollision.collisionshapes;

import gen.bullet.linearmath.btVector3;

public class btBvhTriangleMeshShape extends btTriangleMeshShape {

    static public final btBvhTriangleMeshShape NULL = btBvhTriangleMeshShape.native_new();

    public btBvhTriangleMeshShape(btStridingMeshInterface meshInterface, boolean useQuantizedAabbCompression, boolean buildBvh) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_btStridingMeshInterface_boolean_boolean(meshInterface.native_address, useQuantizedAabbCompression, buildBvh);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new bullet.btBvhTriangleMeshShape(meshInterface_addr, useQuantizedAabbCompression, buildBvh);
return bullet.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"meshInterface_addr", "useQuantizedAabbCompression", "buildBvh"}, script = "var jsObj = new bullet.btBvhTriangleMeshShape(meshInterface_addr, useQuantizedAabbCompression, buildBvh);return bullet.getPointer(jsObj);")
    public static native int internal_native_create_btStridingMeshInterface_boolean_boolean(int meshInterface_addr, boolean useQuantizedAabbCompression, boolean buildBvh);

    public btBvhTriangleMeshShape(btStridingMeshInterface meshInterface, boolean useQuantizedAabbCompression) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_btStridingMeshInterface_boolean(meshInterface.native_address, useQuantizedAabbCompression);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new bullet.btBvhTriangleMeshShape(meshInterface_addr, useQuantizedAabbCompression);
return bullet.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"meshInterface_addr", "useQuantizedAabbCompression"}, script = "var jsObj = new bullet.btBvhTriangleMeshShape(meshInterface_addr, useQuantizedAabbCompression);return bullet.getPointer(jsObj);")
    public static native int internal_native_create_btStridingMeshInterface_boolean(int meshInterface_addr, boolean useQuantizedAabbCompression);

    public btBvhTriangleMeshShape(btStridingMeshInterface meshInterface, boolean useQuantizedAabbCompression, btVector3 bvhAabbMin, btVector3 bvhAabbMax, boolean buildBvh) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_btStridingMeshInterface_boolean_btVector3_btVector3_boolean(meshInterface.native_address, useQuantizedAabbCompression, bvhAabbMin.native_address, bvhAabbMax.native_address, buildBvh);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new bullet.btBvhTriangleMeshShape(meshInterface_addr, useQuantizedAabbCompression, bvhAabbMin_addr, bvhAabbMax_addr, buildBvh);
return bullet.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"meshInterface_addr", "useQuantizedAabbCompression", "bvhAabbMin_addr", "bvhAabbMax_addr", "buildBvh"}, script = "var jsObj = new bullet.btBvhTriangleMeshShape(meshInterface_addr, useQuantizedAabbCompression, bvhAabbMin_addr, bvhAabbMax_addr, buildBvh);return bullet.getPointer(jsObj);")
    public static native int internal_native_create_btStridingMeshInterface_boolean_btVector3_btVector3_boolean(int meshInterface_addr, boolean useQuantizedAabbCompression, int bvhAabbMin_addr, int bvhAabbMax_addr, boolean buildBvh);

    public btBvhTriangleMeshShape(btStridingMeshInterface meshInterface, boolean useQuantizedAabbCompression, btVector3 bvhAabbMin, btVector3 bvhAabbMax) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_btStridingMeshInterface_boolean_btVector3_btVector3(meshInterface.native_address, useQuantizedAabbCompression, bvhAabbMin.native_address, bvhAabbMax.native_address);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new bullet.btBvhTriangleMeshShape(meshInterface_addr, useQuantizedAabbCompression, bvhAabbMin_addr, bvhAabbMax_addr);
return bullet.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"meshInterface_addr", "useQuantizedAabbCompression", "bvhAabbMin_addr", "bvhAabbMax_addr"}, script = "var jsObj = new bullet.btBvhTriangleMeshShape(meshInterface_addr, useQuantizedAabbCompression, bvhAabbMin_addr, bvhAabbMax_addr);return bullet.getPointer(jsObj);")
    public static native int internal_native_create_btStridingMeshInterface_boolean_btVector3_btVector3(int meshInterface_addr, boolean useQuantizedAabbCompression, int bvhAabbMin_addr, int bvhAabbMax_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btBvhTriangleMeshShape(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static btBvhTriangleMeshShape native_new() {
        return new btBvhTriangleMeshShape((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btBvhTriangleMeshShape);
bullet.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btBvhTriangleMeshShape);bullet.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void performRaycast(btTriangleCallback callback, btVector3 raySource, btVector3 rayTarget) {
        internal_native_performRaycast(native_address, callback.native_address, raySource.native_address, rayTarget.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btBvhTriangleMeshShape);
jsObj.performRaycast(callback_addr, raySource_addr, rayTarget_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "callback_addr", "raySource_addr", "rayTarget_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btBvhTriangleMeshShape);jsObj.performRaycast(callback_addr, raySource_addr, rayTarget_addr);")
    public static native void internal_native_performRaycast(int this_addr, int callback_addr, int raySource_addr, int rayTarget_addr);
}
