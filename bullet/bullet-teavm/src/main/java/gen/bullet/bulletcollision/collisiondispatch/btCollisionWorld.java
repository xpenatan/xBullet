/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.bullet.bulletcollision.collisiondispatch;

import gen.com.github.xpenatan.jParser.idl.IDLBase;
import gen.bullet.bulletcollision.broadphasecollision.btDispatcher;
import gen.bullet.bulletcollision.broadphasecollision.btBroadphaseInterface;
import gen.bullet.bulletcollision.broadphasecollision.btOverlappingPairCache;
import gen.bullet.btDispatcherInfo;
import gen.bullet.linearmath.btIDebugDraw;
import gen.bullet.linearmath.btTransform;
import gen.bullet.bulletcollision.collisionshapes.btCollisionShape;
import gen.bullet.linearmath.btVector3;
import gen.bullet.RayResultCallback;
import gen.bullet.bulletcollision.collisionshapes.btConvexShape;
import gen.bullet.ConvexResultCallback;
import gen.bullet.ContactResultCallback;
import gen.bullet.btCollisionObjectArray;

public class btCollisionWorld extends IDLBase {

    private btBroadphaseInterface btBroadphaseInterface_TEMP_GEN_0;

    private btOverlappingPairCache btOverlappingPairCache_TEMP_GEN_0;

    private btDispatcher btDispatcher_TEMP_GEN_0;

    private btDispatcherInfo btDispatcherInfo_TEMP_GEN_0;

    private btIDebugDraw btIDebugDraw_TEMP_GEN_0;

    private btCollisionObjectArray btCollisionObjectArray_TEMP_GEN_0;

    static public final btCollisionWorld NULL = btCollisionWorld.native_new();

    public btCollisionWorld(btDispatcher dispatcher, btBroadphaseInterface pairCache, btCollisionConfiguration collisionConfiguration) {
        int addr = internal_native_create_btDispatcher_btBroadphaseInterface_btCollisionConfiguration(dispatcher.native_address, pairCache.native_address, collisionConfiguration.native_address);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new bullet.btCollisionWorld(dispatcher_addr, pairCache_addr, collisionConfiguration_addr);
return bullet.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"dispatcher_addr", "pairCache_addr", "collisionConfiguration_addr"}, script = "var jsObj = new bullet.btCollisionWorld(dispatcher_addr, pairCache_addr, collisionConfiguration_addr);return bullet.getPointer(jsObj);")
    public static native int internal_native_create_btDispatcher_btBroadphaseInterface_btCollisionConfiguration(int dispatcher_addr, int pairCache_addr, int collisionConfiguration_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btCollisionWorld(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btCollisionWorld native_new() {
        return new btCollisionWorld((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
bullet.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);bullet.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void setBroadphase(btBroadphaseInterface pairCache) {
        internal_native_setBroadphase(native_address, pairCache.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.setBroadphase(pairCache_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "pairCache_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.setBroadphase(pairCache_addr);")
    public static native void internal_native_setBroadphase(int this_addr, int pairCache_addr);

    public btBroadphaseInterface getBroadphase() {
        int pointer = internal_native_getBroadphase(native_address);
        if (pointer == 0)
            return btBroadphaseInterface.NULL;
        if (btBroadphaseInterface_TEMP_GEN_0 == null)
            btBroadphaseInterface_TEMP_GEN_0 = btBroadphaseInterface.native_new();
        btBroadphaseInterface_TEMP_GEN_0.internal_reset(pointer, false);
        return btBroadphaseInterface_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
var returnedJSObj = jsObj.getBroadphase();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);var returnedJSObj = jsObj.getBroadphase();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getBroadphase(int this_addr);

    public btOverlappingPairCache getPairCache() {
        int pointer = internal_native_getPairCache(native_address);
        if (pointer == 0)
            return btOverlappingPairCache.NULL;
        if (btOverlappingPairCache_TEMP_GEN_0 == null)
            btOverlappingPairCache_TEMP_GEN_0 = btOverlappingPairCache.native_new();
        btOverlappingPairCache_TEMP_GEN_0.internal_reset(pointer, false);
        return btOverlappingPairCache_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
var returnedJSObj = jsObj.getPairCache();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);var returnedJSObj = jsObj.getPairCache();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getPairCache(int this_addr);

    public btDispatcher getDispatcher() {
        int pointer = internal_native_getDispatcher(native_address);
        if (pointer == 0)
            return btDispatcher.NULL;
        if (btDispatcher_TEMP_GEN_0 == null)
            btDispatcher_TEMP_GEN_0 = btDispatcher.native_new();
        btDispatcher_TEMP_GEN_0.internal_reset(pointer, false);
        return btDispatcher_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
var returnedJSObj = jsObj.getDispatcher();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);var returnedJSObj = jsObj.getDispatcher();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getDispatcher(int this_addr);

    public btDispatcherInfo getDispatchInfo() {
        int pointer = internal_native_getDispatchInfo(native_address);
        if (pointer == 0)
            return btDispatcherInfo.NULL;
        if (btDispatcherInfo_TEMP_GEN_0 == null)
            btDispatcherInfo_TEMP_GEN_0 = btDispatcherInfo.native_new();
        btDispatcherInfo_TEMP_GEN_0.internal_reset(pointer, false);
        return btDispatcherInfo_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
var returnedJSObj = jsObj.getDispatchInfo();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);var returnedJSObj = jsObj.getDispatchInfo();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getDispatchInfo(int this_addr);

    public btIDebugDraw getDebugDrawer() {
        int pointer = internal_native_getDebugDrawer(native_address);
        if (pointer == 0)
            return btIDebugDraw.NULL;
        if (btIDebugDraw_TEMP_GEN_0 == null)
            btIDebugDraw_TEMP_GEN_0 = btIDebugDraw.native_new();
        btIDebugDraw_TEMP_GEN_0.internal_reset(pointer, false);
        return btIDebugDraw_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
var returnedJSObj = jsObj.getDebugDrawer();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);var returnedJSObj = jsObj.getDebugDrawer();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getDebugDrawer(int this_addr);

    public void updateSingleAabb(btCollisionObject colObj) {
        internal_native_updateSingleAabb(native_address, colObj.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.updateSingleAabb(colObj_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "colObj_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.updateSingleAabb(colObj_addr);")
    public static native void internal_native_updateSingleAabb(int this_addr, int colObj_addr);

    public void updateAabbs() {
        internal_native_updateAabbs(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.updateAabbs();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.updateAabbs();")
    public static native void internal_native_updateAabbs(int this_addr);

    public void computeOverlappingPairs() {
        internal_native_computeOverlappingPairs(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.computeOverlappingPairs();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.computeOverlappingPairs();")
    public static native void internal_native_computeOverlappingPairs(int this_addr);

    public void setDebugDrawer(btIDebugDraw debugDrawer) {
        internal_native_setDebugDrawer(native_address, debugDrawer.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.setDebugDrawer(debugDrawer_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "debugDrawer_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.setDebugDrawer(debugDrawer_addr);")
    public static native void internal_native_setDebugDrawer(int this_addr, int debugDrawer_addr);

    public void debugDrawWorld() {
        internal_native_debugDrawWorld(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.debugDrawWorld();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.debugDrawWorld();")
    public static native void internal_native_debugDrawWorld(int this_addr);

    public void debugDrawObject(btTransform worldTransform, btCollisionShape shape, btVector3 color) {
        internal_native_debugDrawObject(native_address, worldTransform.native_address, shape.native_address, color.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.debugDrawObject(worldTransform_addr, shape_addr, color_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "worldTransform_addr", "shape_addr", "color_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.debugDrawObject(worldTransform_addr, shape_addr, color_addr);")
    public static native void internal_native_debugDrawObject(int this_addr, int worldTransform_addr, int shape_addr, int color_addr);

    public int getNumCollisionObjects() {
        return internal_native_getNumCollisionObjects(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
var returnedJSObj = jsObj.getNumCollisionObjects();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);var returnedJSObj = jsObj.getNumCollisionObjects();return returnedJSObj;")
    public static native int internal_native_getNumCollisionObjects(int this_addr);

    public void rayTest(btVector3 rayFromWorld, btVector3 rayToWorld, RayResultCallback resultCallback) {
        internal_native_rayTest(native_address, rayFromWorld.native_address, rayToWorld.native_address, resultCallback.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.rayTest(rayFromWorld_addr, rayToWorld_addr, resultCallback_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "rayFromWorld_addr", "rayToWorld_addr", "resultCallback_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.rayTest(rayFromWorld_addr, rayToWorld_addr, resultCallback_addr);")
    public static native void internal_native_rayTest(int this_addr, int rayFromWorld_addr, int rayToWorld_addr, int resultCallback_addr);

    public void convexSweepTest(btConvexShape castShape, btTransform from, btTransform to, ConvexResultCallback resultCallback, float allowedCcdPenetration) {
        internal_native_convexSweepTest(native_address, castShape.native_address, from.native_address, to.native_address, resultCallback.native_address, allowedCcdPenetration);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.convexSweepTest(castShape_addr, from_addr, to_addr, resultCallback_addr, allowedCcdPenetration);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "castShape_addr", "from_addr", "to_addr", "resultCallback_addr", "allowedCcdPenetration"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.convexSweepTest(castShape_addr, from_addr, to_addr, resultCallback_addr, allowedCcdPenetration);")
    public static native void internal_native_convexSweepTest(int this_addr, int castShape_addr, int from_addr, int to_addr, int resultCallback_addr, float allowedCcdPenetration);

    public void convexSweepTest(btConvexShape castShape, btTransform from, btTransform to, ConvexResultCallback resultCallback) {
        internal_native_convexSweepTest(native_address, castShape.native_address, from.native_address, to.native_address, resultCallback.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.convexSweepTest(castShape_addr, from_addr, to_addr, resultCallback_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "castShape_addr", "from_addr", "to_addr", "resultCallback_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.convexSweepTest(castShape_addr, from_addr, to_addr, resultCallback_addr);")
    public static native void internal_native_convexSweepTest(int this_addr, int castShape_addr, int from_addr, int to_addr, int resultCallback_addr);

    public void contactTest(btCollisionObject colObj, ContactResultCallback resultCallback) {
        internal_native_contactTest(native_address, colObj.native_address, resultCallback.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.contactTest(colObj_addr, resultCallback_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "colObj_addr", "resultCallback_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.contactTest(colObj_addr, resultCallback_addr);")
    public static native void internal_native_contactTest(int this_addr, int colObj_addr, int resultCallback_addr);

    public void contactPairTest(btCollisionObject colObjA, btCollisionObject colObjB, ContactResultCallback resultCallback) {
        internal_native_contactPairTest(native_address, colObjA.native_address, colObjB.native_address, resultCallback.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.contactPairTest(colObjA_addr, colObjB_addr, resultCallback_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "colObjA_addr", "colObjB_addr", "resultCallback_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.contactPairTest(colObjA_addr, colObjB_addr, resultCallback_addr);")
    public static native void internal_native_contactPairTest(int this_addr, int colObjA_addr, int colObjB_addr, int resultCallback_addr);

    public void addCollisionObject(btCollisionObject collisionObject, int collisionFilterGroup, int collisionFilterMask) {
        internal_native_addCollisionObject(native_address, collisionObject.native_address, collisionFilterGroup, collisionFilterMask);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.addCollisionObject(collisionObject_addr, collisionFilterGroup, collisionFilterMask);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "collisionObject_addr", "collisionFilterGroup", "collisionFilterMask"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.addCollisionObject(collisionObject_addr, collisionFilterGroup, collisionFilterMask);")
    public static native void internal_native_addCollisionObject(int this_addr, int collisionObject_addr, int collisionFilterGroup, int collisionFilterMask);

    public void addCollisionObject(btCollisionObject collisionObject, int collisionFilterGroup) {
        internal_native_addCollisionObject(native_address, collisionObject.native_address, collisionFilterGroup);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.addCollisionObject(collisionObject_addr, collisionFilterGroup);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "collisionObject_addr", "collisionFilterGroup"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.addCollisionObject(collisionObject_addr, collisionFilterGroup);")
    public static native void internal_native_addCollisionObject(int this_addr, int collisionObject_addr, int collisionFilterGroup);

    public void addCollisionObject(btCollisionObject collisionObject) {
        internal_native_addCollisionObject(native_address, collisionObject.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.addCollisionObject(collisionObject_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "collisionObject_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.addCollisionObject(collisionObject_addr);")
    public static native void internal_native_addCollisionObject(int this_addr, int collisionObject_addr);

    public btCollisionObjectArray getCollisionObjectArray() {
        int pointer = internal_native_getCollisionObjectArray(native_address);
        if (pointer == 0)
            return btCollisionObjectArray.NULL;
        if (btCollisionObjectArray_TEMP_GEN_0 == null)
            btCollisionObjectArray_TEMP_GEN_0 = btCollisionObjectArray.native_new();
        btCollisionObjectArray_TEMP_GEN_0.internal_reset(pointer, false);
        return btCollisionObjectArray_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
var returnedJSObj = jsObj.getCollisionObjectArray();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);var returnedJSObj = jsObj.getCollisionObjectArray();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getCollisionObjectArray(int this_addr);

    public void removeCollisionObject(btCollisionObject collisionObject) {
        internal_native_removeCollisionObject(native_address, collisionObject.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.removeCollisionObject(collisionObject_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "collisionObject_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.removeCollisionObject(collisionObject_addr);")
    public static native void internal_native_removeCollisionObject(int this_addr, int collisionObject_addr);

    public void performDiscreteCollisionDetection() {
        internal_native_performDiscreteCollisionDetection(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.performDiscreteCollisionDetection();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.performDiscreteCollisionDetection();")
    public static native void internal_native_performDiscreteCollisionDetection(int this_addr);

    public boolean getForceUpdateAllAabbs() {
        return internal_native_getForceUpdateAllAabbs(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
var returnedJSObj = jsObj.getForceUpdateAllAabbs();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);var returnedJSObj = jsObj.getForceUpdateAllAabbs();return returnedJSObj;")
    public static native boolean internal_native_getForceUpdateAllAabbs(int this_addr);

    public void setForceUpdateAllAabbs(boolean f) {
        internal_native_setForceUpdateAllAabbs(native_address, f);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);
jsObj.setForceUpdateAllAabbs(f);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "f"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionWorld);jsObj.setForceUpdateAllAabbs(f);")
    public static native void internal_native_setForceUpdateAllAabbs(int this_addr, boolean f);
}
