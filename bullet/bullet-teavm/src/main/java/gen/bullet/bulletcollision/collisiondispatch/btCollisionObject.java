/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.bullet.bulletcollision.collisiondispatch;

import gen.com.github.xpenatan.jParser.idl.IDLBase;
import gen.bullet.bulletcollision.collisionshapes.btCollisionShape;
import gen.bullet.linearmath.btVector3;
import gen.bullet.linearmath.btTransform;
import gen.bullet.bulletcollision.broadphasecollision.btBroadphaseProxy;

public class btCollisionObject extends IDLBase {

    private btCollisionShape btCollisionShape_TEMP_GEN_0;

    private btVector3 btVector3_TEMP_GEN_0;

    private btTransform btTransform_TEMP_GEN_0;

    private btBroadphaseProxy btBroadphaseProxy_TEMP_GEN_0;

    private btTransform btTransform_TEMP_GEN_1;

    private btVector3 btVector3_TEMP_GEN_1;

    private btVector3 btVector3_TEMP_GEN_2;

    private IDLBase IDLBase_TEMP_GEN_0;

    static public final btCollisionObject NULL = btCollisionObject.native_new();

    public btCollisionObject() {
        int addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new bullet.btCollisionObject();
return bullet.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(script = "var jsObj = new bullet.btCollisionObject();return bullet.getPointer(jsObj);")
    public static native int internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btCollisionObject(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btCollisionObject native_new() {
        return new btCollisionObject((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
bullet.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);bullet.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public btCollisionShape getCollisionShape() {
        int pointer = internal_native_getCollisionShape(native_address);
        if (pointer == 0)
            return btCollisionShape.NULL;
        if (btCollisionShape_TEMP_GEN_0 == null)
            btCollisionShape_TEMP_GEN_0 = btCollisionShape.native_new();
        btCollisionShape_TEMP_GEN_0.internal_reset(pointer, false);
        return btCollisionShape_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getCollisionShape();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getCollisionShape();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getCollisionShape(int this_addr);

    public boolean mergesSimulationIslands() {
        return internal_native_mergesSimulationIslands(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.mergesSimulationIslands();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.mergesSimulationIslands();return returnedJSObj;")
    public static native boolean internal_native_mergesSimulationIslands(int this_addr);

    public btVector3 getAnisotropicFriction() {
        int pointer = internal_native_getAnisotropicFriction(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_0 == null)
            btVector3_TEMP_GEN_0 = btVector3.native_new();
        btVector3_TEMP_GEN_0.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getAnisotropicFriction();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getAnisotropicFriction();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getAnisotropicFriction(int this_addr);

    public void setAnisotropicFriction(btVector3 anisotropicFriction, int frictionMode) {
        internal_native_setAnisotropicFriction(native_address, anisotropicFriction.native_address, frictionMode);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setAnisotropicFriction(anisotropicFriction_addr, frictionMode);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "anisotropicFriction_addr", "frictionMode"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setAnisotropicFriction(anisotropicFriction_addr, frictionMode);")
    public static native void internal_native_setAnisotropicFriction(int this_addr, int anisotropicFriction_addr, int frictionMode);

    public boolean hasAnisotropicFriction(int frictionMode) {
        return internal_native_hasAnisotropicFriction(native_address, frictionMode);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.hasAnisotropicFriction(frictionMode);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "frictionMode"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.hasAnisotropicFriction(frictionMode);return returnedJSObj;")
    public static native boolean internal_native_hasAnisotropicFriction(int this_addr, int frictionMode);

    public boolean hasAnisotropicFriction() {
        return internal_native_hasAnisotropicFriction(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.hasAnisotropicFriction();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.hasAnisotropicFriction();return returnedJSObj;")
    public static native boolean internal_native_hasAnisotropicFriction(int this_addr);

    public void setContactProcessingThreshold(float contactProcessingThreshold) {
        internal_native_setContactProcessingThreshold(native_address, contactProcessingThreshold);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setContactProcessingThreshold(contactProcessingThreshold);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "contactProcessingThreshold"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setContactProcessingThreshold(contactProcessingThreshold);")
    public static native void internal_native_setContactProcessingThreshold(int this_addr, float contactProcessingThreshold);

    public float getContactProcessingThreshold() {
        return internal_native_getContactProcessingThreshold(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getContactProcessingThreshold();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getContactProcessingThreshold();return returnedJSObj;")
    public static native float internal_native_getContactProcessingThreshold(int this_addr);

    public boolean isStaticObject() {
        return internal_native_isStaticObject(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.isStaticObject();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.isStaticObject();return returnedJSObj;")
    public static native boolean internal_native_isStaticObject(int this_addr);

    public boolean isKinematicObject() {
        return internal_native_isKinematicObject(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.isKinematicObject();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.isKinematicObject();return returnedJSObj;")
    public static native boolean internal_native_isKinematicObject(int this_addr);

    public boolean isStaticOrKinematicObject() {
        return internal_native_isStaticOrKinematicObject(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.isStaticOrKinematicObject();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.isStaticOrKinematicObject();return returnedJSObj;")
    public static native boolean internal_native_isStaticOrKinematicObject(int this_addr);

    public boolean hasContactResponse() {
        return internal_native_hasContactResponse(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.hasContactResponse();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.hasContactResponse();return returnedJSObj;")
    public static native boolean internal_native_hasContactResponse(int this_addr);

    public void setCollisionShape(btCollisionShape collisionShape) {
        internal_native_setCollisionShape(native_address, collisionShape.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setCollisionShape(collisionShape_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "collisionShape_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setCollisionShape(collisionShape_addr);")
    public static native void internal_native_setCollisionShape(int this_addr, int collisionShape_addr);

    public void setIgnoreCollisionCheck(btCollisionObject obj, boolean ignoreCollisionCheck) {
        internal_native_setIgnoreCollisionCheck(native_address, obj.native_address, ignoreCollisionCheck);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setIgnoreCollisionCheck(obj_addr, ignoreCollisionCheck);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "obj_addr", "ignoreCollisionCheck"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setIgnoreCollisionCheck(obj_addr, ignoreCollisionCheck);")
    public static native void internal_native_setIgnoreCollisionCheck(int this_addr, int obj_addr, boolean ignoreCollisionCheck);

    public boolean checkCollideWithOverride(btCollisionObject obj) {
        return internal_native_checkCollideWithOverride(native_address, obj.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.checkCollideWithOverride(obj_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "obj_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.checkCollideWithOverride(obj_addr);return returnedJSObj;")
    public static native boolean internal_native_checkCollideWithOverride(int this_addr, int obj_addr);

    public int getActivationState() {
        return internal_native_getActivationState(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getActivationState();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getActivationState();return returnedJSObj;")
    public static native int internal_native_getActivationState(int this_addr);

    public void setActivationState(int newState) {
        internal_native_setActivationState(native_address, newState);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setActivationState(newState);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "newState"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setActivationState(newState);")
    public static native void internal_native_setActivationState(int this_addr, int newState);

    public void setDeactivationTime(float time) {
        internal_native_setDeactivationTime(native_address, time);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setDeactivationTime(time);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "time"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setDeactivationTime(time);")
    public static native void internal_native_setDeactivationTime(int this_addr, float time);

    public float getDeactivationTime() {
        return internal_native_getDeactivationTime(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getDeactivationTime();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getDeactivationTime();return returnedJSObj;")
    public static native float internal_native_getDeactivationTime(int this_addr);

    public void forceActivationState(int newState) {
        internal_native_forceActivationState(native_address, newState);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.forceActivationState(newState);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "newState"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.forceActivationState(newState);")
    public static native void internal_native_forceActivationState(int this_addr, int newState);

    public void activate(boolean forceActivation) {
        internal_native_activate(native_address, forceActivation);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.activate(forceActivation);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "forceActivation"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.activate(forceActivation);")
    public static native void internal_native_activate(int this_addr, boolean forceActivation);

    public void activate() {
        internal_native_activate(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.activate();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.activate();")
    public static native void internal_native_activate(int this_addr);

    public boolean isActive() {
        return internal_native_isActive(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.isActive();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.isActive();return returnedJSObj;")
    public static native boolean internal_native_isActive(int this_addr);

    public void setRestitution(float rest) {
        internal_native_setRestitution(native_address, rest);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setRestitution(rest);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "rest"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setRestitution(rest);")
    public static native void internal_native_setRestitution(int this_addr, float rest);

    public float getRestitution() {
        return internal_native_getRestitution(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getRestitution();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getRestitution();return returnedJSObj;")
    public static native float internal_native_getRestitution(int this_addr);

    public void setFriction(float frict) {
        internal_native_setFriction(native_address, frict);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setFriction(frict);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "frict"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setFriction(frict);")
    public static native void internal_native_setFriction(int this_addr, float frict);

    public float getFriction() {
        return internal_native_getFriction(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getFriction();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getFriction();return returnedJSObj;")
    public static native float internal_native_getFriction(int this_addr);

    public void setRollingFriction(float frict) {
        internal_native_setRollingFriction(native_address, frict);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setRollingFriction(frict);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "frict"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setRollingFriction(frict);")
    public static native void internal_native_setRollingFriction(int this_addr, float frict);

    public float getRollingFriction() {
        return internal_native_getRollingFriction(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getRollingFriction();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getRollingFriction();return returnedJSObj;")
    public static native float internal_native_getRollingFriction(int this_addr);

    public btTransform getWorldTransform() {
        int pointer = internal_native_getWorldTransform(native_address);
        if (pointer == 0)
            return btTransform.NULL;
        if (btTransform_TEMP_GEN_0 == null)
            btTransform_TEMP_GEN_0 = btTransform.native_new();
        btTransform_TEMP_GEN_0.internal_reset(pointer, false);
        return btTransform_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getWorldTransform();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getWorldTransform();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getWorldTransform(int this_addr);

    public void setWorldTransform(btTransform worldTrans) {
        internal_native_setWorldTransform(native_address, worldTrans.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setWorldTransform(worldTrans_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "worldTrans_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setWorldTransform(worldTrans_addr);")
    public static native void internal_native_setWorldTransform(int this_addr, int worldTrans_addr);

    public btBroadphaseProxy getBroadphaseHandle() {
        int pointer = internal_native_getBroadphaseHandle(native_address);
        if (pointer == 0)
            return btBroadphaseProxy.NULL;
        if (btBroadphaseProxy_TEMP_GEN_0 == null)
            btBroadphaseProxy_TEMP_GEN_0 = btBroadphaseProxy.native_new();
        btBroadphaseProxy_TEMP_GEN_0.internal_reset(pointer, false);
        return btBroadphaseProxy_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getBroadphaseHandle();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getBroadphaseHandle();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getBroadphaseHandle(int this_addr);

    public void setBroadphaseHandle(btBroadphaseProxy handle) {
        internal_native_setBroadphaseHandle(native_address, handle.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setBroadphaseHandle(handle_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "handle_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setBroadphaseHandle(handle_addr);")
    public static native void internal_native_setBroadphaseHandle(int this_addr, int handle_addr);

    public btTransform getInterpolationWorldTransform() {
        int pointer = internal_native_getInterpolationWorldTransform(native_address);
        if (pointer == 0)
            return btTransform.NULL;
        if (btTransform_TEMP_GEN_1 == null)
            btTransform_TEMP_GEN_1 = btTransform.native_new();
        btTransform_TEMP_GEN_1.internal_reset(pointer, false);
        return btTransform_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getInterpolationWorldTransform();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getInterpolationWorldTransform();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getInterpolationWorldTransform(int this_addr);

    public void setInterpolationWorldTransform(btTransform trans) {
        internal_native_setInterpolationWorldTransform(native_address, trans.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setInterpolationWorldTransform(trans_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "trans_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setInterpolationWorldTransform(trans_addr);")
    public static native void internal_native_setInterpolationWorldTransform(int this_addr, int trans_addr);

    public void setInterpolationLinearVelocity(btVector3 linvel) {
        internal_native_setInterpolationLinearVelocity(native_address, linvel.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setInterpolationLinearVelocity(linvel_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "linvel_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setInterpolationLinearVelocity(linvel_addr);")
    public static native void internal_native_setInterpolationLinearVelocity(int this_addr, int linvel_addr);

    public void setInterpolationAngularVelocity(btVector3 angvel) {
        internal_native_setInterpolationAngularVelocity(native_address, angvel.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setInterpolationAngularVelocity(angvel_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "angvel_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setInterpolationAngularVelocity(angvel_addr);")
    public static native void internal_native_setInterpolationAngularVelocity(int this_addr, int angvel_addr);

    public btVector3 getInterpolationLinearVelocity() {
        int pointer = internal_native_getInterpolationLinearVelocity(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_1 == null)
            btVector3_TEMP_GEN_1 = btVector3.native_new();
        btVector3_TEMP_GEN_1.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getInterpolationLinearVelocity();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getInterpolationLinearVelocity();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getInterpolationLinearVelocity(int this_addr);

    public btVector3 getInterpolationAngularVelocity() {
        int pointer = internal_native_getInterpolationAngularVelocity(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_2 == null)
            btVector3_TEMP_GEN_2 = btVector3.native_new();
        btVector3_TEMP_GEN_2.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_2;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getInterpolationAngularVelocity();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getInterpolationAngularVelocity();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getInterpolationAngularVelocity(int this_addr);

    public int getIslandTag() {
        return internal_native_getIslandTag(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getIslandTag();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getIslandTag();return returnedJSObj;")
    public static native int internal_native_getIslandTag(int this_addr);

    public void setIslandTag(int tag) {
        internal_native_setIslandTag(native_address, tag);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setIslandTag(tag);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "tag"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setIslandTag(tag);")
    public static native void internal_native_setIslandTag(int this_addr, int tag);

    public int getCompanionId() {
        return internal_native_getCompanionId(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getCompanionId();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getCompanionId();return returnedJSObj;")
    public static native int internal_native_getCompanionId(int this_addr);

    public void setCompanionId(int id) {
        internal_native_setCompanionId(native_address, id);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setCompanionId(id);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "id"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setCompanionId(id);")
    public static native void internal_native_setCompanionId(int this_addr, int id);

    public float getHitFraction() {
        return internal_native_getHitFraction(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getHitFraction();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getHitFraction();return returnedJSObj;")
    public static native float internal_native_getHitFraction(int this_addr);

    public void setHitFraction(float hitFraction) {
        internal_native_setHitFraction(native_address, hitFraction);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setHitFraction(hitFraction);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "hitFraction"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setHitFraction(hitFraction);")
    public static native void internal_native_setHitFraction(int this_addr, float hitFraction);

    public int getCollisionFlags() {
        return internal_native_getCollisionFlags(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getCollisionFlags();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getCollisionFlags();return returnedJSObj;")
    public static native int internal_native_getCollisionFlags(int this_addr);

    public void setCollisionFlags(int flags) {
        internal_native_setCollisionFlags(native_address, flags);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setCollisionFlags(flags);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "flags"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setCollisionFlags(flags);")
    public static native void internal_native_setCollisionFlags(int this_addr, int flags);

    public float getCcdSweptSphereRadius() {
        return internal_native_getCcdSweptSphereRadius(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getCcdSweptSphereRadius();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getCcdSweptSphereRadius();return returnedJSObj;")
    public static native float internal_native_getCcdSweptSphereRadius(int this_addr);

    public void setCcdSweptSphereRadius(float radius) {
        internal_native_setCcdSweptSphereRadius(native_address, radius);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setCcdSweptSphereRadius(radius);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "radius"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setCcdSweptSphereRadius(radius);")
    public static native void internal_native_setCcdSweptSphereRadius(int this_addr, float radius);

    public float getCcdMotionThreshold() {
        return internal_native_getCcdMotionThreshold(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getCcdMotionThreshold();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getCcdMotionThreshold();return returnedJSObj;")
    public static native float internal_native_getCcdMotionThreshold(int this_addr);

    public float getCcdSquareMotionThreshold() {
        return internal_native_getCcdSquareMotionThreshold(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getCcdSquareMotionThreshold();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getCcdSquareMotionThreshold();return returnedJSObj;")
    public static native float internal_native_getCcdSquareMotionThreshold(int this_addr);

    public void setCcdMotionThreshold(float ccdMotionThreshold) {
        internal_native_setCcdMotionThreshold(native_address, ccdMotionThreshold);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setCcdMotionThreshold(ccdMotionThreshold);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "ccdMotionThreshold"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setCcdMotionThreshold(ccdMotionThreshold);")
    public static native void internal_native_setCcdMotionThreshold(int this_addr, float ccdMotionThreshold);

    public IDLBase getUserPointer() {
        int pointer = internal_native_getUserPointer(native_address);
        if (pointer == 0)
            return IDLBase.NULL;
        if (IDLBase_TEMP_GEN_0 == null)
            IDLBase_TEMP_GEN_0 = IDLBase.native_new();
        IDLBase_TEMP_GEN_0.internal_reset(pointer, false);
        return IDLBase_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getUserPointer();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getUserPointer();return returnedJSObj;")
    public static native int internal_native_getUserPointer(int this_addr);

    public int getUserIndex() {
        return internal_native_getUserIndex(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getUserIndex();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getUserIndex();return returnedJSObj;")
    public static native int internal_native_getUserIndex(int this_addr);

    public void setUserPointer(IDLBase userPointer) {
        internal_native_setUserPointer(native_address, userPointer.native_void_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setUserPointer(userPointer_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "userPointer_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setUserPointer(userPointer_addr);")
    public static native void internal_native_setUserPointer(int this_addr, int userPointer_addr);

    public void setUserIndex(int index) {
        internal_native_setUserIndex(native_address, index);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
jsObj.setUserIndex(index);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "index"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);jsObj.setUserIndex(index);")
    public static native void internal_native_setUserIndex(int this_addr, int index);

    public int getUpdateRevisionInternal() {
        return internal_native_getUpdateRevisionInternal(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getUpdateRevisionInternal();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getUpdateRevisionInternal();return returnedJSObj;")
    public static native int internal_native_getUpdateRevisionInternal(int this_addr);

    public boolean checkCollideWith(btCollisionObject co) {
        return internal_native_checkCollideWith(native_address, co.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.checkCollideWith(co_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "co_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.checkCollideWith(co_addr);return returnedJSObj;")
    public static native boolean internal_native_checkCollideWith(int this_addr, int co_addr);

    public int getInternalType() {
        return internal_native_getInternalType(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);
var returnedJSObj = jsObj.getInternalType();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btCollisionObject);var returnedJSObj = jsObj.getInternalType();return returnedJSObj;")
    public static native int internal_native_getInternalType(int this_addr);
}
