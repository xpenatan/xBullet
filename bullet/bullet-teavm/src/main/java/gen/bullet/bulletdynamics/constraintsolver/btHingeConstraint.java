/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.bullet.bulletdynamics.constraintsolver;

import gen.bullet.bulletdynamics.dynamics.btRigidBody;
import gen.bullet.linearmath.btVector3;
import gen.bullet.linearmath.btTransform;

public class btHingeConstraint extends btTypedConstraint {

    static public final btHingeConstraint NULL = btHingeConstraint.native_new();

    public btHingeConstraint(btRigidBody rbA, btRigidBody rbB, btVector3 pivotInA, btVector3 pivotInB, btVector3 axisInA, btVector3 axisInB, boolean useReferenceFrameA) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_btRigidBody_btRigidBody_btVector3_btVector3_btVector3_btVector3_boolean(rbA.native_address, rbB.native_address, pivotInA.native_address, pivotInB.native_address, axisInA.native_address, axisInB.native_address, useReferenceFrameA);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new bullet.btHingeConstraint(rbA_addr, rbB_addr, pivotInA_addr, pivotInB_addr, axisInA_addr, axisInB_addr, useReferenceFrameA);
return bullet.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"rbA_addr", "rbB_addr", "pivotInA_addr", "pivotInB_addr", "axisInA_addr", "axisInB_addr", "useReferenceFrameA"}, script = "var jsObj = new bullet.btHingeConstraint(rbA_addr, rbB_addr, pivotInA_addr, pivotInB_addr, axisInA_addr, axisInB_addr, useReferenceFrameA);return bullet.getPointer(jsObj);")
    public static native int internal_native_create_btRigidBody_btRigidBody_btVector3_btVector3_btVector3_btVector3_boolean(int rbA_addr, int rbB_addr, int pivotInA_addr, int pivotInB_addr, int axisInA_addr, int axisInB_addr, boolean useReferenceFrameA);

    public btHingeConstraint(btRigidBody rbA, btRigidBody rbB, btVector3 pivotInA, btVector3 pivotInB, btVector3 axisInA, btVector3 axisInB) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_btRigidBody_btRigidBody_btVector3_btVector3_btVector3_btVector3(rbA.native_address, rbB.native_address, pivotInA.native_address, pivotInB.native_address, axisInA.native_address, axisInB.native_address);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new bullet.btHingeConstraint(rbA_addr, rbB_addr, pivotInA_addr, pivotInB_addr, axisInA_addr, axisInB_addr);
return bullet.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"rbA_addr", "rbB_addr", "pivotInA_addr", "pivotInB_addr", "axisInA_addr", "axisInB_addr"}, script = "var jsObj = new bullet.btHingeConstraint(rbA_addr, rbB_addr, pivotInA_addr, pivotInB_addr, axisInA_addr, axisInB_addr);return bullet.getPointer(jsObj);")
    public static native int internal_native_create_btRigidBody_btRigidBody_btVector3_btVector3_btVector3_btVector3(int rbA_addr, int rbB_addr, int pivotInA_addr, int pivotInB_addr, int axisInA_addr, int axisInB_addr);

    public btHingeConstraint(btRigidBody rbA, btVector3 pivotInA, btVector3 axisInA, boolean useReferenceFrameA) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_btRigidBody_btVector3_btVector3_boolean(rbA.native_address, pivotInA.native_address, axisInA.native_address, useReferenceFrameA);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new bullet.btHingeConstraint(rbA_addr, pivotInA_addr, axisInA_addr, useReferenceFrameA);
return bullet.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"rbA_addr", "pivotInA_addr", "axisInA_addr", "useReferenceFrameA"}, script = "var jsObj = new bullet.btHingeConstraint(rbA_addr, pivotInA_addr, axisInA_addr, useReferenceFrameA);return bullet.getPointer(jsObj);")
    public static native int internal_native_create_btRigidBody_btVector3_btVector3_boolean(int rbA_addr, int pivotInA_addr, int axisInA_addr, boolean useReferenceFrameA);

    public btHingeConstraint(btRigidBody rbA, btRigidBody rbB, btTransform rbAFrame, btTransform rbBFrame, boolean useReferenceFrameA) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_btRigidBody_btRigidBody_btTransform_btTransform_boolean(rbA.native_address, rbB.native_address, rbAFrame.native_address, rbBFrame.native_address, useReferenceFrameA);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new bullet.btHingeConstraint(rbA_addr, rbB_addr, rbAFrame_addr, rbBFrame_addr, useReferenceFrameA);
return bullet.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"rbA_addr", "rbB_addr", "rbAFrame_addr", "rbBFrame_addr", "useReferenceFrameA"}, script = "var jsObj = new bullet.btHingeConstraint(rbA_addr, rbB_addr, rbAFrame_addr, rbBFrame_addr, useReferenceFrameA);return bullet.getPointer(jsObj);")
    public static native int internal_native_create_btRigidBody_btRigidBody_btTransform_btTransform_boolean(int rbA_addr, int rbB_addr, int rbAFrame_addr, int rbBFrame_addr, boolean useReferenceFrameA);

    public btHingeConstraint(btRigidBody rbA, btTransform rbAFrame, boolean useReferenceFrameA) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_btRigidBody_btTransform_boolean(rbA.native_address, rbAFrame.native_address, useReferenceFrameA);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new bullet.btHingeConstraint(rbA_addr, rbAFrame_addr, useReferenceFrameA);
return bullet.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"rbA_addr", "rbAFrame_addr", "useReferenceFrameA"}, script = "var jsObj = new bullet.btHingeConstraint(rbA_addr, rbAFrame_addr, useReferenceFrameA);return bullet.getPointer(jsObj);")
    public static native int internal_native_create_btRigidBody_btTransform_boolean(int rbA_addr, int rbAFrame_addr, boolean useReferenceFrameA);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btHingeConstraint(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static btHingeConstraint native_new() {
        return new btHingeConstraint((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btHingeConstraint);
bullet.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btHingeConstraint);bullet.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void setLimit(float low, float high, float softness, float biasFactor, float relaxationFactor) {
        internal_native_setLimit(native_address, low, high, softness, biasFactor, relaxationFactor);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btHingeConstraint);
jsObj.setLimit(low, high, softness, biasFactor, relaxationFactor);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "low", "high", "softness", "biasFactor", "relaxationFactor"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btHingeConstraint);jsObj.setLimit(low, high, softness, biasFactor, relaxationFactor);")
    public static native void internal_native_setLimit(int this_addr, float low, float high, float softness, float biasFactor, float relaxationFactor);

    public void setLimit(float low, float high, float softness, float biasFactor) {
        internal_native_setLimit(native_address, low, high, softness, biasFactor);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btHingeConstraint);
jsObj.setLimit(low, high, softness, biasFactor);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "low", "high", "softness", "biasFactor"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btHingeConstraint);jsObj.setLimit(low, high, softness, biasFactor);")
    public static native void internal_native_setLimit(int this_addr, float low, float high, float softness, float biasFactor);

    public void setLimit(float low, float high, float softness) {
        internal_native_setLimit(native_address, low, high, softness);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btHingeConstraint);
jsObj.setLimit(low, high, softness);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "low", "high", "softness"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btHingeConstraint);jsObj.setLimit(low, high, softness);")
    public static native void internal_native_setLimit(int this_addr, float low, float high, float softness);

    public void setLimit(float low, float high) {
        internal_native_setLimit(native_address, low, high);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btHingeConstraint);
jsObj.setLimit(low, high);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "low", "high"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btHingeConstraint);jsObj.setLimit(low, high);")
    public static native void internal_native_setLimit(int this_addr, float low, float high);

    public void enableAngularMotor(boolean enableMotor, float targetVelocity, float maxMotorImpulse) {
        internal_native_enableAngularMotor(native_address, enableMotor, targetVelocity, maxMotorImpulse);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btHingeConstraint);
jsObj.enableAngularMotor(enableMotor, targetVelocity, maxMotorImpulse);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "enableMotor", "targetVelocity", "maxMotorImpulse"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btHingeConstraint);jsObj.enableAngularMotor(enableMotor, targetVelocity, maxMotorImpulse);")
    public static native void internal_native_enableAngularMotor(int this_addr, boolean enableMotor, float targetVelocity, float maxMotorImpulse);
}
