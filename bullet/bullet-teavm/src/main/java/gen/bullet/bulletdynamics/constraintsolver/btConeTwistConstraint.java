/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.bullet.bulletdynamics.constraintsolver;

import gen.bullet.bulletdynamics.dynamics.btRigidBody;
import gen.bullet.linearmath.btTransform;
import gen.bullet.linearmath.btQuaternion;

public class btConeTwistConstraint extends btTypedConstraint {

    static public final btConeTwistConstraint NULL = btConeTwistConstraint.native_new();

    public btConeTwistConstraint(btRigidBody rbA, btRigidBody rbB, btTransform rbAFrame, btTransform rbBFrame) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_btRigidBody_btRigidBody_btTransform_btTransform(rbA.native_address, rbB.native_address, rbAFrame.native_address, rbBFrame.native_address);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new bullet.btConeTwistConstraint(rbA_addr, rbB_addr, rbAFrame_addr, rbBFrame_addr);
return bullet.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"rbA_addr", "rbB_addr", "rbAFrame_addr", "rbBFrame_addr"}, script = "var jsObj = new bullet.btConeTwistConstraint(rbA_addr, rbB_addr, rbAFrame_addr, rbBFrame_addr);return bullet.getPointer(jsObj);")
    public static native int internal_native_create_btRigidBody_btRigidBody_btTransform_btTransform(int rbA_addr, int rbB_addr, int rbAFrame_addr, int rbBFrame_addr);

    public btConeTwistConstraint(btRigidBody rbA, btTransform rbAFrame) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_btRigidBody_btTransform(rbA.native_address, rbAFrame.native_address);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new bullet.btConeTwistConstraint(rbA_addr, rbAFrame_addr);
return bullet.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"rbA_addr", "rbAFrame_addr"}, script = "var jsObj = new bullet.btConeTwistConstraint(rbA_addr, rbAFrame_addr);return bullet.getPointer(jsObj);")
    public static native int internal_native_create_btRigidBody_btTransform(int rbA_addr, int rbAFrame_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btConeTwistConstraint(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static btConeTwistConstraint native_new() {
        return new btConeTwistConstraint((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);
bullet.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);bullet.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void setLimit(int limitIndex, float limitValue) {
        internal_native_setLimit(native_address, limitIndex, limitValue);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);
jsObj.setLimit(limitIndex, limitValue);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "limitIndex", "limitValue"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);jsObj.setLimit(limitIndex, limitValue);")
    public static native void internal_native_setLimit(int this_addr, int limitIndex, float limitValue);

    public void setLimit(float _swingSpan1, float _swingSpan2, float _twistSpan, float _softness, float _biasFactor, float _relaxationFactor) {
        internal_native_setLimit(native_address, _swingSpan1, _swingSpan2, _twistSpan, _softness, _biasFactor, _relaxationFactor);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);
jsObj.setLimit(_swingSpan1, _swingSpan2, _twistSpan, _softness, _biasFactor, _relaxationFactor);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "_swingSpan1", "_swingSpan2", "_twistSpan", "_softness", "_biasFactor", "_relaxationFactor"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);jsObj.setLimit(_swingSpan1, _swingSpan2, _twistSpan, _softness, _biasFactor, _relaxationFactor);")
    public static native void internal_native_setLimit(int this_addr, float _swingSpan1, float _swingSpan2, float _twistSpan, float _softness, float _biasFactor, float _relaxationFactor);

    public void setLimit(float _swingSpan1, float _swingSpan2, float _twistSpan, float _softness, float _biasFactor) {
        internal_native_setLimit(native_address, _swingSpan1, _swingSpan2, _twistSpan, _softness, _biasFactor);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);
jsObj.setLimit(_swingSpan1, _swingSpan2, _twistSpan, _softness, _biasFactor);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "_swingSpan1", "_swingSpan2", "_twistSpan", "_softness", "_biasFactor"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);jsObj.setLimit(_swingSpan1, _swingSpan2, _twistSpan, _softness, _biasFactor);")
    public static native void internal_native_setLimit(int this_addr, float _swingSpan1, float _swingSpan2, float _twistSpan, float _softness, float _biasFactor);

    public void setLimit(float _swingSpan1, float _swingSpan2, float _twistSpan, float _softness) {
        internal_native_setLimit(native_address, _swingSpan1, _swingSpan2, _twistSpan, _softness);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);
jsObj.setLimit(_swingSpan1, _swingSpan2, _twistSpan, _softness);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "_swingSpan1", "_swingSpan2", "_twistSpan", "_softness"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);jsObj.setLimit(_swingSpan1, _swingSpan2, _twistSpan, _softness);")
    public static native void internal_native_setLimit(int this_addr, float _swingSpan1, float _swingSpan2, float _twistSpan, float _softness);

    public void setLimit(float _swingSpan1, float _swingSpan2, float _twistSpan) {
        internal_native_setLimit(native_address, _swingSpan1, _swingSpan2, _twistSpan);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);
jsObj.setLimit(_swingSpan1, _swingSpan2, _twistSpan);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "_swingSpan1", "_swingSpan2", "_twistSpan"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);jsObj.setLimit(_swingSpan1, _swingSpan2, _twistSpan);")
    public static native void internal_native_setLimit(int this_addr, float _swingSpan1, float _swingSpan2, float _twistSpan);

    public void setAngularOnly(boolean angularOnly) {
        internal_native_setAngularOnly(native_address, angularOnly);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);
jsObj.setAngularOnly(angularOnly);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "angularOnly"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);jsObj.setAngularOnly(angularOnly);")
    public static native void internal_native_setAngularOnly(int this_addr, boolean angularOnly);

    public void setDamping(float damping) {
        internal_native_setDamping(native_address, damping);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);
jsObj.setDamping(damping);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "damping"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);jsObj.setDamping(damping);")
    public static native void internal_native_setDamping(int this_addr, float damping);

    public void enableMotor(boolean b) {
        internal_native_enableMotor(native_address, b);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);
jsObj.enableMotor(b);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "b"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);jsObj.enableMotor(b);")
    public static native void internal_native_enableMotor(int this_addr, boolean b);

    public void setMaxMotorImpulse(float maxMotorImpulse) {
        internal_native_setMaxMotorImpulse(native_address, maxMotorImpulse);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);
jsObj.setMaxMotorImpulse(maxMotorImpulse);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "maxMotorImpulse"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);jsObj.setMaxMotorImpulse(maxMotorImpulse);")
    public static native void internal_native_setMaxMotorImpulse(int this_addr, float maxMotorImpulse);

    public void setMaxMotorImpulseNormalized(float maxMotorImpulse) {
        internal_native_setMaxMotorImpulseNormalized(native_address, maxMotorImpulse);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);
jsObj.setMaxMotorImpulseNormalized(maxMotorImpulse);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "maxMotorImpulse"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);jsObj.setMaxMotorImpulseNormalized(maxMotorImpulse);")
    public static native void internal_native_setMaxMotorImpulseNormalized(int this_addr, float maxMotorImpulse);

    public void setMotorTarget(btQuaternion q) {
        internal_native_setMotorTarget(native_address, q.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);
jsObj.setMotorTarget(q_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "q_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);jsObj.setMotorTarget(q_addr);")
    public static native void internal_native_setMotorTarget(int this_addr, int q_addr);

    public void setMotorTargetInConstraintSpace(btQuaternion q) {
        internal_native_setMotorTargetInConstraintSpace(native_address, q.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);
jsObj.setMotorTargetInConstraintSpace(q_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "q_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btConeTwistConstraint);jsObj.setMotorTargetInConstraintSpace(q_addr);")
    public static native void internal_native_setMotorTargetInConstraintSpace(int this_addr, int q_addr);
}
