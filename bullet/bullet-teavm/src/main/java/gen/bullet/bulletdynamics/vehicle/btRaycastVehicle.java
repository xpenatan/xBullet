/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package gen.bullet.bulletdynamics.vehicle;

import gen.bullet.bulletdynamics.dynamics.btActionInterface;
import gen.bullet.btVehicleTuning;
import gen.bullet.bulletdynamics.dynamics.btRigidBody;
import gen.bullet.linearmath.btTransform;
import gen.bullet.linearmath.btVector3;

public class btRaycastVehicle extends btActionInterface {

    private btTransform btTransform_TEMP_GEN_0;

    private btWheelInfo btWheelInfo_TEMP_GEN_0;

    private btRigidBody btRigidBody_TEMP_GEN_0;

    private btWheelInfo btWheelInfo_TEMP_GEN_1;

    private btVector3 btVector3_TEMP_GEN_0;

    static public final btRaycastVehicle NULL = btRaycastVehicle.native_new();

    public btRaycastVehicle(btVehicleTuning tuning, btRigidBody chassis, btVehicleRaycaster raycaster) {
        super((byte) 1, (char) 1);
        int addr = internal_native_create_btVehicleTuning_btRigidBody_btVehicleRaycaster(tuning.native_address, chassis.native_address, raycaster.native_address);
        internal_reset(addr, true);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = new bullet.btRaycastVehicle(tuning_addr, chassis_addr, raycaster_addr);
return bullet.getPointer(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"tuning_addr", "chassis_addr", "raycaster_addr"}, script = "var jsObj = new bullet.btRaycastVehicle(tuning_addr, chassis_addr, raycaster_addr);return bullet.getPointer(jsObj);")
    public static native int internal_native_create_btVehicleTuning_btRigidBody_btVehicleRaycaster(int tuning_addr, int chassis_addr, int raycaster_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btRaycastVehicle(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static btRaycastVehicle native_new() {
        return new btRaycastVehicle((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
bullet.destroy(jsObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);bullet.destroy(jsObj);")
    public static native void internal_native_deleteNative(int this_addr);

    public void applyEngineForce(float force, int wheel) {
        internal_native_applyEngineForce(native_address, force, wheel);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.applyEngineForce(force, wheel);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "force", "wheel"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.applyEngineForce(force, wheel);")
    public static native void internal_native_applyEngineForce(int this_addr, float force, int wheel);

    public void updateVehicle(float step) {
        internal_native_updateVehicle(native_address, step);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.updateVehicle(step);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "step"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.updateVehicle(step);")
    public static native void internal_native_updateVehicle(int this_addr, float step);

    public void resetSuspension() {
        internal_native_resetSuspension(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.resetSuspension();
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.resetSuspension();")
    public static native void internal_native_resetSuspension(int this_addr);

    public float rayCast(btWheelInfo wheel) {
        return internal_native_rayCast(native_address, wheel.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
var returnedJSObj = jsObj.rayCast(wheel_addr);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "wheel_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);var returnedJSObj = jsObj.rayCast(wheel_addr);return returnedJSObj;")
    public static native float internal_native_rayCast(int this_addr, int wheel_addr);

    public float getSteeringValue(int wheel) {
        return internal_native_getSteeringValue(native_address, wheel);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
var returnedJSObj = jsObj.getSteeringValue(wheel);
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "wheel"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);var returnedJSObj = jsObj.getSteeringValue(wheel);return returnedJSObj;")
    public static native float internal_native_getSteeringValue(int this_addr, int wheel);

    public void setSteeringValue(float steering, int wheel) {
        internal_native_setSteeringValue(native_address, steering, wheel);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.setSteeringValue(steering, wheel);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "steering", "wheel"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.setSteeringValue(steering, wheel);")
    public static native void internal_native_setSteeringValue(int this_addr, float steering, int wheel);

    public btTransform getWheelTransformWS(int wheelIndex) {
        int pointer = internal_native_getWheelTransformWS(native_address, wheelIndex);
        if (pointer == 0)
            return btTransform.NULL;
        if (btTransform_TEMP_GEN_0 == null)
            btTransform_TEMP_GEN_0 = btTransform.native_new();
        btTransform_TEMP_GEN_0.internal_reset(pointer, false);
        return btTransform_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
var returnedJSObj = jsObj.getWheelTransformWS(wheelIndex);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "wheelIndex"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);var returnedJSObj = jsObj.getWheelTransformWS(wheelIndex);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getWheelTransformWS(int this_addr, int wheelIndex);

    public void updateWheelTransform(int wheelIndex, boolean interpolatedTransform) {
        internal_native_updateWheelTransform(native_address, wheelIndex, interpolatedTransform);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.updateWheelTransform(wheelIndex, interpolatedTransform);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "wheelIndex", "interpolatedTransform"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.updateWheelTransform(wheelIndex, interpolatedTransform);")
    public static native void internal_native_updateWheelTransform(int this_addr, int wheelIndex, boolean interpolatedTransform);

    public void updateWheelTransform(int wheelIndex) {
        internal_native_updateWheelTransform(native_address, wheelIndex);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.updateWheelTransform(wheelIndex);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "wheelIndex"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.updateWheelTransform(wheelIndex);")
    public static native void internal_native_updateWheelTransform(int this_addr, int wheelIndex);

    public void updateWheelTransformsWS(btWheelInfo wheel, boolean interpolatedTransform) {
        internal_native_updateWheelTransformsWS(native_address, wheel.native_address, interpolatedTransform);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.updateWheelTransformsWS(wheel_addr, interpolatedTransform);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "wheel_addr", "interpolatedTransform"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.updateWheelTransformsWS(wheel_addr, interpolatedTransform);")
    public static native void internal_native_updateWheelTransformsWS(int this_addr, int wheel_addr, boolean interpolatedTransform);

    public void updateWheelTransformsWS(btWheelInfo wheel) {
        internal_native_updateWheelTransformsWS(native_address, wheel.native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.updateWheelTransformsWS(wheel_addr);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "wheel_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.updateWheelTransformsWS(wheel_addr);")
    public static native void internal_native_updateWheelTransformsWS(int this_addr, int wheel_addr);

    public btWheelInfo addWheel(btVector3 connectionPointCS0, btVector3 wheelDirectionCS0, btVector3 wheelAxleCS, float suspensionRestLength, float wheelRadius, btVehicleTuning tuning, boolean isFrontWheel) {
        int pointer = internal_native_addWheel(native_address, connectionPointCS0.native_address, wheelDirectionCS0.native_address, wheelAxleCS.native_address, suspensionRestLength, wheelRadius, tuning.native_address, isFrontWheel);
        if (pointer == 0)
            return btWheelInfo.NULL;
        if (btWheelInfo_TEMP_GEN_0 == null)
            btWheelInfo_TEMP_GEN_0 = btWheelInfo.native_new();
        btWheelInfo_TEMP_GEN_0.internal_reset(pointer, false);
        return btWheelInfo_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
var returnedJSObj = jsObj.addWheel(connectionPointCS0_addr, wheelDirectionCS0_addr, wheelAxleCS_addr, suspensionRestLength, wheelRadius, tuning_addr, isFrontWheel);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "connectionPointCS0_addr", "wheelDirectionCS0_addr", "wheelAxleCS_addr", "suspensionRestLength", "wheelRadius", "tuning_addr", "isFrontWheel"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);var returnedJSObj = jsObj.addWheel(connectionPointCS0_addr, wheelDirectionCS0_addr, wheelAxleCS_addr, suspensionRestLength, wheelRadius, tuning_addr, isFrontWheel);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_addWheel(int this_addr, int connectionPointCS0_addr, int wheelDirectionCS0_addr, int wheelAxleCS_addr, float suspensionRestLength, float wheelRadius, int tuning_addr, boolean isFrontWheel);

    public int getNumWheels() {
        return internal_native_getNumWheels(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
var returnedJSObj = jsObj.getNumWheels();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);var returnedJSObj = jsObj.getNumWheels();return returnedJSObj;")
    public static native int internal_native_getNumWheels(int this_addr);

    public btRigidBody getRigidBody() {
        int pointer = internal_native_getRigidBody(native_address);
        if (pointer == 0)
            return btRigidBody.NULL;
        if (btRigidBody_TEMP_GEN_0 == null)
            btRigidBody_TEMP_GEN_0 = btRigidBody.native_new();
        btRigidBody_TEMP_GEN_0.internal_reset(pointer, false);
        return btRigidBody_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
var returnedJSObj = jsObj.getRigidBody();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);var returnedJSObj = jsObj.getRigidBody();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getRigidBody(int this_addr);

    public btWheelInfo getWheelInfo(int index) {
        int pointer = internal_native_getWheelInfo(native_address, index);
        if (pointer == 0)
            return btWheelInfo.NULL;
        if (btWheelInfo_TEMP_GEN_1 == null)
            btWheelInfo_TEMP_GEN_1 = btWheelInfo.native_new();
        btWheelInfo_TEMP_GEN_1.internal_reset(pointer, false);
        return btWheelInfo_TEMP_GEN_1;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
var returnedJSObj = jsObj.getWheelInfo(index);
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "index"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);var returnedJSObj = jsObj.getWheelInfo(index);if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getWheelInfo(int this_addr, int index);

    public void setBrake(float brake, int wheelIndex) {
        internal_native_setBrake(native_address, brake, wheelIndex);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.setBrake(brake, wheelIndex);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "brake", "wheelIndex"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.setBrake(brake, wheelIndex);")
    public static native void internal_native_setBrake(int this_addr, float brake, int wheelIndex);

    public void setCoordinateSystem(int rightIndex, int upIndex, int forwardIndex) {
        internal_native_setCoordinateSystem(native_address, rightIndex, upIndex, forwardIndex);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.setCoordinateSystem(rightIndex, upIndex, forwardIndex);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "rightIndex", "upIndex", "forwardIndex"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.setCoordinateSystem(rightIndex, upIndex, forwardIndex);")
    public static native void internal_native_setCoordinateSystem(int this_addr, int rightIndex, int upIndex, int forwardIndex);

    public float getCurrentSpeedKmHour() {
        return internal_native_getCurrentSpeedKmHour(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
var returnedJSObj = jsObj.getCurrentSpeedKmHour();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);var returnedJSObj = jsObj.getCurrentSpeedKmHour();return returnedJSObj;")
    public static native float internal_native_getCurrentSpeedKmHour(int this_addr);

    public int getRightAxis() {
        return internal_native_getRightAxis(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
var returnedJSObj = jsObj.getRightAxis();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);var returnedJSObj = jsObj.getRightAxis();return returnedJSObj;")
    public static native int internal_native_getRightAxis(int this_addr);

    public int getUpAxis() {
        return internal_native_getUpAxis(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
var returnedJSObj = jsObj.getUpAxis();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);var returnedJSObj = jsObj.getUpAxis();return returnedJSObj;")
    public static native int internal_native_getUpAxis(int this_addr);

    public int getForwardAxis() {
        return internal_native_getForwardAxis(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
var returnedJSObj = jsObj.getForwardAxis();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);var returnedJSObj = jsObj.getForwardAxis();return returnedJSObj;")
    public static native int internal_native_getForwardAxis(int this_addr);

    public btVector3 getForwardVector() {
        int pointer = internal_native_getForwardVector(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_0 == null)
            btVector3_TEMP_GEN_0 = btVector3.native_new();
        btVector3_TEMP_GEN_0.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_0;
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
var returnedJSObj = jsObj.getForwardVector();
if(!returnedJSObj.hasOwnProperty('ptr')) return 0; 
return bullet.getPointer(returnedJSObj);
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);var returnedJSObj = jsObj.getForwardVector();if(!returnedJSObj.hasOwnProperty('ptr')) return 0; return bullet.getPointer(returnedJSObj);")
    public static native int internal_native_getForwardVector(int this_addr);

    public int getUserConstraintType() {
        return internal_native_getUserConstraintType(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
var returnedJSObj = jsObj.getUserConstraintType();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);var returnedJSObj = jsObj.getUserConstraintType();return returnedJSObj;")
    public static native int internal_native_getUserConstraintType(int this_addr);

    public void setUserConstraintType(int userConstraintType) {
        internal_native_setUserConstraintType(native_address, userConstraintType);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.setUserConstraintType(userConstraintType);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "userConstraintType"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.setUserConstraintType(userConstraintType);")
    public static native void internal_native_setUserConstraintType(int this_addr, int userConstraintType);

    public void setUserConstraintId(int uid) {
        internal_native_setUserConstraintId(native_address, uid);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.setUserConstraintId(uid);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "uid"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.setUserConstraintId(uid);")
    public static native void internal_native_setUserConstraintId(int this_addr, int uid);

    public int getUserConstraintId() {
        return internal_native_getUserConstraintId(native_address);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
var returnedJSObj = jsObj.getUserConstraintId();
return returnedJSObj;
*/
    @org.teavm.jso.JSBody(params = {"this_addr"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);var returnedJSObj = jsObj.getUserConstraintId();return returnedJSObj;")
    public static native int internal_native_getUserConstraintId(int this_addr);

    public void updateFriction(float timeStep) {
        internal_native_updateFriction(native_address, timeStep);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.updateFriction(timeStep);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "timeStep"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.updateFriction(timeStep);")
    public static native void internal_native_updateFriction(int this_addr, float timeStep);

    public void updateSuspension(float deltaTime) {
        internal_native_updateSuspension(native_address, deltaTime);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.updateSuspension(deltaTime);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "deltaTime"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.updateSuspension(deltaTime);")
    public static native void internal_native_updateSuspension(int this_addr, float deltaTime);

    public void setPitchControl(float pitch) {
        internal_native_setPitchControl(native_address, pitch);
    }

    /*[-TEAVM;-NATIVE]
var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);
jsObj.setPitchControl(pitch);
*/
    @org.teavm.jso.JSBody(params = {"this_addr", "pitch"}, script = "var jsObj = bullet.wrapPointer(this_addr, bullet.btRaycastVehicle);jsObj.setPitchControl(pitch);")
    public static native void internal_native_setPitchControl(int this_addr, float pitch);
}
