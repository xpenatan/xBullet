/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet;

import com.github.xpenatan.jParser.idl.IDLBase;
import bullet.bulletcollision.broadphasecollision.btCollisionAlgorithm;

public class btBroadphasePair extends IDLBase {

    private btCollisionAlgorithm btCollisionAlgorithm_TEMP_GEN_0;

    static public final btBroadphasePair NULL = btBroadphasePair.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btBroadphasePair(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btBroadphasePair native_new() {
        return new btBroadphasePair((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btBroadphasePair* nativeObject = (btBroadphasePair*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public btCollisionAlgorithm get_m_algorithm() {
        long pointer = internal_native_get_m_algorithm(native_address);
        if (pointer == 0)
            return btCollisionAlgorithm.NULL;
        if (btCollisionAlgorithm_TEMP_GEN_0 == null)
            btCollisionAlgorithm_TEMP_GEN_0 = btCollisionAlgorithm.native_new();
        btCollisionAlgorithm_TEMP_GEN_0.internal_reset(pointer, false);
        return btCollisionAlgorithm_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btBroadphasePair* nativeObject = (btBroadphasePair*)this_addr;
btCollisionAlgorithm* attr = nativeObject->m_algorithm;
return (jlong)attr;
*/
    public static native long internal_native_get_m_algorithm(long this_addr);

    public void set_m_algorithm(btCollisionAlgorithm m_algorithm) {
        internal_native_set_m_algorithm(native_address, m_algorithm.native_address);
    }

    /*[-JNI;-NATIVE]
btBroadphasePair* nativeObject = (btBroadphasePair*)this_addr;
nativeObject->m_algorithm = (btCollisionAlgorithm*)m_algorithm_addr;
*/
    public static native void internal_native_set_m_algorithm(long this_addr, long m_algorithm_addr);
}
