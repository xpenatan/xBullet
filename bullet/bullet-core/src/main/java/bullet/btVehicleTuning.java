/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet;

import com.github.xpenatan.jParser.idl.IDLBase;

public class btVehicleTuning extends IDLBase {

    static public final btVehicleTuning NULL = btVehicleTuning.native_new();

    public btVehicleTuning() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btRaycastVehicle::btVehicleTuning();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btVehicleTuning(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btVehicleTuning native_new() {
        return new btVehicleTuning((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btRaycastVehicle::btVehicleTuning* nativeObject = (btRaycastVehicle::btVehicleTuning*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public float get_m_suspensionStiffness() {
        return internal_native_get_m_suspensionStiffness(native_address);
    }

    /*[-JNI;-NATIVE]
btRaycastVehicle::btVehicleTuning* nativeObject = (btRaycastVehicle::btVehicleTuning*)this_addr;
return nativeObject->m_suspensionStiffness;
*/
    public static native float internal_native_get_m_suspensionStiffness(long this_addr);

    public void set_m_suspensionStiffness(float m_suspensionStiffness) {
        internal_native_set_m_suspensionStiffness(native_address, m_suspensionStiffness);
    }

    /*[-JNI;-NATIVE]
btRaycastVehicle::btVehicleTuning* nativeObject = (btRaycastVehicle::btVehicleTuning*)this_addr;
nativeObject->m_suspensionStiffness = m_suspensionStiffness;
*/
    public static native void internal_native_set_m_suspensionStiffness(long this_addr, float m_suspensionStiffness);

    public float get_m_suspensionCompression() {
        return internal_native_get_m_suspensionCompression(native_address);
    }

    /*[-JNI;-NATIVE]
btRaycastVehicle::btVehicleTuning* nativeObject = (btRaycastVehicle::btVehicleTuning*)this_addr;
return nativeObject->m_suspensionCompression;
*/
    public static native float internal_native_get_m_suspensionCompression(long this_addr);

    public void set_m_suspensionCompression(float m_suspensionCompression) {
        internal_native_set_m_suspensionCompression(native_address, m_suspensionCompression);
    }

    /*[-JNI;-NATIVE]
btRaycastVehicle::btVehicleTuning* nativeObject = (btRaycastVehicle::btVehicleTuning*)this_addr;
nativeObject->m_suspensionCompression = m_suspensionCompression;
*/
    public static native void internal_native_set_m_suspensionCompression(long this_addr, float m_suspensionCompression);

    public float get_m_suspensionDamping() {
        return internal_native_get_m_suspensionDamping(native_address);
    }

    /*[-JNI;-NATIVE]
btRaycastVehicle::btVehicleTuning* nativeObject = (btRaycastVehicle::btVehicleTuning*)this_addr;
return nativeObject->m_suspensionDamping;
*/
    public static native float internal_native_get_m_suspensionDamping(long this_addr);

    public void set_m_suspensionDamping(float m_suspensionDamping) {
        internal_native_set_m_suspensionDamping(native_address, m_suspensionDamping);
    }

    /*[-JNI;-NATIVE]
btRaycastVehicle::btVehicleTuning* nativeObject = (btRaycastVehicle::btVehicleTuning*)this_addr;
nativeObject->m_suspensionDamping = m_suspensionDamping;
*/
    public static native void internal_native_set_m_suspensionDamping(long this_addr, float m_suspensionDamping);

    public float get_m_maxSuspensionTravelCm() {
        return internal_native_get_m_maxSuspensionTravelCm(native_address);
    }

    /*[-JNI;-NATIVE]
btRaycastVehicle::btVehicleTuning* nativeObject = (btRaycastVehicle::btVehicleTuning*)this_addr;
return nativeObject->m_maxSuspensionTravelCm;
*/
    public static native float internal_native_get_m_maxSuspensionTravelCm(long this_addr);

    public void set_m_maxSuspensionTravelCm(float m_maxSuspensionTravelCm) {
        internal_native_set_m_maxSuspensionTravelCm(native_address, m_maxSuspensionTravelCm);
    }

    /*[-JNI;-NATIVE]
btRaycastVehicle::btVehicleTuning* nativeObject = (btRaycastVehicle::btVehicleTuning*)this_addr;
nativeObject->m_maxSuspensionTravelCm = m_maxSuspensionTravelCm;
*/
    public static native void internal_native_set_m_maxSuspensionTravelCm(long this_addr, float m_maxSuspensionTravelCm);

    public float get_m_frictionSlip() {
        return internal_native_get_m_frictionSlip(native_address);
    }

    /*[-JNI;-NATIVE]
btRaycastVehicle::btVehicleTuning* nativeObject = (btRaycastVehicle::btVehicleTuning*)this_addr;
return nativeObject->m_frictionSlip;
*/
    public static native float internal_native_get_m_frictionSlip(long this_addr);

    public void set_m_frictionSlip(float m_frictionSlip) {
        internal_native_set_m_frictionSlip(native_address, m_frictionSlip);
    }

    /*[-JNI;-NATIVE]
btRaycastVehicle::btVehicleTuning* nativeObject = (btRaycastVehicle::btVehicleTuning*)this_addr;
nativeObject->m_frictionSlip = m_frictionSlip;
*/
    public static native void internal_native_set_m_frictionSlip(long this_addr, float m_frictionSlip);

    public float get_m_maxSuspensionForce() {
        return internal_native_get_m_maxSuspensionForce(native_address);
    }

    /*[-JNI;-NATIVE]
btRaycastVehicle::btVehicleTuning* nativeObject = (btRaycastVehicle::btVehicleTuning*)this_addr;
return nativeObject->m_maxSuspensionForce;
*/
    public static native float internal_native_get_m_maxSuspensionForce(long this_addr);

    public void set_m_maxSuspensionForce(float m_maxSuspensionForce) {
        internal_native_set_m_maxSuspensionForce(native_address, m_maxSuspensionForce);
    }

    /*[-JNI;-NATIVE]
btRaycastVehicle::btVehicleTuning* nativeObject = (btRaycastVehicle::btVehicleTuning*)this_addr;
nativeObject->m_maxSuspensionForce = m_maxSuspensionForce;
*/
    public static native void internal_native_set_m_maxSuspensionForce(long this_addr, float m_maxSuspensionForce);
}
