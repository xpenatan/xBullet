/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet;

import bullet.linearmath.btVector3;

public class AllHitsRayResultCallback extends RayResultCallback {

    private btConstCollisionObjectArray btConstCollisionObjectArray_TEMP_GEN_0;

    private btVector3 btVector3_TEMP_GEN_0;

    private btVector3 btVector3_TEMP_GEN_1;

    private btVector3Array btVector3Array_TEMP_GEN_0;

    private btVector3Array btVector3Array_TEMP_GEN_1;

    private btScalarArray btScalarArray_TEMP_GEN_0;

    static public final AllHitsRayResultCallback NULL = AllHitsRayResultCallback.native_new();

    public AllHitsRayResultCallback(btVector3 from, btVector3 to) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_btVector3_btVector3(from.native_address, to.native_address);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btCollisionWorld::AllHitsRayResultCallback(*((btVector3* )from_addr), *((btVector3* )to_addr));
*/
    public static native long internal_native_create_btVector3_btVector3(long from_addr, long to_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected AllHitsRayResultCallback(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static AllHitsRayResultCallback native_new() {
        return new AllHitsRayResultCallback((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btCollisionWorld::AllHitsRayResultCallback* nativeObject = (btCollisionWorld::AllHitsRayResultCallback*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public btConstCollisionObjectArray get_m_collisionObjects() {
        long pointer = internal_native_get_m_collisionObjects(native_address);
        if (pointer == 0)
            return btConstCollisionObjectArray.NULL;
        if (btConstCollisionObjectArray_TEMP_GEN_0 == null)
            btConstCollisionObjectArray_TEMP_GEN_0 = btConstCollisionObjectArray.native_new();
        btConstCollisionObjectArray_TEMP_GEN_0.internal_reset(pointer, false);
        return btConstCollisionObjectArray_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btCollisionWorld::AllHitsRayResultCallback* nativeObject = (btCollisionWorld::AllHitsRayResultCallback*)this_addr;
return (jlong)&nativeObject->m_collisionObjects;
*/
    public static native long internal_native_get_m_collisionObjects(long this_addr);

    public void set_m_collisionObjects(btConstCollisionObjectArray m_collisionObjects) {
        internal_native_set_m_collisionObjects(native_address, m_collisionObjects.native_address);
    }

    /*[-JNI;-NATIVE]
btCollisionWorld::AllHitsRayResultCallback* nativeObject = (btCollisionWorld::AllHitsRayResultCallback*)this_addr;
nativeObject->m_collisionObjects = *((btConstCollisionObjectArray*)m_collisionObjects_addr);
*/
    public static native void internal_native_set_m_collisionObjects(long this_addr, long m_collisionObjects_addr);

    public btVector3 get_m_rayFromWorld() {
        long pointer = internal_native_get_m_rayFromWorld(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_0 == null)
            btVector3_TEMP_GEN_0 = btVector3.native_new();
        btVector3_TEMP_GEN_0.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btCollisionWorld::AllHitsRayResultCallback* nativeObject = (btCollisionWorld::AllHitsRayResultCallback*)this_addr;
return (jlong)&nativeObject->m_rayFromWorld;
*/
    public static native long internal_native_get_m_rayFromWorld(long this_addr);

    public void set_m_rayFromWorld(btVector3 m_rayFromWorld) {
        internal_native_set_m_rayFromWorld(native_address, m_rayFromWorld.native_address);
    }

    /*[-JNI;-NATIVE]
btCollisionWorld::AllHitsRayResultCallback* nativeObject = (btCollisionWorld::AllHitsRayResultCallback*)this_addr;
nativeObject->m_rayFromWorld = *((btVector3*)m_rayFromWorld_addr);
*/
    public static native void internal_native_set_m_rayFromWorld(long this_addr, long m_rayFromWorld_addr);

    public btVector3 get_m_rayToWorld() {
        long pointer = internal_native_get_m_rayToWorld(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_1 == null)
            btVector3_TEMP_GEN_1 = btVector3.native_new();
        btVector3_TEMP_GEN_1.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
btCollisionWorld::AllHitsRayResultCallback* nativeObject = (btCollisionWorld::AllHitsRayResultCallback*)this_addr;
return (jlong)&nativeObject->m_rayToWorld;
*/
    public static native long internal_native_get_m_rayToWorld(long this_addr);

    public void set_m_rayToWorld(btVector3 m_rayToWorld) {
        internal_native_set_m_rayToWorld(native_address, m_rayToWorld.native_address);
    }

    /*[-JNI;-NATIVE]
btCollisionWorld::AllHitsRayResultCallback* nativeObject = (btCollisionWorld::AllHitsRayResultCallback*)this_addr;
nativeObject->m_rayToWorld = *((btVector3*)m_rayToWorld_addr);
*/
    public static native void internal_native_set_m_rayToWorld(long this_addr, long m_rayToWorld_addr);

    public btVector3Array get_m_hitNormalWorld() {
        long pointer = internal_native_get_m_hitNormalWorld(native_address);
        if (pointer == 0)
            return btVector3Array.NULL;
        if (btVector3Array_TEMP_GEN_0 == null)
            btVector3Array_TEMP_GEN_0 = btVector3Array.native_new();
        btVector3Array_TEMP_GEN_0.internal_reset(pointer, false);
        return btVector3Array_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btCollisionWorld::AllHitsRayResultCallback* nativeObject = (btCollisionWorld::AllHitsRayResultCallback*)this_addr;
return (jlong)&nativeObject->m_hitNormalWorld;
*/
    public static native long internal_native_get_m_hitNormalWorld(long this_addr);

    public void set_m_hitNormalWorld(btVector3Array m_hitNormalWorld) {
        internal_native_set_m_hitNormalWorld(native_address, m_hitNormalWorld.native_address);
    }

    /*[-JNI;-NATIVE]
btCollisionWorld::AllHitsRayResultCallback* nativeObject = (btCollisionWorld::AllHitsRayResultCallback*)this_addr;
nativeObject->m_hitNormalWorld = *((btVector3Array*)m_hitNormalWorld_addr);
*/
    public static native void internal_native_set_m_hitNormalWorld(long this_addr, long m_hitNormalWorld_addr);

    public btVector3Array get_m_hitPointWorld() {
        long pointer = internal_native_get_m_hitPointWorld(native_address);
        if (pointer == 0)
            return btVector3Array.NULL;
        if (btVector3Array_TEMP_GEN_1 == null)
            btVector3Array_TEMP_GEN_1 = btVector3Array.native_new();
        btVector3Array_TEMP_GEN_1.internal_reset(pointer, false);
        return btVector3Array_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
btCollisionWorld::AllHitsRayResultCallback* nativeObject = (btCollisionWorld::AllHitsRayResultCallback*)this_addr;
return (jlong)&nativeObject->m_hitPointWorld;
*/
    public static native long internal_native_get_m_hitPointWorld(long this_addr);

    public void set_m_hitPointWorld(btVector3Array m_hitPointWorld) {
        internal_native_set_m_hitPointWorld(native_address, m_hitPointWorld.native_address);
    }

    /*[-JNI;-NATIVE]
btCollisionWorld::AllHitsRayResultCallback* nativeObject = (btCollisionWorld::AllHitsRayResultCallback*)this_addr;
nativeObject->m_hitPointWorld = *((btVector3Array*)m_hitPointWorld_addr);
*/
    public static native void internal_native_set_m_hitPointWorld(long this_addr, long m_hitPointWorld_addr);

    public btScalarArray get_m_hitFractions() {
        long pointer = internal_native_get_m_hitFractions(native_address);
        if (pointer == 0)
            return btScalarArray.NULL;
        if (btScalarArray_TEMP_GEN_0 == null)
            btScalarArray_TEMP_GEN_0 = btScalarArray.native_new();
        btScalarArray_TEMP_GEN_0.internal_reset(pointer, false);
        return btScalarArray_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btCollisionWorld::AllHitsRayResultCallback* nativeObject = (btCollisionWorld::AllHitsRayResultCallback*)this_addr;
return (jlong)&nativeObject->m_hitFractions;
*/
    public static native long internal_native_get_m_hitFractions(long this_addr);

    public void set_m_hitFractions(btScalarArray m_hitFractions) {
        internal_native_set_m_hitFractions(native_address, m_hitFractions.native_address);
    }

    /*[-JNI;-NATIVE]
btCollisionWorld::AllHitsRayResultCallback* nativeObject = (btCollisionWorld::AllHitsRayResultCallback*)this_addr;
nativeObject->m_hitFractions = *((btScalarArray*)m_hitFractions_addr);
*/
    public static native void internal_native_set_m_hitFractions(long this_addr, long m_hitFractions_addr);
}
