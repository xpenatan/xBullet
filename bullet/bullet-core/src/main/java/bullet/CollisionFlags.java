/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet;

import java.util.Map;
import java.util.HashMap;
import com.github.xpenatan.jParser.idl.IDLEnum;

public enum CollisionFlags implements IDLEnum<CollisionFlags> {

    CUSTOM(0),
    CF_DYNAMIC_OBJECT(CF_DYNAMIC_OBJECT_NATIVE()),
    CF_STATIC_OBJECT(CF_STATIC_OBJECT_NATIVE()),
    CF_KINEMATIC_OBJECT(CF_KINEMATIC_OBJECT_NATIVE()),
    CF_NO_CONTACT_RESPONSE(CF_NO_CONTACT_RESPONSE_NATIVE()),
    CF_CUSTOM_MATERIAL_CALLBACK(CF_CUSTOM_MATERIAL_CALLBACK_NATIVE()),
    CF_CHARACTER_OBJECT(CF_CHARACTER_OBJECT_NATIVE()),
    CF_DISABLE_VISUALIZE_OBJECT(CF_DISABLE_VISUALIZE_OBJECT_NATIVE()),
    CF_DISABLE_SPU_COLLISION_PROCESSING(CF_DISABLE_SPU_COLLISION_PROCESSING_NATIVE()),
    CF_HAS_CONTACT_STIFFNESS_DAMPING(CF_HAS_CONTACT_STIFFNESS_DAMPING_NATIVE()),
    CF_HAS_CUSTOM_DEBUG_RENDERING_COLOR(CF_HAS_CUSTOM_DEBUG_RENDERING_COLOR_NATIVE()),
    CF_HAS_FRICTION_ANCHOR(CF_HAS_FRICTION_ANCHOR_NATIVE()),
    CF_HAS_COLLISION_SOUND_TRIGGER(CF_HAS_COLLISION_SOUND_TRIGGER_NATIVE());

    private int value;

    private CollisionFlags(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public CollisionFlags setValue(int value) {
        if (this != CUSTOM) {
            throw new RuntimeException("Cannot change none CUSTOM value");
        }
        this.value = value;
        return this;
    }

    public CollisionFlags getCustom() {
        return CUSTOM;
    }

    public static final Map<Integer, CollisionFlags> MAP = new HashMap<>();

    static {
        for (CollisionFlags value : values()) {
            if (value != CUSTOM) {
                MAP.put(value.value, value);
            }
        }
    }

    /*[-JNI;-NATIVE]
return (jlong)btCollisionObject::CF_DYNAMIC_OBJECT;
*/
    private static native int CF_DYNAMIC_OBJECT_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)btCollisionObject::CF_STATIC_OBJECT;
*/
    private static native int CF_STATIC_OBJECT_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)btCollisionObject::CF_KINEMATIC_OBJECT;
*/
    private static native int CF_KINEMATIC_OBJECT_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)btCollisionObject::CF_NO_CONTACT_RESPONSE;
*/
    private static native int CF_NO_CONTACT_RESPONSE_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)btCollisionObject::CF_CUSTOM_MATERIAL_CALLBACK;
*/
    private static native int CF_CUSTOM_MATERIAL_CALLBACK_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)btCollisionObject::CF_CHARACTER_OBJECT;
*/
    private static native int CF_CHARACTER_OBJECT_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)btCollisionObject::CF_DISABLE_VISUALIZE_OBJECT;
*/
    private static native int CF_DISABLE_VISUALIZE_OBJECT_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)btCollisionObject::CF_DISABLE_SPU_COLLISION_PROCESSING;
*/
    private static native int CF_DISABLE_SPU_COLLISION_PROCESSING_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)btCollisionObject::CF_HAS_CONTACT_STIFFNESS_DAMPING;
*/
    private static native int CF_HAS_CONTACT_STIFFNESS_DAMPING_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)btCollisionObject::CF_HAS_CUSTOM_DEBUG_RENDERING_COLOR;
*/
    private static native int CF_HAS_CUSTOM_DEBUG_RENDERING_COLOR_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)btCollisionObject::CF_HAS_FRICTION_ANCHOR;
*/
    private static native int CF_HAS_FRICTION_ANCHOR_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)btCollisionObject::CF_HAS_COLLISION_SOUND_TRIGGER;
*/
    private static native int CF_HAS_COLLISION_SOUND_TRIGGER_NATIVE();
}
