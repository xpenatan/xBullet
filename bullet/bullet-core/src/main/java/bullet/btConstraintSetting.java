/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet;

import com.github.xpenatan.jParser.idl.IDLBase;

public class btConstraintSetting extends IDLBase {

    static public final btConstraintSetting NULL = btConstraintSetting.native_new();

    public btConstraintSetting() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btConstraintSetting();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btConstraintSetting(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btConstraintSetting native_new() {
        return new btConstraintSetting((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btConstraintSetting* nativeObject = (btConstraintSetting*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public float get_m_tau() {
        return internal_native_get_m_tau(native_address);
    }

    /*[-JNI;-NATIVE]
btConstraintSetting* nativeObject = (btConstraintSetting*)this_addr;
return nativeObject->m_tau;
*/
    public static native float internal_native_get_m_tau(long this_addr);

    public void set_m_tau(float m_tau) {
        internal_native_set_m_tau(native_address, m_tau);
    }

    /*[-JNI;-NATIVE]
btConstraintSetting* nativeObject = (btConstraintSetting*)this_addr;
nativeObject->m_tau = m_tau;
*/
    public static native void internal_native_set_m_tau(long this_addr, float m_tau);

    public float get_m_damping() {
        return internal_native_get_m_damping(native_address);
    }

    /*[-JNI;-NATIVE]
btConstraintSetting* nativeObject = (btConstraintSetting*)this_addr;
return nativeObject->m_damping;
*/
    public static native float internal_native_get_m_damping(long this_addr);

    public void set_m_damping(float m_damping) {
        internal_native_set_m_damping(native_address, m_damping);
    }

    /*[-JNI;-NATIVE]
btConstraintSetting* nativeObject = (btConstraintSetting*)this_addr;
nativeObject->m_damping = m_damping;
*/
    public static native void internal_native_set_m_damping(long this_addr, float m_damping);

    public float get_m_impulseClamp() {
        return internal_native_get_m_impulseClamp(native_address);
    }

    /*[-JNI;-NATIVE]
btConstraintSetting* nativeObject = (btConstraintSetting*)this_addr;
return nativeObject->m_impulseClamp;
*/
    public static native float internal_native_get_m_impulseClamp(long this_addr);

    public void set_m_impulseClamp(float m_impulseClamp) {
        internal_native_set_m_impulseClamp(native_address, m_impulseClamp);
    }

    /*[-JNI;-NATIVE]
btConstraintSetting* nativeObject = (btConstraintSetting*)this_addr;
nativeObject->m_impulseClamp = m_impulseClamp;
*/
    public static native void internal_native_set_m_impulseClamp(long this_addr, float m_impulseClamp);
}
