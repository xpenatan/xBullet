/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet;

import com.github.xpenatan.jParser.idl.IDLBase;
import bullet.linearmath.btMotionState;
import bullet.bulletcollision.collisionshapes.btCollisionShape;
import bullet.linearmath.btVector3;

public class btRigidBodyConstructionInfo extends IDLBase {

    static public final btRigidBodyConstructionInfo NULL = btRigidBodyConstructionInfo.native_new();

    public btRigidBodyConstructionInfo(float mass, btMotionState motionState, btCollisionShape collisionShape, btVector3 localInertia) {
        long addr = internal_native_create_float_btMotionState_btCollisionShape_btVector3(mass, motionState.native_address, collisionShape.native_address, localInertia.native_address);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btRigidBody::btRigidBodyConstructionInfo((float)mass, (btMotionState* )motionState_addr, (btCollisionShape* )collisionShape_addr, *((btVector3* )localInertia_addr));
*/
    public static native long internal_native_create_float_btMotionState_btCollisionShape_btVector3(float mass, long motionState_addr, long collisionShape_addr, long localInertia_addr);

    public btRigidBodyConstructionInfo(float mass, btMotionState motionState, btCollisionShape collisionShape) {
        long addr = internal_native_create_float_btMotionState_btCollisionShape(mass, motionState.native_address, collisionShape.native_address);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btRigidBody::btRigidBodyConstructionInfo((float)mass, (btMotionState* )motionState_addr, (btCollisionShape* )collisionShape_addr);
*/
    public static native long internal_native_create_float_btMotionState_btCollisionShape(float mass, long motionState_addr, long collisionShape_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btRigidBodyConstructionInfo(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btRigidBodyConstructionInfo native_new() {
        return new btRigidBodyConstructionInfo((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public float get_m_linearDamping() {
        return internal_native_get_m_linearDamping(native_address);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
return nativeObject->m_linearDamping;
*/
    public static native float internal_native_get_m_linearDamping(long this_addr);

    public void set_m_linearDamping(float m_linearDamping) {
        internal_native_set_m_linearDamping(native_address, m_linearDamping);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
nativeObject->m_linearDamping = m_linearDamping;
*/
    public static native void internal_native_set_m_linearDamping(long this_addr, float m_linearDamping);

    public float get_m_angularDamping() {
        return internal_native_get_m_angularDamping(native_address);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
return nativeObject->m_angularDamping;
*/
    public static native float internal_native_get_m_angularDamping(long this_addr);

    public void set_m_angularDamping(float m_angularDamping) {
        internal_native_set_m_angularDamping(native_address, m_angularDamping);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
nativeObject->m_angularDamping = m_angularDamping;
*/
    public static native void internal_native_set_m_angularDamping(long this_addr, float m_angularDamping);

    public float get_m_friction() {
        return internal_native_get_m_friction(native_address);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
return nativeObject->m_friction;
*/
    public static native float internal_native_get_m_friction(long this_addr);

    public void set_m_friction(float m_friction) {
        internal_native_set_m_friction(native_address, m_friction);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
nativeObject->m_friction = m_friction;
*/
    public static native void internal_native_set_m_friction(long this_addr, float m_friction);

    public float get_m_rollingFriction() {
        return internal_native_get_m_rollingFriction(native_address);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
return nativeObject->m_rollingFriction;
*/
    public static native float internal_native_get_m_rollingFriction(long this_addr);

    public void set_m_rollingFriction(float m_rollingFriction) {
        internal_native_set_m_rollingFriction(native_address, m_rollingFriction);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
nativeObject->m_rollingFriction = m_rollingFriction;
*/
    public static native void internal_native_set_m_rollingFriction(long this_addr, float m_rollingFriction);

    public float get_m_restitution() {
        return internal_native_get_m_restitution(native_address);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
return nativeObject->m_restitution;
*/
    public static native float internal_native_get_m_restitution(long this_addr);

    public void set_m_restitution(float m_restitution) {
        internal_native_set_m_restitution(native_address, m_restitution);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
nativeObject->m_restitution = m_restitution;
*/
    public static native void internal_native_set_m_restitution(long this_addr, float m_restitution);

    public float get_m_linearSleepingThreshold() {
        return internal_native_get_m_linearSleepingThreshold(native_address);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
return nativeObject->m_linearSleepingThreshold;
*/
    public static native float internal_native_get_m_linearSleepingThreshold(long this_addr);

    public void set_m_linearSleepingThreshold(float m_linearSleepingThreshold) {
        internal_native_set_m_linearSleepingThreshold(native_address, m_linearSleepingThreshold);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
nativeObject->m_linearSleepingThreshold = m_linearSleepingThreshold;
*/
    public static native void internal_native_set_m_linearSleepingThreshold(long this_addr, float m_linearSleepingThreshold);

    public float get_m_angularSleepingThreshold() {
        return internal_native_get_m_angularSleepingThreshold(native_address);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
return nativeObject->m_angularSleepingThreshold;
*/
    public static native float internal_native_get_m_angularSleepingThreshold(long this_addr);

    public void set_m_angularSleepingThreshold(float m_angularSleepingThreshold) {
        internal_native_set_m_angularSleepingThreshold(native_address, m_angularSleepingThreshold);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
nativeObject->m_angularSleepingThreshold = m_angularSleepingThreshold;
*/
    public static native void internal_native_set_m_angularSleepingThreshold(long this_addr, float m_angularSleepingThreshold);

    public boolean get_m_additionalDamping() {
        return internal_native_get_m_additionalDamping(native_address);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
return nativeObject->m_additionalDamping;
*/
    public static native boolean internal_native_get_m_additionalDamping(long this_addr);

    public void set_m_additionalDamping(boolean m_additionalDamping) {
        internal_native_set_m_additionalDamping(native_address, m_additionalDamping);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
nativeObject->m_additionalDamping = m_additionalDamping;
*/
    public static native void internal_native_set_m_additionalDamping(long this_addr, boolean m_additionalDamping);

    public float get_m_additionalDampingFactor() {
        return internal_native_get_m_additionalDampingFactor(native_address);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
return nativeObject->m_additionalDampingFactor;
*/
    public static native float internal_native_get_m_additionalDampingFactor(long this_addr);

    public void set_m_additionalDampingFactor(float m_additionalDampingFactor) {
        internal_native_set_m_additionalDampingFactor(native_address, m_additionalDampingFactor);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
nativeObject->m_additionalDampingFactor = m_additionalDampingFactor;
*/
    public static native void internal_native_set_m_additionalDampingFactor(long this_addr, float m_additionalDampingFactor);

    public float get_m_additionalLinearDampingThresholdSqr() {
        return internal_native_get_m_additionalLinearDampingThresholdSqr(native_address);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
return nativeObject->m_additionalLinearDampingThresholdSqr;
*/
    public static native float internal_native_get_m_additionalLinearDampingThresholdSqr(long this_addr);

    public void set_m_additionalLinearDampingThresholdSqr(float m_additionalLinearDampingThresholdSqr) {
        internal_native_set_m_additionalLinearDampingThresholdSqr(native_address, m_additionalLinearDampingThresholdSqr);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
nativeObject->m_additionalLinearDampingThresholdSqr = m_additionalLinearDampingThresholdSqr;
*/
    public static native void internal_native_set_m_additionalLinearDampingThresholdSqr(long this_addr, float m_additionalLinearDampingThresholdSqr);

    public float get_m_additionalAngularDampingThresholdSqr() {
        return internal_native_get_m_additionalAngularDampingThresholdSqr(native_address);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
return nativeObject->m_additionalAngularDampingThresholdSqr;
*/
    public static native float internal_native_get_m_additionalAngularDampingThresholdSqr(long this_addr);

    public void set_m_additionalAngularDampingThresholdSqr(float m_additionalAngularDampingThresholdSqr) {
        internal_native_set_m_additionalAngularDampingThresholdSqr(native_address, m_additionalAngularDampingThresholdSqr);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
nativeObject->m_additionalAngularDampingThresholdSqr = m_additionalAngularDampingThresholdSqr;
*/
    public static native void internal_native_set_m_additionalAngularDampingThresholdSqr(long this_addr, float m_additionalAngularDampingThresholdSqr);

    public float get_m_additionalAngularDampingFactor() {
        return internal_native_get_m_additionalAngularDampingFactor(native_address);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
return nativeObject->m_additionalAngularDampingFactor;
*/
    public static native float internal_native_get_m_additionalAngularDampingFactor(long this_addr);

    public void set_m_additionalAngularDampingFactor(float m_additionalAngularDampingFactor) {
        internal_native_set_m_additionalAngularDampingFactor(native_address, m_additionalAngularDampingFactor);
    }

    /*[-JNI;-NATIVE]
btRigidBody::btRigidBodyConstructionInfo* nativeObject = (btRigidBody::btRigidBodyConstructionInfo*)this_addr;
nativeObject->m_additionalAngularDampingFactor = m_additionalAngularDampingFactor;
*/
    public static native void internal_native_set_m_additionalAngularDampingFactor(long this_addr, float m_additionalAngularDampingFactor);
}
