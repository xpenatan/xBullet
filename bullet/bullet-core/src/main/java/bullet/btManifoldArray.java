/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet;

import com.github.xpenatan.jParser.idl.IDLBase;
import bullet.bulletcollision.narrowphasecollision.btPersistentManifold;

public class btManifoldArray extends IDLBase {

    private btPersistentManifold btPersistentManifold_TEMP_GEN_0;

    static public final btManifoldArray NULL = btManifoldArray.native_new();

    public btManifoldArray() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btManifoldArray();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btManifoldArray(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btManifoldArray native_new() {
        return new btManifoldArray((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btManifoldArray* nativeObject = (btManifoldArray*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public int size() {
        return internal_native_size(native_address);
    }

    /*[-JNI;-NATIVE]
btManifoldArray* nativeObject = (btManifoldArray*)this_addr;
return nativeObject->size();
*/
    public static native int internal_native_size(long this_addr);

    public btPersistentManifold at(int n) {
        long pointer = internal_native_at(native_address, n);
        if (pointer == 0)
            return btPersistentManifold.NULL;
        if (btPersistentManifold_TEMP_GEN_0 == null)
            btPersistentManifold_TEMP_GEN_0 = btPersistentManifold.native_new();
        btPersistentManifold_TEMP_GEN_0.internal_reset(pointer, false);
        return btPersistentManifold_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btManifoldArray* nativeObject = (btManifoldArray*)this_addr;
const btPersistentManifold* obj = nativeObject->at((int)n);
return (jlong)obj;
*/
    public static native long internal_native_at(long this_addr, int n);

    public void resize(int value) {
        internal_native_resize(native_address, value);
    }

    /*[-JNI;-NATIVE]
btManifoldArray* nativeObject = (btManifoldArray*)this_addr;
nativeObject->resize((int)value);
*/
    public static native void internal_native_resize(long this_addr, int value);

    public int capacity() {
        return internal_native_capacity(native_address);
    }

    /*[-JNI;-NATIVE]
btManifoldArray* nativeObject = (btManifoldArray*)this_addr;
return nativeObject->capacity();
*/
    public static native int internal_native_capacity(long this_addr);
}
