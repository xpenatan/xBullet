/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet.linearmath;

import com.github.xpenatan.jParser.idl.IDLBase;

public class btMotionState extends IDLBase {

    static private btTransform btTransform_TEMP_STATIC_GEN_0;

    static private btTransform btTransform_TEMP_STATIC_GEN_1;

    static public final btMotionState NULL = btMotionState.native_new();

    /*[-JNI;-NATIVE]
class MotionStateImpl : public btMotionState {
private:
	JNIEnv* env;
	jobject obj;
public:
	inline static jclass jClassID = 0;
	inline static jmethodID getWorldTransformJ_ID = 0;
	inline static jmethodID setWorldTransformJ_ID = 0;

void setupCallback(JNIEnv* env, jobject obj) {
	this->env = env;
	this->obj = env->NewGlobalRef(obj);
	if(MotionStateImpl::jClassID == 0) {
		MotionStateImpl::jClassID = (jclass)env->NewGlobalRef(env->GetObjectClass(obj));
		MotionStateImpl::getWorldTransformJ_ID = env->GetMethodID(jClassID, "internal_getWorldTransform", "(J)V");
		MotionStateImpl::setWorldTransformJ_ID = env->GetMethodID(jClassID, "internal_setWorldTransform", "(J)V");
	}
}
virtual void getWorldTransform(btTransform& worldTrans) const {
   env->CallVoidMethod(obj, MotionStateImpl::getWorldTransformJ_ID, (jlong)&worldTrans);
}
virtual void setWorldTransform(const btTransform& worldTrans) {
   env->CallVoidMethod(obj, MotionStateImpl::setWorldTransformJ_ID, (jlong)&worldTrans);
}
};
*/
    @Deprecated()
    protected btMotionState(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btMotionState native_new() {
        return new btMotionState((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
MotionStateImpl* nativeObject = (MotionStateImpl*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public btMotionState() {
        long addr = internal_native_create();
        internal_reset(addr, true);
        setupCallback();
    }

    private void setupCallback() {
        internal_native_setupCallback(native_address);
    }

    protected void getWorldTransform(btTransform worldTrans) {
    }

    private void internal_getWorldTransform(long worldTrans_addr) {
        if (btTransform_TEMP_STATIC_GEN_0 == null)
            btTransform_TEMP_STATIC_GEN_0 = btTransform.native_new();
        btTransform_TEMP_STATIC_GEN_0.internal_reset(worldTrans_addr, false);
        getWorldTransform(btTransform_TEMP_STATIC_GEN_0);
    }

    protected void setWorldTransform(btTransform worldTrans) {
    }

    private void internal_setWorldTransform(long worldTrans_addr) {
        if (btTransform_TEMP_STATIC_GEN_1 == null)
            btTransform_TEMP_STATIC_GEN_1 = btTransform.native_new();
        btTransform_TEMP_STATIC_GEN_1.internal_reset(worldTrans_addr, false);
        setWorldTransform(btTransform_TEMP_STATIC_GEN_1);
    }

    /*[-JNI;-NATIVE]
return (jlong)new MotionStateImpl();
*/
    public static native long internal_native_create();

    /*[-JNI;-NATIVE]
MotionStateImpl* nativeObject = (MotionStateImpl*)this_addr;
nativeObject->setupCallback(env, object);
*/
    public native void internal_native_setupCallback(long this_addr);
}
