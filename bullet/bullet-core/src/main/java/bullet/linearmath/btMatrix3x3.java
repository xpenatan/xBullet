/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet.linearmath;

import com.github.xpenatan.jParser.idl.IDLBase;

public class btMatrix3x3 extends IDLBase {

    private btVector3 btVector3_TEMP_GEN_0;

    private btVector3 btVector3_TEMP_GEN_1;

    static public final btMatrix3x3 NULL = btMatrix3x3.native_new();

    public btMatrix3x3() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btMatrix3x3();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btMatrix3x3(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btMatrix3x3 native_new() {
        return new btMatrix3x3((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btMatrix3x3* nativeObject = (btMatrix3x3*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void setEulerZYX(float ex, float ey, float ez) {
        internal_native_setEulerZYX(native_address, ex, ey, ez);
    }

    /*[-JNI;-NATIVE]
btMatrix3x3* nativeObject = (btMatrix3x3*)this_addr;
nativeObject->setEulerZYX((float)ex, (float)ey, (float)ez);
*/
    public static native void internal_native_setEulerZYX(long this_addr, float ex, float ey, float ez);

    public void getRotation(btQuaternion q) {
        internal_native_getRotation(native_address, q.native_address);
    }

    /*[-JNI;-NATIVE]
btMatrix3x3* nativeObject = (btMatrix3x3*)this_addr;
nativeObject->getRotation(*((btQuaternion* )q_addr));
*/
    public static native void internal_native_getRotation(long this_addr, long q_addr);

    public btVector3 getRow(int i) {
        long pointer = internal_native_getRow(native_address, i);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_0 == null)
            btVector3_TEMP_GEN_0 = btVector3.native_new();
        btVector3_TEMP_GEN_0.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btMatrix3x3* nativeObject = (btMatrix3x3*)this_addr;
return (jlong)&(*nativeObject)[(int)i];
*/
    public static native long internal_native_getRow(long this_addr, int i);

    public btVector3 getColumn(int y) {
        long pointer = internal_native_getColumn(native_address, y);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_1 == null)
            btVector3_TEMP_GEN_1 = btVector3.native_new();
        btVector3_TEMP_GEN_1.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
btMatrix3x3* nativeObject = (btMatrix3x3*)this_addr;
static btVector3 copy_addr;
copy_addr = nativeObject->getColumn((int)y);
return (jlong)&copy_addr;*/
    public static native long internal_native_getColumn(long this_addr, int y);
}
