/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet.linearmath;

import com.github.xpenatan.jParser.idl.IDLBase;

public class btVector3 extends IDLBase {

    static public final btVector3 NULL = btVector3.native_new();

    public btVector3() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btVector3();
*/
    public static native long internal_native_create();

    public btVector3(float x, float y, float z) {
        long addr = internal_native_create_float_float_float(x, y, z);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btVector3((float)x, (float)y, (float)z);
*/
    public static native long internal_native_create_float_float_float(float x, float y, float z);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btVector3(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btVector3 native_new() {
        return new btVector3((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btVector3* nativeObject = (btVector3*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public float length() {
        return internal_native_length(native_address);
    }

    /*[-JNI;-NATIVE]
btVector3* nativeObject = (btVector3*)this_addr;
return nativeObject->length();
*/
    public static native float internal_native_length(long this_addr);

    public float getX() {
        return internal_native_getX(native_address);
    }

    /*[-JNI;-NATIVE]
btVector3* nativeObject = (btVector3*)this_addr;
return nativeObject->getX();
*/
    public static native float internal_native_getX(long this_addr);

    public float getY() {
        return internal_native_getY(native_address);
    }

    /*[-JNI;-NATIVE]
btVector3* nativeObject = (btVector3*)this_addr;
return nativeObject->getY();
*/
    public static native float internal_native_getY(long this_addr);

    public float getZ() {
        return internal_native_getZ(native_address);
    }

    /*[-JNI;-NATIVE]
btVector3* nativeObject = (btVector3*)this_addr;
return nativeObject->getZ();
*/
    public static native float internal_native_getZ(long this_addr);

    public void setX(float x) {
        internal_native_setX(native_address, x);
    }

    /*[-JNI;-NATIVE]
btVector3* nativeObject = (btVector3*)this_addr;
nativeObject->setX((float)x);
*/
    public static native void internal_native_setX(long this_addr, float x);

    public void setY(float y) {
        internal_native_setY(native_address, y);
    }

    /*[-JNI;-NATIVE]
btVector3* nativeObject = (btVector3*)this_addr;
nativeObject->setY((float)y);
*/
    public static native void internal_native_setY(long this_addr, float y);

    public void setZ(float z) {
        internal_native_setZ(native_address, z);
    }

    /*[-JNI;-NATIVE]
btVector3* nativeObject = (btVector3*)this_addr;
nativeObject->setZ((float)z);
*/
    public static native void internal_native_setZ(long this_addr, float z);

    public void setValue(float x, float y, float z) {
        internal_native_setValue(native_address, x, y, z);
    }

    /*[-JNI;-NATIVE]
btVector3* nativeObject = (btVector3*)this_addr;
nativeObject->setValue((float)x, (float)y, (float)z);
*/
    public static native void internal_native_setValue(long this_addr, float x, float y, float z);
}
