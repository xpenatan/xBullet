/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet.bulletsoftbody;

import bullet.bulletdynamics.dynamics.btDiscreteDynamicsWorld;
import bullet.bulletcollision.broadphasecollision.btDispatcher;
import bullet.bulletcollision.broadphasecollision.btBroadphaseInterface;
import bullet.bulletdynamics.constraintsolver.btConstraintSolver;
import bullet.bulletcollision.collisiondispatch.btCollisionConfiguration;
import bullet.btSoftBodySolver;
import bullet.btSoftBodyWorldInfo;
import bullet.btSoftBodyArray;

public class btSoftRigidDynamicsWorld extends btDiscreteDynamicsWorld {

    private btSoftBodyWorldInfo btSoftBodyWorldInfo_TEMP_GEN_0;

    private btSoftBodyArray btSoftBodyArray_TEMP_GEN_0;

    static public final btSoftRigidDynamicsWorld NULL = btSoftRigidDynamicsWorld.native_new();

    public btSoftRigidDynamicsWorld(btDispatcher dispatcher, btBroadphaseInterface pairCache, btConstraintSolver constraintSolver, btCollisionConfiguration collisionConfiguration, btSoftBodySolver softBodySolver) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_btDispatcher_btBroadphaseInterface_btConstraintSolver_btCollisionConfiguration_btSoftBodySolver(dispatcher.native_address, pairCache.native_address, constraintSolver.native_address, collisionConfiguration.native_address, softBodySolver.native_address);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btSoftRigidDynamicsWorld((btDispatcher* )dispatcher_addr, (btBroadphaseInterface* )pairCache_addr, (btConstraintSolver* )constraintSolver_addr, (btCollisionConfiguration* )collisionConfiguration_addr, (btSoftBodySolver* )softBodySolver_addr);
*/
    public static native long internal_native_create_btDispatcher_btBroadphaseInterface_btConstraintSolver_btCollisionConfiguration_btSoftBodySolver(long dispatcher_addr, long pairCache_addr, long constraintSolver_addr, long collisionConfiguration_addr, long softBodySolver_addr);

    public btSoftRigidDynamicsWorld(btDispatcher dispatcher, btBroadphaseInterface pairCache, btConstraintSolver constraintSolver, btCollisionConfiguration collisionConfiguration) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_btDispatcher_btBroadphaseInterface_btConstraintSolver_btCollisionConfiguration(dispatcher.native_address, pairCache.native_address, constraintSolver.native_address, collisionConfiguration.native_address);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btSoftRigidDynamicsWorld((btDispatcher* )dispatcher_addr, (btBroadphaseInterface* )pairCache_addr, (btConstraintSolver* )constraintSolver_addr, (btCollisionConfiguration* )collisionConfiguration_addr);
*/
    public static native long internal_native_create_btDispatcher_btBroadphaseInterface_btConstraintSolver_btCollisionConfiguration(long dispatcher_addr, long pairCache_addr, long constraintSolver_addr, long collisionConfiguration_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btSoftRigidDynamicsWorld(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static btSoftRigidDynamicsWorld native_new() {
        return new btSoftRigidDynamicsWorld((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btSoftRigidDynamicsWorld* nativeObject = (btSoftRigidDynamicsWorld*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void addSoftBody(btSoftBody body, int collisionFilterGroup, int collisionFilterMask) {
        internal_native_addSoftBody(native_address, body.native_address, collisionFilterGroup, collisionFilterMask);
    }

    /*[-JNI;-NATIVE]
btSoftRigidDynamicsWorld* nativeObject = (btSoftRigidDynamicsWorld*)this_addr;
nativeObject->addSoftBody((btSoftBody* )body_addr, (int)collisionFilterGroup, (int)collisionFilterMask);
*/
    public static native void internal_native_addSoftBody(long this_addr, long body_addr, int collisionFilterGroup, int collisionFilterMask);

    public void addSoftBody(btSoftBody body, int collisionFilterGroup) {
        internal_native_addSoftBody(native_address, body.native_address, collisionFilterGroup);
    }

    /*[-JNI;-NATIVE]
btSoftRigidDynamicsWorld* nativeObject = (btSoftRigidDynamicsWorld*)this_addr;
nativeObject->addSoftBody((btSoftBody* )body_addr, (int)collisionFilterGroup);
*/
    public static native void internal_native_addSoftBody(long this_addr, long body_addr, int collisionFilterGroup);

    public void addSoftBody(btSoftBody body) {
        internal_native_addSoftBody(native_address, body.native_address);
    }

    /*[-JNI;-NATIVE]
btSoftRigidDynamicsWorld* nativeObject = (btSoftRigidDynamicsWorld*)this_addr;
nativeObject->addSoftBody((btSoftBody* )body_addr);
*/
    public static native void internal_native_addSoftBody(long this_addr, long body_addr);

    public void removeSoftBody(btSoftBody body) {
        internal_native_removeSoftBody(native_address, body.native_address);
    }

    /*[-JNI;-NATIVE]
btSoftRigidDynamicsWorld* nativeObject = (btSoftRigidDynamicsWorld*)this_addr;
nativeObject->removeSoftBody((btSoftBody* )body_addr);
*/
    public static native void internal_native_removeSoftBody(long this_addr, long body_addr);

    public btSoftBodyWorldInfo getWorldInfo() {
        long pointer = internal_native_getWorldInfo(native_address);
        if (pointer == 0)
            return btSoftBodyWorldInfo.NULL;
        if (btSoftBodyWorldInfo_TEMP_GEN_0 == null)
            btSoftBodyWorldInfo_TEMP_GEN_0 = btSoftBodyWorldInfo.native_new();
        btSoftBodyWorldInfo_TEMP_GEN_0.internal_reset(pointer, false);
        return btSoftBodyWorldInfo_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btSoftRigidDynamicsWorld* nativeObject = (btSoftRigidDynamicsWorld*)this_addr;
return (jlong)&nativeObject->getWorldInfo();
*/
    public static native long internal_native_getWorldInfo(long this_addr);

    public btSoftBodyArray getSoftBodyArray() {
        long pointer = internal_native_getSoftBodyArray(native_address);
        if (pointer == 0)
            return btSoftBodyArray.NULL;
        if (btSoftBodyArray_TEMP_GEN_0 == null)
            btSoftBodyArray_TEMP_GEN_0 = btSoftBodyArray.native_new();
        btSoftBodyArray_TEMP_GEN_0.internal_reset(pointer, false);
        return btSoftBodyArray_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btSoftRigidDynamicsWorld* nativeObject = (btSoftRigidDynamicsWorld*)this_addr;
return (jlong)&nativeObject->getSoftBodyArray();
*/
    public static native long internal_native_getSoftBodyArray(long this_addr);

    public int getDrawFlags() {
        return internal_native_getDrawFlags(native_address);
    }

    /*[-JNI;-NATIVE]
btSoftRigidDynamicsWorld* nativeObject = (btSoftRigidDynamicsWorld*)this_addr;
return nativeObject->getDrawFlags();
*/
    public static native int internal_native_getDrawFlags(long this_addr);

    public void setDrawFlags(int f) {
        internal_native_setDrawFlags(native_address, f);
    }

    /*[-JNI;-NATIVE]
btSoftRigidDynamicsWorld* nativeObject = (btSoftRigidDynamicsWorld*)this_addr;
nativeObject->setDrawFlags((int)f);
*/
    public static native void internal_native_setDrawFlags(long this_addr, int f);
}
