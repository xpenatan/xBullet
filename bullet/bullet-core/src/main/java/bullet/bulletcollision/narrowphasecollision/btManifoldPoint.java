/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet.bulletcollision.narrowphasecollision;

import com.github.xpenatan.jParser.idl.IDLBase;
import bullet.linearmath.btVector3;

public class btManifoldPoint extends IDLBase {

    private btVector3 btVector3_TEMP_GEN_0;

    private btVector3 btVector3_TEMP_GEN_1;

    private btVector3 btVector3_TEMP_GEN_2;

    private btVector3 btVector3_TEMP_GEN_3;

    private btVector3 btVector3_TEMP_GEN_4;

    private btVector3 btVector3_TEMP_GEN_5;

    private btVector3 btVector3_TEMP_GEN_6;

    static public final btManifoldPoint NULL = btManifoldPoint.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btManifoldPoint(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btManifoldPoint native_new() {
        return new btManifoldPoint((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public btVector3 getPositionWorldOnA() {
        long pointer = internal_native_getPositionWorldOnA(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_0 == null)
            btVector3_TEMP_GEN_0 = btVector3.native_new();
        btVector3_TEMP_GEN_0.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
return (jlong)&nativeObject->getPositionWorldOnA();
*/
    public static native long internal_native_getPositionWorldOnA(long this_addr);

    public btVector3 getPositionWorldOnB() {
        long pointer = internal_native_getPositionWorldOnB(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_1 == null)
            btVector3_TEMP_GEN_1 = btVector3.native_new();
        btVector3_TEMP_GEN_1.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
return (jlong)&nativeObject->getPositionWorldOnB();
*/
    public static native long internal_native_getPositionWorldOnB(long this_addr);

    public float getAppliedImpulse() {
        return internal_native_getAppliedImpulse(native_address);
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
return nativeObject->getAppliedImpulse();
*/
    public static native float internal_native_getAppliedImpulse(long this_addr);

    public float getDistance() {
        return internal_native_getDistance(native_address);
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
return nativeObject->getDistance();
*/
    public static native float internal_native_getDistance(long this_addr);

    public int getLifeTime() {
        return internal_native_getLifeTime(native_address);
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
return nativeObject->getLifeTime();
*/
    public static native int internal_native_getLifeTime(long this_addr);

    public btVector3 get_m_localPointA() {
        long pointer = internal_native_get_m_localPointA(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_2 == null)
            btVector3_TEMP_GEN_2 = btVector3.native_new();
        btVector3_TEMP_GEN_2.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_2;
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
return (jlong)&nativeObject->m_localPointA;
*/
    public static native long internal_native_get_m_localPointA(long this_addr);

    public void set_m_localPointA(btVector3 m_localPointA) {
        internal_native_set_m_localPointA(native_address, m_localPointA.native_address);
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
nativeObject->m_localPointA = *((btVector3*)m_localPointA_addr);
*/
    public static native void internal_native_set_m_localPointA(long this_addr, long m_localPointA_addr);

    public btVector3 get_m_localPointB() {
        long pointer = internal_native_get_m_localPointB(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_3 == null)
            btVector3_TEMP_GEN_3 = btVector3.native_new();
        btVector3_TEMP_GEN_3.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_3;
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
return (jlong)&nativeObject->m_localPointB;
*/
    public static native long internal_native_get_m_localPointB(long this_addr);

    public void set_m_localPointB(btVector3 m_localPointB) {
        internal_native_set_m_localPointB(native_address, m_localPointB.native_address);
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
nativeObject->m_localPointB = *((btVector3*)m_localPointB_addr);
*/
    public static native void internal_native_set_m_localPointB(long this_addr, long m_localPointB_addr);

    public btVector3 get_m_positionWorldOnB() {
        long pointer = internal_native_get_m_positionWorldOnB(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_4 == null)
            btVector3_TEMP_GEN_4 = btVector3.native_new();
        btVector3_TEMP_GEN_4.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_4;
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
return (jlong)&nativeObject->m_positionWorldOnB;
*/
    public static native long internal_native_get_m_positionWorldOnB(long this_addr);

    public void set_m_positionWorldOnB(btVector3 m_positionWorldOnB) {
        internal_native_set_m_positionWorldOnB(native_address, m_positionWorldOnB.native_address);
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
nativeObject->m_positionWorldOnB = *((btVector3*)m_positionWorldOnB_addr);
*/
    public static native void internal_native_set_m_positionWorldOnB(long this_addr, long m_positionWorldOnB_addr);

    public btVector3 get_m_positionWorldOnA() {
        long pointer = internal_native_get_m_positionWorldOnA(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_5 == null)
            btVector3_TEMP_GEN_5 = btVector3.native_new();
        btVector3_TEMP_GEN_5.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_5;
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
return (jlong)&nativeObject->m_positionWorldOnA;
*/
    public static native long internal_native_get_m_positionWorldOnA(long this_addr);

    public void set_m_positionWorldOnA(btVector3 m_positionWorldOnA) {
        internal_native_set_m_positionWorldOnA(native_address, m_positionWorldOnA.native_address);
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
nativeObject->m_positionWorldOnA = *((btVector3*)m_positionWorldOnA_addr);
*/
    public static native void internal_native_set_m_positionWorldOnA(long this_addr, long m_positionWorldOnA_addr);

    public btVector3 get_m_normalWorldOnB() {
        long pointer = internal_native_get_m_normalWorldOnB(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_6 == null)
            btVector3_TEMP_GEN_6 = btVector3.native_new();
        btVector3_TEMP_GEN_6.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_6;
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
return (jlong)&nativeObject->m_normalWorldOnB;
*/
    public static native long internal_native_get_m_normalWorldOnB(long this_addr);

    public void set_m_normalWorldOnB(btVector3 m_normalWorldOnB) {
        internal_native_set_m_normalWorldOnB(native_address, m_normalWorldOnB.native_address);
    }

    /*[-JNI;-NATIVE]
btManifoldPoint* nativeObject = (btManifoldPoint*)this_addr;
nativeObject->m_normalWorldOnB = *((btVector3*)m_normalWorldOnB_addr);
*/
    public static native void internal_native_set_m_normalWorldOnB(long this_addr, long m_normalWorldOnB_addr);
}
