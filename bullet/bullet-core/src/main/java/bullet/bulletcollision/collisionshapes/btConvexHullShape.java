/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet.bulletcollision.collisionshapes;

import bullet.btPolyhedralConvexAabbCachingShape;
import bullet.idl.helper.IDLFloatArray;
import bullet.linearmath.btVector3;

public class btConvexHullShape extends btPolyhedralConvexAabbCachingShape {

    private btVector3 btVector3_TEMP_GEN_0;

    static public final btConvexHullShape NULL = btConvexHullShape.native_new();

    public btConvexHullShape(IDLFloatArray points, int numPoints, int stride) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_IDLFloatArray_int_int(points.native_void_address, numPoints, stride);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btConvexHullShape((float*)points_addr, (int)numPoints, (int)stride);
*/
    public static native long internal_native_create_IDLFloatArray_int_int(long points_addr, int numPoints, int stride);

    public btConvexHullShape(IDLFloatArray points, int numPoints) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_IDLFloatArray_int(points.native_void_address, numPoints);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btConvexHullShape((float*)points_addr, (int)numPoints);
*/
    public static native long internal_native_create_IDLFloatArray_int(long points_addr, int numPoints);

    public btConvexHullShape(IDLFloatArray points) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_IDLFloatArray(points.native_void_address);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btConvexHullShape((float*)points_addr);
*/
    public static native long internal_native_create_IDLFloatArray(long points_addr);

    public btConvexHullShape() {
        super((byte) 1, (char) 1);
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btConvexHullShape();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btConvexHullShape(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static btConvexHullShape native_new() {
        return new btConvexHullShape((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btConvexHullShape* nativeObject = (btConvexHullShape*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void addPoint(btVector3 point, boolean recalculateLocalAABB) {
        internal_native_addPoint(native_address, point.native_address, recalculateLocalAABB);
    }

    /*[-JNI;-NATIVE]
btConvexHullShape* nativeObject = (btConvexHullShape*)this_addr;
nativeObject->addPoint(*((btVector3* )point_addr), recalculateLocalAABB);
*/
    public static native void internal_native_addPoint(long this_addr, long point_addr, boolean recalculateLocalAABB);

    public void addPoint(btVector3 point) {
        internal_native_addPoint(native_address, point.native_address);
    }

    /*[-JNI;-NATIVE]
btConvexHullShape* nativeObject = (btConvexHullShape*)this_addr;
nativeObject->addPoint(*((btVector3* )point_addr));
*/
    public static native void internal_native_addPoint(long this_addr, long point_addr);

    public void setMargin(float margin) {
        internal_native_setMargin(native_address, margin);
    }

    /*[-JNI;-NATIVE]
btConvexHullShape* nativeObject = (btConvexHullShape*)this_addr;
nativeObject->setMargin((float)margin);
*/
    public static native void internal_native_setMargin(long this_addr, float margin);

    public float getMargin() {
        return internal_native_getMargin(native_address);
    }

    /*[-JNI;-NATIVE]
btConvexHullShape* nativeObject = (btConvexHullShape*)this_addr;
return nativeObject->getMargin();
*/
    public static native float internal_native_getMargin(long this_addr);

    public int getNumPoints() {
        return internal_native_getNumPoints(native_address);
    }

    /*[-JNI;-NATIVE]
btConvexHullShape* nativeObject = (btConvexHullShape*)this_addr;
return nativeObject->getNumPoints();
*/
    public static native int internal_native_getNumPoints(long this_addr);

    public btVector3 getScaledPoint(int i) {
        long pointer = internal_native_getScaledPoint(native_address, i);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_0 == null)
            btVector3_TEMP_GEN_0 = btVector3.native_new();
        btVector3_TEMP_GEN_0.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btConvexHullShape* nativeObject = (btConvexHullShape*)this_addr;
static btVector3 copy_addr;
copy_addr = nativeObject->getScaledPoint((int)i);
return (jlong)&copy_addr;*/
    public static native long internal_native_getScaledPoint(long this_addr, int i);

    public void optimizeConvexHull() {
        internal_native_optimizeConvexHull(native_address);
    }

    /*[-JNI;-NATIVE]
btConvexHullShape* nativeObject = (btConvexHullShape*)this_addr;
nativeObject->optimizeConvexHull();
*/
    public static native void internal_native_optimizeConvexHull(long this_addr);
}
