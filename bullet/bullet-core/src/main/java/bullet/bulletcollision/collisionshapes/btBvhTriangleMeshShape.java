/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet.bulletcollision.collisionshapes;

import bullet.linearmath.btVector3;

public class btBvhTriangleMeshShape extends btTriangleMeshShape {

    static public final btBvhTriangleMeshShape NULL = btBvhTriangleMeshShape.native_new();

    public btBvhTriangleMeshShape(btStridingMeshInterface meshInterface, boolean useQuantizedAabbCompression, boolean buildBvh) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_btStridingMeshInterface_boolean_boolean(meshInterface.native_address, useQuantizedAabbCompression, buildBvh);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btBvhTriangleMeshShape((btStridingMeshInterface* )meshInterface_addr, useQuantizedAabbCompression, buildBvh);
*/
    public static native long internal_native_create_btStridingMeshInterface_boolean_boolean(long meshInterface_addr, boolean useQuantizedAabbCompression, boolean buildBvh);

    public btBvhTriangleMeshShape(btStridingMeshInterface meshInterface, boolean useQuantizedAabbCompression) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_btStridingMeshInterface_boolean(meshInterface.native_address, useQuantizedAabbCompression);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btBvhTriangleMeshShape((btStridingMeshInterface* )meshInterface_addr, useQuantizedAabbCompression);
*/
    public static native long internal_native_create_btStridingMeshInterface_boolean(long meshInterface_addr, boolean useQuantizedAabbCompression);

    public btBvhTriangleMeshShape(btStridingMeshInterface meshInterface, boolean useQuantizedAabbCompression, btVector3 bvhAabbMin, btVector3 bvhAabbMax, boolean buildBvh) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_btStridingMeshInterface_boolean_btVector3_btVector3_boolean(meshInterface.native_address, useQuantizedAabbCompression, bvhAabbMin.native_address, bvhAabbMax.native_address, buildBvh);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btBvhTriangleMeshShape((btStridingMeshInterface* )meshInterface_addr, useQuantizedAabbCompression, *((btVector3* )bvhAabbMin_addr), *((btVector3* )bvhAabbMax_addr), buildBvh);
*/
    public static native long internal_native_create_btStridingMeshInterface_boolean_btVector3_btVector3_boolean(long meshInterface_addr, boolean useQuantizedAabbCompression, long bvhAabbMin_addr, long bvhAabbMax_addr, boolean buildBvh);

    public btBvhTriangleMeshShape(btStridingMeshInterface meshInterface, boolean useQuantizedAabbCompression, btVector3 bvhAabbMin, btVector3 bvhAabbMax) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_btStridingMeshInterface_boolean_btVector3_btVector3(meshInterface.native_address, useQuantizedAabbCompression, bvhAabbMin.native_address, bvhAabbMax.native_address);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btBvhTriangleMeshShape((btStridingMeshInterface* )meshInterface_addr, useQuantizedAabbCompression, *((btVector3* )bvhAabbMin_addr), *((btVector3* )bvhAabbMax_addr));
*/
    public static native long internal_native_create_btStridingMeshInterface_boolean_btVector3_btVector3(long meshInterface_addr, boolean useQuantizedAabbCompression, long bvhAabbMin_addr, long bvhAabbMax_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btBvhTriangleMeshShape(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static btBvhTriangleMeshShape native_new() {
        return new btBvhTriangleMeshShape((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btBvhTriangleMeshShape* nativeObject = (btBvhTriangleMeshShape*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void performRaycast(btTriangleCallback callback, btVector3 raySource, btVector3 rayTarget) {
        internal_native_performRaycast(native_address, callback.native_address, raySource.native_address, rayTarget.native_address);
    }

    /*[-JNI;-NATIVE]
btBvhTriangleMeshShape* nativeObject = (btBvhTriangleMeshShape*)this_addr;
nativeObject->performRaycast((btTriangleCallback* )callback_addr, *((btVector3* )raySource_addr), *((btVector3* )rayTarget_addr));
*/
    public static native void internal_native_performRaycast(long this_addr, long callback_addr, long raySource_addr, long rayTarget_addr);
}
