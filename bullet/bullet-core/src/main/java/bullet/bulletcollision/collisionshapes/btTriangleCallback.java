/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet.bulletcollision.collisionshapes;

import com.github.xpenatan.jParser.idl.IDLBase;
import bullet.linearmath.btVector3;

public class btTriangleCallback extends IDLBase {

    static public final btTriangleCallback NULL = btTriangleCallback.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btTriangleCallback(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btTriangleCallback native_new() {
        return new btTriangleCallback((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btTriangleCallback* nativeObject = (btTriangleCallback*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void processTriangle(btVector3 triangle, int partId, int triangleIndex) {
        internal_native_processTriangle(native_address, triangle.native_address, partId, triangleIndex);
    }

    /*[-JNI;-NATIVE]
btTriangleCallback* nativeObject = (btTriangleCallback*)this_addr;
nativeObject->processTriangle((btVector3* )triangle_addr, (int)partId, (int)triangleIndex);
*/
    public static native void internal_native_processTriangle(long this_addr, long triangle_addr, int partId, int triangleIndex);
}
