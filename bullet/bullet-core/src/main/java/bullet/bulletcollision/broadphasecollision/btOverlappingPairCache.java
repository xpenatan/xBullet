/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet.bulletcollision.broadphasecollision;

import com.github.xpenatan.jParser.idl.IDLBase;
import bullet.btBroadphasePairArray;

public class btOverlappingPairCache extends IDLBase {

    private btBroadphasePairArray btBroadphasePairArray_TEMP_GEN_0;

    static public final btOverlappingPairCache NULL = btOverlappingPairCache.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btOverlappingPairCache(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btOverlappingPairCache native_new() {
        return new btOverlappingPairCache((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btOverlappingPairCache* nativeObject = (btOverlappingPairCache*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void setInternalGhostPairCallback(btOverlappingPairCallback ghostPairCallback) {
        internal_native_setInternalGhostPairCallback(native_address, ghostPairCallback.native_address);
    }

    /*[-JNI;-NATIVE]
btOverlappingPairCache* nativeObject = (btOverlappingPairCache*)this_addr;
nativeObject->setInternalGhostPairCallback((btOverlappingPairCallback* )ghostPairCallback_addr);
*/
    public static native void internal_native_setInternalGhostPairCallback(long this_addr, long ghostPairCallback_addr);

    public btBroadphasePairArray getOverlappingPairArray() {
        long pointer = internal_native_getOverlappingPairArray(native_address);
        if (pointer == 0)
            return btBroadphasePairArray.NULL;
        if (btBroadphasePairArray_TEMP_GEN_0 == null)
            btBroadphasePairArray_TEMP_GEN_0 = btBroadphasePairArray.native_new();
        btBroadphasePairArray_TEMP_GEN_0.internal_reset(pointer, false);
        return btBroadphasePairArray_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btOverlappingPairCache* nativeObject = (btOverlappingPairCache*)this_addr;
return (jlong)&nativeObject->getOverlappingPairArray();
*/
    public static native long internal_native_getOverlappingPairArray(long this_addr);
}
