/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet;

import com.github.xpenatan.jParser.idl.IDLBase;
import bullet.linearmath.btVector3;
import bullet.bulletcollision.broadphasecollision.btBroadphaseInterface;
import bullet.bulletcollision.broadphasecollision.btDispatcher;

public class btSoftBodyWorldInfo extends IDLBase {

    private btVector3 btVector3_TEMP_GEN_0;

    private btBroadphaseInterface btBroadphaseInterface_TEMP_GEN_0;

    private btDispatcher btDispatcher_TEMP_GEN_0;

    private btVector3 btVector3_TEMP_GEN_1;

    static public final btSoftBodyWorldInfo NULL = btSoftBodyWorldInfo.native_new();

    public btSoftBodyWorldInfo() {
        long addr = internal_native_create();
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btSoftBodyWorldInfo();
*/
    public static native long internal_native_create();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btSoftBodyWorldInfo(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btSoftBodyWorldInfo native_new() {
        return new btSoftBodyWorldInfo((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public float get_air_density() {
        return internal_native_get_air_density(native_address);
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
return nativeObject->air_density;
*/
    public static native float internal_native_get_air_density(long this_addr);

    public void set_air_density(float air_density) {
        internal_native_set_air_density(native_address, air_density);
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
nativeObject->air_density = air_density;
*/
    public static native void internal_native_set_air_density(long this_addr, float air_density);

    public float get_water_density() {
        return internal_native_get_water_density(native_address);
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
return nativeObject->water_density;
*/
    public static native float internal_native_get_water_density(long this_addr);

    public void set_water_density(float water_density) {
        internal_native_set_water_density(native_address, water_density);
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
nativeObject->water_density = water_density;
*/
    public static native void internal_native_set_water_density(long this_addr, float water_density);

    public float get_water_offset() {
        return internal_native_get_water_offset(native_address);
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
return nativeObject->water_offset;
*/
    public static native float internal_native_get_water_offset(long this_addr);

    public void set_water_offset(float water_offset) {
        internal_native_set_water_offset(native_address, water_offset);
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
nativeObject->water_offset = water_offset;
*/
    public static native void internal_native_set_water_offset(long this_addr, float water_offset);

    public float get_m_maxDisplacement() {
        return internal_native_get_m_maxDisplacement(native_address);
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
return nativeObject->m_maxDisplacement;
*/
    public static native float internal_native_get_m_maxDisplacement(long this_addr);

    public void set_m_maxDisplacement(float m_maxDisplacement) {
        internal_native_set_m_maxDisplacement(native_address, m_maxDisplacement);
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
nativeObject->m_maxDisplacement = m_maxDisplacement;
*/
    public static native void internal_native_set_m_maxDisplacement(long this_addr, float m_maxDisplacement);

    public btVector3 get_water_normal() {
        long pointer = internal_native_get_water_normal(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_0 == null)
            btVector3_TEMP_GEN_0 = btVector3.native_new();
        btVector3_TEMP_GEN_0.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
return (jlong)&nativeObject->water_normal;
*/
    public static native long internal_native_get_water_normal(long this_addr);

    public void set_water_normal(btVector3 water_normal) {
        internal_native_set_water_normal(native_address, water_normal.native_address);
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
nativeObject->water_normal = *((btVector3*)water_normal_addr);
*/
    public static native void internal_native_set_water_normal(long this_addr, long water_normal_addr);

    public btBroadphaseInterface get_m_broadphase() {
        long pointer = internal_native_get_m_broadphase(native_address);
        if (pointer == 0)
            return btBroadphaseInterface.NULL;
        if (btBroadphaseInterface_TEMP_GEN_0 == null)
            btBroadphaseInterface_TEMP_GEN_0 = btBroadphaseInterface.native_new();
        btBroadphaseInterface_TEMP_GEN_0.internal_reset(pointer, false);
        return btBroadphaseInterface_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
btBroadphaseInterface* attr = nativeObject->m_broadphase;
return (jlong)attr;
*/
    public static native long internal_native_get_m_broadphase(long this_addr);

    public void set_m_broadphase(btBroadphaseInterface m_broadphase) {
        internal_native_set_m_broadphase(native_address, m_broadphase.native_address);
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
nativeObject->m_broadphase = (btBroadphaseInterface*)m_broadphase_addr;
*/
    public static native void internal_native_set_m_broadphase(long this_addr, long m_broadphase_addr);

    public btDispatcher get_m_dispatcher() {
        long pointer = internal_native_get_m_dispatcher(native_address);
        if (pointer == 0)
            return btDispatcher.NULL;
        if (btDispatcher_TEMP_GEN_0 == null)
            btDispatcher_TEMP_GEN_0 = btDispatcher.native_new();
        btDispatcher_TEMP_GEN_0.internal_reset(pointer, false);
        return btDispatcher_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
btDispatcher* attr = nativeObject->m_dispatcher;
return (jlong)attr;
*/
    public static native long internal_native_get_m_dispatcher(long this_addr);

    public void set_m_dispatcher(btDispatcher m_dispatcher) {
        internal_native_set_m_dispatcher(native_address, m_dispatcher.native_address);
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
nativeObject->m_dispatcher = (btDispatcher*)m_dispatcher_addr;
*/
    public static native void internal_native_set_m_dispatcher(long this_addr, long m_dispatcher_addr);

    public btVector3 get_m_gravity() {
        long pointer = internal_native_get_m_gravity(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_1 == null)
            btVector3_TEMP_GEN_1 = btVector3.native_new();
        btVector3_TEMP_GEN_1.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
return (jlong)&nativeObject->m_gravity;
*/
    public static native long internal_native_get_m_gravity(long this_addr);

    public void set_m_gravity(btVector3 m_gravity) {
        internal_native_set_m_gravity(native_address, m_gravity.native_address);
    }

    /*[-JNI;-NATIVE]
btSoftBodyWorldInfo* nativeObject = (btSoftBodyWorldInfo*)this_addr;
nativeObject->m_gravity = *((btVector3*)m_gravity_addr);
*/
    public static native void internal_native_set_m_gravity(long this_addr, long m_gravity_addr);
}
