/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet;

import bullet.bulletcollision.collisionshapes.btTriangleCallback;
import bullet.linearmath.btVector3;

public class btTriangleRaycastCallback extends btTriangleCallback {

    private btVector3 btVector3_TEMP_GEN_0;

    private btVector3 btVector3_TEMP_GEN_1;

    static public final btTriangleRaycastCallback NULL = btTriangleRaycastCallback.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btTriangleRaycastCallback(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static btTriangleRaycastCallback native_new() {
        return new btTriangleRaycastCallback((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btTriangleRaycastCallback* nativeObject = (btTriangleRaycastCallback*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public float reportHit(btVector3 hitNormalLocal, float hitFraction, int partId, int triangleIndex) {
        return internal_native_reportHit(native_address, hitNormalLocal.native_address, hitFraction, partId, triangleIndex);
    }

    /*[-JNI;-NATIVE]
btTriangleRaycastCallback* nativeObject = (btTriangleRaycastCallback*)this_addr;
return nativeObject->reportHit(*((btVector3* )hitNormalLocal_addr), (float)hitFraction, (int)partId, (int)triangleIndex);
*/
    public static native float internal_native_reportHit(long this_addr, long hitNormalLocal_addr, float hitFraction, int partId, int triangleIndex);

    public btVector3 get_m_from() {
        long pointer = internal_native_get_m_from(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_0 == null)
            btVector3_TEMP_GEN_0 = btVector3.native_new();
        btVector3_TEMP_GEN_0.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btTriangleRaycastCallback* nativeObject = (btTriangleRaycastCallback*)this_addr;
return (jlong)&nativeObject->m_from;
*/
    public static native long internal_native_get_m_from(long this_addr);

    public void set_m_from(btVector3 m_from) {
        internal_native_set_m_from(native_address, m_from.native_address);
    }

    /*[-JNI;-NATIVE]
btTriangleRaycastCallback* nativeObject = (btTriangleRaycastCallback*)this_addr;
nativeObject->m_from = *((btVector3*)m_from_addr);
*/
    public static native void internal_native_set_m_from(long this_addr, long m_from_addr);

    public btVector3 get_m_to() {
        long pointer = internal_native_get_m_to(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_1 == null)
            btVector3_TEMP_GEN_1 = btVector3.native_new();
        btVector3_TEMP_GEN_1.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
btTriangleRaycastCallback* nativeObject = (btTriangleRaycastCallback*)this_addr;
return (jlong)&nativeObject->m_to;
*/
    public static native long internal_native_get_m_to(long this_addr);

    public void set_m_to(btVector3 m_to) {
        internal_native_set_m_to(native_address, m_to.native_address);
    }

    /*[-JNI;-NATIVE]
btTriangleRaycastCallback* nativeObject = (btTriangleRaycastCallback*)this_addr;
nativeObject->m_to = *((btVector3*)m_to_addr);
*/
    public static native void internal_native_set_m_to(long this_addr, long m_to_addr);

    public float get_m_hitFraction() {
        return internal_native_get_m_hitFraction(native_address);
    }

    /*[-JNI;-NATIVE]
btTriangleRaycastCallback* nativeObject = (btTriangleRaycastCallback*)this_addr;
return nativeObject->m_hitFraction;
*/
    public static native float internal_native_get_m_hitFraction(long this_addr);

    public void set_m_hitFraction(float m_hitFraction) {
        internal_native_set_m_hitFraction(native_address, m_hitFraction);
    }

    /*[-JNI;-NATIVE]
btTriangleRaycastCallback* nativeObject = (btTriangleRaycastCallback*)this_addr;
nativeObject->m_hitFraction = m_hitFraction;
*/
    public static native void internal_native_set_m_hitFraction(long this_addr, float m_hitFraction);

    public int get_m_flags() {
        return internal_native_get_m_flags(native_address);
    }

    /*[-JNI;-NATIVE]
btTriangleRaycastCallback* nativeObject = (btTriangleRaycastCallback*)this_addr;
return nativeObject->m_flags;
*/
    public static native int internal_native_get_m_flags(long this_addr);

    public void set_m_flags(int m_flags) {
        internal_native_set_m_flags(native_address, m_flags);
    }

    /*[-JNI;-NATIVE]
btTriangleRaycastCallback* nativeObject = (btTriangleRaycastCallback*)this_addr;
nativeObject->m_flags = m_flags;
*/
    public static native void internal_native_set_m_flags(long this_addr, int m_flags);
}
