/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet;

import com.github.xpenatan.jParser.idl.IDLBase;

public class btDispatcherInfo extends IDLBase {

    static public final btDispatcherInfo NULL = btDispatcherInfo.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btDispatcherInfo(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btDispatcherInfo native_new() {
        return new btDispatcherInfo((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public float get_m_timeStep() {
        return internal_native_get_m_timeStep(native_address);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
return nativeObject->m_timeStep;
*/
    public static native float internal_native_get_m_timeStep(long this_addr);

    public void set_m_timeStep(float m_timeStep) {
        internal_native_set_m_timeStep(native_address, m_timeStep);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
nativeObject->m_timeStep = m_timeStep;
*/
    public static native void internal_native_set_m_timeStep(long this_addr, float m_timeStep);

    public int get_m_stepCount() {
        return internal_native_get_m_stepCount(native_address);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
return nativeObject->m_stepCount;
*/
    public static native int internal_native_get_m_stepCount(long this_addr);

    public void set_m_stepCount(int m_stepCount) {
        internal_native_set_m_stepCount(native_address, m_stepCount);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
nativeObject->m_stepCount = m_stepCount;
*/
    public static native void internal_native_set_m_stepCount(long this_addr, int m_stepCount);

    public int get_m_dispatchFunc() {
        return internal_native_get_m_dispatchFunc(native_address);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
return nativeObject->m_dispatchFunc;
*/
    public static native int internal_native_get_m_dispatchFunc(long this_addr);

    public void set_m_dispatchFunc(int m_dispatchFunc) {
        internal_native_set_m_dispatchFunc(native_address, m_dispatchFunc);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
nativeObject->m_dispatchFunc = m_dispatchFunc;
*/
    public static native void internal_native_set_m_dispatchFunc(long this_addr, int m_dispatchFunc);

    public float get_m_timeOfImpact() {
        return internal_native_get_m_timeOfImpact(native_address);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
return nativeObject->m_timeOfImpact;
*/
    public static native float internal_native_get_m_timeOfImpact(long this_addr);

    public void set_m_timeOfImpact(float m_timeOfImpact) {
        internal_native_set_m_timeOfImpact(native_address, m_timeOfImpact);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
nativeObject->m_timeOfImpact = m_timeOfImpact;
*/
    public static native void internal_native_set_m_timeOfImpact(long this_addr, float m_timeOfImpact);

    public boolean get_m_useContinuous() {
        return internal_native_get_m_useContinuous(native_address);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
return nativeObject->m_useContinuous;
*/
    public static native boolean internal_native_get_m_useContinuous(long this_addr);

    public void set_m_useContinuous(boolean m_useContinuous) {
        internal_native_set_m_useContinuous(native_address, m_useContinuous);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
nativeObject->m_useContinuous = m_useContinuous;
*/
    public static native void internal_native_set_m_useContinuous(long this_addr, boolean m_useContinuous);

    public boolean get_m_enableSatConvex() {
        return internal_native_get_m_enableSatConvex(native_address);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
return nativeObject->m_enableSatConvex;
*/
    public static native boolean internal_native_get_m_enableSatConvex(long this_addr);

    public void set_m_enableSatConvex(boolean m_enableSatConvex) {
        internal_native_set_m_enableSatConvex(native_address, m_enableSatConvex);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
nativeObject->m_enableSatConvex = m_enableSatConvex;
*/
    public static native void internal_native_set_m_enableSatConvex(long this_addr, boolean m_enableSatConvex);

    public boolean get_m_enableSPU() {
        return internal_native_get_m_enableSPU(native_address);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
return nativeObject->m_enableSPU;
*/
    public static native boolean internal_native_get_m_enableSPU(long this_addr);

    public void set_m_enableSPU(boolean m_enableSPU) {
        internal_native_set_m_enableSPU(native_address, m_enableSPU);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
nativeObject->m_enableSPU = m_enableSPU;
*/
    public static native void internal_native_set_m_enableSPU(long this_addr, boolean m_enableSPU);

    public boolean get_m_useEpa() {
        return internal_native_get_m_useEpa(native_address);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
return nativeObject->m_useEpa;
*/
    public static native boolean internal_native_get_m_useEpa(long this_addr);

    public void set_m_useEpa(boolean m_useEpa) {
        internal_native_set_m_useEpa(native_address, m_useEpa);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
nativeObject->m_useEpa = m_useEpa;
*/
    public static native void internal_native_set_m_useEpa(long this_addr, boolean m_useEpa);

    public float get_m_allowedCcdPenetration() {
        return internal_native_get_m_allowedCcdPenetration(native_address);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
return nativeObject->m_allowedCcdPenetration;
*/
    public static native float internal_native_get_m_allowedCcdPenetration(long this_addr);

    public void set_m_allowedCcdPenetration(float m_allowedCcdPenetration) {
        internal_native_set_m_allowedCcdPenetration(native_address, m_allowedCcdPenetration);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
nativeObject->m_allowedCcdPenetration = m_allowedCcdPenetration;
*/
    public static native void internal_native_set_m_allowedCcdPenetration(long this_addr, float m_allowedCcdPenetration);

    public boolean get_m_useConvexConservativeDistanceUtil() {
        return internal_native_get_m_useConvexConservativeDistanceUtil(native_address);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
return nativeObject->m_useConvexConservativeDistanceUtil;
*/
    public static native boolean internal_native_get_m_useConvexConservativeDistanceUtil(long this_addr);

    public void set_m_useConvexConservativeDistanceUtil(boolean m_useConvexConservativeDistanceUtil) {
        internal_native_set_m_useConvexConservativeDistanceUtil(native_address, m_useConvexConservativeDistanceUtil);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
nativeObject->m_useConvexConservativeDistanceUtil = m_useConvexConservativeDistanceUtil;
*/
    public static native void internal_native_set_m_useConvexConservativeDistanceUtil(long this_addr, boolean m_useConvexConservativeDistanceUtil);

    public float get_m_convexConservativeDistanceThreshold() {
        return internal_native_get_m_convexConservativeDistanceThreshold(native_address);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
return nativeObject->m_convexConservativeDistanceThreshold;
*/
    public static native float internal_native_get_m_convexConservativeDistanceThreshold(long this_addr);

    public void set_m_convexConservativeDistanceThreshold(float m_convexConservativeDistanceThreshold) {
        internal_native_set_m_convexConservativeDistanceThreshold(native_address, m_convexConservativeDistanceThreshold);
    }

    /*[-JNI;-NATIVE]
btDispatcherInfo* nativeObject = (btDispatcherInfo*)this_addr;
nativeObject->m_convexConservativeDistanceThreshold = m_convexConservativeDistanceThreshold;
*/
    public static native void internal_native_set_m_convexConservativeDistanceThreshold(long this_addr, float m_convexConservativeDistanceThreshold);
}
