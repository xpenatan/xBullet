/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet.bulletdynamics.vehicle;

import com.github.xpenatan.jParser.idl.IDLBase;
import bullet.bulletdynamics.dynamics.btRigidBody;
import bullet.RaycastInfo;
import bullet.linearmath.btTransform;
import bullet.linearmath.btVector3;

public class btWheelInfo extends IDLBase {

    private RaycastInfo RaycastInfo_TEMP_GEN_0;

    private btTransform btTransform_TEMP_GEN_0;

    private btVector3 btVector3_TEMP_GEN_0;

    private btVector3 btVector3_TEMP_GEN_1;

    private btVector3 btVector3_TEMP_GEN_2;

    static public final btWheelInfo NULL = btWheelInfo.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btWheelInfo(byte b, char c) {
    }

    /**
     * @return An empty instance without a native address
     */
    public static btWheelInfo native_new() {
        return new btWheelInfo((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void updateWheel(btRigidBody chassis, RaycastInfo raycastInfo) {
        internal_native_updateWheel(native_address, chassis.native_address, raycastInfo.native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->updateWheel(*((btRigidBody* )chassis_addr), *((btWheelInfo::RaycastInfo* )raycastInfo_addr));
*/
    public static native void internal_native_updateWheel(long this_addr, long chassis_addr, long raycastInfo_addr);

    public RaycastInfo get_m_raycastInfo() {
        long pointer = internal_native_get_m_raycastInfo(native_address);
        if (pointer == 0)
            return RaycastInfo.NULL;
        if (RaycastInfo_TEMP_GEN_0 == null)
            RaycastInfo_TEMP_GEN_0 = RaycastInfo.native_new();
        RaycastInfo_TEMP_GEN_0.internal_reset(pointer, false);
        return RaycastInfo_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return (jlong)&nativeObject->m_raycastInfo;
*/
    public static native long internal_native_get_m_raycastInfo(long this_addr);

    public void set_m_raycastInfo(RaycastInfo m_raycastInfo) {
        internal_native_set_m_raycastInfo(native_address, m_raycastInfo.native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_raycastInfo = *((btWheelInfo::RaycastInfo*)m_raycastInfo_addr);
*/
    public static native void internal_native_set_m_raycastInfo(long this_addr, long m_raycastInfo_addr);

    public btTransform get_m_worldTransform() {
        long pointer = internal_native_get_m_worldTransform(native_address);
        if (pointer == 0)
            return btTransform.NULL;
        if (btTransform_TEMP_GEN_0 == null)
            btTransform_TEMP_GEN_0 = btTransform.native_new();
        btTransform_TEMP_GEN_0.internal_reset(pointer, false);
        return btTransform_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return (jlong)&nativeObject->m_worldTransform;
*/
    public static native long internal_native_get_m_worldTransform(long this_addr);

    public void set_m_worldTransform(btTransform m_worldTransform) {
        internal_native_set_m_worldTransform(native_address, m_worldTransform.native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_worldTransform = *((btTransform*)m_worldTransform_addr);
*/
    public static native void internal_native_set_m_worldTransform(long this_addr, long m_worldTransform_addr);

    public btVector3 get_m_chassisConnectionPointCS() {
        long pointer = internal_native_get_m_chassisConnectionPointCS(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_0 == null)
            btVector3_TEMP_GEN_0 = btVector3.native_new();
        btVector3_TEMP_GEN_0.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return (jlong)&nativeObject->m_chassisConnectionPointCS;
*/
    public static native long internal_native_get_m_chassisConnectionPointCS(long this_addr);

    public void set_m_chassisConnectionPointCS(btVector3 m_chassisConnectionPointCS) {
        internal_native_set_m_chassisConnectionPointCS(native_address, m_chassisConnectionPointCS.native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_chassisConnectionPointCS = *((btVector3*)m_chassisConnectionPointCS_addr);
*/
    public static native void internal_native_set_m_chassisConnectionPointCS(long this_addr, long m_chassisConnectionPointCS_addr);

    public btVector3 get_m_wheelDirectionCS() {
        long pointer = internal_native_get_m_wheelDirectionCS(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_1 == null)
            btVector3_TEMP_GEN_1 = btVector3.native_new();
        btVector3_TEMP_GEN_1.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return (jlong)&nativeObject->m_wheelDirectionCS;
*/
    public static native long internal_native_get_m_wheelDirectionCS(long this_addr);

    public void set_m_wheelDirectionCS(btVector3 m_wheelDirectionCS) {
        internal_native_set_m_wheelDirectionCS(native_address, m_wheelDirectionCS.native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_wheelDirectionCS = *((btVector3*)m_wheelDirectionCS_addr);
*/
    public static native void internal_native_set_m_wheelDirectionCS(long this_addr, long m_wheelDirectionCS_addr);

    public btVector3 get_m_wheelAxleCS() {
        long pointer = internal_native_get_m_wheelAxleCS(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_2 == null)
            btVector3_TEMP_GEN_2 = btVector3.native_new();
        btVector3_TEMP_GEN_2.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_2;
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return (jlong)&nativeObject->m_wheelAxleCS;
*/
    public static native long internal_native_get_m_wheelAxleCS(long this_addr);

    public void set_m_wheelAxleCS(btVector3 m_wheelAxleCS) {
        internal_native_set_m_wheelAxleCS(native_address, m_wheelAxleCS.native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_wheelAxleCS = *((btVector3*)m_wheelAxleCS_addr);
*/
    public static native void internal_native_set_m_wheelAxleCS(long this_addr, long m_wheelAxleCS_addr);

    public float get_m_suspensionRestLength1() {
        return internal_native_get_m_suspensionRestLength1(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_suspensionRestLength1;
*/
    public static native float internal_native_get_m_suspensionRestLength1(long this_addr);

    public void set_m_suspensionRestLength1(float m_suspensionRestLength1) {
        internal_native_set_m_suspensionRestLength1(native_address, m_suspensionRestLength1);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_suspensionRestLength1 = m_suspensionRestLength1;
*/
    public static native void internal_native_set_m_suspensionRestLength1(long this_addr, float m_suspensionRestLength1);

    public float get_m_maxSuspensionTravelCm() {
        return internal_native_get_m_maxSuspensionTravelCm(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_maxSuspensionTravelCm;
*/
    public static native float internal_native_get_m_maxSuspensionTravelCm(long this_addr);

    public void set_m_maxSuspensionTravelCm(float m_maxSuspensionTravelCm) {
        internal_native_set_m_maxSuspensionTravelCm(native_address, m_maxSuspensionTravelCm);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_maxSuspensionTravelCm = m_maxSuspensionTravelCm;
*/
    public static native void internal_native_set_m_maxSuspensionTravelCm(long this_addr, float m_maxSuspensionTravelCm);

    public float get_m_wheelsRadius() {
        return internal_native_get_m_wheelsRadius(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_wheelsRadius;
*/
    public static native float internal_native_get_m_wheelsRadius(long this_addr);

    public void set_m_wheelsRadius(float m_wheelsRadius) {
        internal_native_set_m_wheelsRadius(native_address, m_wheelsRadius);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_wheelsRadius = m_wheelsRadius;
*/
    public static native void internal_native_set_m_wheelsRadius(long this_addr, float m_wheelsRadius);

    public float get_m_suspensionStiffness() {
        return internal_native_get_m_suspensionStiffness(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_suspensionStiffness;
*/
    public static native float internal_native_get_m_suspensionStiffness(long this_addr);

    public void set_m_suspensionStiffness(float m_suspensionStiffness) {
        internal_native_set_m_suspensionStiffness(native_address, m_suspensionStiffness);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_suspensionStiffness = m_suspensionStiffness;
*/
    public static native void internal_native_set_m_suspensionStiffness(long this_addr, float m_suspensionStiffness);

    public float get_m_wheelsDampingCompression() {
        return internal_native_get_m_wheelsDampingCompression(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_wheelsDampingCompression;
*/
    public static native float internal_native_get_m_wheelsDampingCompression(long this_addr);

    public void set_m_wheelsDampingCompression(float m_wheelsDampingCompression) {
        internal_native_set_m_wheelsDampingCompression(native_address, m_wheelsDampingCompression);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_wheelsDampingCompression = m_wheelsDampingCompression;
*/
    public static native void internal_native_set_m_wheelsDampingCompression(long this_addr, float m_wheelsDampingCompression);

    public float get_m_wheelsDampingRelaxation() {
        return internal_native_get_m_wheelsDampingRelaxation(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_wheelsDampingRelaxation;
*/
    public static native float internal_native_get_m_wheelsDampingRelaxation(long this_addr);

    public void set_m_wheelsDampingRelaxation(float m_wheelsDampingRelaxation) {
        internal_native_set_m_wheelsDampingRelaxation(native_address, m_wheelsDampingRelaxation);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_wheelsDampingRelaxation = m_wheelsDampingRelaxation;
*/
    public static native void internal_native_set_m_wheelsDampingRelaxation(long this_addr, float m_wheelsDampingRelaxation);

    public float get_m_frictionSlip() {
        return internal_native_get_m_frictionSlip(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_frictionSlip;
*/
    public static native float internal_native_get_m_frictionSlip(long this_addr);

    public void set_m_frictionSlip(float m_frictionSlip) {
        internal_native_set_m_frictionSlip(native_address, m_frictionSlip);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_frictionSlip = m_frictionSlip;
*/
    public static native void internal_native_set_m_frictionSlip(long this_addr, float m_frictionSlip);

    public float get_m_steering() {
        return internal_native_get_m_steering(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_steering;
*/
    public static native float internal_native_get_m_steering(long this_addr);

    public void set_m_steering(float m_steering) {
        internal_native_set_m_steering(native_address, m_steering);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_steering = m_steering;
*/
    public static native void internal_native_set_m_steering(long this_addr, float m_steering);

    public float get_m_rotation() {
        return internal_native_get_m_rotation(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_rotation;
*/
    public static native float internal_native_get_m_rotation(long this_addr);

    public void set_m_rotation(float m_rotation) {
        internal_native_set_m_rotation(native_address, m_rotation);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_rotation = m_rotation;
*/
    public static native void internal_native_set_m_rotation(long this_addr, float m_rotation);

    public float get_m_deltaRotation() {
        return internal_native_get_m_deltaRotation(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_deltaRotation;
*/
    public static native float internal_native_get_m_deltaRotation(long this_addr);

    public void set_m_deltaRotation(float m_deltaRotation) {
        internal_native_set_m_deltaRotation(native_address, m_deltaRotation);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_deltaRotation = m_deltaRotation;
*/
    public static native void internal_native_set_m_deltaRotation(long this_addr, float m_deltaRotation);

    public float get_m_rollInfluence() {
        return internal_native_get_m_rollInfluence(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_rollInfluence;
*/
    public static native float internal_native_get_m_rollInfluence(long this_addr);

    public void set_m_rollInfluence(float m_rollInfluence) {
        internal_native_set_m_rollInfluence(native_address, m_rollInfluence);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_rollInfluence = m_rollInfluence;
*/
    public static native void internal_native_set_m_rollInfluence(long this_addr, float m_rollInfluence);

    public float get_m_maxSuspensionForce() {
        return internal_native_get_m_maxSuspensionForce(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_maxSuspensionForce;
*/
    public static native float internal_native_get_m_maxSuspensionForce(long this_addr);

    public void set_m_maxSuspensionForce(float m_maxSuspensionForce) {
        internal_native_set_m_maxSuspensionForce(native_address, m_maxSuspensionForce);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_maxSuspensionForce = m_maxSuspensionForce;
*/
    public static native void internal_native_set_m_maxSuspensionForce(long this_addr, float m_maxSuspensionForce);

    public float get_m_engineForce() {
        return internal_native_get_m_engineForce(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_engineForce;
*/
    public static native float internal_native_get_m_engineForce(long this_addr);

    public void set_m_engineForce(float m_engineForce) {
        internal_native_set_m_engineForce(native_address, m_engineForce);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_engineForce = m_engineForce;
*/
    public static native void internal_native_set_m_engineForce(long this_addr, float m_engineForce);

    public float get_m_brake() {
        return internal_native_get_m_brake(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_brake;
*/
    public static native float internal_native_get_m_brake(long this_addr);

    public void set_m_brake(float m_brake) {
        internal_native_set_m_brake(native_address, m_brake);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_brake = m_brake;
*/
    public static native void internal_native_set_m_brake(long this_addr, float m_brake);

    public boolean get_m_bIsFrontWheel() {
        return internal_native_get_m_bIsFrontWheel(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_bIsFrontWheel;
*/
    public static native boolean internal_native_get_m_bIsFrontWheel(long this_addr);

    public void set_m_bIsFrontWheel(boolean m_bIsFrontWheel) {
        internal_native_set_m_bIsFrontWheel(native_address, m_bIsFrontWheel);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_bIsFrontWheel = m_bIsFrontWheel;
*/
    public static native void internal_native_set_m_bIsFrontWheel(long this_addr, boolean m_bIsFrontWheel);

    public float get_m_clippedInvContactDotSuspension() {
        return internal_native_get_m_clippedInvContactDotSuspension(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_clippedInvContactDotSuspension;
*/
    public static native float internal_native_get_m_clippedInvContactDotSuspension(long this_addr);

    public void set_m_clippedInvContactDotSuspension(float m_clippedInvContactDotSuspension) {
        internal_native_set_m_clippedInvContactDotSuspension(native_address, m_clippedInvContactDotSuspension);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_clippedInvContactDotSuspension = m_clippedInvContactDotSuspension;
*/
    public static native void internal_native_set_m_clippedInvContactDotSuspension(long this_addr, float m_clippedInvContactDotSuspension);

    public float get_m_suspensionRelativeVelocity() {
        return internal_native_get_m_suspensionRelativeVelocity(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_suspensionRelativeVelocity;
*/
    public static native float internal_native_get_m_suspensionRelativeVelocity(long this_addr);

    public void set_m_suspensionRelativeVelocity(float m_suspensionRelativeVelocity) {
        internal_native_set_m_suspensionRelativeVelocity(native_address, m_suspensionRelativeVelocity);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_suspensionRelativeVelocity = m_suspensionRelativeVelocity;
*/
    public static native void internal_native_set_m_suspensionRelativeVelocity(long this_addr, float m_suspensionRelativeVelocity);

    public float get_m_wheelsSuspensionForce() {
        return internal_native_get_m_wheelsSuspensionForce(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_wheelsSuspensionForce;
*/
    public static native float internal_native_get_m_wheelsSuspensionForce(long this_addr);

    public void set_m_wheelsSuspensionForce(float m_wheelsSuspensionForce) {
        internal_native_set_m_wheelsSuspensionForce(native_address, m_wheelsSuspensionForce);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_wheelsSuspensionForce = m_wheelsSuspensionForce;
*/
    public static native void internal_native_set_m_wheelsSuspensionForce(long this_addr, float m_wheelsSuspensionForce);

    public float get_m_skidInfo() {
        return internal_native_get_m_skidInfo(native_address);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
return nativeObject->m_skidInfo;
*/
    public static native float internal_native_get_m_skidInfo(long this_addr);

    public void set_m_skidInfo(float m_skidInfo) {
        internal_native_set_m_skidInfo(native_address, m_skidInfo);
    }

    /*[-JNI;-NATIVE]
btWheelInfo* nativeObject = (btWheelInfo*)this_addr;
nativeObject->m_skidInfo = m_skidInfo;
*/
    public static native void internal_native_set_m_skidInfo(long this_addr, float m_skidInfo);
}
