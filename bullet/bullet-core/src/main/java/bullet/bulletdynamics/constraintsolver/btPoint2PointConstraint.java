/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet.bulletdynamics.constraintsolver;

import bullet.bulletdynamics.dynamics.btRigidBody;
import bullet.linearmath.btVector3;
import bullet.btConstraintSetting;

public class btPoint2PointConstraint extends btTypedConstraint {

    private btVector3 btVector3_TEMP_GEN_0;

    private btVector3 btVector3_TEMP_GEN_1;

    private btConstraintSetting btConstraintSetting_TEMP_GEN_0;

    static public final btPoint2PointConstraint NULL = btPoint2PointConstraint.native_new();

    public btPoint2PointConstraint(btRigidBody rbA, btRigidBody rbB, btVector3 pivotInA, btVector3 pivotInB) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_btRigidBody_btRigidBody_btVector3_btVector3(rbA.native_address, rbB.native_address, pivotInA.native_address, pivotInB.native_address);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btPoint2PointConstraint(*((btRigidBody* )rbA_addr), *((btRigidBody* )rbB_addr), *((btVector3* )pivotInA_addr), *((btVector3* )pivotInB_addr));
*/
    public static native long internal_native_create_btRigidBody_btRigidBody_btVector3_btVector3(long rbA_addr, long rbB_addr, long pivotInA_addr, long pivotInB_addr);

    public btPoint2PointConstraint(btRigidBody rbA, btVector3 pivotInA) {
        super((byte) 1, (char) 1);
        long addr = internal_native_create_btRigidBody_btVector3(rbA.native_address, pivotInA.native_address);
        internal_reset(addr, true);
    }

    /*[-JNI;-NATIVE]
return (jlong)new btPoint2PointConstraint(*((btRigidBody* )rbA_addr), *((btVector3* )pivotInA_addr));
*/
    public static native long internal_native_create_btRigidBody_btVector3(long rbA_addr, long pivotInA_addr);

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btPoint2PointConstraint(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static btPoint2PointConstraint native_new() {
        return new btPoint2PointConstraint((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btPoint2PointConstraint* nativeObject = (btPoint2PointConstraint*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public void setPivotA(btVector3 pivotA) {
        internal_native_setPivotA(native_address, pivotA.native_address);
    }

    /*[-JNI;-NATIVE]
btPoint2PointConstraint* nativeObject = (btPoint2PointConstraint*)this_addr;
nativeObject->setPivotA(*((btVector3* )pivotA_addr));
*/
    public static native void internal_native_setPivotA(long this_addr, long pivotA_addr);

    public void setPivotB(btVector3 pivotB) {
        internal_native_setPivotB(native_address, pivotB.native_address);
    }

    /*[-JNI;-NATIVE]
btPoint2PointConstraint* nativeObject = (btPoint2PointConstraint*)this_addr;
nativeObject->setPivotB(*((btVector3* )pivotB_addr));
*/
    public static native void internal_native_setPivotB(long this_addr, long pivotB_addr);

    public btVector3 getPivotInA() {
        long pointer = internal_native_getPivotInA(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_0 == null)
            btVector3_TEMP_GEN_0 = btVector3.native_new();
        btVector3_TEMP_GEN_0.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btPoint2PointConstraint* nativeObject = (btPoint2PointConstraint*)this_addr;
return (jlong)&nativeObject->getPivotInA();
*/
    public static native long internal_native_getPivotInA(long this_addr);

    public btVector3 getPivotInB() {
        long pointer = internal_native_getPivotInB(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_1 == null)
            btVector3_TEMP_GEN_1 = btVector3.native_new();
        btVector3_TEMP_GEN_1.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_1;
    }

    /*[-JNI;-NATIVE]
btPoint2PointConstraint* nativeObject = (btPoint2PointConstraint*)this_addr;
return (jlong)&nativeObject->getPivotInB();
*/
    public static native long internal_native_getPivotInB(long this_addr);

    public btConstraintSetting get_m_setting() {
        long pointer = internal_native_get_m_setting(native_address);
        if (pointer == 0)
            return btConstraintSetting.NULL;
        if (btConstraintSetting_TEMP_GEN_0 == null)
            btConstraintSetting_TEMP_GEN_0 = btConstraintSetting.native_new();
        btConstraintSetting_TEMP_GEN_0.internal_reset(pointer, false);
        return btConstraintSetting_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btPoint2PointConstraint* nativeObject = (btPoint2PointConstraint*)this_addr;
return (jlong)&nativeObject->m_setting;
*/
    public static native long internal_native_get_m_setting(long this_addr);

    public void set_m_setting(btConstraintSetting m_setting) {
        internal_native_set_m_setting(native_address, m_setting.native_address);
    }

    /*[-JNI;-NATIVE]
btPoint2PointConstraint* nativeObject = (btPoint2PointConstraint*)this_addr;
nativeObject->m_setting = *((btConstraintSetting*)m_setting_addr);
*/
    public static native void internal_native_set_m_setting(long this_addr, long m_setting_addr);
}
