/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet.bulletdynamics.dynamics;

import bullet.bulletcollision.collisiondispatch.btCollisionWorld;
import bullet.bulletdynamics.constraintsolver.btContactSolverInfo;
import bullet.linearmath.btVector3;
import bullet.bulletdynamics.constraintsolver.btTypedConstraint;

public class btDynamicsWorld extends btCollisionWorld {

    private btContactSolverInfo btContactSolverInfo_TEMP_GEN_0;

    private btVector3 btVector3_TEMP_GEN_0;

    static public final btDynamicsWorld NULL = btDynamicsWorld.native_new();

    /**
     * Dummy constructor, used internally to creates objects without C++ pointer
     */
    @Deprecated()
    protected btDynamicsWorld(byte b, char c) {
        super((byte) 1, (char) 1);
    }

    /**
     * @return An empty instance without a native address
     */
    public static btDynamicsWorld native_new() {
        return new btDynamicsWorld((byte) 0, (char) 0);
    }

    protected void deleteNative() {
        internal_native_deleteNative(native_address);
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
delete nativeObject;
*/
    public static native void internal_native_deleteNative(long this_addr);

    public int stepSimulation(float timeStep, int maxSubSteps, float fixedTimeStep) {
        return internal_native_stepSimulation(native_address, timeStep, maxSubSteps, fixedTimeStep);
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
return nativeObject->stepSimulation((float)timeStep, (int)maxSubSteps, (float)fixedTimeStep);
*/
    public static native int internal_native_stepSimulation(long this_addr, float timeStep, int maxSubSteps, float fixedTimeStep);

    public int stepSimulation(float timeStep, int maxSubSteps) {
        return internal_native_stepSimulation(native_address, timeStep, maxSubSteps);
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
return nativeObject->stepSimulation((float)timeStep, (int)maxSubSteps);
*/
    public static native int internal_native_stepSimulation(long this_addr, float timeStep, int maxSubSteps);

    public int stepSimulation(float timeStep) {
        return internal_native_stepSimulation(native_address, timeStep);
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
return nativeObject->stepSimulation((float)timeStep);
*/
    public static native int internal_native_stepSimulation(long this_addr, float timeStep);

    public void addAction(btActionInterface action) {
        internal_native_addAction(native_address, action.native_address);
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
nativeObject->addAction((btActionInterface* )action_addr);
*/
    public static native void internal_native_addAction(long this_addr, long action_addr);

    public void removeAction(btActionInterface action) {
        internal_native_removeAction(native_address, action.native_address);
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
nativeObject->removeAction((btActionInterface* )action_addr);
*/
    public static native void internal_native_removeAction(long this_addr, long action_addr);

    public btContactSolverInfo getSolverInfo() {
        long pointer = internal_native_getSolverInfo(native_address);
        if (pointer == 0)
            return btContactSolverInfo.NULL;
        if (btContactSolverInfo_TEMP_GEN_0 == null)
            btContactSolverInfo_TEMP_GEN_0 = btContactSolverInfo.native_new();
        btContactSolverInfo_TEMP_GEN_0.internal_reset(pointer, false);
        return btContactSolverInfo_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
return (jlong)&nativeObject->getSolverInfo();
*/
    public static native long internal_native_getSolverInfo(long this_addr);

    public void addRigidBody(btRigidBody body) {
        internal_native_addRigidBody(native_address, body.native_address);
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
nativeObject->addRigidBody((btRigidBody* )body_addr);
*/
    public static native void internal_native_addRigidBody(long this_addr, long body_addr);

    public void addRigidBody(btRigidBody body, int group, int mask) {
        internal_native_addRigidBody(native_address, body.native_address, group, mask);
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
nativeObject->addRigidBody((btRigidBody* )body_addr, (int)group, (int)mask);
*/
    public static native void internal_native_addRigidBody(long this_addr, long body_addr, int group, int mask);

    public void removeRigidBody(btRigidBody body) {
        internal_native_removeRigidBody(native_address, body.native_address);
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
nativeObject->removeRigidBody((btRigidBody* )body_addr);
*/
    public static native void internal_native_removeRigidBody(long this_addr, long body_addr);

    public void setGravity(btVector3 gravity) {
        internal_native_setGravity(native_address, gravity.native_address);
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
nativeObject->setGravity(*((btVector3* )gravity_addr));
*/
    public static native void internal_native_setGravity(long this_addr, long gravity_addr);

    public btVector3 getGravity() {
        long pointer = internal_native_getGravity(native_address);
        if (pointer == 0)
            return btVector3.NULL;
        if (btVector3_TEMP_GEN_0 == null)
            btVector3_TEMP_GEN_0 = btVector3.native_new();
        btVector3_TEMP_GEN_0.internal_reset(pointer, false);
        return btVector3_TEMP_GEN_0;
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
static btVector3 copy_addr;
copy_addr = nativeObject->getGravity();
return (jlong)&copy_addr;*/
    public static native long internal_native_getGravity(long this_addr);

    public void addConstraint(btTypedConstraint constraint, boolean disableCollisionsBetweenLinkedBodies) {
        internal_native_addConstraint(native_address, constraint.native_address, disableCollisionsBetweenLinkedBodies);
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
nativeObject->addConstraint((btTypedConstraint* )constraint_addr, disableCollisionsBetweenLinkedBodies);
*/
    public static native void internal_native_addConstraint(long this_addr, long constraint_addr, boolean disableCollisionsBetweenLinkedBodies);

    public void addConstraint(btTypedConstraint constraint) {
        internal_native_addConstraint(native_address, constraint.native_address);
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
nativeObject->addConstraint((btTypedConstraint* )constraint_addr);
*/
    public static native void internal_native_addConstraint(long this_addr, long constraint_addr);

    public void removeConstraint(btTypedConstraint constraint) {
        internal_native_removeConstraint(native_address, constraint.native_address);
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
nativeObject->removeConstraint((btTypedConstraint* )constraint_addr);
*/
    public static native void internal_native_removeConstraint(long this_addr, long constraint_addr);

    public void clearForces() {
        internal_native_clearForces(native_address);
    }

    /*[-JNI;-NATIVE]
btDynamicsWorld* nativeObject = (btDynamicsWorld*)this_addr;
nativeObject->clearForces();
*/
    public static native void internal_native_clearForces(long this_addr);
}
