/*-------------------------------------------------------
 * This file was generated by JParser
 *
 * Do not make changes to this file
 *-------------------------------------------------------*/
package bullet;

import java.util.Map;
import java.util.HashMap;
import com.github.xpenatan.jParser.idl.IDLEnum;

public enum PHY_ScalarType implements IDLEnum<PHY_ScalarType> {

    CUSTOM(0),
    PHY_FLOAT(PHY_FLOAT_NATIVE()),
    PHY_DOUBLE(PHY_DOUBLE_NATIVE()),
    PHY_INTEGER(PHY_INTEGER_NATIVE()),
    PHY_SHORT(PHY_SHORT_NATIVE()),
    PHY_FIXEDPOINT88(PHY_FIXEDPOINT88_NATIVE()),
    PHY_UCHAR(PHY_UCHAR_NATIVE());

    private int value;

    private PHY_ScalarType(int value) {
        this.value = value;
    }

    public int getValue() {
        return value;
    }

    public PHY_ScalarType setValue(int value) {
        if (this != CUSTOM) {
            throw new RuntimeException("Cannot change none CUSTOM value");
        }
        this.value = value;
        return this;
    }

    public PHY_ScalarType getCustom() {
        return CUSTOM;
    }

    public static final Map<Integer, PHY_ScalarType> MAP = new HashMap<>();

    static {
        for (PHY_ScalarType value : values()) {
            if (value != CUSTOM) {
                MAP.put(value.value, value);
            }
        }
    }

    /*[-JNI;-NATIVE]
return (jlong)PHY_FLOAT;
*/
    private static native int PHY_FLOAT_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)PHY_DOUBLE;
*/
    private static native int PHY_DOUBLE_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)PHY_INTEGER;
*/
    private static native int PHY_INTEGER_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)PHY_SHORT;
*/
    private static native int PHY_SHORT_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)PHY_FIXEDPOINT88;
*/
    private static native int PHY_FIXEDPOINT88_NATIVE();

    /*[-JNI;-NATIVE]
return (jlong)PHY_UCHAR;
*/
    private static native int PHY_UCHAR_NATIVE();
}
