"use strict";
(function(module) {
    if (typeof define === 'function' && define.amd) {
        define(['exports'], function(exports)  {
            module(exports);
        });
    } else if (typeof exports === 'object' && exports !== null && typeof exports.nodeName !== 'string') {
        module(exports);
    } else {
        module(typeof self !== 'undefined' ? self : this);
}
}(function($rt_exports) {
let $rt_seed = 2463534242,
$rt_nextId = () => {
    let x = $rt_seed;
    x ^= x << 13;
    x ^= x >>> 17;
    x ^= x << 5;
    $rt_seed = x;
    return x;
},
$rt_wrapFunction0 = f => function() {
    return f(this);
},
$rt_wrapFunction1 = f => function(p1) {
    return f(this, p1);
},
$rt_wrapFunction2 = f => function(p1, p2) {
    return f(this, p1, p2);
},
$rt_wrapFunction3 = f => function(p1, p2, p3) {
    return f(this, p1, p2, p3, p3);
},
$rt_wrapFunction4 = f => function(p1, p2, p3, p4) {
    return f(this, p1, p2, p3, p4);
},
$rt_mainStarter = f => (args, callback) => {
    if (!args) {
        args = [];
    }
    let javaArgs = $rt_createArray($rt_objcls(), args.length);
    for (let i = 0;i < args.length;++i) {
        javaArgs.data[i] = $rt_str(args[i]);
    }
    $rt_startThread(() => {
        f.call(null, javaArgs);
    }, callback);
},
$rt_eraseClinit = target => target.$clinit = () => {
},
$dbg_class = obj => {
    let cls = obj.constructor;
    let arrayDegree = 0;
    while (cls.$meta && cls.$meta.item) {
        ++arrayDegree;
        cls = cls.$meta.item;
    }
    let clsName = "";
    if (cls.$meta.primitive) {
        clsName = cls.$meta.name;
    } else {
        clsName = cls.$meta ? cls.$meta.name || "a/" + cls.name : "@" + cls.name;
    }
    while (arrayDegree-- > 0) {
        clsName += "[]";
    }
    return clsName;
},
$rt_classWithoutFields = superclass => {
    if (superclass === 0) {
        return function() {
        };
    }
    if (superclass === void 0) {
        superclass = $rt_objcls();
    }
    return function() {
        superclass.call(this);
    };
},
$rt_cls = cls => jl_Class_getClass(cls),
$rt_objcls = () => jl_Object,
$rt_getThread = () => {
    {
        return jl_Thread_currentThread();
    }
},
$rt_setThread = t => {
    {
        return jl_Thread_setCurrentThread(t);
    }
},
$rt_callWithReceiver = f => function() {
    return f.apply(null, [this].concat(Array.prototype.slice.call(arguments)));
},
$rt_createcls = () => {
    return { $array : null, classObject : null, $meta : { supertypes : [], superclass : null } };
},
$rt_createPrimitiveCls = (name, binaryName) => {
    let cls = $rt_createcls();
    cls.$meta.primitive = true;
    cls.$meta.name = name;
    cls.$meta.binaryName = binaryName;
    cls.$meta.enum = false;
    cls.$meta.item = null;
    cls.$meta.simpleName = null;
    cls.$meta.declaringClass = null;
    cls.$meta.enclosingClass = null;
    return cls;
},
$rt_booleancls = $rt_createPrimitiveCls("boolean", "Z"),
$rt_charcls = $rt_createPrimitiveCls("char", "C"),
$rt_bytecls = $rt_createPrimitiveCls("byte", "B"),
$rt_shortcls = $rt_createPrimitiveCls("short", "S"),
$rt_intcls = $rt_createPrimitiveCls("int", "I"),
$rt_longcls = $rt_createPrimitiveCls("long", "J"),
$rt_floatcls = $rt_createPrimitiveCls("float", "F"),
$rt_voidcls = $rt_createPrimitiveCls("void", "V"),
$rt_numberConversionBuffer = new ArrayBuffer(16),
$rt_numberConversionFloatArray = new Float32Array($rt_numberConversionBuffer),
$rt_numberConversionIntArray = new Int32Array($rt_numberConversionBuffer),
$rt_floatToRawIntBits = n => {
    $rt_numberConversionFloatArray[0] = n;
    return $rt_numberConversionIntArray[0];
},
$rt_intBitsToFloat = n => {
    $rt_numberConversionIntArray[0] = n;
    return $rt_numberConversionFloatArray[0];
},
$rt_compare = (a, b) => a > b ? 1 : a < b ?  -1 : a === b ? 0 : 1,
$rt_imul = Math.imul || function(a, b) {
    let ah = a >>> 16 & 0xFFFF;
    let al = a & 0xFFFF;
    let bh = b >>> 16 & 0xFFFF;
    let bl = b & 0xFFFF;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
},
$rt_udiv = (a, b) => (a >>> 0) / (b >>> 0) >>> 0,
$rt_umod = (a, b) => (a >>> 0) % (b >>> 0) >>> 0,
$rt_ucmp = (a, b) => {
    a >>>= 0;
    b >>>= 0;
    return a < b ?  -1 : a > b ? 1 : 0;
},
Long_ZERO = BigInt(0),
Long_create = (lo, hi) => BigInt.asIntN(64, BigInt.asUintN(64, BigInt(lo)) | BigInt.asUintN(64, BigInt(hi) << BigInt(32))),
Long_fromInt = val => BigInt.asIntN(64, BigInt(val | 0)),
Long_fromNumber = val => BigInt.asIntN(64, BigInt(val >= 0 ? Math.floor(val) : Math.ceil(val))),
Long_toNumber = val => Number(val),
Long_lo = val => Number(BigInt.asIntN(32, val)) | 0,
Long_eq = (a, b) => a === b,
Long_ne = (a, b) => a !== b,
Long_gt = (a, b) => a > b,
Long_lt = (a, b) => a < b,
Long_le = (a, b) => a <= b,
Long_add = (a, b) => BigInt.asIntN(64, a + b),
Long_neg = a => BigInt.asIntN(64,  -a),
Long_sub = (a, b) => BigInt.asIntN(64, a - b);
let Long_ucompare = (a, b) => {
    a = BigInt.asUintN(64, a);
    b = BigInt.asUintN(64, b);
    return a < b ?  -1 : a > b ? 1 : 0;
},
Long_mul = (a, b) => BigInt.asIntN(64, a * b),
Long_div = (a, b) => BigInt.asIntN(64, a / b),
Long_udiv = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) / BigInt.asUintN(64, b)),
Long_rem = (a, b) => BigInt.asIntN(64, a % b),
Long_urem = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) % BigInt.asUintN(64, b)),
Long_and = (a, b) => BigInt.asIntN(64, a & b),
Long_or = (a, b) => BigInt.asIntN(64, a | b),
Long_xor = (a, b) => BigInt.asIntN(64, a ^ b),
Long_shl = (a, b) => BigInt.asIntN(64, a << BigInt(b & 63)),
Long_shr = (a, b) => BigInt.asIntN(64, a >> BigInt(b & 63)),
Long_shru = (a, b) => BigInt.asIntN(64, BigInt.asUintN(64, a) >> BigInt(b & 63)),
$rt_createArray = (cls, sz) => {
    let data = new Array(sz);
    data.fill(null);
    return new ($rt_arraycls(cls))(data);
},
$rt_wrapArray = (cls, data) => new ($rt_arraycls(cls))(data),
$rt_createLongArray = sz => new $rt_longArrayCls(new BigInt64Array(sz)),
$rt_createLongArrayFromData = data => {
    let buffer = new BigInt64Array(data.length);
    buffer.set(data);
    return new $rt_longArrayCls(buffer);
},
$rt_createCharArray = sz => new $rt_charArrayCls(new Uint16Array(sz)),
$rt_createCharArrayFromData = data => {
    let buffer = new Uint16Array(data.length);
    buffer.set(data);
    return new $rt_charArrayCls(buffer);
},
$rt_createByteArray = sz => new $rt_byteArrayCls(new Int8Array(sz)),
$rt_createShortArray = sz => new $rt_shortArrayCls(new Int16Array(sz)),
$rt_createIntArray = sz => new $rt_intArrayCls(new Int32Array(sz)),
$rt_createIntArrayFromData = data => {
    let buffer = new Int32Array(data.length);
    buffer.set(data);
    return new $rt_intArrayCls(buffer);
},
$rt_createBooleanArray = sz => new $rt_booleanArrayCls(new Int8Array(sz)),
$rt_createFloatArray = sz => new $rt_floatArrayCls(new Float32Array(sz)),
$rt_createFloatArrayFromData = data => {
    let buffer = new Float32Array(data.length);
    buffer.set(data);
    return new $rt_floatArrayCls(buffer);
},
$rt_arraycls = cls => {
    let result = cls.$array;
    if (result === null) {
        function JavaArray(data) {
            ($rt_objcls()).call(this);
            this.data = data;
        }
        JavaArray.prototype = Object.create(($rt_objcls()).prototype);
        JavaArray.prototype.type = cls;
        JavaArray.prototype.constructor = JavaArray;
        JavaArray.prototype.toString = function() {
            let str = "[";
            for (let i = 0;i < this.data.length;++i) {
                if (i > 0) {
                    str += ", ";
                }
                str += this.data[i].toString();
            }
            str += "]";
            return str;
        };
        JavaArray.prototype.$clone0 = function() {
            let dataCopy;
            if ('slice' in this.data) {
                dataCopy = this.data.slice();
            } else {
                dataCopy = new this.data.constructor(this.data.length);
                for (let i = 0;i < dataCopy.length;++i) {
                    dataCopy[i] = this.data[i];
                }
            }
            return new ($rt_arraycls(this.type))(dataCopy);
        };
        let name = "[" + cls.$meta.binaryName;
        JavaArray.$meta = { item : cls, supertypes : [$rt_objcls()], primitive : false, superclass : $rt_objcls(), name : name, binaryName : name, enum : false, simpleName : null, declaringClass : null, enclosingClass : null };
        JavaArray.classObject = null;
        JavaArray.$array = null;
        result = JavaArray;
        cls.$array = JavaArray;
    }
    return result;
},
$rt_stringPool_instance,
$rt_stringPool = strings => {
    $rt_stringClassInit();
    $rt_stringPool_instance = new Array(strings.length);
    for (let i = 0;i < strings.length;++i) {
        $rt_stringPool_instance[i] = $rt_intern($rt_str(strings[i]));
    }
},
$rt_s = index => $rt_stringPool_instance[index],
$rt_charArrayToString = (array, offset, count) => {
    let result = "";
    let limit = offset + count;
    for (let i = offset;i < limit;i = i + 1024 | 0) {
        let next = Math.min(limit, i + 1024 | 0);
        result += String.fromCharCode.apply(null, array.subarray(i, next));
    }
    return result;
},
$rt_fullArrayToString = array => $rt_charArrayToString(array, 0, array.length),
$rt_stringToCharArray = (string, begin, dst, dstBegin, count) => {
    for (let i = 0;i < count;i = i + 1 | 0) {
        dst[dstBegin + i] = string.charCodeAt(begin + i);
    }
},
$rt_fastStringToCharArray = string => {
    let array = new Uint16Array(string.length);
    for (let i = 0;i < array.length;++i) {
        array[i] = string.charCodeAt(i);
    }
    return new $rt_charArrayCls(array);
},
$rt_str = str => str === null ? null : jl_String__init_6(str),
$rt_ustr = str => str === null ? null : str.$nativeString,
$rt_stringClassInit = () => jl_String_$callClinit(),
$rt_intern;
{
    $rt_intern = str => str;
}
let $rt_isInstance = (obj, cls) => obj instanceof $rt_objcls() && !!obj.constructor.$meta && $rt_isAssignable(obj.constructor, cls),
$rt_isAssignable = (from, to) => {
    if (from === to) {
        return true;
    }
    let map = from.$meta.assignableCache;
    if (typeof map === 'undefined') {
        map = new Map();
        from.$meta.assignableCache = map;
    }
    let cachedResult = map.get(to);
    if (typeof cachedResult !== 'undefined') {
        return cachedResult;
    }
    if (to.$meta.item !== null) {
        let result = from.$meta.item !== null && $rt_isAssignable(from.$meta.item, to.$meta.item);
        map.set(to, result);
        return result;
    }
    let supertypes = from.$meta.supertypes;
    for (let i = 0;i < supertypes.length;i = i + 1 | 0) {
        if ($rt_isAssignable(supertypes[i], to)) {
            map.set(to, true);
            return true;
        }
    }
    map.set(to, false);
    return false;
},
$rt_throw = ex => {
    throw $rt_exception(ex);
},
$rt_javaExceptionProp = Symbol("javaException"),
$rt_exception = ex => {
    if (!ex.$jsException) {
        $rt_fillNativeException(ex);
    }
    return ex.$jsException;
},
$rt_fillNativeException = ex => {
    let javaCause = $rt_throwableCause(ex);
    let jsCause = javaCause !== null ? javaCause.$jsException : void 0;
    let cause = typeof jsCause === "object" ? { cause : jsCause } : void 0;
    let err = new JavaError("Java exception thrown", cause);
    if (typeof Error.captureStackTrace === "function") {
        Error.captureStackTrace(err);
    }
    err[$rt_javaExceptionProp] = ex;
    ex.$jsException = err;
    $rt_fillStack(err, ex);
},
$rt_fillStack = (err, ex) => {
    if (typeof $rt_decodeStack === "function" && err.stack) {
        let stack = $rt_decodeStack(err.stack);
        let javaStack = $rt_createArray($rt_stecls(), stack.length);
        let elem;
        let noStack = false;
        for (let i = 0;i < stack.length;++i) {
            let element = stack[i];
            elem = $rt_createStackElement($rt_str(element.className), $rt_str(element.methodName), $rt_str(element.fileName), element.lineNumber);
            if (elem == null) {
                noStack = true;
                break;
            }
            javaStack.data[i] = elem;
        }
        if (!noStack) {
            $rt_setStack(ex, javaStack);
        }
    }
},
JavaError;
if (typeof Reflect === 'object') {
    let defaultMessage = Symbol("defaultMessage");
    JavaError = function JavaError(message, cause) {
        let self = Reflect.construct(Error, [void 0, cause], JavaError);
        Object.setPrototypeOf(self, JavaError.prototype);
        self[defaultMessage] = message;
        return self;
    }
    ;
    JavaError.prototype = Object.create(Error.prototype, { constructor : { configurable : true, writable : true, value : JavaError }, message : { get() {
        try {
            let javaException = this[$rt_javaExceptionProp];
            if (typeof javaException === 'object') {
                let javaMessage = $rt_throwableMessage(javaException);
                if (typeof javaMessage === "object") {
                    return javaMessage !== null ? javaMessage.toString() : null;
                }
            }
            return this[defaultMessage];
        } catch (e){
            return "Exception occurred trying to extract Java exception message: " + e;
        }
    } } });
} else {
    JavaError = Error;
}
let $rt_javaException = e => e instanceof Error && typeof e[$rt_javaExceptionProp] === 'object' ? e[$rt_javaExceptionProp] : null,
$rt_wrapException = err => {
    let ex = err[$rt_javaExceptionProp];
    if (!ex) {
        ex = $rt_createException($rt_str("(JavaScript) " + err.toString()));
        err[$rt_javaExceptionProp] = ex;
        ex.$jsException = err;
        $rt_fillStack(err, ex);
    }
    return ex;
},
$rt_createException = message => jl_RuntimeException__init_1(message),
$rt_throwableMessage = t => jl_Throwable_getMessage(t),
$rt_throwableCause = t => jl_Throwable_getCause(t),
$rt_stecls = () => jl_StackTraceElement,
$rt_createStackElement = (className, methodName, fileName, lineNumber) => {
    {
        return null;
    }
},
$rt_setStack = (e, stack) => {
},
$rt_createOutputFunction = outputFunction => {
    let buffer = "";
    return msg => {
        let index = 0;
        while (true) {
            let next = msg.indexOf('\n', index);
            if (next < 0) {
                break;
            }
            outputFunction(buffer + msg.substring(index, next));
            buffer = "";
            index = next + 1;
        }
        buffer += msg.substring(index);
    };
},
$rt_putStdout = typeof $rt_putStdoutCustom === "function" ? $rt_putStdoutCustom : typeof console === "object" ? $rt_createOutputFunction(msg => console.info(msg)) : () => {
},
$rt_putStderr = typeof $rt_putStderrCustom === "function" ? $rt_putStderrCustom : typeof console === "object" ? $rt_createOutputFunction(msg => console.error(msg)) : () => {
},
$rt_packageData = null,
$rt_packages = data => {
    let i = 0;
    let packages = new Array(data.length);
    for (let j = 0;j < data.length;++j) {
        let prefixIndex = data[i++];
        let prefix = prefixIndex >= 0 ? packages[prefixIndex] : "";
        packages[j] = prefix + data[i++] + ".";
    }
    $rt_packageData = packages;
},
$rt_metadata = data => {
    let packages = $rt_packageData;
    let i = 0;
    while (i < data.length) {
        let cls = data[i++];
        cls.$meta = {  };
        let m = cls.$meta;
        let className = data[i++];
        m.name = className !== 0 ? className : null;
        if (m.name !== null) {
            let packageIndex = data[i++];
            if (packageIndex >= 0) {
                m.name = packages[packageIndex] + m.name;
            }
        }
        m.binaryName = "L" + m.name + ";";
        let superclass = data[i++];
        m.superclass = superclass !== 0 ? superclass : null;
        m.supertypes = data[i++];
        if (m.superclass) {
            m.supertypes.push(m.superclass);
            cls.prototype = Object.create(m.superclass.prototype);
        } else {
            cls.prototype = {  };
        }
        let flags = data[i++];
        m.enum = (flags & 8) !== 0;
        m.flags = flags;
        m.primitive = false;
        m.item = null;
        cls.prototype.constructor = cls;
        cls.classObject = null;
        m.accessLevel = data[i++];
        let innerClassInfo = data[i++];
        if (innerClassInfo === 0) {
            m.simpleName = null;
            m.declaringClass = null;
            m.enclosingClass = null;
        } else {
            let enclosingClass = innerClassInfo[0];
            m.enclosingClass = enclosingClass !== 0 ? enclosingClass : null;
            let declaringClass = innerClassInfo[1];
            m.declaringClass = declaringClass !== 0 ? declaringClass : null;
            let simpleName = innerClassInfo[2];
            m.simpleName = simpleName !== 0 ? simpleName : null;
        }
        let clinit = data[i++];
        cls.$clinit = clinit !== 0 ? clinit : function() {
        };
        let virtualMethods = data[i++];
        if (virtualMethods !== 0) {
            for (let j = 0;j < virtualMethods.length;j += 2) {
                let name = virtualMethods[j];
                let func = virtualMethods[j + 1];
                if (typeof name === 'string') {
                    name = [name];
                }
                for (let k = 0;k < name.length;++k) {
                    cls.prototype[name[k]] = func;
                }
            }
        }
        cls.$array = null;
    }
};
function TeaVMThread(runner) {
    this.status = 3;
    this.stack = [];
    this.suspendCallback = null;
    this.runner = runner;
    this.attribute = null;
    this.completeCallback = null;
}
TeaVMThread.prototype.push = function() {
    for (let i = 0;i < arguments.length;++i) {
        this.stack.push(arguments[i]);
    }
    return this;
};
TeaVMThread.prototype.s = TeaVMThread.prototype.push;
TeaVMThread.prototype.pop = function() {
    return this.stack.pop();
};
TeaVMThread.prototype.l = TeaVMThread.prototype.pop;
TeaVMThread.prototype.isResuming = function() {
    return this.status === 2;
};
TeaVMThread.prototype.isSuspending = function() {
    return this.status === 1;
};
TeaVMThread.prototype.suspend = function(callback) {
    this.suspendCallback = callback;
    this.status = 1;
};
TeaVMThread.prototype.start = function(callback) {
    if (this.status !== 3) {
        throw new Error("Thread already started");
    }
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 0;
    this.completeCallback = callback ? callback : result => {
        if (result instanceof Error) {
            throw result;
        }
    };
    this.run();
};
TeaVMThread.prototype.resume = function() {
    if ($rt_currentNativeThread !== null) {
        throw new Error("Another thread is running");
    }
    this.status = 2;
    this.run();
};
TeaVMThread.prototype.run = function() {
    $rt_currentNativeThread = this;
    let result;
    try {
        result = this.runner();
    } catch (e){
        result = e;
    } finally {
        $rt_currentNativeThread = null;
    }
    if (this.suspendCallback !== null) {
        let self = this;
        let callback = this.suspendCallback;
        this.suspendCallback = null;
        callback(() => self.resume());
    } else if (this.status === 0) {
        this.completeCallback(result);
    }
};
let $rt_suspending = () => {
    let thread = $rt_nativeThread();
    return thread != null && thread.isSuspending();
},
$rt_resuming = () => {
    let thread = $rt_nativeThread();
    return thread != null && thread.isResuming();
},
$rt_requireNativeThread = () => {
    let nativeThread = $rt_nativeThread();
    if (nativeThread === null) {
        throw new Error("Suspension point reached from non-threading context " + "(perhaps, from native JS method). See https://teavm.org/docs/runtime/coroutines.html " + "('Interaction with JavaScript' section)");
    }
    return nativeThread;
},
$rt_startThread = (runner, callback) => (new TeaVMThread(runner)).start(callback),
$rt_currentNativeThread = null,
$rt_nativeThread = () => $rt_currentNativeThread,
$rt_invalidPointer = () => {
    throw new Error("Invalid recorded state");
};
function jl_Object() {
    this.$monitor = null;
    this.$id$ = 0;
}
let jl_Object_monitorEnterSync = $o => {
    let var$2;
    if (jl_Thread_currentThread() === null)
        return;
    if ($o.$monitor === null)
        jl_Object_createMonitor($o);
    if ($o.$monitor.$owner === null)
        $o.$monitor.$owner = jl_Thread_currentThread();
    else if ($o.$monitor.$owner !== jl_Thread_currentThread())
        $rt_throw(jl_IllegalStateException__init_($rt_s(0)));
    var$2 = $o.$monitor;
    var$2.$count = var$2.$count + 1 | 0;
},
jl_Object_monitorExitSync = $o => {
    let var$2, var$3;
    if (jl_Thread_currentThread() === null)
        return;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === jl_Thread_currentThread()) {
        var$2 = $o.$monitor;
        var$3 = var$2.$count - 1 | 0;
        var$2.$count = var$3;
        if (!var$3)
            $o.$monitor.$owner = null;
        jl_Object_isEmptyMonitor($o);
        return;
    }
    $rt_throw(jl_IllegalMonitorStateException__init_());
},
jl_Object_monitorEnter0 = $o => {
    let var$2, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        let $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$2 = $thread.pop();$o = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        var$2 = 1;
        $ptr = 1;
    case 1:
        jl_Object_monitorEnter($o, var$2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($o, var$2, $ptr);
},
jl_Object_monitorEnter = ($o, $count) => {
    let var$3, $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        let $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$3 = $thread.pop();$count = $thread.pop();$o = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        if ($o.$monitor === null)
            jl_Object_createMonitor($o);
        if ($o.$monitor.$owner === null)
            $o.$monitor.$owner = jl_Thread_currentThread();
        if ($o.$monitor.$owner === jl_Thread_currentThread()) {
            var$3 = $o.$monitor;
            var$3.$count = var$3.$count + $count | 0;
            return;
        }
        $ptr = 1;
    case 1:
        jl_Object_monitorEnterWait($o, $count);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push($o, $count, var$3, $ptr);
},
jl_Object_createMonitor = $o => {
    $o.$monitor = jl_Object$Monitor__init_0();
},
jl_Object_monitorEnterWait = (var$1, var$2) => {
    let $ptr, $tmp;
    $ptr = 0;
    if ($rt_resuming()) {
        let $thread = $rt_nativeThread();
        $ptr = $thread.pop();var$2 = $thread.pop();var$1 = $thread.pop();
    }
    main: while (true) { switch ($ptr) {
    case 0:
        $ptr = 1;
    case 1:
        jl_Object_monitorEnterWait$_asyncCall_$(var$1, var$2);
        if ($rt_suspending()) {
            break main;
        }
        return;
    default: $rt_invalidPointer();
    }}
    $rt_nativeThread().push(var$1, var$2, $ptr);
},
jl_Object_monitorEnterWait0 = ($o, $count, $callback) => {
    let $thread_0, var$5, $monitor;
    $thread_0 = jl_Thread_currentThread();
    if ($o.$monitor === null) {
        jl_Object_createMonitor($o);
        jl_Thread_setCurrentThread($thread_0);
        var$5 = $o.$monitor;
        var$5.$count = var$5.$count + $count | 0;
        $callback.$complete(null);
        return;
    }
    if ($o.$monitor.$owner === null) {
        $o.$monitor.$owner = $thread_0;
        jl_Thread_setCurrentThread($thread_0);
        var$5 = $o.$monitor;
        var$5.$count = var$5.$count + $count | 0;
        $callback.$complete(null);
        return;
    }
    $monitor = $o.$monitor;
    if ($monitor.$enteringThreads === null)
        $monitor.$enteringThreads = otp_Platform_createQueue();
    otp_PlatformQueue_add$static($monitor.$enteringThreads, jl_Object$monitorEnterWait$lambda$_6_0__init_0($thread_0, $o, $count, $callback));
},
jl_Object_monitorExit0 = $o => {
    jl_Object_monitorExit($o, 1);
},
jl_Object_monitorExit = ($o, $count) => {
    let $monitor;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === jl_Thread_currentThread()) {
        $monitor = $o.$monitor;
        $monitor.$count = $monitor.$count - $count | 0;
        if ($monitor.$count > 0)
            return;
        $monitor.$owner = null;
        if ($monitor.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static($monitor.$enteringThreads))
            otp_Platform_postpone(jl_Object$monitorExit$lambda$_8_0__init_0($o));
        else
            jl_Object_isEmptyMonitor($o);
        return;
    }
    $rt_throw(jl_IllegalMonitorStateException__init_());
},
jl_Object_waitForOtherThreads = $o => {
    let $monitor, $enteringThreads, $r;
    if (!jl_Object_isEmptyMonitor($o) && $o.$monitor.$owner === null) {
        $monitor = $o.$monitor;
        if ($monitor.$enteringThreads !== null && !otp_PlatformQueue_isEmpty$static($monitor.$enteringThreads)) {
            $enteringThreads = $monitor.$enteringThreads;
            $r = otp_PlatformQueue_remove$static($enteringThreads);
            $monitor.$enteringThreads = null;
            $r.$run();
        }
        return;
    }
},
jl_Object_isEmptyMonitor = $this => {
    let $monitor, var$2;
    $monitor = $this.$monitor;
    if ($monitor === null)
        return 1;
    a: {
        b: {
            if ($monitor.$owner === null) {
                if ($monitor.$enteringThreads !== null) {
                    var$2 = $monitor.$enteringThreads;
                    if (!otp_PlatformQueue_isEmpty$static(var$2))
                        break b;
                }
                if ($monitor.$notifyListeners === null)
                    break a;
                var$2 = $monitor.$notifyListeners;
                if (otp_PlatformQueue_isEmpty$static(var$2))
                    break a;
            }
        }
        return 0;
    }
    jl_Object_deleteMonitor($this);
    return 1;
},
jl_Object_deleteMonitor = $this => {
    $this.$monitor = null;
},
jl_Object__init_ = $this => {
    return;
},
jl_Object__init_0 = () => {
    let var_0 = new jl_Object();
    jl_Object__init_(var_0);
    return var_0;
},
jl_Object_getClass = $this => {
    return jl_Class_getClass($this.constructor);
},
jl_Object_hashCode = $this => {
    return jl_Object_identity($this);
},
jl_Object_equals = ($this, $other) => {
    return $this !== $other ? 0 : 1;
},
jl_Object_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = jl_Class_getName(jl_Object_getClass($this));
    var$2 = jl_Integer_toHexString(jl_Object_identity($this));
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(var$3, var$1), 64), var$2);
    return jl_StringBuilder_toString(var$3);
},
jl_Object_identity = $this => {
    let $platformThis;
    $platformThis = $this;
    if (!$platformThis.$id$)
        $platformThis.$id$ = $rt_nextId();
    return $this.$id$;
},
jl_Object_clone = $this => {
    let var$1, $result, var$3;
    if (!$rt_isInstance($this, jl_Cloneable)) {
        var$1 = $this;
        if (var$1.constructor.$meta.item === null)
            $rt_throw(jl_CloneNotSupportedException__init_0());
    }
    $result = otp_Platform_clone($this);
    var$1 = $result;
    var$3 = $rt_nextId();
    var$1.$id$ = var$3;
    return $result;
},
jl_Object_lambda$monitorExit$2 = $o => {
    jl_Object_waitForOtherThreads($o);
},
jl_Object_lambda$monitorEnterWait$0 = ($thread_0, $o, $count, $callback) => {
    let var$5;
    jl_Thread_setCurrentThread($thread_0);
    $o.$monitor.$owner = $thread_0;
    var$5 = $o.$monitor;
    var$5.$count = var$5.$count + $count | 0;
    $callback.$complete(null);
},
jl_Object_monitorEnterWait$_asyncCall_$ = (var$1, var$2) => {
    let thread = $rt_requireNativeThread();
    let javaThread = $rt_getThread();
    if (thread.isResuming()) {
        thread.status = 0;
        let result = thread.attribute;
        if (result instanceof Error) {
            throw result;
        }
        return result;
    }
    let callback = function() {
    };
    callback.$complete = val => {
        thread.attribute = val;
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback.$error0 = e => {
        thread.attribute = $rt_exception(e);
        $rt_setThread(javaThread);
        thread.resume();
    };
    callback = otpp_AsyncCallbackWrapper_create(callback);
    thread.suspend(() => {
        try {
            jl_Object_monitorEnterWait0(var$1, var$2, callback);
            ;
        } catch ($e){
            callback.$error0($e);
        }
    });
    return null;
};
function jur_AbstractCharClass$LazyCharClass() {
    let a = this; jl_Object.call(a);
    a.$posValue = null;
    a.$negValue = null;
}
let jur_AbstractCharClass$LazyCharClass__init_ = $this => {
    jl_Object__init_($this);
},
jur_AbstractCharClass$LazyCharClass_getValue = ($this, $negative) => {
    if (!$negative && $this.$posValue === null)
        $this.$posValue = $this.$computeValue();
    else if ($negative && $this.$negValue === null)
        $this.$negValue = ($this.$computeValue()).$setNegative(1);
    if ($negative)
        return $this.$negValue;
    return $this.$posValue;
},
jur_AbstractCharClass$LazyBlank = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyBlank__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyBlank__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyBlank();
    jur_AbstractCharClass$LazyBlank__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyBlank_computeValue = $this => {
    return ((jur_CharClass__init_()).$add(32)).$add(9);
},
jur_AbstractCharClass$LazyCntrl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyCntrl__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyCntrl__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyCntrl();
    jur_AbstractCharClass$LazyCntrl__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyCntrl_computeValue = $this => {
    return ((jur_CharClass__init_()).$add0(0, 31)).$add(127);
};
function cbgss_Actor() {
    let a = this; jl_Object.call(a);
    a.$stage0 = null;
    a.$parent0 = null;
    a.$listeners = null;
    a.$captureListeners = null;
    a.$actions = null;
    a.$name2 = null;
    a.$touchable = null;
    a.$visible = 0;
    a.$debug3 = 0;
    a.$x1 = 0.0;
    a.$y1 = 0.0;
    a.$width3 = 0.0;
    a.$height3 = 0.0;
    a.$originX = 0.0;
    a.$originY = 0.0;
    a.$scaleX0 = 0.0;
    a.$scaleY = 0.0;
    a.$rotation0 = 0.0;
    a.$color8 = null;
}
let cbgss_Actor__init_ = $this => {
    jl_Object__init_($this);
    $this.$listeners = cbgu_DelayedRemovalArray__init_0(0);
    $this.$captureListeners = cbgu_DelayedRemovalArray__init_0(0);
    $this.$actions = cbgu_Array__init_0(0);
    cbgss_Touchable_$callClinit();
    $this.$touchable = cbgss_Touchable_enabled;
    $this.$visible = 1;
    $this.$scaleX0 = 1.0;
    $this.$scaleY = 1.0;
    $this.$color8 = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
},
cbgss_Actor__init_0 = () => {
    let var_0 = new cbgss_Actor();
    cbgss_Actor__init_(var_0);
    return var_0;
},
cbgss_Actor_act = ($this, $delta) => {
    let $actions, $i, $action, $current, $actionIndex, $ex, $context, $$je;
    $actions = $this.$actions;
    if (!$actions.$size0)
        return;
    if ($this.$stage0 !== null && $this.$stage0.$getActionsRequestRendering())
        cbg_Gdx_graphics.$requestRendering();
    a: {
        try {
            $i = 0;
            while ($i < $actions.$size0) {
                $action = $actions.$get($i);
                if ($action.$act($delta) && $i < $actions.$size0) {
                    $current = $actions.$get($i);
                    $actionIndex = $current === $action ? $i : $actions.$indexOf($action, 1);
                    if ($actionIndex != (-1)) {
                        $actions.$removeIndex($actionIndex);
                        $action.$setActor(null);
                        $i = $i + (-1) | 0;
                    }
                }
                $i = $i + 1 | 0;
            }
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $ex = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return;
    }
    $context = $this.$toString();
    $rt_throw(jl_RuntimeException__init_3((((jl_StringBuilder__init_()).$append1($rt_s(1))).$append1($context.$substring(0, jl_Math_min($context.$length(), 128)))).$toString(), $ex));
},
cbgss_Actor_fire = ($this, $event) => {
    let $ascendants, $parent, $ascendantsArray, $i, var$6, $currentTarget, var$8, $n, $$je;
    if ($event.$getStage() === null)
        $event.$setStage($this.$getStage());
    $event.$setTarget($this);
    $ascendants = cbgu_Pools_obtain(cbgss_Actor$fire$lambda$_3_0__init_0());
    $parent = $this.$parent0;
    while ($parent !== null) {
        $ascendants.$add1($parent);
        $parent = $parent.$parent0;
    }
    a: {
        b: {
            try {
                $ascendantsArray = $ascendants.$items;
                $i = $ascendants.$size0 - 1 | 0;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$6 = $$je;
                break b;

            }
            c: {
                try {
                    while (true) {
                        if ($i < 0)
                            break c;
                        $currentTarget = $ascendantsArray.data[$i];
                        $currentTarget.$notify($event, 1);
                        if ($event.$isStopped())
                            break;
                        $i = $i + (-1) | 0;
                    }
                    var$8 = $event.$isCancelled();
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$6 = $$je;
                    break b;

                }
                $ascendants.$clear();
                cbgu_Pools_free($ascendants);
                return var$8;
            }
            d: {
                try {
                    $this.$notify($event, 1);
                    if (!$event.$isStopped())
                        break d;
                    var$8 = $event.$isCancelled();
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$6 = $$je;
                    break b;

                }
                $ascendants.$clear();
                cbgu_Pools_free($ascendants);
                return var$8;
            }
            e: {
                try {
                    $this.$notify($event, 0);
                    if ($event.$getBubbles())
                        break e;
                    var$8 = $event.$isCancelled();
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$6 = $$je;
                    break b;

                }
                $ascendants.$clear();
                cbgu_Pools_free($ascendants);
                return var$8;
            }
            f: {
                try {
                    if (!$event.$isStopped())
                        break f;
                    var$8 = $event.$isCancelled();
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$6 = $$je;
                    break b;

                }
                $ascendants.$clear();
                cbgu_Pools_free($ascendants);
                return var$8;
            }
            try {
                $i = 0;
                $n = $ascendants.$size0;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$6 = $$je;
                break b;

            }
            g: {
                try {
                    while ($i < $n) {
                        $ascendantsArray.data[$i].$notify($event, 0);
                        if ($event.$isStopped())
                            break g;
                        $i = $i + 1 | 0;
                    }
                    var$8 = $event.$isCancelled();
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$6 = $$je;
                    break b;

                }
                $ascendants.$clear();
                cbgu_Pools_free($ascendants);
                return var$8;
            }
            try {
                var$8 = $event.$isCancelled();
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$6 = $$je;

            }
        }
        $ascendants.$clear();
        cbgu_Pools_free($ascendants);
        $rt_throw(var$6);
    }
    $ascendants.$clear();
    cbgu_Pools_free($ascendants);
    return var$8;
},
cbgss_Actor_notify = ($this, $event, $capture) => {
    let $listeners, $i, $n, $ex, $context, $$je;
    if ($event.$getTarget() === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(2)));
    $listeners = !$capture ? $this.$listeners : $this.$captureListeners;
    if (!$listeners.$size0)
        return $event.$isCancelled();
    $event.$setListenerActor($this);
    $event.$setCapture($capture);
    if ($event.$getStage() === null)
        $event.$setStage($this.$stage0);
    a: {
        try {
            $listeners.$begin();
            $i = 0;
            $n = $listeners.$size0;
            while ($i < $n) {
                if (($listeners.$get($i)).$handle($event))
                    $event.$handle0();
                $i = $i + 1 | 0;
            }
            $listeners.$end();
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $ex = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return $event.$isCancelled();
    }
    $context = $this.$toString();
    $rt_throw(jl_RuntimeException__init_3((((jl_StringBuilder__init_()).$append1($rt_s(1))).$append1($context.$substring(0, jl_Math_min($context.$length(), 128)))).$toString(), $ex));
},
cbgss_Actor_hit = ($this, $x, $y, $touchable) => {
    let var$4;
    if ($touchable) {
        var$4 = $this.$touchable;
        cbgss_Touchable_$callClinit();
        if (var$4 !== cbgss_Touchable_enabled)
            return null;
    }
    if (!$this.$isVisible())
        return null;
    if (!($x >= 0.0 && $x < $this.$width3 && $y >= 0.0 && $y < $this.$height3))
        $this = null;
    return $this;
},
cbgss_Actor_remove = $this => {
    if ($this.$parent0 === null)
        return 0;
    return $this.$parent0.$removeActor($this, 1);
},
cbgss_Actor_clearActions = $this => {
    let $i;
    $i = $this.$actions.$size0 - 1 | 0;
    while ($i >= 0) {
        ($this.$actions.$get($i)).$setActor(null);
        $i = $i + (-1) | 0;
    }
    $this.$actions.$clear();
},
cbgss_Actor_clearListeners = $this => {
    $this.$listeners.$clear();
    $this.$captureListeners.$clear();
},
cbgss_Actor_clear = $this => {
    $this.$clearActions();
    $this.$clearListeners();
},
cbgss_Actor_getStage = $this => {
    return $this.$stage0;
},
cbgss_Actor_setStage = ($this, $stage) => {
    $this.$stage0 = $stage;
},
cbgss_Actor_getParent = $this => {
    return $this.$parent0;
},
cbgss_Actor_setParent = ($this, $parent) => {
    $this.$parent0 = $parent;
},
cbgss_Actor_getTouchable = $this => {
    return $this.$touchable;
},
cbgss_Actor_setTouchable = ($this, $touchable) => {
    $this.$touchable = $touchable;
},
cbgss_Actor_isVisible = $this => {
    return $this.$visible;
},
cbgss_Actor_getX = $this => {
    return $this.$x1;
},
cbgss_Actor_getY = $this => {
    return $this.$y1;
},
cbgss_Actor_getWidth = $this => {
    return $this.$width3;
},
cbgss_Actor_getHeight = $this => {
    return $this.$height3;
},
cbgss_Actor_setHeight = ($this, $height) => {
    if ($this.$height3 !== $height) {
        $this.$height3 = $height;
        $this.$sizeChanged();
    }
},
cbgss_Actor_positionChanged = $this => {
    return;
},
cbgss_Actor_setSize = ($this, $width, $height) => {
    if (!($this.$width3 === $width && $this.$height3 === $height)) {
        $this.$width3 = $width;
        $this.$height3 = $height;
        $this.$sizeChanged();
    }
},
cbgss_Actor_setBounds = ($this, $x, $y, $width, $height) => {
    if (!($this.$x1 === $x && $this.$y1 === $y)) {
        $this.$x1 = $x;
        $this.$y1 = $y;
        $this.$positionChanged();
    }
    if (!($this.$width3 === $width && $this.$height3 === $height)) {
        $this.$width3 = $width;
        $this.$height3 = $height;
        $this.$sizeChanged();
    }
},
cbgss_Actor_getOriginX = $this => {
    return $this.$originX;
},
cbgss_Actor_getOriginY = $this => {
    return $this.$originY;
},
cbgss_Actor_getScaleX = $this => {
    return $this.$scaleX0;
},
cbgss_Actor_getScaleY = $this => {
    return $this.$scaleY;
},
cbgss_Actor_getRotation = $this => {
    return $this.$rotation0;
},
cbgss_Actor_getColor = $this => {
    return $this.$color8;
},
cbgss_Actor_getName = $this => {
    return $this.$name2;
},
cbgss_Actor_clipBegin = ($this, $x, $y, $width, $height) => {
    let $stage, $tableBounds, $scissorBounds;
    if ($width > 0.0 && $height > 0.0) {
        $stage = $this.$stage0;
        if ($stage === null)
            return 0;
        cbgm_Rectangle_$callClinit();
        $tableBounds = cbgm_Rectangle_tmp;
        $tableBounds.$x2 = $x;
        $tableBounds.$y2 = $y;
        $tableBounds.$width1 = $width;
        $tableBounds.$height1 = $height;
        $scissorBounds = cbgu_Pools_obtain(cbgss_Actor$clipBegin$lambda$_93_0__init_0());
        $stage.$calculateScissors($tableBounds, $scissorBounds);
        if (cbgssu_ScissorStack_pushScissors($scissorBounds))
            return 1;
        cbgu_Pools_free($scissorBounds);
        return 0;
    }
    return 0;
},
cbgss_Actor_clipEnd = $this => {
    cbgu_Pools_free(cbgssu_ScissorStack_popScissors());
},
cbgss_Actor_parentToLocalCoordinates = ($this, $parentCoords) => {
    let $rotation, $scaleX, $scaleY, $childX, $childY, var$7, $cos, $sin, $originX, $originY, $tox, $toy;
    $rotation = $this.$rotation0;
    $scaleX = $this.$scaleX0;
    $scaleY = $this.$scaleY;
    $childX = $this.$x1;
    $childY = $this.$y1;
    if ($rotation !== 0.0) {
        var$7 = $rotation * 0.01745329238474369;
        $cos = jl_Math_cos(var$7);
        $sin = jl_Math_sin(var$7);
        $originX = $this.$originX;
        $originY = $this.$originY;
        $tox = $parentCoords.$x0 - $childX - $originX;
        $toy = $parentCoords.$y0 - $childY - $originY;
        $parentCoords.$x0 = ($tox * $cos + $toy * $sin) / $scaleX + $originX;
        $parentCoords.$y0 = ($tox *  -$sin + $toy * $cos) / $scaleY + $originY;
    } else if ($scaleX === 1.0 && $scaleY === 1.0) {
        $parentCoords.$x0 = $parentCoords.$x0 - $childX;
        $parentCoords.$y0 = $parentCoords.$y0 - $childY;
    } else {
        $originX = $this.$originX;
        $originY = $this.$originY;
        $parentCoords.$x0 = ($parentCoords.$x0 - $childX - $originX) / $scaleX + $originX;
        $parentCoords.$y0 = ($parentCoords.$y0 - $childY - $originY) / $scaleY + $originY;
    }
    return $parentCoords;
},
cbgss_Actor_drawDebug = ($this, $shapes) => {
    $this.$drawDebugBounds($shapes);
},
cbgss_Actor_drawDebugBounds = ($this, $shapes) => {
    if (!$this.$debug3)
        return;
    cbggg_ShapeRenderer$ShapeType_$callClinit();
    $shapes.$set(cbggg_ShapeRenderer$ShapeType_Line);
    if ($this.$stage0 !== null)
        $shapes.$setColor($this.$stage0.$getDebugColor());
    $shapes.$rect($this.$x1, $this.$y1, $this.$originX, $this.$originY, $this.$width3, $this.$height3, $this.$scaleX0, $this.$scaleY, $this.$rotation0);
},
cbgss_Actor_setDebug = ($this, $enabled) => {
    $this.$debug3 = $enabled;
    if ($enabled)
        cbgss_Stage_debug = 1;
},
cbgss_Actor_getDebug = $this => {
    return $this.$debug3;
},
cbgss_Actor_toString = $this => {
    let $name, $dotIndex;
    $name = $this.$name2;
    if ($name === null) {
        $name = jl_Class_getName(jl_Object_getClass($this));
        $dotIndex = $name.$lastIndexOf(46);
        if ($dotIndex != (-1))
            $name = $name.$substring0($dotIndex + 1 | 0);
    }
    return $name;
},
cbgssu_Cullable = $rt_classWithoutFields(0);
function cbgss_Group() {
    let a = this; cbgss_Actor.call(a);
    a.$children0 = null;
    a.$worldTransform0 = null;
    a.$computedTransform = null;
    a.$oldTransform = null;
    a.$transform = 0;
    a.$cullingArea = null;
}
let cbgss_Group_tmp = null,
cbgss_Group_$callClinit = () => {
    cbgss_Group_$callClinit = $rt_eraseClinit(cbgss_Group);
    cbgss_Group__clinit_();
},
cbgss_Group__init_ = $this => {
    cbgss_Group_$callClinit();
    cbgss_Actor__init_($this);
    $this.$children0 = cbgu_SnapshotArray__init_1(1, 4, cbgss_Group$_init_$lambda$_0_0__init_0());
    $this.$worldTransform0 = cbgm_Affine2__init_0();
    $this.$computedTransform = cbgm_Matrix4__init_();
    $this.$oldTransform = cbgm_Matrix4__init_();
    $this.$transform = 1;
},
cbgss_Group__init_0 = () => {
    let var_0 = new cbgss_Group();
    cbgss_Group__init_(var_0);
    return var_0;
},
cbgss_Group_act = ($this, $delta) => {
    let $actors, $i, $n;
    cbgss_Actor_act($this, $delta);
    $actors = $this.$children0.$begin0();
    $i = 0;
    $n = $this.$children0.$size0;
    while ($i < $n) {
        $actors.data[$i].$act0($delta);
        $i = $i + 1 | 0;
    }
    $this.$children0.$end();
},
cbgss_Group_draw = ($this, $batch, $parentAlpha) => {
    if ($this.$transform)
        $this.$applyTransform($batch, $this.$computeTransform());
    $this.$drawChildren($batch, $parentAlpha);
    if ($this.$transform)
        $this.$resetTransform($batch);
},
cbgss_Group_drawChildren = ($this, $batch, $parentAlpha) => {
    let var$3, $children, $actors, $cullingArea, $i, $n, $child, $offsetX, $offsetY, $cx, $cy, $cullLeft, $cullRight, $cullBottom, $cullTop;
    var$3 = $parentAlpha * $this.$color8.$a;
    $children = $this.$children0;
    $actors = $children.$begin0();
    $cullingArea = $this.$cullingArea;
    if ($cullingArea === null) {
        if ($this.$transform) {
            $i = 0;
            $n = $children.$size0;
            while ($i < $n) {
                $child = $actors.data[$i];
                if ($child.$isVisible())
                    $child.$draw($batch, var$3);
                $i = $i + 1 | 0;
            }
        } else {
            $offsetX = $this.$x1;
            $offsetY = $this.$y1;
            $this.$x1 = 0.0;
            $this.$y1 = 0.0;
            $i = 0;
            $n = $children.$size0;
            while ($i < $n) {
                $child = $actors.data[$i];
                if ($child.$isVisible()) {
                    $cx = $child.$x1;
                    $cy = $child.$y1;
                    $child.$x1 = $cx + $offsetX;
                    $child.$y1 = $cy + $offsetY;
                    $child.$draw($batch, var$3);
                    $child.$x1 = $cx;
                    $child.$y1 = $cy;
                }
                $i = $i + 1 | 0;
            }
            $this.$x1 = $offsetX;
            $this.$y1 = $offsetY;
        }
    } else {
        $cullLeft = $cullingArea.$x2;
        $cullRight = $cullLeft + $cullingArea.$width1;
        $cullBottom = $cullingArea.$y2;
        $cullTop = $cullBottom + $cullingArea.$height1;
        if ($this.$transform) {
            $i = 0;
            $n = $children.$size0;
            while ($i < $n) {
                $child = $actors.data[$i];
                if ($child.$isVisible()) {
                    $cx = $child.$x1;
                    $cy = $child.$y1;
                    if ($cx <= $cullRight && $cy <= $cullTop && $cx + $child.$width3 >= $cullLeft && $cy + $child.$height3 >= $cullBottom)
                        $child.$draw($batch, var$3);
                }
                $i = $i + 1 | 0;
            }
        } else {
            $offsetX = $this.$x1;
            $offsetY = $this.$y1;
            $this.$x1 = 0.0;
            $this.$y1 = 0.0;
            $i = 0;
            $n = $children.$size0;
            while ($i < $n) {
                $child = $actors.data[$i];
                if ($child.$isVisible()) {
                    $cx = $child.$x1;
                    $cy = $child.$y1;
                    if ($cx <= $cullRight && $cy <= $cullTop && $cx + $child.$width3 >= $cullLeft && $cy + $child.$height3 >= $cullBottom) {
                        $child.$x1 = $cx + $offsetX;
                        $child.$y1 = $cy + $offsetY;
                        $child.$draw($batch, var$3);
                        $child.$x1 = $cx;
                        $child.$y1 = $cy;
                    }
                }
                $i = $i + 1 | 0;
            }
            $this.$x1 = $offsetX;
            $this.$y1 = $offsetY;
        }
    }
    $children.$end();
},
cbgss_Group_drawDebug = ($this, $shapes) => {
    $this.$drawDebugBounds($shapes);
    if ($this.$transform)
        $this.$applyTransform0($shapes, $this.$computeTransform());
    $this.$drawDebugChildren($shapes);
    if ($this.$transform)
        $this.$resetTransform0($shapes);
},
cbgss_Group_drawDebugChildren = ($this, $shapes) => {
    let $children, $actors, $i, $n, $child, $offsetX, $offsetY, $cx, $cy;
    $children = $this.$children0;
    $actors = $children.$begin0();
    if ($this.$transform) {
        $i = 0;
        $n = $children.$size0;
        while ($i < $n) {
            $child = $actors.data[$i];
            if ($child.$isVisible() && !(!$child.$getDebug() && !($child instanceof cbgss_Group)))
                $child.$drawDebug($shapes);
            $i = $i + 1 | 0;
        }
        $shapes.$flush();
    } else {
        $offsetX = $this.$x1;
        $offsetY = $this.$y1;
        $this.$x1 = 0.0;
        $this.$y1 = 0.0;
        $i = 0;
        $n = $children.$size0;
        while ($i < $n) {
            $child = $actors.data[$i];
            if ($child.$isVisible() && !(!$child.$getDebug() && !($child instanceof cbgss_Group))) {
                $cx = $child.$x1;
                $cy = $child.$y1;
                $child.$x1 = $cx + $offsetX;
                $child.$y1 = $cy + $offsetY;
                $child.$drawDebug($shapes);
                $child.$x1 = $cx;
                $child.$y1 = $cy;
            }
            $i = $i + 1 | 0;
        }
        $this.$x1 = $offsetX;
        $this.$y1 = $offsetY;
    }
    $children.$end();
},
cbgss_Group_computeTransform = $this => {
    let $worldTransform, $originX, $originY, $parentGroup;
    $worldTransform = $this.$worldTransform0;
    $originX = $this.$originX;
    $originY = $this.$originY;
    cbgm_Affine2_setToTrnRotScl($worldTransform, $this.$x1 + $originX, $this.$y1 + $originY, $this.$rotation0, $this.$scaleX0, $this.$scaleY);
    if (!($originX === 0.0 && $originY === 0.0))
        cbgm_Affine2_translate($worldTransform,  -$originX,  -$originY);
    $parentGroup = $this.$parent0;
    a: {
        while (true) {
            if ($parentGroup === null)
                break a;
            if ($parentGroup.$transform)
                break;
            $parentGroup = $parentGroup.$parent0;
        }
    }
    if ($parentGroup !== null)
        cbgm_Affine2_preMul($worldTransform, $parentGroup.$worldTransform0);
    $this.$computedTransform.$set0($worldTransform);
    return $this.$computedTransform;
},
cbgss_Group_applyTransform0 = ($this, $batch, $transform) => {
    $this.$oldTransform.$set1($batch.$getTransformMatrix());
    $batch.$setTransformMatrix($transform);
},
cbgss_Group_resetTransform = ($this, $batch) => {
    $batch.$setTransformMatrix($this.$oldTransform);
},
cbgss_Group_applyTransform = ($this, $shapes, $transform) => {
    $this.$oldTransform.$set1($shapes.$getTransformMatrix());
    $shapes.$setTransformMatrix($transform);
    $shapes.$flush();
},
cbgss_Group_resetTransform0 = ($this, $shapes) => {
    $shapes.$setTransformMatrix($this.$oldTransform);
},
cbgss_Group_hit = ($this, $x, $y, $touchable) => {
    let var$4, $point, $childrenArray, $i, $child, $hit;
    if ($touchable) {
        var$4 = $this.$getTouchable();
        cbgss_Touchable_$callClinit();
        if (var$4 === cbgss_Touchable_disabled)
            return null;
    }
    if (!$this.$isVisible())
        return null;
    $point = cbgss_Group_tmp;
    $childrenArray = $this.$children0.$items;
    $i = $this.$children0.$size0 - 1 | 0;
    while (true) {
        if ($i < 0)
            return cbgss_Actor_hit($this, $x, $y, $touchable);
        $child = $childrenArray.data[$i];
        $child.$parentToLocalCoordinates($point.$set2($x, $y));
        $hit = $child.$hit($point.$x0, $point.$y0, $touchable);
        if ($hit !== null)
            break;
        $i = $i + (-1) | 0;
    }
    return $hit;
},
cbgss_Group_childrenChanged = $this => {
    return;
},
cbgss_Group_addActor = ($this, $actor) => {
    if ($actor.$parent0 !== null) {
        if ($actor.$parent0 === $this)
            return;
        $actor.$parent0.$removeActor($actor, 0);
    }
    $this.$children0.$add1($actor);
    $actor.$setParent($this);
    $actor.$setStage($this.$getStage());
    $this.$childrenChanged();
},
cbgss_Group_removeActor = ($this, $actor, $unfocus) => {
    let $index;
    $index = $this.$children0.$indexOf($actor, 1);
    if ($index == (-1))
        return 0;
    $this.$removeActorAt($index, $unfocus);
    return 1;
},
cbgss_Group_removeActorAt = ($this, $index, $unfocus) => {
    let $actor, $stage;
    $actor = $this.$children0.$removeIndex($index);
    $stage = $this.$getStage();
    if ($stage !== null) {
        if ($unfocus)
            $stage.$unfocus($actor);
        $stage.$actorRemoved($actor);
    }
    $actor.$setParent(null);
    $actor.$setStage(null);
    $this.$childrenChanged();
    return $actor;
},
cbgss_Group_clearChildren = ($this, $unfocus) => {
    let $actors, $i, $n, $child, $stage;
    $actors = $this.$children0.$begin0();
    $i = 0;
    $n = $this.$children0.$size0;
    while ($i < $n) {
        $child = $actors.data[$i];
        if ($unfocus) {
            $stage = $this.$getStage();
            if ($stage !== null)
                $stage.$unfocus($child);
        }
        $child.$setStage(null);
        $child.$setParent(null);
        $i = $i + 1 | 0;
    }
    $this.$children0.$end();
    $this.$children0.$clear();
    $this.$childrenChanged();
},
cbgss_Group_clear = $this => {
    cbgss_Actor_clear($this);
    $this.$clearChildren(1);
},
cbgss_Group_setStage = ($this, $stage) => {
    let $childrenArray, $i, $n;
    cbgss_Actor_setStage($this, $stage);
    $childrenArray = $this.$children0.$items;
    $i = 0;
    $n = $this.$children0.$size0;
    while ($i < $n) {
        $childrenArray.data[$i].$setStage($stage);
        $i = $i + 1 | 0;
    }
},
cbgss_Group_getChildren = $this => {
    return $this.$children0;
},
cbgss_Group_setTransform = ($this, $transform) => {
    $this.$transform = $transform;
},
cbgss_Group_isTransform = $this => {
    return $this.$transform;
},
cbgss_Group_setDebug = ($this, $enabled, $recursively) => {
    let var$3, $child;
    a: {
        $this.$setDebug($enabled);
        if ($recursively) {
            var$3 = $this.$children0.$iterator();
            while (true) {
                if (!var$3.$hasNext())
                    break a;
                $child = var$3.$next();
                if (!($child instanceof cbgss_Group))
                    $child.$setDebug($enabled);
                else
                    $child.$setDebug0($enabled, $recursively);
            }
        }
    }
},
cbgss_Group_debugAll = $this => {
    $this.$setDebug0(1, 1);
    return $this;
},
cbgss_Group_toString = $this => {
    let $buffer;
    $buffer = jl_StringBuilder__init_0(128);
    $this.$toString0($buffer, 1);
    $buffer.$setLength($buffer.$length() - 1 | 0);
    return $buffer.$toString();
},
cbgss_Group_toString0 = ($this, $buffer, $indent) => {
    let $actors, $i, $n, $ii, $actor;
    $buffer.$append1(cbgss_Actor_toString($this));
    $buffer.$append0(10);
    $actors = $this.$children0.$begin0();
    $i = 0;
    $n = $this.$children0.$size0;
    while ($i < $n) {
        $ii = 0;
        while ($ii < $indent) {
            $buffer.$append1($rt_s(3));
            $ii = $ii + 1 | 0;
        }
        $actor = $actors.data[$i];
        if (!($actor instanceof cbgss_Group)) {
            $buffer.$append($actor);
            $buffer.$append0(10);
        } else
            $actor.$toString0($buffer, $indent + 1 | 0);
        $i = $i + 1 | 0;
    }
    $this.$children0.$end();
},
cbgss_Group_lambda$new$0 = $x$0 => {
    cbgss_Group_$callClinit();
    return $rt_createArray(cbgss_Actor, $x$0);
},
cbgss_Group__clinit_ = () => {
    cbgss_Group_tmp = cbgm_Vector2__init_();
},
cbgssu_Layout = $rt_classWithoutFields(0);
function cbgssu_WidgetGroup() {
    let a = this; cbgss_Group.call(a);
    a.$needsLayout = 0;
    a.$fillParent = 0;
    a.$layoutEnabled0 = 0;
}
let cbgssu_WidgetGroup__init_ = $this => {
    cbgss_Group__init_($this);
    $this.$needsLayout = 1;
    $this.$layoutEnabled0 = 1;
},
cbgssu_WidgetGroup__init_0 = () => {
    let var_0 = new cbgssu_WidgetGroup();
    cbgssu_WidgetGroup__init_(var_0);
    return var_0;
},
cbgssu_WidgetGroup_validate = $this => {
    let $parent, $stage, $i;
    if (!$this.$layoutEnabled0)
        return;
    $parent = $this.$getParent();
    if ($this.$fillParent && $parent !== null) {
        $stage = $this.$getStage();
        if ($stage !== null && $parent === $stage.$getRoot())
            $this.$setSize($stage.$getWidth(), $stage.$getHeight());
        else
            $this.$setSize($parent.$getWidth(), $parent.$getHeight());
    }
    if (!$this.$needsLayout)
        return;
    a: {
        $this.$needsLayout = 0;
        $this.$layout();
        if ($this.$needsLayout) {
            if ($parent instanceof cbgssu_WidgetGroup)
                return;
            $i = 0;
            while (true) {
                if ($i >= 5)
                    break a;
                $this.$needsLayout = 0;
                $this.$layout();
                if (!$this.$needsLayout)
                    break;
                $i = $i + 1 | 0;
            }
        }
    }
},
cbgssu_WidgetGroup_invalidate = $this => {
    $this.$needsLayout = 1;
},
cbgssu_WidgetGroup_invalidateHierarchy = $this => {
    let $parent;
    $this.$invalidate();
    $parent = $this.$getParent();
    if ($rt_isInstance($parent, cbgssu_Layout))
        $parent.$invalidateHierarchy();
},
cbgssu_WidgetGroup_childrenChanged = $this => {
    $this.$invalidateHierarchy();
},
cbgssu_WidgetGroup_sizeChanged = $this => {
    $this.$invalidate();
},
cbgssu_WidgetGroup_setFillParent = ($this, $fillParent) => {
    $this.$fillParent = $fillParent;
},
cbgssu_WidgetGroup_hit = ($this, $x, $y, $touchable) => {
    $this.$validate();
    return cbgss_Group_hit($this, $x, $y, $touchable);
},
cbgssu_WidgetGroup_draw = ($this, $batch, $parentAlpha) => {
    $this.$validate();
    cbgss_Group_draw($this, $batch, $parentAlpha);
};
function cbgssu_Table() {
    let a = this; cbgssu_WidgetGroup.call(a);
    a.$columns = 0;
    a.$rows = 0;
    a.$implicitEndRow = 0;
    a.$cells = null;
    a.$cellDefaults = null;
    a.$columnDefaults = null;
    a.$rowDefaults = null;
    a.$sizeInvalid = 0;
    a.$columnMinWidth = null;
    a.$rowMinHeight = null;
    a.$columnPrefWidth = null;
    a.$rowPrefHeight = null;
    a.$tableMinWidth = 0.0;
    a.$tableMinHeight = 0.0;
    a.$tablePrefWidth = 0.0;
    a.$tablePrefHeight = 0.0;
    a.$columnWidth = null;
    a.$rowHeight = null;
    a.$expandWidth = null;
    a.$expandHeight = null;
    a.$padTop0 = null;
    a.$padLeft0 = null;
    a.$padBottom1 = null;
    a.$padRight0 = null;
    a.$align2 = 0;
    a.$debug0 = null;
    a.$debugRects = null;
    a.$background = null;
    a.$clip = 0;
    a.$skin = null;
    a.$round2 = 0;
}
let cbgssu_Table_debugTableColor = null,
cbgssu_Table_debugCellColor = null,
cbgssu_Table_debugActorColor = null,
cbgssu_Table_cellPool = null,
cbgssu_Table_columnWeightedWidth = null,
cbgssu_Table_rowWeightedHeight = null,
cbgssu_Table_backgroundTop = null,
cbgssu_Table_backgroundLeft = null,
cbgssu_Table_backgroundBottom = null,
cbgssu_Table_backgroundRight = null,
cbgssu_Table_$callClinit = () => {
    cbgssu_Table_$callClinit = $rt_eraseClinit(cbgssu_Table);
    cbgssu_Table__clinit_();
},
cbgssu_Table__init_0 = $this => {
    cbgssu_Table_$callClinit();
    cbgssu_Table__init_($this, null);
},
cbgssu_Table__init_1 = () => {
    let var_0 = new cbgssu_Table();
    cbgssu_Table__init_0(var_0);
    return var_0;
},
cbgssu_Table__init_ = ($this, $skin) => {
    cbgssu_Table_$callClinit();
    cbgssu_WidgetGroup__init_($this);
    $this.$cells = cbgu_Array__init_0(4);
    $this.$columnDefaults = cbgu_Array__init_0(2);
    $this.$sizeInvalid = 1;
    $this.$padTop0 = cbgssu_Table_backgroundTop;
    $this.$padLeft0 = cbgssu_Table_backgroundLeft;
    $this.$padBottom1 = cbgssu_Table_backgroundBottom;
    $this.$padRight0 = cbgssu_Table_backgroundRight;
    $this.$align2 = 1;
    cbgssu_Table$Debug_$callClinit();
    $this.$debug0 = cbgssu_Table$Debug_none;
    $this.$round2 = 1;
    $this.$skin = $skin;
    $this.$cellDefaults = cbgssu_Table_obtainCell($this);
    $this.$setTransform(0);
    cbgss_Touchable_$callClinit();
    $this.$setTouchable(cbgss_Touchable_childrenOnly);
},
cbgssu_Table__init_2 = var_0 => {
    let var_1 = new cbgssu_Table();
    cbgssu_Table__init_(var_1, var_0);
    return var_1;
},
cbgssu_Table_obtainCell = $this => {
    let $cell;
    cbgssu_Table_$callClinit();
    $cell = cbgssu_Table_cellPool.$obtain0();
    $cell.$setTable($this);
    return $cell;
},
cbgssu_Table_draw = ($this, $batch, $parentAlpha) => {
    let $padLeft, $padBottom, var$5, var$6;
    $this.$validate();
    if (!$this.$isTransform()) {
        $this.$drawBackground($batch, $parentAlpha, $this.$getX(), $this.$getY());
        cbgssu_WidgetGroup_draw($this, $batch, $parentAlpha);
    } else {
        $this.$applyTransform($batch, $this.$computeTransform());
        $this.$drawBackground($batch, $parentAlpha, 0.0, 0.0);
        if (!$this.$clip)
            $this.$drawChildren($batch, $parentAlpha);
        else {
            $batch.$flush();
            $padLeft = $this.$padLeft0.$get0($this);
            $padBottom = $this.$padBottom1.$get0($this);
            var$5 = $this.$getWidth() - $padLeft - $this.$padRight0.$get0($this);
            var$6 = $this.$getHeight() - $padBottom - $this.$padTop0.$get0($this);
            if ($this.$clipBegin($padLeft, $padBottom, var$5, var$6)) {
                $this.$drawChildren($batch, $parentAlpha);
                $batch.$flush();
                $this.$clipEnd();
            }
        }
        $this.$resetTransform($batch);
    }
},
cbgssu_Table_drawBackground = ($this, $batch, $parentAlpha, $x, $y) => {
    let $color;
    if ($this.$background === null)
        return;
    $color = $this.$getColor();
    $batch.$setColor0($color.$r, $color.$g, $color.$b, $color.$a * $parentAlpha);
    $this.$background.$draw0($batch, $x, $y, $this.$getWidth(), $this.$getHeight());
},
cbgssu_Table_hit = ($this, $x, $y, $touchable) => {
    let var$4;
    a: {
        if ($this.$clip) {
            if ($touchable) {
                var$4 = $this.$getTouchable();
                cbgss_Touchable_$callClinit();
                if (var$4 === cbgss_Touchable_disabled)
                    return null;
            }
            if ($x < 0.0)
                break a;
            if ($x >= $this.$getWidth())
                break a;
            if ($y < 0.0)
                break a;
            if ($y >= $this.$getHeight())
                break a;
        }
        return cbgssu_WidgetGroup_hit($this, $x, $y, $touchable);
    }
    return null;
},
cbgssu_Table_invalidate = $this => {
    $this.$sizeInvalid = 1;
    cbgssu_WidgetGroup_invalidate($this);
},
cbgssu_Table_add = ($this, $actor) => {
    let $cell, $cellCount, $lastCell, $cells, $i, $other, $column, $nn;
    $cell = cbgssu_Table_obtainCell($this);
    $cell.$actor = $actor;
    if ($this.$implicitEndRow) {
        $this.$implicitEndRow = 0;
        $this.$rows = $this.$rows - 1 | 0;
        ($this.$cells.$peek()).$endRow0 = 0;
    }
    $cellCount = $this.$cells.$size0;
    if ($cellCount <= 0) {
        $cell.$column = 0;
        $cell.$row1 = 0;
    } else {
        $lastCell = $this.$cells.$peek();
        if ($lastCell.$endRow0) {
            $cell.$column = 0;
            $cell.$row1 = $lastCell.$row1 + 1 | 0;
        } else {
            $cell.$column = $lastCell.$column + $lastCell.$colspan.$intValue() | 0;
            $cell.$row1 = $lastCell.$row1;
        }
        a: {
            if ($cell.$row1 > 0) {
                $cells = $this.$cells.$items;
                $i = $cellCount - 1 | 0;
                b: while (true) {
                    if ($i < 0)
                        break a;
                    $other = $cells.data[$i];
                    $column = $other.$column;
                    $nn = $column + $other.$colspan.$intValue() | 0;
                    while ($column < $nn) {
                        if ($column == $cell.$column)
                            break b;
                        $column = $column + 1 | 0;
                    }
                    $i = $i + (-1) | 0;
                }
                $cell.$cellAboveIndex = $i;
            }
        }
    }
    $this.$cells.$add1($cell);
    $cell.$set3($this.$cellDefaults);
    if ($cell.$column < $this.$columnDefaults.$size0)
        $cell.$merge($this.$columnDefaults.$get($cell.$column));
    $cell.$merge($this.$rowDefaults);
    if ($actor !== null)
        $this.$addActor($actor);
    return $cell;
},
cbgssu_Table_removeActor = ($this, $actor, $unfocus) => {
    let $cell;
    if (!cbgss_Group_removeActor($this, $actor, $unfocus))
        return 0;
    $cell = $this.$getCell($actor);
    if ($cell !== null)
        $cell.$actor = null;
    return 1;
},
cbgssu_Table_removeActorAt = ($this, $index, $unfocus) => {
    let $actor, $cell;
    $actor = cbgss_Group_removeActorAt($this, $index, $unfocus);
    $cell = $this.$getCell($actor);
    if ($cell !== null)
        $cell.$actor = null;
    return $actor;
},
cbgssu_Table_clearChildren = ($this, $unfocus) => {
    let $cells, $i, $cell, $actor;
    $cells = $this.$cells.$items;
    $i = $this.$cells.$size0 - 1 | 0;
    while ($i >= 0) {
        $cell = $cells.data[$i];
        $actor = $cell.$actor;
        if ($actor !== null)
            $actor.$remove();
        $i = $i + (-1) | 0;
    }
    cbgssu_Table_$callClinit();
    cbgssu_Table_cellPool.$freeAll($this.$cells);
    $this.$cells.$clear();
    $this.$rows = 0;
    $this.$columns = 0;
    if ($this.$rowDefaults !== null)
        cbgssu_Table_cellPool.$free($this.$rowDefaults);
    $this.$rowDefaults = null;
    $this.$implicitEndRow = 0;
    cbgss_Group_clearChildren($this, $unfocus);
},
cbgssu_Table_row = $this => {
    if ($this.$cells.$size0 > 0) {
        if (!$this.$implicitEndRow) {
            if (($this.$cells.$peek()).$endRow0)
                return $this.$rowDefaults;
            cbgssu_Table_endRow($this);
        }
        $this.$invalidate();
    }
    $this.$implicitEndRow = 0;
    if ($this.$rowDefaults !== null) {
        cbgssu_Table_$callClinit();
        cbgssu_Table_cellPool.$free($this.$rowDefaults);
    }
    $this.$rowDefaults = cbgssu_Table_obtainCell($this);
    $this.$rowDefaults.$clear();
    return $this.$rowDefaults;
},
cbgssu_Table_endRow = $this => {
    let $cells, $rowColumns, $i, $cell;
    $cells = $this.$cells.$items;
    $rowColumns = 0;
    $i = $this.$cells.$size0 - 1 | 0;
    a: {
        while (true) {
            if ($i < 0)
                break a;
            $cell = $cells.data[$i];
            if ($cell.$endRow0)
                break;
            $rowColumns = $rowColumns + $cell.$colspan.$intValue() | 0;
            $i = $i + (-1) | 0;
        }
    }
    $this.$columns = jl_Math_max($this.$columns, $rowColumns);
    $this.$rows = $this.$rows + 1 | 0;
    ($this.$cells.$peek()).$endRow0 = 1;
},
cbgssu_Table_getCell = ($this, $actor) => {
    let $cells, $i, $n, $c;
    if ($actor === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(4)));
    $cells = $this.$cells.$items;
    $i = 0;
    $n = $this.$cells.$size0;
    while (true) {
        if ($i >= $n)
            return null;
        $c = $cells.data[$i];
        if ($c.$actor === $actor)
            break;
        $i = $i + 1 | 0;
    }
    return $c;
},
cbgssu_Table_align = ($this, $align) => {
    $this.$align2 = $align;
    return $this;
},
cbgssu_Table_setDebug = ($this, $enabled) => {
    let var$2;
    if (!$enabled) {
        cbgssu_Table$Debug_$callClinit();
        var$2 = cbgssu_Table$Debug_none;
    } else {
        cbgssu_Table$Debug_$callClinit();
        var$2 = cbgssu_Table$Debug_all;
    }
    $this.$debug(var$2);
},
cbgssu_Table_debugAll = $this => {
    cbgss_Group_debugAll($this);
    return $this;
},
cbgssu_Table_debug = ($this, $debug) => {
    cbgssu_Table$Debug_$callClinit();
    cbgss_Actor_setDebug($this, $debug === cbgssu_Table$Debug_none ? 0 : 1);
    if ($this.$debug0 !== $debug) {
        $this.$debug0 = $debug;
        if ($debug !== cbgssu_Table$Debug_none)
            $this.$invalidate();
        else
            cbgssu_Table_clearDebugRects($this);
    }
    return $this;
},
cbgssu_Table_ensureSize = ($this, $array, $size) => {
    if ($array !== null && $array.data.length >= $size) {
        ju_Arrays_fill5($array, 0, $size, 0.0);
        return $array;
    }
    return $rt_createFloatArray($size);
},
cbgssu_Table_computeSize = $this => {
    let $cells, $cellCount, $columns, $rows, var$5, var$6, var$7, var$8, var$9, var$10, $spaceRight, $i, var$13, $c, $column, $row, $colspan, $a, var$19, var$20, $above, $prefWidth, $prefHeight, $minWidth, $minHeight, $maxWidth, $maxHeight, $hpadding, $vpadding, $uniformMinWidth, $uniformMinHeight, $uniformPrefWidth, $uniformPrefHeight, $expandX, $nn, $ii, var$37, var$38, $spannedMinWidth, $totalExpandWidth, var$41, var$42, $extraMinWidth, $extraPrefWidth, $ratio;
    $this.$sizeInvalid = 0;
    $cells = $this.$cells.$items;
    $cellCount = $this.$cells.$size0;
    if ($cellCount > 0 && !$cells.data[$cellCount - 1 | 0].$endRow0) {
        cbgssu_Table_endRow($this);
        $this.$implicitEndRow = 1;
    }
    $columns = $this.$columns;
    $rows = $this.$rows;
    var$5 = cbgssu_Table_ensureSize($this, $this.$columnMinWidth, $columns);
    $this.$columnMinWidth = var$5;
    var$6 = cbgssu_Table_ensureSize($this, $this.$rowMinHeight, $rows);
    $this.$rowMinHeight = var$6;
    var$7 = cbgssu_Table_ensureSize($this, $this.$columnPrefWidth, $columns);
    $this.$columnPrefWidth = var$7;
    var$8 = cbgssu_Table_ensureSize($this, $this.$rowPrefHeight, $rows);
    $this.$rowPrefHeight = var$8;
    $this.$columnWidth = cbgssu_Table_ensureSize($this, $this.$columnWidth, $columns);
    $this.$rowHeight = cbgssu_Table_ensureSize($this, $this.$rowHeight, $rows);
    var$9 = cbgssu_Table_ensureSize($this, $this.$expandWidth, $columns);
    $this.$expandWidth = var$9;
    var$10 = cbgssu_Table_ensureSize($this, $this.$expandHeight, $rows);
    $this.$expandHeight = var$10;
    $spaceRight = 0.0;
    $i = 0;
    while ($i < $cellCount) {
        var$13 = $cells.data;
        $c = var$13[$i];
        $column = $c.$column;
        $row = $c.$row1;
        $colspan = $c.$colspan.$intValue();
        $a = $c.$actor;
        if ($c.$expandY.$intValue()) {
            var$19 = var$10.data;
            if (var$19[$row] === 0.0)
                var$19[$row] = $c.$expandY.$intValue();
        }
        var$20 = $rt_compare($colspan, 1);
        if (!var$20 && $c.$expandX.$intValue()) {
            var$19 = var$9.data;
            if (var$19[$column] === 0.0)
                var$19[$column] = $c.$expandX.$intValue();
        }
        $c.$computedPadLeft = $c.$padLeft.$get0($a) + (!$column ? 0.0 : jl_Math_max0(0.0, $c.$spaceLeft.$get0($a) - $spaceRight));
        $c.$computedPadTop = $c.$padTop.$get0($a);
        if ($c.$cellAboveIndex != (-1)) {
            $above = var$13[$c.$cellAboveIndex];
            $c.$computedPadTop = $c.$computedPadTop + jl_Math_max0(0.0, $c.$spaceTop.$get0($a) - $above.$spaceBottom.$get0($a));
        }
        $spaceRight = $c.$spaceRight.$get0($a);
        $c.$computedPadRight = $c.$padRight.$get0($a) + (($column + $colspan | 0) != $columns ? $spaceRight : 0.0);
        $c.$computedPadBottom = $c.$padBottom0.$get0($a) + ($row == ($rows - 1 | 0) ? 0.0 : $c.$spaceBottom.$get0($a));
        $prefWidth = $c.$prefWidth.$get0($a);
        $prefHeight = $c.$prefHeight.$get0($a);
        $minWidth = $c.$minWidth.$get0($a);
        $minHeight = $c.$minHeight.$get0($a);
        $maxWidth = $c.$maxWidth.$get0($a);
        $maxHeight = $c.$maxHeight.$get0($a);
        if ($prefWidth < $minWidth)
            $prefWidth = $minWidth;
        if ($prefHeight < $minHeight)
            $prefHeight = $minHeight;
        if ($maxWidth <= 0.0)
            $maxWidth = $prefWidth;
        else if ($prefWidth <= $maxWidth)
            $maxWidth = $prefWidth;
        if ($maxHeight <= 0.0)
            $maxHeight = $prefHeight;
        else if ($prefHeight <= $maxHeight)
            $maxHeight = $prefHeight;
        if ($this.$round2) {
            $minWidth = jl_Math_ceil($minWidth);
            $minHeight = jl_Math_ceil($minHeight);
            $maxWidth = jl_Math_ceil($maxWidth);
            $maxHeight = jl_Math_ceil($maxHeight);
        }
        if (!var$20) {
            var$13 = var$5.data;
            var$19 = var$7.data;
            $hpadding = $c.$computedPadLeft + $c.$computedPadRight;
            var$19[$column] = jl_Math_max0(var$19[$column], $maxWidth + $hpadding);
            var$13[$column] = jl_Math_max0(var$13[$column], $minWidth + $hpadding);
        }
        var$13 = var$6.data;
        var$19 = var$8.data;
        $vpadding = $c.$computedPadTop + $c.$computedPadBottom;
        var$19[$row] = jl_Math_max0(var$19[$row], $maxHeight + $vpadding);
        var$13[$row] = jl_Math_max0(var$13[$row], $minHeight + $vpadding);
        $i = $i + 1 | 0;
    }
    $uniformMinWidth = 0.0;
    $uniformMinHeight = 0.0;
    $uniformPrefWidth = 0.0;
    $uniformPrefHeight = 0.0;
    $i = 0;
    while ($i < $cellCount) {
        a: {
            $c = $cells.data[$i];
            $column = $c.$column;
            $expandX = $c.$expandX.$intValue();
            if ($expandX) {
                $nn = $column + $c.$colspan.$intValue() | 0;
                $ii = $column;
                b: {
                    while (true) {
                        if ($ii >= $nn)
                            break b;
                        if (var$9.data[$ii] !== 0.0)
                            break;
                        $ii = $ii + 1 | 0;
                    }
                    break a;
                }
                $ii = $column;
                while (true) {
                    if ($ii >= $nn)
                        break a;
                    var$9.data[$ii] = $expandX;
                    $ii = $ii + 1 | 0;
                }
            }
        }
        var$37 = $c.$uniformX;
        jl_Boolean_$callClinit();
        if (var$37 === jl_Boolean_TRUE && $c.$colspan.$intValue() == 1) {
            var$10 = var$7.data;
            var$19 = var$5.data;
            $hpadding = $c.$computedPadLeft + $c.$computedPadRight;
            $uniformMinWidth = jl_Math_max0($uniformMinWidth, var$19[$column] - $hpadding);
            $uniformPrefWidth = jl_Math_max0($uniformPrefWidth, var$10[$column] - $hpadding);
        }
        if ($c.$uniformY === jl_Boolean_TRUE) {
            var$10 = var$8.data;
            var$19 = var$6.data;
            $vpadding = $c.$computedPadTop + $c.$computedPadBottom;
            $uniformMinHeight = jl_Math_max0($uniformMinHeight, var$19[$c.$row1] - $vpadding);
            $uniformPrefHeight = jl_Math_max0($uniformPrefHeight, var$10[$c.$row1] - $vpadding);
        }
        $i = $i + 1 | 0;
    }
    c: {
        var$38 = $rt_compare($uniformPrefWidth, 0.0);
        if (!(var$38 <= 0 && $uniformPrefHeight <= 0.0)) {
            $i = 0;
            while (true) {
                if ($i >= $cellCount)
                    break c;
                $c = $cells.data[$i];
                if (var$38 > 0) {
                    var$37 = $c.$uniformX;
                    jl_Boolean_$callClinit();
                    if (var$37 === jl_Boolean_TRUE && $c.$colspan.$intValue() == 1) {
                        var$10 = var$7.data;
                        var$19 = var$5.data;
                        $hpadding = $c.$computedPadLeft + $c.$computedPadRight;
                        var$19[$c.$column] = $uniformMinWidth + $hpadding;
                        var$10[$c.$column] = $uniformPrefWidth + $hpadding;
                    }
                }
                if ($uniformPrefHeight > 0.0) {
                    var$37 = $c.$uniformY;
                    jl_Boolean_$callClinit();
                    if (var$37 === jl_Boolean_TRUE) {
                        var$10 = var$8.data;
                        var$19 = var$6.data;
                        $vpadding = $c.$computedPadTop + $c.$computedPadBottom;
                        var$19[$c.$row1] = $uniformMinHeight + $vpadding;
                        var$10[$c.$row1] = $uniformPrefHeight + $vpadding;
                    }
                }
                $i = $i + 1 | 0;
            }
        }
    }
    $i = 0;
    while ($i < $cellCount) {
        d: {
            $c = $cells.data[$i];
            $colspan = $c.$colspan.$intValue();
            if ($colspan != 1) {
                $column = $c.$column;
                $a = $c.$actor;
                $minWidth = $c.$minWidth.$get0($a);
                $prefWidth = $c.$prefWidth.$get0($a);
                $maxWidth = $c.$maxWidth.$get0($a);
                if ($prefWidth < $minWidth)
                    $prefWidth = $minWidth;
                if ($maxWidth <= 0.0)
                    $maxWidth = $prefWidth;
                else if ($prefWidth <= $maxWidth)
                    $maxWidth = $prefWidth;
                if ($this.$round2) {
                    $minWidth = jl_Math_ceil($minWidth);
                    $maxWidth = jl_Math_ceil($maxWidth);
                }
                $spannedMinWidth =  -($c.$computedPadLeft + $c.$computedPadRight);
                $totalExpandWidth = 0.0;
                $nn = $column + $colspan | 0;
                var$41 = $spannedMinWidth;
                var$42 = $column;
                while (var$42 < $nn) {
                    var$13 = var$9.data;
                    var$10 = var$7.data;
                    var$41 = var$41 + var$5.data[var$42];
                    $spannedMinWidth = $spannedMinWidth + var$10[var$42];
                    $totalExpandWidth = $totalExpandWidth + var$13[var$42];
                    var$42 = var$42 + 1 | 0;
                }
                $extraMinWidth = jl_Math_max0(0.0, $minWidth - var$41);
                $extraPrefWidth = jl_Math_max0(0.0, $maxWidth - $spannedMinWidth);
                while (true) {
                    if ($column >= $nn)
                        break d;
                    $ratio = $totalExpandWidth !== 0.0 ? var$9.data[$column] / $totalExpandWidth : 1.0 / $colspan;
                    var$10 = var$7.data;
                    var$19 = var$5.data;
                    var$19[$column] = var$19[$column] + $extraMinWidth * $ratio;
                    var$10[$column] = var$10[$column] + $extraPrefWidth * $ratio;
                    $column = $column + 1 | 0;
                }
            }
        }
        $i = $i + 1 | 0;
    }
    $hpadding = $this.$padLeft0.$get0($this) + $this.$padRight0.$get0($this);
    $vpadding = $this.$padTop0.$get0($this) + $this.$padBottom1.$get0($this);
    $this.$tableMinWidth = $hpadding;
    $this.$tablePrefWidth = $hpadding;
    $i = 0;
    while ($i < $columns) {
        var$10 = var$7.data;
        var$19 = var$5.data;
        $this.$tableMinWidth = $this.$tableMinWidth + var$19[$i];
        $this.$tablePrefWidth = $this.$tablePrefWidth + var$10[$i];
        $i = $i + 1 | 0;
    }
    $this.$tableMinHeight = $vpadding;
    $this.$tablePrefHeight = $vpadding;
    $i = 0;
    while ($i < $rows) {
        var$10 = var$8.data;
        var$19 = var$6.data;
        $this.$tableMinHeight = $this.$tableMinHeight + var$19[$i];
        $this.$tablePrefHeight = $this.$tablePrefHeight + jl_Math_max0(var$19[$i], var$10[$i]);
        $i = $i + 1 | 0;
    }
    $this.$tablePrefWidth = jl_Math_max0($this.$tableMinWidth, $this.$tablePrefWidth);
    $this.$tablePrefHeight = jl_Math_max0($this.$tableMinHeight, $this.$tablePrefHeight);
},
cbgssu_Table_layout = $this => {
    let $layoutWidth, $layoutHeight, $columns, $rows, $columnWidth, $rowHeight, $padLeft, $hpadding, $padTop, $vpadding, $totalGrowWidth, $columnWeightedWidth, $extraWidth, $columnMinWidth, $columnPrefWidth, $i, var$17, var$18, $growWidth, $growRatio, $totalGrowHeight, $rowWeightedHeight, $extraHeight, $rowMinHeight, $rowPrefHeight, $growHeight, $cells, $cellCount, $c, $column, $row, $a, $spannedWeightedWidth, $colspan, $nn, var$36, $weightedHeight, $prefWidth, $prefHeight, $minWidth, $minHeight, $maxWidth,
    $maxHeight, var$44, $expandWidth, $expandHeight, $totalExpand, $extra, $used, $lastIndex, $amount, var$52, var$53, var$54, $align, var$56, $spannedCellWidth, var$58, var$59, $fillX, $fillY, var$62, $childrenArray, $children, $n, $child, var$67;
    if ($this.$sizeInvalid)
        cbgssu_Table_computeSize($this);
    $layoutWidth = $this.$getWidth();
    $layoutHeight = $this.$getHeight();
    $columns = $this.$columns;
    $rows = $this.$rows;
    $columnWidth = $this.$columnWidth;
    $rowHeight = $this.$rowHeight;
    $padLeft = $this.$padLeft0.$get0($this);
    $hpadding = $padLeft + $this.$padRight0.$get0($this);
    $padTop = $this.$padTop0.$get0($this);
    $vpadding = $padTop + $this.$padBottom1.$get0($this);
    $totalGrowWidth = $this.$tablePrefWidth - $this.$tableMinWidth;
    if ($totalGrowWidth === 0.0)
        $columnWeightedWidth = $this.$columnMinWidth;
    else {
        $extraWidth = jl_Math_min0($totalGrowWidth, jl_Math_max0(0.0, $layoutWidth - $this.$tableMinWidth));
        $columnWeightedWidth = cbgssu_Table_ensureSize($this, cbgssu_Table_columnWeightedWidth, $columns);
        cbgssu_Table_columnWeightedWidth = $columnWeightedWidth;
        $columnMinWidth = $this.$columnMinWidth;
        $columnPrefWidth = $this.$columnPrefWidth;
        $i = 0;
        while ($i < $columns) {
            var$17 = $columnWeightedWidth.data;
            var$18 = $columnMinWidth.data;
            $growWidth = $columnPrefWidth.data[$i] - var$18[$i];
            $growRatio = $growWidth / $totalGrowWidth;
            var$17[$i] = var$18[$i] + $extraWidth * $growRatio;
            $i = $i + 1 | 0;
        }
    }
    $totalGrowHeight = $this.$tablePrefHeight - $this.$tableMinHeight;
    if ($totalGrowHeight === 0.0)
        $rowWeightedHeight = $this.$rowMinHeight;
    else {
        $rowWeightedHeight = cbgssu_Table_ensureSize($this, cbgssu_Table_rowWeightedHeight, $rows);
        cbgssu_Table_rowWeightedHeight = $rowWeightedHeight;
        $extraHeight = jl_Math_min0($totalGrowHeight, jl_Math_max0(0.0, $layoutHeight - $this.$tableMinHeight));
        $rowMinHeight = $this.$rowMinHeight;
        $rowPrefHeight = $this.$rowPrefHeight;
        $i = 0;
        while ($i < $rows) {
            var$17 = $rowWeightedHeight.data;
            var$18 = $rowMinHeight.data;
            $growHeight = $rowPrefHeight.data[$i] - var$18[$i];
            $growRatio = $growHeight / $totalGrowHeight;
            var$17[$i] = var$18[$i] + $extraHeight * $growRatio;
            $i = $i + 1 | 0;
        }
    }
    $cells = $this.$cells.$items;
    $cellCount = $this.$cells.$size0;
    $i = 0;
    while ($i < $cellCount) {
        $c = $cells.data[$i];
        $column = $c.$column;
        $row = $c.$row1;
        $a = $c.$actor;
        $spannedWeightedWidth = 0.0;
        $colspan = $c.$colspan.$intValue();
        $nn = $column + $colspan | 0;
        var$36 = $column;
        while (var$36 < $nn) {
            $spannedWeightedWidth = $spannedWeightedWidth + $columnWeightedWidth.data[var$36];
            var$36 = var$36 + 1 | 0;
        }
        $weightedHeight = $rowWeightedHeight.data[$row];
        $prefWidth = $c.$prefWidth.$get0($a);
        $prefHeight = $c.$prefHeight.$get0($a);
        $minWidth = $c.$minWidth.$get0($a);
        $minHeight = $c.$minHeight.$get0($a);
        $maxWidth = $c.$maxWidth.$get0($a);
        $maxHeight = $c.$maxHeight.$get0($a);
        if ($prefWidth >= $minWidth)
            $minWidth = $prefWidth;
        if ($prefHeight >= $minHeight)
            $minHeight = $prefHeight;
        if ($maxWidth <= 0.0)
            $maxWidth = $minWidth;
        else if ($minWidth <= $maxWidth)
            $maxWidth = $minWidth;
        if ($maxHeight <= 0.0)
            $maxHeight = $minHeight;
        else if ($minHeight <= $maxHeight)
            $maxHeight = $minHeight;
        $c.$actorWidth = jl_Math_min0($spannedWeightedWidth - $c.$computedPadLeft - $c.$computedPadRight, $maxWidth);
        $c.$actorHeight = jl_Math_min0($weightedHeight - $c.$computedPadTop - $c.$computedPadBottom, $maxHeight);
        if ($colspan == 1) {
            var$44 = $columnWidth.data;
            var$44[$column] = jl_Math_max0(var$44[$column], $spannedWeightedWidth);
        }
        var$44 = $rowHeight.data;
        var$44[$row] = jl_Math_max0(var$44[$row], $weightedHeight);
        $i = $i + 1 | 0;
    }
    $expandWidth = $this.$expandWidth;
    $expandHeight = $this.$expandHeight;
    $totalExpand = 0.0;
    $i = 0;
    while ($i < $columns) {
        $totalExpand = $totalExpand + $expandWidth.data[$i];
        $i = $i + 1 | 0;
    }
    if ($totalExpand > 0.0) {
        $extra = $layoutWidth - $hpadding;
        $i = 0;
        while ($i < $columns) {
            $extra = $extra - $columnWidth.data[$i];
            $i = $i + 1 | 0;
        }
        if ($extra > 0.0) {
            $used = 0.0;
            $lastIndex = 0;
            $i = 0;
            while ($i < $columns) {
                var$44 = $expandWidth.data;
                if (var$44[$i] !== 0.0) {
                    var$18 = $columnWidth.data;
                    $amount = $extra * var$44[$i] / $totalExpand;
                    var$18[$i] = var$18[$i] + $amount;
                    $used = $used + $amount;
                    $lastIndex = $i;
                }
                $i = $i + 1 | 0;
            }
            var$44 = $columnWidth.data;
            var$44[$lastIndex] = var$44[$lastIndex] + $extra - $used;
        }
    }
    var$52 = 0.0;
    $i = 0;
    while ($i < $rows) {
        var$52 = var$52 + $expandHeight.data[$i];
        $i = $i + 1 | 0;
    }
    if (var$52 > 0.0) {
        $extra = $layoutHeight - $vpadding;
        $i = 0;
        while ($i < $rows) {
            $extra = $extra - $rowHeight.data[$i];
            $i = $i + 1 | 0;
        }
        if ($extra > 0.0) {
            $used = 0.0;
            $lastIndex = 0;
            $i = 0;
            while ($i < $rows) {
                var$44 = $expandHeight.data;
                if (var$44[$i] !== 0.0) {
                    var$18 = $rowHeight.data;
                    $amount = $extra * var$44[$i] / var$52;
                    var$18[$i] = var$18[$i] + $amount;
                    $used = $used + $amount;
                    $lastIndex = $i;
                }
                $i = $i + 1 | 0;
            }
            var$44 = $rowHeight.data;
            var$44[$lastIndex] = var$44[$lastIndex] + $extra - $used;
        }
    }
    $i = 0;
    while ($i < $cellCount) {
        a: {
            $c = $cells.data[$i];
            $colspan = $c.$colspan.$intValue();
            if ($colspan != 1) {
                $extraWidth = 0.0;
                $column = $c.$column;
                $nn = $column + $colspan | 0;
                while ($column < $nn) {
                    var$18 = $columnWidth.data;
                    $extraWidth = $extraWidth + $columnWeightedWidth.data[$column] - var$18[$column];
                    $column = $column + 1 | 0;
                }
                var$52 = $extraWidth - jl_Math_max0(0.0, $c.$computedPadLeft + $c.$computedPadRight);
                var$52 = var$52 / $colspan;
                if (var$52 > 0.0) {
                    $column = $c.$column;
                    $nn = $column + $colspan | 0;
                    while (true) {
                        if ($column >= $nn)
                            break a;
                        var$44 = $columnWidth.data;
                        var$44[$column] = var$44[$column] + var$52;
                        $column = $column + 1 | 0;
                    }
                }
            }
        }
        $i = $i + 1 | 0;
    }
    $i = 0;
    var$53 = $hpadding;
    while ($i < $columns) {
        var$53 = var$53 + $columnWidth.data[$i];
        $i = $i + 1 | 0;
    }
    $i = 0;
    var$54 = $vpadding;
    while ($i < $rows) {
        var$54 = var$54 + $rowHeight.data[$i];
        $i = $i + 1 | 0;
    }
    $align = $this.$align2;
    if ($align & 16)
        $padLeft = $padLeft + $layoutWidth - var$53;
    else if (!($align & 8))
        $padLeft = $padLeft + ($layoutWidth - var$53) / 2.0;
    if ($align & 4)
        $padTop = $padTop + $layoutHeight - var$54;
    else if (!($align & 2))
        $padTop = $padTop + ($layoutHeight - var$54) / 2.0;
    $i = 0;
    var$52 = $padLeft;
    var$56 = $padTop;
    while ($i < $cellCount) {
        $c = $cells.data[$i];
        $spannedCellWidth = 0.0;
        $column = $c.$column;
        $nn = $column + $c.$colspan.$intValue() | 0;
        while ($column < $nn) {
            $spannedCellWidth = $spannedCellWidth + $columnWidth.data[$column];
            $column = $column + 1 | 0;
        }
        var$58 = $spannedCellWidth - ($c.$computedPadLeft + $c.$computedPadRight);
        var$59 = var$52 + $c.$computedPadLeft;
        $fillX = $c.$fillX.$floatValue();
        $fillY = $c.$fillY.$floatValue();
        if ($fillX > 0.0) {
            $c.$actorWidth = jl_Math_max0(var$58 * $fillX, $c.$minWidth.$get0($c.$actor));
            $maxWidth = $c.$maxWidth.$get0($c.$actor);
            if ($maxWidth > 0.0)
                $c.$actorWidth = jl_Math_min0($c.$actorWidth, $maxWidth);
        }
        if ($fillY > 0.0) {
            $c.$actorHeight = jl_Math_max0($rowHeight.data[$c.$row1] * $fillY - $c.$computedPadTop - $c.$computedPadBottom, $c.$minHeight.$get0($c.$actor));
            $maxHeight = $c.$maxHeight.$get0($c.$actor);
            if ($maxHeight > 0.0)
                $c.$actorHeight = jl_Math_min0($c.$actorHeight, $maxHeight);
        }
        var$62 = $c.$align0.$intValue();
        if (var$62 & 8)
            $c.$actorX = var$59;
        else if (var$62 & 16)
            $c.$actorX = var$59 + var$58 - $c.$actorWidth;
        else
            $c.$actorX = var$59 + (var$58 - $c.$actorWidth) / 2.0;
        if (var$62 & 2)
            $c.$actorY = $c.$computedPadTop;
        else if (var$62 & 4)
            $c.$actorY = $rowHeight.data[$c.$row1] - $c.$actorHeight - $c.$computedPadBottom;
        else
            $c.$actorY = ($rowHeight.data[$c.$row1] - $c.$actorHeight + $c.$computedPadTop - $c.$computedPadBottom) / 2.0;
        $c.$actorY = $layoutHeight - var$56 - $c.$actorY - $c.$actorHeight;
        if ($this.$round2) {
            $c.$actorWidth = jl_Math_ceil($c.$actorWidth);
            $c.$actorHeight = jl_Math_ceil($c.$actorHeight);
            $c.$actorX = jl_Math_floor($c.$actorX);
            $c.$actorY = jl_Math_floor($c.$actorY);
        }
        if ($c.$actor !== null)
            $c.$actor.$setBounds($c.$actorX, $c.$actorY, $c.$actorWidth, $c.$actorHeight);
        if (!$c.$endRow0)
            var$52 = var$59 + var$58 + $c.$computedPadRight;
        else {
            var$56 = var$56 + $rowHeight.data[$c.$row1];
            var$52 = $padLeft;
        }
        $i = $i + 1 | 0;
    }
    $childrenArray = $this.$getChildren();
    $children = $childrenArray.$items;
    $i = 0;
    $n = $childrenArray.$size0;
    while ($i < $n) {
        $child = $children.data[$i];
        if ($rt_isInstance($child, cbgssu_Layout))
            $child.$validate();
        $i = $i + 1 | 0;
    }
    var$67 = $this.$debug0;
    cbgssu_Table$Debug_$callClinit();
    if (var$67 !== cbgssu_Table$Debug_none)
        cbgssu_Table_addDebugRects($this, $padLeft, $padTop, var$53 - $hpadding, var$54 - $vpadding);
},
cbgssu_Table_addDebugRects = ($this, $currentX, $currentY, $width, $height) => {
    let var$5, $i, $n, var$8, $c, $spannedCellWidth, $column, $nn, var$13, var$14, $h, $y;
    cbgssu_Table_clearDebugRects($this);
    var$5 = $this.$debug0;
    cbgssu_Table$Debug_$callClinit();
    if (!(var$5 !== cbgssu_Table$Debug_table && $this.$debug0 !== cbgssu_Table$Debug_all)) {
        cbgssu_Table_addDebugRect($this, 0.0, 0.0, $this.$getWidth(), $this.$getHeight(), cbgssu_Table_debugTableColor);
        cbgssu_Table_addDebugRect($this, $currentX, $this.$getHeight() - $currentY, $width,  -$height, cbgssu_Table_debugTableColor);
    }
    $i = 0;
    $n = $this.$cells.$size0;
    var$8 = $currentX;
    while ($i < $n) {
        $c = $this.$cells.$get($i);
        if (!($this.$debug0 !== cbgssu_Table$Debug_actor && $this.$debug0 !== cbgssu_Table$Debug_all))
            cbgssu_Table_addDebugRect($this, $c.$actorX, $c.$actorY, $c.$actorWidth, $c.$actorHeight, cbgssu_Table_debugActorColor);
        $spannedCellWidth = 0.0;
        $column = $c.$column;
        $nn = $column + $c.$colspan.$intValue() | 0;
        while ($column < $nn) {
            $spannedCellWidth = $spannedCellWidth + $this.$columnWidth.data[$column];
            $column = $column + 1 | 0;
        }
        var$13 = $spannedCellWidth - ($c.$computedPadLeft + $c.$computedPadRight);
        var$14 = var$8 + $c.$computedPadLeft;
        if (!($this.$debug0 !== cbgssu_Table$Debug_cell && $this.$debug0 !== cbgssu_Table$Debug_all)) {
            $h = $this.$rowHeight.data[$c.$row1] - $c.$computedPadTop - $c.$computedPadBottom;
            $y = $currentY + $c.$computedPadTop;
            cbgssu_Table_addDebugRect($this, var$14, $this.$getHeight() - $y, var$13,  -$h, cbgssu_Table_debugCellColor);
        }
        if (!$c.$endRow0)
            var$8 = var$14 + var$13 + $c.$computedPadRight;
        else {
            $currentY = $currentY + $this.$rowHeight.data[$c.$row1];
            var$8 = $currentX;
        }
        $i = $i + 1 | 0;
    }
},
cbgssu_Table_clearDebugRects = $this => {
    if ($this.$debugRects === null)
        $this.$debugRects = cbgu_Array__init_();
    cbgssu_Table$DebugRect_$callClinit();
    cbgssu_Table$DebugRect_pool.$freeAll($this.$debugRects);
    $this.$debugRects.$clear();
},
cbgssu_Table_addDebugRect = ($this, $x, $y, $w, $h, $color) => {
    let $rect;
    cbgssu_Table$DebugRect_$callClinit();
    $rect = cbgssu_Table$DebugRect_pool.$obtain0();
    $rect.$color11 = $color;
    $rect.$set4($x, $y, $w, $h);
    $this.$debugRects.$add1($rect);
},
cbgssu_Table_drawDebug = ($this, $shapes) => {
    let $x, $y, $width, $height;
    if (!$this.$isTransform()) {
        cbgssu_Table_drawDebugRects($this, $shapes);
        cbgss_Group_drawDebug($this, $shapes);
    } else {
        $this.$applyTransform0($shapes, $this.$computeTransform());
        cbgssu_Table_drawDebugRects($this, $shapes);
        if (!$this.$clip)
            $this.$drawDebugChildren($shapes);
        else {
            $shapes.$flush();
            $x = 0.0;
            $y = 0.0;
            $width = $this.$getWidth();
            $height = $this.$getHeight();
            if ($this.$background !== null) {
                $x = $this.$padLeft0.$get0($this);
                $y = $this.$padBottom1.$get0($this);
                $width = $width - ($x + $this.$padRight0.$get0($this));
                $height = $height - ($y + $this.$padTop0.$get0($this));
            }
            if ($this.$clipBegin($x, $y, $width, $height)) {
                $this.$drawDebugChildren($shapes);
                $this.$clipEnd();
            }
        }
        $this.$resetTransform0($shapes);
    }
},
cbgssu_Table_drawDebugBounds = ($this, $shapes) => {
    return;
},
cbgssu_Table_drawDebugRects = ($this, $shapes) => {
    let $x, $y, $i, $n, $debugRect;
    if ($this.$debugRects !== null && $this.$getDebug()) {
        cbggg_ShapeRenderer$ShapeType_$callClinit();
        $shapes.$set(cbggg_ShapeRenderer$ShapeType_Line);
        if ($this.$getStage() !== null)
            $shapes.$setColor(($this.$getStage()).$getDebugColor());
        $x = 0.0;
        $y = 0.0;
        if (!$this.$isTransform()) {
            $x = $this.$getX();
            $y = $this.$getY();
        }
        $i = 0;
        $n = $this.$debugRects.$size0;
        while ($i < $n) {
            $debugRect = $this.$debugRects.$get($i);
            $shapes.$setColor($debugRect.$color11);
            $shapes.$rect0($x + $debugRect.$x2, $y + $debugRect.$y2, $debugRect.$width1, $debugRect.$height1);
            $i = $i + 1 | 0;
        }
        return;
    }
},
cbgssu_Table_debugAll0 = $this => {
    return $this.$debugAll0();
},
cbgssu_Table__clinit_ = () => {
    cbgssu_Table_debugTableColor = cbgg_Color__init_0(0.0, 0.0, 1.0, 1.0);
    cbgssu_Table_debugCellColor = cbgg_Color__init_0(1.0, 0.0, 0.0, 1.0);
    cbgssu_Table_debugActorColor = cbgg_Color__init_0(0.0, 1.0, 0.0, 1.0);
    cbgssu_Table_cellPool = cbgssu_Table$1__init_0();
    cbgssu_Table_backgroundTop = cbgssu_Table$2__init_0();
    cbgssu_Table_backgroundLeft = cbgssu_Table$3__init_0();
    cbgssu_Table_backgroundBottom = cbgssu_Table$4__init_0();
    cbgssu_Table_backgroundRight = cbgssu_Table$5__init_0();
},
cbgm_Interpolation = $rt_classWithoutFields(),
cbgm_Interpolation_linear = null,
cbgm_Interpolation_smooth = null,
cbgm_Interpolation_smooth2 = null,
cbgm_Interpolation_smoother = null,
cbgm_Interpolation_fade = null,
cbgm_Interpolation_pow2 = null,
cbgm_Interpolation_pow2In = null;
let cbgm_Interpolation_slowFast = null,
cbgm_Interpolation_pow2Out = null,
cbgm_Interpolation_fastSlow = null,
cbgm_Interpolation_pow2InInverse = null,
cbgm_Interpolation_pow2OutInverse = null,
cbgm_Interpolation_pow3 = null,
cbgm_Interpolation_pow3In = null,
cbgm_Interpolation_pow3Out = null,
cbgm_Interpolation_pow3InInverse = null,
cbgm_Interpolation_pow3OutInverse = null,
cbgm_Interpolation_pow4 = null,
cbgm_Interpolation_pow4In = null,
cbgm_Interpolation_pow4Out = null,
cbgm_Interpolation_pow5 = null,
cbgm_Interpolation_pow5In = null,
cbgm_Interpolation_pow5Out = null,
cbgm_Interpolation_sine = null,
cbgm_Interpolation_sineIn = null,
cbgm_Interpolation_sineOut = null,
cbgm_Interpolation_exp10 = null,
cbgm_Interpolation_exp10In = null,
cbgm_Interpolation_exp10Out = null,
cbgm_Interpolation_exp5 = null,
cbgm_Interpolation_exp5In = null,
cbgm_Interpolation_exp5Out = null,
cbgm_Interpolation_circle = null,
cbgm_Interpolation_circleIn = null,
cbgm_Interpolation_circleOut = null,
cbgm_Interpolation_elastic = null,
cbgm_Interpolation_elasticIn = null,
cbgm_Interpolation_elasticOut = null,
cbgm_Interpolation_swing = null,
cbgm_Interpolation_swingIn = null,
cbgm_Interpolation_swingOut = null,
cbgm_Interpolation_bounce = null,
cbgm_Interpolation_bounceIn = null,
cbgm_Interpolation_bounceOut = null,
cbgm_Interpolation_$callClinit = () => {
    cbgm_Interpolation_$callClinit = $rt_eraseClinit(cbgm_Interpolation);
    cbgm_Interpolation__clinit_();
},
cbgm_Interpolation__init_ = $this => {
    cbgm_Interpolation_$callClinit();
    jl_Object__init_($this);
},
cbgm_Interpolation_apply = ($this, $start, $end, $a) => {
    return $start + ($end - $start) * $this.$apply($a);
},
cbgm_Interpolation__clinit_ = () => {
    cbgm_Interpolation_linear = cbgm_Interpolation$1__init_0();
    cbgm_Interpolation_smooth = cbgm_Interpolation$2__init_0();
    cbgm_Interpolation_smooth2 = cbgm_Interpolation$3__init_0();
    cbgm_Interpolation_smoother = cbgm_Interpolation$4__init_0();
    cbgm_Interpolation_fade = cbgm_Interpolation_smoother;
    cbgm_Interpolation_pow2 = cbgm_Interpolation$Pow__init_(2);
    cbgm_Interpolation_pow2In = cbgm_Interpolation$PowIn__init_(2);
    cbgm_Interpolation_slowFast = cbgm_Interpolation_pow2In;
    cbgm_Interpolation_pow2Out = cbgm_Interpolation$PowOut__init_(2);
    cbgm_Interpolation_fastSlow = cbgm_Interpolation_pow2Out;
    cbgm_Interpolation_pow2InInverse = cbgm_Interpolation$5__init_0();
    cbgm_Interpolation_pow2OutInverse = cbgm_Interpolation$6__init_0();
    cbgm_Interpolation_pow3 = cbgm_Interpolation$Pow__init_(3);
    cbgm_Interpolation_pow3In = cbgm_Interpolation$PowIn__init_(3);
    cbgm_Interpolation_pow3Out = cbgm_Interpolation$PowOut__init_(3);
    cbgm_Interpolation_pow3InInverse = cbgm_Interpolation$7__init_0();
    cbgm_Interpolation_pow3OutInverse = cbgm_Interpolation$8__init_0();
    cbgm_Interpolation_pow4 = cbgm_Interpolation$Pow__init_(4);
    cbgm_Interpolation_pow4In = cbgm_Interpolation$PowIn__init_(4);
    cbgm_Interpolation_pow4Out = cbgm_Interpolation$PowOut__init_(4);
    cbgm_Interpolation_pow5 = cbgm_Interpolation$Pow__init_(5);
    cbgm_Interpolation_pow5In = cbgm_Interpolation$PowIn__init_(5);
    cbgm_Interpolation_pow5Out = cbgm_Interpolation$PowOut__init_(5);
    cbgm_Interpolation_sine = cbgm_Interpolation$9__init_0();
    cbgm_Interpolation_sineIn = cbgm_Interpolation$10__init_0();
    cbgm_Interpolation_sineOut = cbgm_Interpolation$11__init_0();
    cbgm_Interpolation_exp10 = cbgm_Interpolation$Exp__init_0(2.0, 10.0);
    cbgm_Interpolation_exp10In = cbgm_Interpolation$ExpIn__init_(2.0, 10.0);
    cbgm_Interpolation_exp10Out = cbgm_Interpolation$ExpOut__init_0(2.0, 10.0);
    cbgm_Interpolation_exp5 = cbgm_Interpolation$Exp__init_0(2.0, 5.0);
    cbgm_Interpolation_exp5In = cbgm_Interpolation$ExpIn__init_(2.0, 5.0);
    cbgm_Interpolation_exp5Out = cbgm_Interpolation$ExpOut__init_0(2.0, 5.0);
    cbgm_Interpolation_circle = cbgm_Interpolation$12__init_0();
    cbgm_Interpolation_circleIn = cbgm_Interpolation$13__init_0();
    cbgm_Interpolation_circleOut = cbgm_Interpolation$14__init_0();
    cbgm_Interpolation_elastic = cbgm_Interpolation$Elastic__init_0(2.0, 10.0, 7, 1.0);
    cbgm_Interpolation_elasticIn = cbgm_Interpolation$ElasticIn__init_0(2.0, 10.0, 6, 1.0);
    cbgm_Interpolation_elasticOut = cbgm_Interpolation$ElasticOut__init_0(2.0, 10.0, 7, 1.0);
    cbgm_Interpolation_swing = cbgm_Interpolation$Swing__init_0(1.5);
    cbgm_Interpolation_swingIn = cbgm_Interpolation$SwingIn__init_0(2.0);
    cbgm_Interpolation_swingOut = cbgm_Interpolation$SwingOut__init_0(2.0);
    cbgm_Interpolation_bounce = cbgm_Interpolation$Bounce__init_0(4);
    cbgm_Interpolation_bounceIn = cbgm_Interpolation$BounceIn__init_0(4);
    cbgm_Interpolation_bounceOut = cbgm_Interpolation$BounceOut__init_0(4);
};
function cbgm_Interpolation$BounceOut() {
    let a = this; cbgm_Interpolation.call(a);
    a.$widths = null;
    a.$heights = null;
}
let cbgm_Interpolation$BounceOut__init_ = ($this, $bounces) => {
    let var$2;
    cbgm_Interpolation__init_($this);
    if ($bounces >= 2 && $bounces <= 5) {
        a: {
            $this.$widths = $rt_createFloatArray($bounces);
            $this.$heights = $rt_createFloatArray($bounces);
            $this.$heights.data[0] = 1.0;
            switch ($bounces) {
                case 2:
                    break;
                case 3:
                    $this.$widths.data[0] = 0.4000000059604645;
                    $this.$widths.data[1] = 0.4000000059604645;
                    $this.$widths.data[2] = 0.20000000298023224;
                    $this.$heights.data[1] = 0.33000001311302185;
                    $this.$heights.data[2] = 0.10000000149011612;
                    break a;
                case 4:
                    $this.$widths.data[0] = 0.3400000035762787;
                    $this.$widths.data[1] = 0.3400000035762787;
                    $this.$widths.data[2] = 0.20000000298023224;
                    $this.$widths.data[3] = 0.15000000596046448;
                    $this.$heights.data[1] = 0.25999999046325684;
                    $this.$heights.data[2] = 0.10999999940395355;
                    $this.$heights.data[3] = 0.029999999329447746;
                    break a;
                case 5:
                    $this.$widths.data[0] = 0.30000001192092896;
                    $this.$widths.data[1] = 0.30000001192092896;
                    $this.$widths.data[2] = 0.20000000298023224;
                    $this.$widths.data[3] = 0.10000000149011612;
                    $this.$widths.data[4] = 0.10000000149011612;
                    $this.$heights.data[1] = 0.44999998807907104;
                    $this.$heights.data[2] = 0.30000001192092896;
                    $this.$heights.data[3] = 0.15000000596046448;
                    $this.$heights.data[4] = 0.05999999865889549;
                    break a;
                default:
                    break a;
            }
            $this.$widths.data[0] = 0.6000000238418579;
            $this.$widths.data[1] = 0.4000000059604645;
            $this.$heights.data[1] = 0.33000001311302185;
        }
        var$2 = $this.$widths.data;
        var$2[0] = var$2[0] * 2.0;
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(5))).$append2($bounces)).$toString()));
},
cbgm_Interpolation$BounceOut__init_0 = var_0 => {
    let var_1 = new cbgm_Interpolation$BounceOut();
    cbgm_Interpolation$BounceOut__init_(var_1, var_0);
    return var_1;
};
function jnci_BufferedEncoder$Controller() {
    let a = this; jl_Object.call(a);
    a.$in0 = null;
    a.$out0 = null;
    a.$inPosition = 0;
    a.$outPosition0 = 0;
}
let jnci_BufferedEncoder$Controller__init_ = ($this, $in, $out) => {
    jl_Object__init_($this);
    $this.$in0 = $in;
    $this.$out0 = $out;
},
jnci_BufferedEncoder$Controller__init_0 = (var_0, var_1) => {
    let var_2 = new jnci_BufferedEncoder$Controller();
    jnci_BufferedEncoder$Controller__init_(var_2, var_0, var_1);
    return var_2;
},
jnci_BufferedEncoder$Controller_hasMoreInput = $this => {
    return jn_Buffer_hasRemaining($this.$in0);
},
jnci_BufferedEncoder$Controller_hasMoreOutput = ($this, $sz) => {
    return jn_Buffer_remaining($this.$out0) < $sz ? 0 : 1;
},
jnci_BufferedEncoder$Controller_setInPosition = ($this, $inPosition) => {
    $this.$inPosition = $inPosition;
},
jnci_BufferedEncoder$Controller_setOutPosition = ($this, $outPosition) => {
    $this.$outPosition0 = $outPosition;
},
cbgur_ClassReflection = $rt_classWithoutFields(),
cbgur_ClassReflection_getSimpleName = $c => {
    return jl_Class_getSimpleName($c);
},
cbgssu_Drawable = $rt_classWithoutFields(0);
function cbgssu_BaseDrawable() {
    let a = this; jl_Object.call(a);
    a.$name3 = null;
    a.$minWidth0 = 0.0;
    a.$minHeight0 = 0.0;
}
let cbgssu_BaseDrawable__init_ = $this => {
    jl_Object__init_($this);
},
cbgssu_BaseDrawable__init_0 = () => {
    let var_0 = new cbgssu_BaseDrawable();
    cbgssu_BaseDrawable__init_(var_0);
    return var_0;
},
cbgssu_BaseDrawable_getMinWidth = $this => {
    return $this.$minWidth0;
},
cbgssu_BaseDrawable_setMinWidth = ($this, $minWidth) => {
    $this.$minWidth0 = $minWidth;
},
cbgssu_BaseDrawable_getMinHeight = $this => {
    return $this.$minHeight0;
},
cbgssu_BaseDrawable_setMinHeight = ($this, $minHeight) => {
    $this.$minHeight0 = $minHeight;
},
cbgssu_BaseDrawable_toString = $this => {
    if ($this.$name3 !== null)
        return $this.$name3;
    return cbgur_ClassReflection_getSimpleName(jl_Object_getClass($this));
},
ji_Serializable = $rt_classWithoutFields(0),
jl_Number = $rt_classWithoutFields(),
jl_Number__init_ = $this => {
    jl_Object__init_($this);
},
jl_Comparable = $rt_classWithoutFields(0);
function jl_Integer() {
    jl_Number.call(this);
    this.$value1 = 0;
}
let jl_Integer_TYPE = null,
jl_Integer_integerCache = null,
jl_Integer_$callClinit = () => {
    jl_Integer_$callClinit = $rt_eraseClinit(jl_Integer);
    jl_Integer__clinit_();
},
jl_Integer__init_ = ($this, $value) => {
    jl_Integer_$callClinit();
    jl_Number__init_($this);
    $this.$value1 = $value;
},
jl_Integer__init_0 = var_0 => {
    let var_1 = new jl_Integer();
    jl_Integer__init_(var_1, var_0);
    return var_1;
},
jl_Integer_toString0 = ($i, $radix) => {
    jl_Integer_$callClinit();
    if (!($radix >= 2 && $radix <= 36))
        $radix = 10;
    return ((jl_AbstractStringBuilder__init_1(20)).$append3($i, $radix)).$toString();
},
jl_Integer_hashCode0 = $value => {
    jl_Integer_$callClinit();
    return $value;
},
jl_Integer_toHexString = $i => {
    jl_Integer_$callClinit();
    return otci_IntegerUtil_toUnsignedLogRadixString($i, 4);
},
jl_Integer_toString = $i => {
    jl_Integer_$callClinit();
    return jl_Integer_toString0($i, 10);
},
jl_Integer_parseInt0 = ($s, $radix) => {
    jl_Integer_$callClinit();
    if ($s !== null)
        return jl_Integer_parseIntImpl($s, 0, $s.$length(), $radix);
    $rt_throw(jl_NumberFormatException__init_1($rt_s(6)));
},
jl_Integer_parseIntImpl = ($s, $beginIndex, $endIndex, $radix) => {
    let $negative, var$6, $value, $maxValue, var$9, $digit, var$11, var$12, var$13, var$14;
    jl_Integer_$callClinit();
    if ($beginIndex == $endIndex)
        $rt_throw(jl_NumberFormatException__init_1($rt_s(7)));
    if ($radix >= 2 && $radix <= 36) {
        a: {
            $negative = 0;
            switch ($s.$charAt($beginIndex)) {
                case 43:
                    var$6 = $beginIndex + 1 | 0;
                    break a;
                case 45:
                    $negative = 1;
                    var$6 = $beginIndex + 1 | 0;
                    break a;
                default:
            }
            var$6 = $beginIndex;
        }
        $value = 0;
        $maxValue = 1 + (2147483647 / $radix | 0) | 0;
        if (var$6 == $endIndex)
            $rt_throw(jl_NumberFormatException__init_());
        while (true) {
            if (var$6 >= $endIndex) {
                if ($negative)
                    $value =  -$value | 0;
                return $value;
            }
            var$9 = var$6 + 1 | 0;
            $digit = jl_Integer_decodeDigit($s.$charAt(var$6));
            if ($digit < 0) {
                var$11 = new jl_NumberFormatException;
                var$12 = jl_String_valueOf($s.$subSequence($beginIndex, $endIndex));
                var$13 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$13, $rt_s(8)), var$12);
                jl_NumberFormatException__init_0(var$11, jl_StringBuilder_toString(var$13));
                $rt_throw(var$11);
            }
            if ($digit >= $radix) {
                var$12 = new jl_NumberFormatException;
                var$13 = jl_String_valueOf($s.$subSequence($beginIndex, $endIndex));
                var$14 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$14, $rt_s(9)), $radix), $rt_s(10)), var$13);
                jl_NumberFormatException__init_0(var$12, jl_StringBuilder_toString(var$14));
                $rt_throw(var$12);
            }
            if ($value > $maxValue)
                break;
            $value = $rt_imul($radix, $value) + $digit | 0;
            if ($value < 0) {
                if (var$9 == $endIndex && $value == (-2147483648) && $negative)
                    return (-2147483648);
                var$11 = new jl_NumberFormatException;
                var$12 = jl_String_valueOf($s.$subSequence($beginIndex, $endIndex));
                var$13 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$13, $rt_s(11)), var$12);
                jl_NumberFormatException__init_0(var$11, jl_StringBuilder_toString(var$13));
                $rt_throw(var$11);
            }
            var$6 = var$9;
        }
        $rt_throw(jl_NumberFormatException__init_1($rt_s(12)));
    }
    var$11 = new jl_NumberFormatException;
    var$12 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(var$12, $rt_s(13)), $radix);
    jl_NumberFormatException__init_0(var$11, jl_StringBuilder_toString(var$12));
    $rt_throw(var$11);
},
jl_Integer_parseInt = $s => {
    jl_Integer_$callClinit();
    return jl_Integer_parseInt0($s, 10);
},
jl_Integer_valueOf = $i => {
    jl_Integer_$callClinit();
    if ($i >= (-128) && $i <= 127) {
        jl_Integer_ensureIntegerCache();
        return jl_Integer_integerCache.data[$i + 128 | 0];
    }
    return jl_Integer__init_0($i);
},
jl_Integer_ensureIntegerCache = () => {
    let $j;
    jl_Integer_$callClinit();
    a: {
        if (jl_Integer_integerCache === null) {
            jl_Integer_integerCache = $rt_createArray(jl_Integer, 256);
            $j = 0;
            while (true) {
                if ($j >= jl_Integer_integerCache.data.length)
                    break a;
                jl_Integer_integerCache.data[$j] = jl_Integer__init_0($j - 128 | 0);
                $j = $j + 1 | 0;
            }
        }
    }
},
jl_Integer_intValue = $this => {
    return $this.$value1;
},
jl_Integer_hashCode = $this => {
    return jl_Integer_hashCode0($this.$value1);
},
jl_Integer_equals = ($this, $other) => {
    if ($this === $other)
        return 1;
    return $other instanceof jl_Integer && $other.$value1 == $this.$value1 ? 1 : 0;
},
jl_Integer_decodeDigit = $c => {
    jl_Integer_$callClinit();
    if ($c >= 48 && $c <= 57)
        return $c - 48 | 0;
    if ($c >= 97 && $c <= 122)
        return ($c - 97 | 0) + 10 | 0;
    if ($c >= 65 && $c <= 90)
        return ($c - 65 | 0) + 10 | 0;
    return (-1);
},
jl_Integer_numberOfLeadingZeros = $i => {
    let $n, var$3, var$4;
    jl_Integer_$callClinit();
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i >>> 16 | 0;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    var$4 = var$3 >>> 8 | 0;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 8;
    var$3 = var$4 >>> 4 | 0;
    if (!var$3)
        var$3 = var$4;
    else
        $n = $n | 4;
    var$4 = var$3 >>> 2 | 0;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 2;
    if (var$4 >>> 1 | 0)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
},
jl_Integer_numberOfTrailingZeros = $i => {
    let $n, var$3, var$4;
    jl_Integer_$callClinit();
    if (!$i)
        return 32;
    $n = 0;
    var$3 = $i << 16;
    if (var$3)
        $n = 16;
    else
        var$3 = $i;
    var$4 = var$3 << 8;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 8;
    var$3 = var$4 << 4;
    if (!var$3)
        var$3 = var$4;
    else
        $n = $n | 4;
    var$4 = var$3 << 2;
    if (!var$4)
        var$4 = var$3;
    else
        $n = $n | 2;
    if (var$4 << 1)
        $n = $n | 1;
    return (32 - $n | 0) - 1 | 0;
},
jl_Integer_rotateLeft = ($i, $distance) => {
    let var$3;
    jl_Integer_$callClinit();
    var$3 = $distance & 31;
    return $i << var$3 | ($i >>> (32 - var$3 | 0) | 0);
},
jl_Integer_reverseBytes = $i => {
    let var$2;
    jl_Integer_$callClinit();
    var$2 = (($i & (-16711936)) >>> 8 | 0) | ($i & 16711935) << 8;
    var$2 = (var$2 >>> 16 | 0) | var$2 << 16;
    return var$2;
},
jl_Integer__clinit_ = () => {
    jl_Integer_TYPE = $rt_cls($rt_intcls);
},
jl_Iterable = $rt_classWithoutFields(0);
function cbgu_Array() {
    let a = this; jl_Object.call(a);
    a.$items = null;
    a.$size0 = 0;
    a.$ordered = 0;
    a.$iterable = null;
}
let cbgu_Array__init_5 = $this => {
    cbgu_Array__init_2($this, 1, 16);
},
cbgu_Array__init_ = () => {
    let var_0 = new cbgu_Array();
    cbgu_Array__init_5(var_0);
    return var_0;
},
cbgu_Array__init_3 = ($this, $capacity) => {
    cbgu_Array__init_2($this, 1, $capacity);
},
cbgu_Array__init_0 = var_0 => {
    let var_1 = new cbgu_Array();
    cbgu_Array__init_3(var_1, var_0);
    return var_1;
},
cbgu_Array__init_2 = ($this, $ordered, $capacity) => {
    cbgu_Array__init_1($this, $ordered, $capacity, cbgu_ArraySupplier_object());
},
cbgu_Array__init_6 = (var_0, var_1) => {
    let var_2 = new cbgu_Array();
    cbgu_Array__init_2(var_2, var_0, var_1);
    return var_2;
},
cbgu_Array__init_1 = ($this, $ordered, $capacity, $arraySupplier) => {
    jl_Object__init_($this);
    $this.$ordered = $ordered;
    $this.$items = $arraySupplier.$get($capacity);
},
cbgu_Array__init_9 = (var_0, var_1, var_2) => {
    let var_3 = new cbgu_Array();
    cbgu_Array__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgu_Array__init_7 = ($this, $array) => {
    cbgu_Array__init_4($this, 1, $array, 0, $array.data.length);
},
cbgu_Array__init_8 = var_0 => {
    let var_1 = new cbgu_Array();
    cbgu_Array__init_7(var_1, var_0);
    return var_1;
},
cbgu_Array__init_4 = ($this, $ordered, $array, $start, $count) => {
    jl_Object__init_($this);
    $this.$items = ju_Arrays_copyOfRange($array, $start, $start + $count | 0);
    $this.$ordered = $ordered;
    $this.$size0 = $count;
},
cbgu_Array__init_10 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgu_Array();
    cbgu_Array__init_4(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgu_Array_add = ($this, $value) => {
    let $items, var$3, var$4;
    $items = $this.$items;
    var$3 = $items.data;
    if ($this.$size0 == var$3.length)
        $items = $this.$resize(jl_Math_max(8, $this.$size0 * 1.75 | 0));
    var$3 = $items.data;
    var$4 = $this.$size0;
    $this.$size0 = var$4 + 1 | 0;
    var$3[var$4] = $value;
},
cbgu_Array_addAll2 = ($this, $array) => {
    $this.$addAll($array.$items, 0, $array.$size0);
},
cbgu_Array_addAll = ($this, $array, $start, $count) => {
    if (($start + $count | 0) <= $array.$size0) {
        $this.$addAll($array.$items, $start, $count);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((((((jl_StringBuilder__init_()).$append1($rt_s(14))).$append2($start)).$append1($rt_s(15))).$append2($count)).$append1($rt_s(16))).$append2($array.$size0)).$toString()));
},
cbgu_Array_addAll1 = ($this, $array) => {
    $this.$addAll($array, 0, $array.data.length);
},
cbgu_Array_addAll0 = ($this, $array, $start, $count) => {
    let $items, var$5, $sizeNeeded;
    $items = $this.$items;
    var$5 = $items.data;
    $sizeNeeded = $this.$size0 + $count | 0;
    if ($sizeNeeded > var$5.length)
        $items = $this.$resize(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size0 * 1.75 | 0));
    jl_System_fastArraycopy($array, $start, $items, $this.$size0, $count);
    $this.$size0 = $sizeNeeded;
},
cbgu_Array_get = ($this, $index) => {
    if ($index < $this.$size0)
        return $this.$items.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(17))).$append2($index)).$append1($rt_s(18))).$append2($this.$size0)).$toString()));
},
cbgu_Array_set = ($this, $index, $value) => {
    if ($index < $this.$size0) {
        $this.$items.data[$index] = $value;
        return;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(17))).$append2($index)).$append1($rt_s(18))).$append2($this.$size0)).$toString()));
},
cbgu_Array_insert = ($this, $index, $value) => {
    let $items, var$4;
    if ($index > $this.$size0)
        $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(19))).$append2($index)).$append1($rt_s(20))).$append2($this.$size0)).$toString()));
    $items = $this.$items;
    var$4 = $items.data;
    if ($this.$size0 == var$4.length)
        $items = $this.$resize(jl_Math_max(8, $this.$size0 * 1.75 | 0));
    if (!$this.$ordered) {
        var$4 = $items.data;
        var$4[$this.$size0] = var$4[$index];
    } else
        jl_System_fastArraycopy($items, $index, $items, $index + 1 | 0, $this.$size0 - $index | 0);
    var$4 = $items.data;
    $this.$size0 = $this.$size0 + 1 | 0;
    var$4[$index] = $value;
},
cbgu_Array_contains = ($this, $value, $identity) => {
    let $items, $i, var$5, var$6;
    a: {
        $items = $this.$items;
        $i = $this.$size0 - 1 | 0;
        if (!(!$identity && $value !== null)) {
            while (true) {
                if ($i < 0)
                    break a;
                var$5 = $items.data;
                var$6 = $i + (-1) | 0;
                if (var$5[$i] === $value)
                    break;
                $i = var$6;
            }
            return 1;
        }
        while (true) {
            if ($i < 0)
                break a;
            var$5 = $items.data;
            var$6 = $i + (-1) | 0;
            if ($value.$equals(var$5[$i]))
                return 1;
            $i = var$6;
        }
    }
    return 0;
},
cbgu_Array_indexOf = ($this, $value, $identity) => {
    let $items, $i, $n;
    a: {
        $items = $this.$items;
        if (!$identity && $value !== null) {
            $i = 0;
            $n = $this.$size0;
            while (true) {
                if ($i >= $n)
                    break a;
                if ($value.$equals($items.data[$i]))
                    break;
                $i = $i + 1 | 0;
            }
            return $i;
        }
        $i = 0;
        $n = $this.$size0;
        while (true) {
            if ($i >= $n)
                break a;
            if ($items.data[$i] === $value)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    return (-1);
},
cbgu_Array_removeValue = ($this, $value, $identity) => {
    let $items, $i, $n;
    a: {
        $items = $this.$items;
        if (!(!$identity && $value !== null)) {
            $i = 0;
            $n = $this.$size0;
            while ($i < $n) {
                if ($items.data[$i] === $value) {
                    $this.$removeIndex($i);
                    return 1;
                }
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            $n = $this.$size0;
            while (true) {
                if ($i >= $n)
                    break a;
                if ($value.$equals($items.data[$i])) {
                    $this.$removeIndex($i);
                    return 1;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return 0;
},
cbgu_Array_removeIndex = ($this, $index) => {
    let $items, var$3, $value;
    if ($index >= $this.$size0)
        $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(17))).$append2($index)).$append1($rt_s(18))).$append2($this.$size0)).$toString()));
    $items = $this.$items;
    var$3 = $items.data;
    $value = var$3[$index];
    $this.$size0 = $this.$size0 - 1 | 0;
    if (!$this.$ordered)
        var$3[$index] = var$3[$this.$size0];
    else
        jl_System_fastArraycopy($items, $index + 1 | 0, $items, $index, $this.$size0 - $index | 0);
    var$3[$this.$size0] = null;
    return $value;
},
cbgu_Array_removeRange = ($this, $start, $end) => {
    let $n, $items, $count, $lastIndex, var$7, $i;
    $n = $this.$size0;
    if ($end >= $n)
        $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(21))).$append2($end)).$append1($rt_s(18))).$append2($this.$size0)).$toString()));
    if ($start > $end)
        $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(22))).$append2($start)).$append1($rt_s(20))).$append2($end)).$toString()));
    $items = $this.$items;
    $count = ($end - $start | 0) + 1 | 0;
    $lastIndex = $n - $count | 0;
    if ($this.$ordered) {
        var$7 = $start + $count | 0;
        jl_System_fastArraycopy($items, var$7, $items, $start, $n - var$7 | 0);
    } else {
        $i = jl_Math_max($lastIndex, $end + 1 | 0);
        jl_System_fastArraycopy($items, $i, $items, $start, $n - $i | 0);
    }
    $i = $lastIndex;
    while ($i < $n) {
        $items.data[$i] = null;
        $i = $i + 1 | 0;
    }
    $this.$size0 = $lastIndex;
},
cbgu_Array_pop = $this => {
    let $item;
    if (!$this.$size0)
        $rt_throw(jl_IllegalStateException__init_($rt_s(23)));
    $this.$size0 = $this.$size0 - 1 | 0;
    $item = $this.$items.data[$this.$size0];
    $this.$items.data[$this.$size0] = null;
    return $item;
},
cbgu_Array_peek = $this => {
    if (!$this.$size0)
        $rt_throw(jl_IllegalStateException__init_($rt_s(23)));
    return $this.$items.data[$this.$size0 - 1 | 0];
},
cbgu_Array_first = $this => {
    if (!$this.$size0)
        $rt_throw(jl_IllegalStateException__init_($rt_s(23)));
    return $this.$items.data[0];
},
cbgu_Array_clear = $this => {
    ju_Arrays_fill0($this.$items, 0, $this.$size0, null);
    $this.$size0 = 0;
},
cbgu_Array_ensureCapacity = ($this, $additionalCapacity) => {
    let $sizeNeeded;
    if ($additionalCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(24))).$append2($additionalCapacity)).$toString()));
    $sizeNeeded = $this.$size0 + $additionalCapacity | 0;
    if ($sizeNeeded > $this.$items.data.length)
        $this.$resize(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size0 * 1.75 | 0));
    return $this.$items;
},
cbgu_Array_resize = ($this, $newSize) => {
    $this.$items = ju_Arrays_copyOf($this.$items, $newSize);
    return $this.$items;
},
cbgu_Array_sort = ($this, $comparator) => {
    (cbgu_Sort_instance0()).$sort($this.$items, $comparator, 0, $this.$size0);
},
cbgu_Array_iterator0 = $this => {
    if (cbgu_Collections_allocateIterators)
        return cbgu_Array$ArrayIterator__init_($this, 1);
    if ($this.$iterable === null)
        $this.$iterable = cbgu_Array$ArrayIterable__init_1($this);
    return $this.$iterable.$iterator();
},
cbgu_Array_truncate = ($this, $newSize) => {
    let $i;
    if ($newSize < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(25))).$append2($newSize)).$toString()));
    if ($this.$size0 <= $newSize)
        return;
    $i = $newSize;
    while ($i < $this.$size0) {
        $this.$items.data[$i] = null;
        $i = $i + 1 | 0;
    }
    $this.$size0 = $newSize;
},
cbgu_Array_hashCode = $this => {
    let $items, $h, $i, $n, var$5, $item;
    if (!$this.$ordered)
        return jl_Object_hashCode($this);
    $items = $this.$items;
    $h = 1;
    $i = 0;
    $n = $this.$size0;
    while ($i < $n) {
        var$5 = $items.data;
        $h = $h * 31 | 0;
        $item = var$5[$i];
        if ($item !== null)
            $h = $h + $item.$hashCode0() | 0;
        $i = $i + 1 | 0;
    }
    return $h;
},
cbgu_Array_equals = ($this, $object) => {
    let $array, $n, $items1, $items2, $i, var$7, $o1, $o2;
    if ($object === $this)
        return 1;
    if (!$this.$ordered)
        return 0;
    if (!($object instanceof cbgu_Array))
        return 0;
    $array = $object;
    if (!$array.$ordered)
        return 0;
    $n = $this.$size0;
    if ($n != $array.$size0)
        return 0;
    $items1 = $this.$items;
    $items2 = $array.$items;
    $i = 0;
    a: {
        while ($i < $n) {
            b: {
                var$7 = $items2.data;
                $o1 = $items1.data[$i];
                $o2 = var$7[$i];
                if ($o1 !== null) {
                    if ($o1.$equals($o2))
                        break b;
                    else
                        break a;
                }
                if ($o2 !== null)
                    break a;
            }
            $i = $i + 1 | 0;
        }
        return 1;
    }
    return 0;
},
cbgu_Array_toString = $this => {
    let $items, var$2, $buffer, $i;
    if (!$this.$size0)
        return $rt_s(26);
    $items = $this.$items;
    var$2 = $items.data;
    $buffer = cbgu_StringBuilder__init_(32);
    $buffer.$append4(91);
    $buffer.$append5(var$2[0]);
    $i = 1;
    while ($i < $this.$size0) {
        $buffer.$append6($rt_s(27));
        $buffer.$append5(var$2[$i]);
        $i = $i + 1 | 0;
    }
    $buffer.$append4(93);
    return $buffer.$toString();
},
cbgu_Array_with = $array => {
    return cbgu_Array__init_8($array);
},
cbgu_Array_iterator = $this => {
    return $this.$iterator();
};
function cbgu_DelayedRemovalArray() {
    let a = this; cbgu_Array.call(a);
    a.$iterating = 0;
    a.$remove5 = null;
    a.$clear6 = 0;
}
let cbgu_DelayedRemovalArray__init_ = ($this, $capacity) => {
    cbgu_Array__init_3($this, $capacity);
    $this.$remove5 = cbgu_IntArray__init_1(0);
},
cbgu_DelayedRemovalArray__init_0 = var_0 => {
    let var_1 = new cbgu_DelayedRemovalArray();
    cbgu_DelayedRemovalArray__init_(var_1, var_0);
    return var_1;
},
cbgu_DelayedRemovalArray_begin = $this => {
    $this.$iterating = $this.$iterating + 1 | 0;
},
cbgu_DelayedRemovalArray_end = $this => {
    let $i, $n, $index;
    if (!$this.$iterating)
        $rt_throw(jl_IllegalStateException__init_($rt_s(28)));
    $this.$iterating = $this.$iterating - 1 | 0;
    if (!$this.$iterating) {
        a: {
            if ($this.$clear6 > 0 && $this.$clear6 == $this.$size0) {
                $this.$remove5.$clear();
                $this.$clear();
            } else {
                $i = 0;
                $n = $this.$remove5.$size1;
                while ($i < $n) {
                    $index = $this.$remove5.$pop();
                    if ($index >= $this.$clear6)
                        $this.$removeIndex($index);
                    $i = $i + 1 | 0;
                }
                $i = $this.$clear6 - 1 | 0;
                while (true) {
                    if ($i < 0)
                        break a;
                    $this.$removeIndex($i);
                    $i = $i + (-1) | 0;
                }
            }
        }
        $this.$clear6 = 0;
    }
},
cbgu_DelayedRemovalArray_remove = ($this, $index) => {
    let $i, $n, $removeIndex, var$5;
    if ($index < $this.$clear6)
        return;
    $i = 0;
    $n = $this.$remove5.$size1;
    while (true) {
        if ($i >= $n) {
            $this.$remove5.$add2($index);
            return;
        }
        $removeIndex = $this.$remove5.$get1($i);
        var$5 = $rt_compare($index, $removeIndex);
        if (!var$5)
            break;
        if (var$5 < 0) {
            $this.$remove5.$insert($i, $index);
            return;
        }
        $i = $i + 1 | 0;
    }
},
cbgu_DelayedRemovalArray_removeIndex = ($this, $index) => {
    if ($this.$iterating <= 0)
        return cbgu_Array_removeIndex($this, $index);
    cbgu_DelayedRemovalArray_remove($this, $index);
    return $this.$get($index);
},
cbgu_DelayedRemovalArray_clear = $this => {
    if ($this.$iterating <= 0) {
        cbgu_Array_clear($this);
        return;
    }
    $this.$clear6 = $this.$size0;
},
otj_JSObject = $rt_classWithoutFields(0),
bl_btMotionState$setWorldTransform = $rt_classWithoutFields(0),
jur_AbstractCharClass$LazyAlpha = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyAlpha__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyAlpha__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyAlpha();
    jur_AbstractCharClass$LazyAlpha__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyAlpha_computeValue = $this => {
    return ((jur_CharClass__init_()).$add0(97, 122)).$add0(65, 90);
},
cbgggs_DefaultShader$Setters = $rt_classWithoutFields(),
cbgggs_DefaultShader$Setters_projTrans = null,
cbgggs_DefaultShader$Setters_viewTrans = null,
cbgggs_DefaultShader$Setters_projViewTrans = null,
cbgggs_DefaultShader$Setters_cameraPosition = null,
cbgggs_DefaultShader$Setters_cameraDirection = null,
cbgggs_DefaultShader$Setters_cameraUp = null,
cbgggs_DefaultShader$Setters_cameraNearFar = null,
cbgggs_DefaultShader$Setters_worldTrans = null,
cbgggs_DefaultShader$Setters_viewWorldTrans = null,
cbgggs_DefaultShader$Setters_projViewWorldTrans = null,
cbgggs_DefaultShader$Setters_normalMatrix = null,
cbgggs_DefaultShader$Setters_shininess = null,
cbgggs_DefaultShader$Setters_diffuseColor = null,
cbgggs_DefaultShader$Setters_diffuseTexture = null,
cbgggs_DefaultShader$Setters_diffuseUVTransform = null,
cbgggs_DefaultShader$Setters_specularColor = null,
cbgggs_DefaultShader$Setters_specularTexture = null,
cbgggs_DefaultShader$Setters_specularUVTransform = null,
cbgggs_DefaultShader$Setters_emissiveColor = null,
cbgggs_DefaultShader$Setters_emissiveTexture = null,
cbgggs_DefaultShader$Setters_emissiveUVTransform = null,
cbgggs_DefaultShader$Setters_reflectionColor = null,
cbgggs_DefaultShader$Setters_reflectionTexture = null,
cbgggs_DefaultShader$Setters_reflectionUVTransform = null,
cbgggs_DefaultShader$Setters_normalTexture = null,
cbgggs_DefaultShader$Setters_normalUVTransform = null,
cbgggs_DefaultShader$Setters_ambientTexture = null,
cbgggs_DefaultShader$Setters_ambientUVTransform = null,
cbgggs_DefaultShader$Setters_environmentCubemap = null,
cbgggs_DefaultShader$Setters_$callClinit = () => {
    cbgggs_DefaultShader$Setters_$callClinit = $rt_eraseClinit(cbgggs_DefaultShader$Setters);
    cbgggs_DefaultShader$Setters__clinit_();
},
cbgggs_DefaultShader$Setters__clinit_ = () => {
    cbgggs_DefaultShader$Setters_projTrans = cbgggs_DefaultShader$Setters$1__init_0();
    cbgggs_DefaultShader$Setters_viewTrans = cbgggs_DefaultShader$Setters$2__init_0();
    cbgggs_DefaultShader$Setters_projViewTrans = cbgggs_DefaultShader$Setters$3__init_0();
    cbgggs_DefaultShader$Setters_cameraPosition = cbgggs_DefaultShader$Setters$4__init_0();
    cbgggs_DefaultShader$Setters_cameraDirection = cbgggs_DefaultShader$Setters$5__init_0();
    cbgggs_DefaultShader$Setters_cameraUp = cbgggs_DefaultShader$Setters$6__init_0();
    cbgggs_DefaultShader$Setters_cameraNearFar = cbgggs_DefaultShader$Setters$7__init_0();
    cbgggs_DefaultShader$Setters_worldTrans = cbgggs_DefaultShader$Setters$8__init_0();
    cbgggs_DefaultShader$Setters_viewWorldTrans = cbgggs_DefaultShader$Setters$9__init_0();
    cbgggs_DefaultShader$Setters_projViewWorldTrans = cbgggs_DefaultShader$Setters$10__init_0();
    cbgggs_DefaultShader$Setters_normalMatrix = cbgggs_DefaultShader$Setters$11__init_0();
    cbgggs_DefaultShader$Setters_shininess = cbgggs_DefaultShader$Setters$12__init_0();
    cbgggs_DefaultShader$Setters_diffuseColor = cbgggs_DefaultShader$Setters$13__init_0();
    cbgggs_DefaultShader$Setters_diffuseTexture = cbgggs_DefaultShader$Setters$14__init_0();
    cbgggs_DefaultShader$Setters_diffuseUVTransform = cbgggs_DefaultShader$Setters$15__init_0();
    cbgggs_DefaultShader$Setters_specularColor = cbgggs_DefaultShader$Setters$16__init_0();
    cbgggs_DefaultShader$Setters_specularTexture = cbgggs_DefaultShader$Setters$17__init_0();
    cbgggs_DefaultShader$Setters_specularUVTransform = cbgggs_DefaultShader$Setters$18__init_0();
    cbgggs_DefaultShader$Setters_emissiveColor = cbgggs_DefaultShader$Setters$19__init_0();
    cbgggs_DefaultShader$Setters_emissiveTexture = cbgggs_DefaultShader$Setters$20__init_0();
    cbgggs_DefaultShader$Setters_emissiveUVTransform = cbgggs_DefaultShader$Setters$21__init_0();
    cbgggs_DefaultShader$Setters_reflectionColor = cbgggs_DefaultShader$Setters$22__init_0();
    cbgggs_DefaultShader$Setters_reflectionTexture = cbgggs_DefaultShader$Setters$23__init_0();
    cbgggs_DefaultShader$Setters_reflectionUVTransform = cbgggs_DefaultShader$Setters$24__init_0();
    cbgggs_DefaultShader$Setters_normalTexture = cbgggs_DefaultShader$Setters$25__init_0();
    cbgggs_DefaultShader$Setters_normalUVTransform = cbgggs_DefaultShader$Setters$26__init_0();
    cbgggs_DefaultShader$Setters_ambientTexture = cbgggs_DefaultShader$Setters$27__init_0();
    cbgggs_DefaultShader$Setters_ambientUVTransform = cbgggs_DefaultShader$Setters$28__init_0();
    cbgggs_DefaultShader$Setters_environmentCubemap = cbgggs_DefaultShader$Setters$29__init_0();
},
cgxgbta_AssetLoader = $rt_classWithoutFields(0);
function cgxgbta_AssetLoadImpl() {
    let a = this; jl_Object.call(a);
    a.$assetTotal = 0;
    a.$baseUrl = null;
    a.$assetInQueue0 = null;
    a.$assetDownloading = null;
    a.$assetDownloader = null;
    a.$maxMultiDownloadCount = 0;
}
let cgxgbta_AssetLoadImpl__init_ = ($this, $newBaseURL, $teaApplication, $assetDownloader) => {
    jl_Object__init_($this);
    $this.$assetTotal = (-1);
    $this.$maxMultiDownloadCount = 5;
    $this.$assetDownloader = $assetDownloader;
    $this.$baseUrl = $newBaseURL;
    $this.$assetInQueue0 = cbgu_Array__init_();
    $this.$assetDownloading = ju_HashSet__init_1();
},
cgxgbta_AssetLoadImpl__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbta_AssetLoadImpl();
    cgxgbta_AssetLoadImpl__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbta_AssetLoadImpl_setupFileDrop = ($this, $canvas, $teaApplication) => {
    let $config, $document, var$5;
    $config = $teaApplication.$getConfig();
    if ($config.$windowListener !== null) {
        $document = $canvas.ownerDocument;
        var$5 = cgxgbta_AssetLoadImpl$1__init_0($this);
        $document.addEventListener("dragenter", otji_JS_function(otji_JSWrapper_unwrap(var$5), "handleEvent"), !!0);
        var$5 = cgxgbta_AssetLoadImpl$2__init_0($this);
        $document.addEventListener("dragover", otji_JS_function(otji_JSWrapper_unwrap(var$5), "handleEvent"), !!0);
        var$5 = cgxgbta_AssetLoadImpl$3__init_0($this, $config);
        $document.addEventListener("drop", otji_JS_function(otji_JSWrapper_unwrap(var$5), "handleEvent"));
    }
},
cgxgbta_AssetLoadImpl_getFile = ($this, $name, $fileWrapper) => {
    let var$3, $success;
    var$3 = cgxgbta_AssetLoadImpl$getFile$lambda$_2_0__init_0($this, $fileWrapper, $name);
    $success = new Promise(otji_JS_function(otji_JSWrapper_unwrap(var$3), "onExecute"));
    return $success;
},
cgxgbta_AssetLoadImpl_downloadDroppedFile = ($this, $config, $files) => {
    let $totalDraggedFiles, $droppedFiles, $promises, $i, $fileWrapper, $name, $promiss, $all, var$11, var$12;
    $totalDraggedFiles = $files.length;
    if ($totalDraggedFiles > 0) {
        $droppedFiles = cbgu_Array__init_();
        $promises = new Array();
        $i = 0;
        while ($i < $totalDraggedFiles) {
            $fileWrapper = otji_JSWrapper_maybeUnwrap($files[$i]);
            $name = $rt_str($fileWrapper.name);
            if ($config.$windowListener.$acceptFileDropped($name)) {
                $promiss = cgxgbta_AssetLoadImpl_getFile($this, $name, $fileWrapper);
                $promises.push($promiss);
            }
            $i = $i + 1 | 0;
        }
        $all = Promise.all($promises);
        var$11 = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0__init_0($config);
        var$12 = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1__init_0();
        var$12 = $all.then(otji_JS_function(otji_JSWrapper_unwrap(var$11), "apply"), otji_JS_function(otji_JSWrapper_unwrap(var$12), "apply"));
        var$11 = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2__init_0();
        var$12.finally(otji_JS_function(otji_JSWrapper_unwrap(var$11), "get"));
    }
},
cgxgbta_AssetLoadImpl_getAssetUrl = $this => {
    let var$1, var$2;
    var$1 = $this.$baseUrl;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, var$1), $rt_s(29));
    return jl_StringBuilder_toString(var$2);
},
cgxgbta_AssetLoadImpl_getScriptUrl = $this => {
    let var$1, var$2;
    var$1 = $this.$baseUrl;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, var$1), $rt_s(30));
    return jl_StringBuilder_toString(var$2);
},
cgxgbta_AssetLoadImpl_preload = ($this, $assetFileUrl, $preloadListener) => {
    let $listener, var$4, var$5, var$6;
    $listener = cgxgbta_AssetLoadImpl$5__init_0($this, $assetFileUrl, $preloadListener);
    $this.$assetDownloading.$add3($assetFileUrl);
    var$4 = $this.$assetDownloader;
    var$5 = $this.$getAssetUrl();
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$6, var$5), $assetFileUrl);
    var$5 = jl_StringBuilder_toString(var$6);
    cgxgbta_AssetType_$callClinit();
    var$4.$load(1, var$5, cgxgbta_AssetType_Binary, $listener);
},
cgxgbta_AssetLoadImpl_loadAsset = ($this, $path, $assetType, $fileType, $listener) => {
    cgxgbta_AssetLoadImpl_loadAssetInternal($this, $path, $assetType, $fileType, $listener, 0);
},
cgxgbta_AssetLoadImpl_loadScript = ($this, $path, $listener) => {
    let var$3, var$4, var$5;
    var$3 = $this.$assetDownloader;
    var$4 = $this.$getScriptUrl();
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, var$4), $path);
    var$3.$loadScript(1, jl_StringBuilder_toString(var$5), $listener);
},
cgxgbta_AssetLoadImpl_getQueue = $this => {
    return $this.$assetInQueue0.$size0;
},
cgxgbta_AssetLoadImpl_getDownloadingCount = $this => {
    return $this.$assetDownloading.$size();
},
cgxgbta_AssetLoadImpl_isDownloading = $this => {
    return $this.$getQueue() <= 0 && $this.$getDownloadingCount() <= 0 ? 0 : 1;
},
cgxgbta_AssetLoadImpl_loadAssetInternal = ($this, $path, $assetType, $fileType, $listener, $overwrite) => {
    cgxgbta_AssetLoadImpl_addAssetToQueue($this, $path, $assetType, $fileType, $overwrite);
    cgxgbta_AssetLoadImpl_downloadQueueAssets($this, $listener);
},
cgxgbta_AssetLoadImpl_addAssetToQueue = ($this, $path, $assetType, $fileType, $overwrite) => {
    let $path1, $fileHandle, $exists, $queueAsset;
    $path1 = cgxgbta_AssetLoadImpl_fixPath($this, $path);
    if ($path1.$isEmpty())
        return;
    if (cgxgbta_AssetLoadImpl_assetInQueue($this, $path1))
        return;
    $fileHandle = cbg_Gdx_files.$getFileHandle($path1, $fileType);
    $exists = $fileHandle.$exists();
    if (!$overwrite && $exists)
        return;
    cgxgbta_AssetType_$callClinit();
    if ($assetType === cgxgbta_AssetType_Directory) {
        if (!$exists)
            $fileHandle.$mkdirsInternal();
        return;
    }
    $queueAsset = cgxgbta_QueueAsset__init_0();
    $queueAsset.$assetUrl = $path1;
    $queueAsset.$fileHandle = $fileHandle;
    $this.$assetInQueue0.$add1($queueAsset);
},
cgxgbta_AssetLoadImpl_downloadMultiAssets = ($this, $listener) => {
    let $i;
    $i = 0;
    while ($i < $this.$maxMultiDownloadCount) {
        cgxgbta_AssetLoadImpl_downloadQueueAssets($this, $listener);
        $i = $i + 1 | 0;
    }
},
cgxgbta_AssetLoadImpl_downloadQueueAssets = ($this, $listener) => {
    let $queueAsset, $assetPath, $fileHandle, var$5, var$6, var$7, var$8;
    if ($this.$assetInQueue0.$size0 && $this.$assetDownloading.$size() < $this.$maxMultiDownloadCount) {
        $queueAsset = $this.$assetInQueue0.$removeIndex(0);
        $assetPath = $queueAsset.$assetUrl;
        $fileHandle = $queueAsset.$fileHandle;
        $this.$assetDownloading.$add3($assetPath);
        var$5 = $this.$assetDownloader;
        var$6 = $this.$getAssetUrl();
        var$7 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$7, var$6), $assetPath);
        var$8 = jl_StringBuilder_toString(var$7);
        cgxgbta_AssetType_$callClinit();
        var$5.$load(1, var$8, cgxgbta_AssetType_Binary, cgxgbta_AssetLoadImpl$6__init_0($this, $assetPath, $listener, $fileHandle));
        return;
    }
},
cgxgbta_AssetLoadImpl_assetInQueue = ($this, $path) => {
    let $i, $queueAsset;
    $i = 0;
    while ($i < $this.$assetInQueue0.$size0) {
        $queueAsset = $this.$assetInQueue0.$get($i);
        if ($queueAsset.$assetUrl.$equals($path))
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
},
cgxgbta_AssetLoadImpl_fixPath = ($this, $path1) => {
    let var$2;
    var$2 = ($path1.$trim()).$replace($rt_s(31), $rt_s(32));
    if (var$2.$startsWith($rt_s(32)))
        var$2 = var$2.$substring0(1);
    return var$2;
},
cgxgbta_AssetLoadImpl_lambda$downloadDroppedFile$3 = () => {
    return null;
},
cgxgbta_AssetLoadImpl_lambda$downloadDroppedFile$2 = $reason => {
    return $rt_s(33);
},
cgxgbta_AssetLoadImpl_lambda$downloadDroppedFile$1 = ($config, $array) => {
    let $length, $arr, $i, var$6, $fileData;
    $length = $array.length;
    $arr = $rt_createArray(cgxgbtf_FileData, $length);
    $i = 0;
    while ($i < $length) {
        var$6 = $arr.data;
        $fileData = $array[$i];
        var$6[$i] = $fileData;
        $i = $i + 1 | 0;
    }
    $config.$windowListener.$filesDropped($arr);
    return $rt_s(34);
},
cgxgbta_AssetLoadImpl_lambda$getFile$0 = ($this, $fileWrapper, $name, $resolve, $reject) => {
    let $fileReader, var$6;
    $fileReader = new FileReader();
    $fileReader.readAsArrayBuffer($fileWrapper);
    var$6 = cgxgbta_AssetLoadImpl$4__init_0($this, $name, $resolve);
    $fileReader.addEventListener("load", otji_JS_function(otji_JSWrapper_unwrap(var$6), "handleEvent"));
},
jur_AbstractCharClass$LazyWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyWord__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyWord__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyWord();
    jur_AbstractCharClass$LazyWord__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyWord_computeValue = $this => {
    return ((((jur_CharClass__init_()).$add0(97, 122)).$add0(65, 90)).$add0(48, 57)).$add(95);
},
jur_AbstractCharClass$LazyNonWord = $rt_classWithoutFields(jur_AbstractCharClass$LazyWord),
jur_AbstractCharClass$LazyNonWord__init_ = $this => {
    jur_AbstractCharClass$LazyWord__init_($this);
},
jur_AbstractCharClass$LazyNonWord__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyNonWord();
    jur_AbstractCharClass$LazyNonWord__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyNonWord_computeValue = $this => {
    let $chCl;
    $chCl = (jur_AbstractCharClass$LazyWord_computeValue($this)).$setNegative(1);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function jl_Enum() {
    let a = this; jl_Object.call(a);
    a.$name1 = null;
    a.$ordinal0 = 0;
}
let jl_Enum__init_ = ($this, $name, $ordinal) => {
    jl_Object__init_($this);
    $this.$name1 = $name;
    $this.$ordinal0 = $ordinal;
},
jl_Enum_ordinal = $this => {
    return $this.$ordinal0;
},
jl_Enum_toString = $this => {
    return $this.$name1.$toString();
},
cbg_Application$ApplicationType = $rt_classWithoutFields(jl_Enum),
cbg_Application$ApplicationType_Android = null,
cbg_Application$ApplicationType_Desktop = null,
cbg_Application$ApplicationType_HeadlessDesktop = null,
cbg_Application$ApplicationType_Applet = null,
cbg_Application$ApplicationType_WebGL = null,
cbg_Application$ApplicationType_iOS = null,
cbg_Application$ApplicationType_$VALUES = null,
cbg_Application$ApplicationType_$callClinit = () => {
    cbg_Application$ApplicationType_$callClinit = $rt_eraseClinit(cbg_Application$ApplicationType);
    cbg_Application$ApplicationType__clinit_();
},
cbg_Application$ApplicationType__init_0 = ($this, var$1, var$2) => {
    cbg_Application$ApplicationType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cbg_Application$ApplicationType__init_ = (var_0, var_1) => {
    let var_2 = new cbg_Application$ApplicationType();
    cbg_Application$ApplicationType__init_0(var_2, var_0, var_1);
    return var_2;
},
cbg_Application$ApplicationType_$values = () => {
    let var$1, var$2;
    cbg_Application$ApplicationType_$callClinit();
    var$1 = $rt_createArray(cbg_Application$ApplicationType, 6);
    var$2 = var$1.data;
    var$2[0] = cbg_Application$ApplicationType_Android;
    var$2[1] = cbg_Application$ApplicationType_Desktop;
    var$2[2] = cbg_Application$ApplicationType_HeadlessDesktop;
    var$2[3] = cbg_Application$ApplicationType_Applet;
    var$2[4] = cbg_Application$ApplicationType_WebGL;
    var$2[5] = cbg_Application$ApplicationType_iOS;
    return var$1;
},
cbg_Application$ApplicationType__clinit_ = () => {
    cbg_Application$ApplicationType_Android = cbg_Application$ApplicationType__init_($rt_s(35), 0);
    cbg_Application$ApplicationType_Desktop = cbg_Application$ApplicationType__init_($rt_s(36), 1);
    cbg_Application$ApplicationType_HeadlessDesktop = cbg_Application$ApplicationType__init_($rt_s(37), 2);
    cbg_Application$ApplicationType_Applet = cbg_Application$ApplicationType__init_($rt_s(38), 3);
    cbg_Application$ApplicationType_WebGL = cbg_Application$ApplicationType__init_($rt_s(39), 4);
    cbg_Application$ApplicationType_iOS = cbg_Application$ApplicationType__init_($rt_s(40), 5);
    cbg_Application$ApplicationType_$VALUES = cbg_Application$ApplicationType_$values();
};
function jur_AbstractSet() {
    let a = this; jl_Object.call(a);
    a.$next1 = null;
    a.$isSecondPassVisited = 0;
    a.$index7 = null;
    a.$type7 = 0;
}
let jur_AbstractSet_counter = 0,
jur_AbstractSet_$callClinit = () => {
    jur_AbstractSet_$callClinit = $rt_eraseClinit(jur_AbstractSet);
    jur_AbstractSet__clinit_();
},
jur_AbstractSet__init_ = $this => {
    let var$1;
    jur_AbstractSet_$callClinit();
    jl_Object__init_($this);
    var$1 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$1 + 1 | 0;
    $this.$index7 = jl_Integer_toString(var$1);
},
jur_AbstractSet__init_0 = ($this, $n) => {
    let var$2;
    jur_AbstractSet_$callClinit();
    jl_Object__init_($this);
    var$2 = jur_AbstractSet_counter;
    jur_AbstractSet_counter = var$2 + 1 | 0;
    $this.$index7 = jl_Integer_toString(var$2);
    $this.$next1 = $n;
},
jur_AbstractSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $length;
    $length = $matchResult.$getRightBound();
    while (true) {
        if ($stringIndex > $length)
            return (-1);
        if ($this.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
},
jur_AbstractSet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($this.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
},
jur_AbstractSet_setType = ($this, $type) => {
    $this.$type7 = $type;
},
jur_AbstractSet_getType = $this => {
    return $this.$type7;
},
jur_AbstractSet_getQualifiedName = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$index7;
    var$2 = $this.$getName();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(var$3, 60), var$1), 58), var$2), 62);
    return jl_StringBuilder_toString(var$3);
},
jur_AbstractSet_toString = $this => {
    return $this.$getQualifiedName();
},
jur_AbstractSet_getNext = $this => {
    return $this.$next1;
},
jur_AbstractSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_AbstractSet_first = ($this, $set) => {
    return 1;
},
jur_AbstractSet_processBackRefReplacement = $this => {
    return null;
},
jur_AbstractSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$next1 !== null) {
        if (!$this.$next1.$isSecondPassVisited) {
            $set = $this.$next1.$processBackRefReplacement();
            if ($set !== null) {
                $this.$next1.$isSecondPassVisited = 1;
                $this.$next1 = $set;
            }
            $this.$next1.$processSecondPass();
        } else if ($this.$next1 instanceof jur_SingleSet && $this.$next1.$fSet.$isBackReferenced)
            $this.$next1 = $this.$next1.$next1;
    }
},
jur_AbstractSet__clinit_ = () => {
    jur_AbstractSet_counter = 1;
};
function jur_LeafSet() {
    jur_AbstractSet.call(this);
    this.$charCount0 = 0;
}
let jur_LeafSet__init_0 = ($this, $next) => {
    jur_AbstractSet__init_0($this, $next);
    $this.$charCount0 = 1;
    $this.$setType(1);
},
jur_LeafSet__init_ = $this => {
    jur_AbstractSet__init_($this);
    $this.$charCount0 = 1;
},
jur_LeafSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    if (($stringIndex + $this.$charCount() | 0) > $matchResult.$getRightBound()) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $shift = $this.$accepts($stringIndex, $testString);
    if ($shift < 0)
        return (-1);
    return $this.$next1.$matches($stringIndex + $shift | 0, $testString, $matchResult);
},
jur_LeafSet_charCount = $this => {
    return $this.$charCount0;
},
jur_LeafSet_hasConsumed = ($this, $mr) => {
    return 1;
};
function jur_CISequenceSet() {
    jur_LeafSet.call(this);
    this.$string2 = null;
}
let jur_CISequenceSet__init_ = ($this, $substring) => {
    jur_LeafSet__init_($this);
    $this.$string2 = $substring.$toString();
    $this.$charCount0 = $substring.$length();
},
jur_CISequenceSet__init_0 = var_0 => {
    let var_1 = new jur_CISequenceSet();
    jur_CISequenceSet__init_(var_1, var_0);
    return var_1;
},
jur_CISequenceSet_accepts = ($this, $strIndex, $testString) => {
    let $i, var$4, var$5, var$6;
    $i = 0;
    while (true) {
        if ($i >= $this.$string2.$length())
            return $this.$string2.$length();
        var$4 = $this.$string2.$charAt($i);
        var$5 = $strIndex + $i | 0;
        if (var$4 != $testString.$charAt(var$5)) {
            var$6 = $this.$string2;
            if (jur_Pattern_getSupplement(var$6.$charAt($i)) != $testString.$charAt(var$5))
                break;
        }
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_CISequenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$string2;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(41)), var$1);
    return jl_StringBuilder_toString(var$2);
},
cbg_InputProcessor = $rt_classWithoutFields(0),
cbg_InputAdapter = $rt_classWithoutFields(),
cbg_InputAdapter__init_ = $this => {
    jl_Object__init_($this);
},
cbg_InputAdapter__init_0 = () => {
    let var_0 = new cbg_InputAdapter();
    cbg_InputAdapter__init_(var_0);
    return var_0;
},
cbg_InputAdapter_keyTyped = ($this, $character) => {
    return 0;
},
cbg_InputAdapter_mouseMoved = ($this, $screenX, $screenY) => {
    return 0;
};
function cbgi_GestureDetector() {
    let a = this; cbg_InputAdapter.call(a);
    a.$listener = null;
    a.$tapRectangleWidth = 0.0;
    a.$tapRectangleHeight = 0.0;
    a.$tapCountInterval = Long_ZERO;
    a.$longPressSeconds = 0.0;
    a.$maxFlingDelay = Long_ZERO;
    a.$inTapRectangle = 0;
    a.$tapCount = 0;
    a.$lastTapTime = Long_ZERO;
    a.$lastTapX = 0.0;
    a.$lastTapY = 0.0;
    a.$lastTapButton = 0;
    a.$lastTapPointer = 0;
    a.$longPressFired = 0;
    a.$pinching = 0;
    a.$panning = 0;
    a.$tracker = null;
    a.$tapRectangleCenterX = 0.0;
    a.$tapRectangleCenterY = 0.0;
    a.$touchDownTime = Long_ZERO;
    a.$pointer1 = null;
    a.$pointer2 = null;
    a.$initialPointer1 = null;
    a.$initialPointer2 = null;
    a.$longPressTask = null;
}
let cbgi_GestureDetector__init_0 = ($this, $listener) => {
    cbgi_GestureDetector__init_1($this, 20.0, 0.4000000059604645, 1.100000023841858, 2.147483648E9, $listener);
},
cbgi_GestureDetector__init_4 = var_0 => {
    let var_1 = new cbgi_GestureDetector();
    cbgi_GestureDetector__init_0(var_1, var_0);
    return var_1;
},
cbgi_GestureDetector__init_1 = ($this, $halfTapSquareSize, $tapCountInterval, $longPressDuration, $maxFlingDelay, $listener) => {
    cbgi_GestureDetector__init_($this, $halfTapSquareSize, $halfTapSquareSize, $tapCountInterval, $longPressDuration, $maxFlingDelay, $listener);
},
cbgi_GestureDetector__init_3 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cbgi_GestureDetector();
    cbgi_GestureDetector__init_1(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cbgi_GestureDetector__init_ = ($this, $halfTapRectangleWidth, $halfTapRectangleHeight, $tapCountInterval, $longPressDuration, $maxFlingDelay, $listener) => {
    cbg_InputAdapter__init_($this);
    $this.$tracker = cbgi_GestureDetector$VelocityTracker__init_0();
    $this.$pointer1 = cbgm_Vector2__init_();
    $this.$pointer2 = cbgm_Vector2__init_();
    $this.$initialPointer1 = cbgm_Vector2__init_();
    $this.$initialPointer2 = cbgm_Vector2__init_();
    $this.$longPressTask = cbgi_GestureDetector$1__init_0($this);
    if ($listener === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(42)));
    $this.$tapRectangleWidth = $halfTapRectangleWidth;
    $this.$tapRectangleHeight = $halfTapRectangleHeight;
    $this.$tapCountInterval = Long_fromNumber($tapCountInterval * 1.0E9);
    $this.$longPressSeconds = $longPressDuration;
    $this.$maxFlingDelay = Long_fromNumber($maxFlingDelay * 1.0E9);
    $this.$listener = $listener;
},
cbgi_GestureDetector__init_2 = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new cbgi_GestureDetector();
    cbgi_GestureDetector__init_(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
cbgi_GestureDetector_touchDown = ($this, $x, $y, $pointer, $button) => {
    return $this.$touchDown($x, $y, $pointer, $button);
},
cbgi_GestureDetector_touchDown0 = ($this, $x, $y, $pointer, $button) => {
    if ($pointer > 1)
        return 0;
    if ($pointer) {
        $this.$pointer2.$set2($x, $y);
        $this.$inTapRectangle = 0;
        $this.$pinching = 1;
        $this.$initialPointer1.$set5($this.$pointer1);
        $this.$initialPointer2.$set5($this.$pointer2);
        $this.$longPressTask.$cancel();
    } else {
        $this.$pointer1.$set2($x, $y);
        $this.$touchDownTime = cbg_Gdx_input.$getCurrentEventTime();
        $this.$tracker.$start($x, $y, $this.$touchDownTime);
        if (cbg_Gdx_input.$isTouched(1)) {
            $this.$inTapRectangle = 0;
            $this.$pinching = 1;
            $this.$initialPointer1.$set5($this.$pointer1);
            $this.$initialPointer2.$set5($this.$pointer2);
            $this.$longPressTask.$cancel();
        } else {
            $this.$inTapRectangle = 1;
            $this.$pinching = 0;
            $this.$longPressFired = 0;
            $this.$tapRectangleCenterX = $x;
            $this.$tapRectangleCenterY = $y;
            if (!$this.$longPressTask.$isScheduled())
                cbgu_Timer_schedule($this.$longPressTask, $this.$longPressSeconds);
        }
    }
    return $this.$listener.$touchDown($x, $y, $pointer, $button);
},
cbgi_GestureDetector_touchDragged = ($this, $x, $y, $pointer) => {
    return $this.$touchDragged($x, $y, $pointer);
},
cbgi_GestureDetector_touchDragged0 = ($this, $x, $y, $pointer) => {
    let $result;
    if ($pointer > 1)
        return 0;
    if ($this.$longPressFired)
        return 0;
    if ($pointer)
        $this.$pointer2.$set2($x, $y);
    else
        $this.$pointer1.$set2($x, $y);
    if ($this.$pinching) {
        $result = $this.$listener.$pinch($this.$initialPointer1, $this.$initialPointer2, $this.$pointer1, $this.$pointer2);
        return !$this.$listener.$zoom($this.$initialPointer1.$dst($this.$initialPointer2), $this.$pointer1.$dst($this.$pointer2)) && !$result ? 0 : 1;
    }
    $this.$tracker.$update($x, $y, cbg_Gdx_input.$getCurrentEventTime());
    if ($this.$inTapRectangle && !cbgi_GestureDetector_isWithinTapRectangle($this, $x, $y, $this.$tapRectangleCenterX, $this.$tapRectangleCenterY)) {
        $this.$longPressTask.$cancel();
        $this.$inTapRectangle = 0;
    }
    if ($this.$inTapRectangle)
        return 0;
    $this.$panning = 1;
    return $this.$listener.$pan($x, $y, $this.$tracker.$deltaX0, $this.$tracker.$deltaY0);
},
cbgi_GestureDetector_touchUp = ($this, $x, $y, $pointer, $button) => {
    return $this.$touchUp($x, $y, $pointer, $button);
},
cbgi_GestureDetector_touchUp0 = ($this, $x, $y, $pointer, $button) => {
    let $wasPanning, var$6, var$7, $handled, $time;
    if ($pointer > 1)
        return 0;
    if ($this.$inTapRectangle && !cbgi_GestureDetector_isWithinTapRectangle($this, $x, $y, $this.$tapRectangleCenterX, $this.$tapRectangleCenterY))
        $this.$inTapRectangle = 0;
    $wasPanning = $this.$panning;
    $this.$panning = 0;
    $this.$longPressTask.$cancel();
    if ($this.$longPressFired)
        return 0;
    if ($this.$inTapRectangle) {
        a: {
            if ($this.$lastTapButton == $button && $this.$lastTapPointer == $pointer && Long_le(Long_sub(cbgu_TimeUtils_nanoTime(), $this.$lastTapTime), $this.$tapCountInterval)) {
                var$6 = $this.$lastTapX;
                var$7 = $this.$lastTapY;
                if (cbgi_GestureDetector_isWithinTapRectangle($this, $x, $y, var$6, var$7))
                    break a;
            }
            $this.$tapCount = 0;
        }
        $this.$tapCount = $this.$tapCount + 1 | 0;
        $this.$lastTapTime = cbgu_TimeUtils_nanoTime();
        $this.$lastTapX = $x;
        $this.$lastTapY = $y;
        $this.$lastTapButton = $button;
        $this.$lastTapPointer = $pointer;
        $this.$touchDownTime = Long_ZERO;
        return $this.$listener.$tap($x, $y, $this.$tapCount, $button);
    }
    if ($this.$pinching) {
        $this.$pinching = 0;
        $this.$listener.$pinchStop();
        $this.$panning = 1;
        if ($pointer)
            $this.$tracker.$start($this.$pointer1.$x0, $this.$pointer1.$y0, cbg_Gdx_input.$getCurrentEventTime());
        else
            $this.$tracker.$start($this.$pointer2.$x0, $this.$pointer2.$y0, cbg_Gdx_input.$getCurrentEventTime());
        return 0;
    }
    $handled = 0;
    if ($wasPanning && !$this.$panning)
        $handled = $this.$listener.$panStop($x, $y, $pointer, $button);
    $time = cbg_Gdx_input.$getCurrentEventTime();
    if (Long_le(Long_sub($time, $this.$touchDownTime), $this.$maxFlingDelay)) {
        $this.$tracker.$update($x, $y, $time);
        $handled = !$this.$listener.$fling($this.$tracker.$getVelocityX(), $this.$tracker.$getVelocityY(), $button) && !$handled ? 0 : 1;
    }
    $this.$touchDownTime = Long_ZERO;
    return $handled;
},
cbgi_GestureDetector_isWithinTapRectangle = ($this, $x, $y, $centerX, $centerY) => {
    return jl_Math_abs($x - $centerX) < $this.$tapRectangleWidth && jl_Math_abs($y - $centerY) < $this.$tapRectangleHeight ? 1 : 0;
},
jl_CharSequence = $rt_classWithoutFields(0),
bl_btMotionState$getWorldTransform = $rt_classWithoutFields(0),
cbgu_Pools = $rt_classWithoutFields(),
cbgu_Pools_typePools = null,
cbgu_Pools_supplierPoolsCache = null,
cbgu_Pools_$callClinit = () => {
    cbgu_Pools_$callClinit = $rt_eraseClinit(cbgu_Pools);
    cbgu_Pools__clinit_();
},
cbgu_Pools_get0 = ($poolTypeSupplier, $max) => {
    let $pool, $tmp_0, $type;
    cbgu_Pools_$callClinit();
    $pool = cbgu_Pools_supplierPoolsCache.$get2(jl_Object_getClass($poolTypeSupplier));
    if ($pool === null) {
        $tmp_0 = $poolTypeSupplier.$get3();
        $type = jl_Object_getClass($tmp_0);
        $pool = cbgu_Pools_typePools.$get2($type);
        if ($pool === null) {
            $pool = cbgu_DefaultPool__init_0($poolTypeSupplier, 4, $max);
            cbgu_Pools_typePools.$put($type, $pool);
        }
        cbgu_Pools_supplierPoolsCache.$put(jl_Object_getClass($poolTypeSupplier), $pool);
    }
    return $pool;
},
cbgu_Pools_get = $poolTypeSupplier => {
    cbgu_Pools_$callClinit();
    return cbgu_Pools_get0($poolTypeSupplier, 100);
},
cbgu_Pools_obtain = $poolTypeSupplier => {
    cbgu_Pools_$callClinit();
    return (cbgu_Pools_get($poolTypeSupplier)).$obtain0();
},
cbgu_Pools_free = $object => {
    let $pool;
    cbgu_Pools_$callClinit();
    if ($object === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(43)));
    $pool = cbgu_Pools_typePools.$get2(jl_Object_getClass($object));
    if ($pool === null)
        return;
    $pool.$free($object);
},
cbgu_Pools_freeAll = ($objects, $samePool) => {
    let $pool, $i, $n, $object;
    cbgu_Pools_$callClinit();
    if ($objects === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(44)));
    $pool = null;
    $i = 0;
    $n = $objects.$size0;
    while ($i < $n) {
        a: {
            $object = $objects.$get($i);
            if ($object !== null) {
                if ($pool === null) {
                    $pool = cbgu_Pools_typePools.$get2(jl_Object_getClass($object));
                    if ($pool === null)
                        break a;
                }
                $pool.$free($object);
                if (!$samePool)
                    $pool = null;
            }
        }
        $i = $i + 1 | 0;
    }
},
cbgu_Pools__clinit_ = () => {
    cbgu_Pools_typePools = cbgu_ObjectMap__init_();
    cbgu_Pools_supplierPoolsCache = cbgu_ObjectMap__init_();
};
function cbgm_Interpolation$SwingOut() {
    cbgm_Interpolation.call(this);
    this.$scale1 = 0.0;
}
let cbgm_Interpolation$SwingOut__init_ = ($this, $scale) => {
    cbgm_Interpolation__init_($this);
    $this.$scale1 = $scale;
},
cbgm_Interpolation$SwingOut__init_0 = var_0 => {
    let var_1 = new cbgm_Interpolation$SwingOut();
    cbgm_Interpolation$SwingOut__init_(var_1, var_0);
    return var_1;
};
function jur_AbstractCharClass$LazyCategory() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category1 = 0;
    a.$mayContainSupplCodepoints2 = 0;
    a.$containsAllSurrogates0 = 0;
}
let jur_AbstractCharClass$LazyCategory__init_0 = ($this, $cat, $mayContainSupplCodepoints) => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$mayContainSupplCodepoints2 = $mayContainSupplCodepoints;
    $this.$category1 = $cat;
},
jur_AbstractCharClass$LazyCategory__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyCategory__init_1 = ($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$containsAllSurrogates0 = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints2 = $mayContainSupplCodepoints;
    $this.$category1 = $cat;
},
jur_AbstractCharClass$LazyCategory__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AbstractCharClass$LazyCategory();
    jur_AbstractCharClass$LazyCategory__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AbstractCharClass$LazyCategory_computeValue = $this => {
    let $chCl;
    $chCl = jur_UnicodeCategory__init_0($this.$category1);
    if ($this.$containsAllSurrogates0)
        $chCl.$lowHighSurrogates.$set6(0, 2048);
    $chCl.$mayContainSupplCodepoints0 = $this.$mayContainSupplCodepoints2;
    return $chCl;
};
function cbgm_Interpolation$Exp() {
    let a = this; cbgm_Interpolation.call(a);
    a.$value11 = 0.0;
    a.$power0 = 0.0;
    a.$min6 = 0.0;
    a.$scale2 = 0.0;
}
let cbgm_Interpolation$Exp__init_ = ($this, $value, $power) => {
    cbgm_Interpolation__init_($this);
    $this.$value11 = $value;
    $this.$power0 = $power;
    $this.$min6 = jl_Math_pow($value,  -$power);
    $this.$scale2 = 1.0 / (1.0 - $this.$min6);
},
cbgm_Interpolation$Exp__init_0 = (var_0, var_1) => {
    let var_2 = new cbgm_Interpolation$Exp();
    cbgm_Interpolation$Exp__init_(var_2, var_0, var_1);
    return var_2;
},
otji_JSWrapper$Helper = $rt_classWithoutFields(),
otji_JSWrapper$Helper_hashCodes = null,
otji_JSWrapper$Helper_wrappers = null,
otji_JSWrapper$Helper_stringWrappers = null,
otji_JSWrapper$Helper_numberWrappers = null,
otji_JSWrapper$Helper_undefinedWrapper = null,
otji_JSWrapper$Helper_stringFinalizationRegistry = null,
otji_JSWrapper$Helper_numberFinalizationRegistry = null,
otji_JSWrapper$Helper_$callClinit = () => {
    otji_JSWrapper$Helper_$callClinit = $rt_eraseClinit(otji_JSWrapper$Helper);
    otji_JSWrapper$Helper__clinit_();
},
otji_JSWrapper$Helper_lambda$static$1 = $token => {
    otji_JSWrapper$Helper_$callClinit();
    otji_JSWrapper$Helper_numberWrappers.delete($token);
},
otji_JSWrapper$Helper_lambda$static$0 = $token => {
    otji_JSWrapper$Helper_$callClinit();
    otji_JSWrapper$Helper_stringWrappers.delete($token);
},
otji_JSWrapper$Helper__clinit_ = () => {
    let var$1;
    otji_JSWrapper$Helper_hashCodes = new WeakMap();
    var$1 = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new WeakMap();
    otji_JSWrapper$Helper_wrappers = var$1;
    var$1 = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new Map();
    otji_JSWrapper$Helper_stringWrappers = var$1;
    var$1 = !(typeof WeakRef !== 'undefined' ? 1 : 0) ? null : new Map();
    otji_JSWrapper$Helper_numberWrappers = var$1;
    if (otji_JSWrapper$Helper_stringWrappers === null)
        var$1 = null;
    else {
        var$1 = otji_JSWrapper$Helper$_clinit_$lambda$_3_0__init_0();
        var$1 = new FinalizationRegistry(otji_JS_function(otji_JSWrapper_unwrap(var$1), "accept"));
    }
    otji_JSWrapper$Helper_stringFinalizationRegistry = var$1;
    if (otji_JSWrapper$Helper_numberWrappers === null)
        var$1 = null;
    else {
        var$1 = otji_JSWrapper$Helper$_clinit_$lambda$_3_1__init_0();
        var$1 = new FinalizationRegistry(otji_JS_function(otji_JSWrapper_unwrap(var$1), "accept"));
    }
    otji_JSWrapper$Helper_numberFinalizationRegistry = var$1;
};
function jur_FSet() {
    let a = this; jur_AbstractSet.call(a);
    a.$isBackReferenced = 0;
    a.$groupIndex0 = 0;
}
let jur_FSet_posFSet = null,
jur_FSet_$callClinit = () => {
    jur_FSet_$callClinit = $rt_eraseClinit(jur_FSet);
    jur_FSet__clinit_();
},
jur_FSet__init_ = ($this, $groupIndex) => {
    jur_FSet_$callClinit();
    jur_AbstractSet__init_($this);
    $this.$groupIndex0 = $groupIndex;
},
jur_FSet__init_0 = var_0 => {
    let var_1 = new jur_FSet();
    jur_FSet__init_(var_1, var_0);
    return var_1;
},
jur_FSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $end, $shift;
    $end = $matchResult.$getEnd($this.$groupIndex0);
    $matchResult.$setEnd($this.$groupIndex0, $stringIndex);
    $shift = $this.$next1.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $matchResult.$setEnd($this.$groupIndex0, $end);
    return $shift;
},
jur_FSet_getGroupIndex = $this => {
    return $this.$groupIndex0;
},
jur_FSet_getName = $this => {
    return $rt_s(45);
},
jur_FSet_hasConsumed = ($this, $mr) => {
    return 0;
},
jur_FSet__clinit_ = () => {
    jur_FSet_posFSet = jur_FSet$PossessiveFSet__init_0();
},
jur_BehindFSet = $rt_classWithoutFields(jur_FSet),
jur_BehindFSet__init_ = ($this, $groupIndex) => {
    jur_FSet__init_($this, $groupIndex);
},
jur_BehindFSet__init_0 = var_0 => {
    let var_1 = new jur_BehindFSet();
    jur_BehindFSet__init_(var_1, var_0);
    return var_1;
},
jur_BehindFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $gr, $rightBound;
    $gr = $this.$getGroupIndex();
    $rightBound = $matchResult.$getConsumed($gr);
    if ($rightBound != $stringIndex)
        $stringIndex = (-1);
    return $stringIndex;
},
jur_BehindFSet_getName = $this => {
    return $rt_s(46);
};
function jur_JointSet() {
    let a = this; jur_AbstractSet.call(a);
    a.$children = null;
    a.$fSet = null;
    a.$groupIndex = 0;
}
let jur_JointSet__init_ = $this => {
    jur_AbstractSet__init_($this);
},
jur_JointSet__init_2 = () => {
    let var_0 = new jur_JointSet();
    jur_JointSet__init_(var_0);
    return var_0;
},
jur_JointSet__init_0 = ($this, $children, $fSet) => {
    jur_AbstractSet__init_($this);
    $this.$children = $children;
    $this.$fSet = $fSet;
    $this.$groupIndex = $fSet.$getGroupIndex();
},
jur_JointSet__init_1 = (var_0, var_1) => {
    let var_2 = new jur_JointSet();
    jur_JointSet__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_JointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $size, $i, $e, $shift;
    if ($this.$children === null)
        return (-1);
    $start = $matchResult.$getStart($this.$groupIndex);
    $matchResult.$setStart($this.$groupIndex, $stringIndex);
    $size = $this.$children.$size();
    $i = 0;
    while (true) {
        if ($i >= $size) {
            $matchResult.$setStart($this.$groupIndex, $start);
            return (-1);
        }
        $e = $this.$children.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
},
jur_JointSet_setNext = ($this, $next) => {
    $this.$fSet.$setNext($next);
},
jur_JointSet_getName = $this => {
    return $rt_s(47);
},
jur_JointSet_first = ($this, $set) => {
    let $i;
    a: {
        if ($this.$children !== null) {
            $i = $this.$children.$iterator0();
            while (true) {
                if (!$i.$hasNext())
                    break a;
                if (!($i.$next()).$first($set))
                    continue;
                else
                    return 1;
            }
        }
    }
    return 0;
},
jur_JointSet_hasConsumed = ($this, $matchResult) => {
    let var$2, var$3;
    a: {
        if ($matchResult.$getEnd($this.$groupIndex) >= 0) {
            var$2 = $matchResult.$getStart($this.$groupIndex);
            var$3 = $this.$groupIndex;
            if (var$2 == $matchResult.$getEnd(var$3)) {
                var$2 = 0;
                break a;
            }
        }
        var$2 = 1;
    }
    return var$2;
},
jur_JointSet_processSecondPass = $this => {
    let $childrenSize, $i, $child, $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$fSet !== null && !$this.$fSet.$isSecondPassVisited)
        $this.$fSet.$processSecondPass();
    a: {
        if ($this.$children !== null) {
            $childrenSize = $this.$children.$size();
            $i = 0;
            while (true) {
                if ($i >= $childrenSize)
                    break a;
                $child = $this.$children.$get($i);
                $set = $child.$processBackRefReplacement();
                if ($set === null)
                    $set = $child;
                else {
                    $child.$isSecondPassVisited = 1;
                    $this.$children.$remove1($i);
                    $this.$children.$add4($i, $set);
                }
                if (!$set.$isSecondPassVisited)
                    $set.$processSecondPass();
                $i = $i + 1 | 0;
            }
        }
    }
    if ($this.$next1 !== null)
        jur_AbstractSet_processSecondPass($this);
};
function jur_LowHighSurrogateRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$surrChars = null;
    a.$alt3 = 0;
}
let jur_LowHighSurrogateRangeSet__init_ = ($this, $surrChars) => {
    jur_JointSet__init_($this);
    $this.$surrChars = $surrChars.$getInstance();
    $this.$alt3 = $surrChars.$alt;
},
jur_LowHighSurrogateRangeSet__init_0 = var_0 => {
    let var_1 = new jur_LowHighSurrogateRangeSet();
    jur_LowHighSurrogateRangeSet__init_(var_1, var_0);
    return var_1;
},
jur_LowHighSurrogateRangeSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_LowHighSurrogateRangeSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $startStr, $strLength, var$6, var$7, $ch, $low, $high;
    $startStr = $matchResult.$getLeftBound();
    $strLength = $matchResult.$getRightBound();
    var$6 = $stringIndex + 1 | 0;
    var$7 = $rt_compare(var$6, $strLength);
    if (var$7 > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $ch = $testString.$charAt($stringIndex);
    if (!$this.$surrChars.$contains($ch))
        return (-1);
    if (jl_Character_isHighSurrogate($ch)) {
        if (var$7 < 0) {
            $low = $testString.$charAt(var$6);
            if (jl_Character_isLowSurrogate($low))
                return (-1);
        }
    } else if (jl_Character_isLowSurrogate($ch) && $stringIndex > $startStr) {
        $high = $testString.$charAt($stringIndex - 1 | 0);
        if (jl_Character_isHighSurrogate($high))
            return (-1);
    }
    return $this.$next1.$matches(var$6, $testString, $matchResult);
},
jur_LowHighSurrogateRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt3 ? $rt_s(48) : $rt_s(49);
    var$2 = $this.$surrChars.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(50)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
},
jl_AutoCloseable = $rt_classWithoutFields(0),
ji_Closeable = $rt_classWithoutFields(0),
ji_Flushable = $rt_classWithoutFields(0),
ji_OutputStream = $rt_classWithoutFields(),
ji_OutputStream__init_ = $this => {
    jl_Object__init_($this);
},
ji_OutputStream_write = ($this, $b) => {
    $this.$write($b, 0, $b.data.length);
};
function ji_ByteArrayOutputStream() {
    let a = this; ji_OutputStream.call(a);
    a.$buf = null;
    a.$count2 = 0;
}
let ji_ByteArrayOutputStream__init_ = ($this, $size) => {
    ji_OutputStream__init_($this);
    $this.$buf = $rt_createByteArray($size);
},
ji_ByteArrayOutputStream__init_0 = var_0 => {
    let var_1 = new ji_ByteArrayOutputStream();
    ji_ByteArrayOutputStream__init_(var_1, var_0);
    return var_1;
},
ji_ByteArrayOutputStream_write = ($this, $b, $off, $len) => {
    let $i, var$5, var$6, var$7, var$8;
    ji_ByteArrayOutputStream_ensureCapacity($this, $this.$count2 + $len | 0);
    $i = 0;
    while ($i < $len) {
        var$5 = $b.data;
        var$6 = $this.$buf.data;
        var$7 = $this.$count2;
        $this.$count2 = var$7 + 1 | 0;
        var$8 = $off + 1 | 0;
        var$6[var$7] = var$5[$off];
        $i = $i + 1 | 0;
        $off = var$8;
    }
},
ji_ByteArrayOutputStream_ensureCapacity = ($this, $capacity) => {
    let var$2;
    if ($this.$buf.data.length < $capacity) {
        var$2 = jl_Math_max($capacity, ($this.$buf.data.length * 3 | 0) / 2 | 0);
        $this.$buf = ju_Arrays_copyOf0($this.$buf, var$2);
    }
},
ji_ByteArrayOutputStream_toByteArray = $this => {
    return ju_Arrays_copyOf0($this.$buf, $this.$count2);
},
cbg_Gdx = $rt_classWithoutFields(),
cbg_Gdx_app = null,
cbg_Gdx_graphics = null,
cbg_Gdx_input = null,
cbg_Gdx_files = null,
cbg_Gdx_net = null,
cbg_Gdx_gl = null,
cbg_Gdx_gl20 = null,
cbg_Gdx_gl30 = null;
function jl_Throwable() {
    let a = this; jl_Object.call(a);
    a.$message = null;
    a.$cause = null;
    a.$suppressionEnabled = 0;
    a.$writableStackTrace = 0;
    a.$stackTrace = null;
}
let jl_Throwable__init_0 = $this => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
},
jl_Throwable__init_6 = () => {
    let var_0 = new jl_Throwable();
    jl_Throwable__init_0(var_0);
    return var_0;
},
jl_Throwable__init_2 = ($this, $message) => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$message = $message;
},
jl_Throwable__init_3 = var_0 => {
    let var_1 = new jl_Throwable();
    jl_Throwable__init_2(var_1, var_0);
    return var_1;
},
jl_Throwable__init_ = ($this, $message, $cause) => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$message = $message;
    $this.$cause = $cause;
},
jl_Throwable__init_5 = (var_0, var_1) => {
    let var_2 = new jl_Throwable();
    jl_Throwable__init_(var_2, var_0, var_1);
    return var_2;
},
jl_Throwable__init_1 = ($this, $cause) => {
    jl_Throwable_initNativeException($this);
    $this.$suppressionEnabled = 1;
    $this.$writableStackTrace = 1;
    $this.$fillInStackTrace();
    $this.$cause = $cause;
},
jl_Throwable__init_4 = var_0 => {
    let var_1 = new jl_Throwable();
    jl_Throwable__init_1(var_1, var_0);
    return var_1;
},
jl_Throwable_fillInStackTrace = $this => {
    return $this;
},
jl_Throwable_initNativeException = $this => {
    $rt_fillNativeException($this);
},
jl_Throwable_ensureStackTrace = $this => {
    return;
},
jl_Throwable_getMessage = $this => {
    return $this.$message;
},
jl_Throwable_getLocalizedMessage = $this => {
    return $this.$getMessage();
},
jl_Throwable_getCause = $this => {
    return $this.$cause === $this ? null : $this.$cause;
},
jl_Throwable_printStackTrace0 = $this => {
    $this.$printStackTrace(jl_System_err());
},
jl_Throwable_printStackTrace = ($this, $stream) => {
    let $message, var$3, var$4, var$5, var$6, $element;
    $stream.$print(jl_Class_getName(jl_Object_getClass($this)));
    $message = $this.$getLocalizedMessage();
    if ($message !== null) {
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(10)), $message);
        $stream.$print(jl_StringBuilder_toString(var$3));
    }
    a: {
        $stream.$println();
        jl_Throwable_ensureStackTrace($this);
        if ($this.$stackTrace !== null) {
            var$4 = $this.$stackTrace.data;
            var$5 = var$4.length;
            var$6 = 0;
            while (true) {
                if (var$6 >= var$5)
                    break a;
                $element = var$4[var$6];
                $stream.$print($rt_s(51));
                $stream.$println0($element);
                var$6 = var$6 + 1 | 0;
            }
        }
    }
    if ($this.$cause !== null && $this.$cause !== $this) {
        $stream.$print($rt_s(52));
        $this.$cause.$printStackTrace($stream);
    }
},
jl_Exception = $rt_classWithoutFields(jl_Throwable),
jl_Exception__init_ = $this => {
    jl_Throwable__init_0($this);
},
jl_Exception__init_2 = () => {
    let var_0 = new jl_Exception();
    jl_Exception__init_(var_0);
    return var_0;
},
jl_Exception__init_1 = ($this, $message, $cause) => {
    jl_Throwable__init_($this, $message, $cause);
},
jl_Exception__init_4 = (var_0, var_1) => {
    let var_2 = new jl_Exception();
    jl_Exception__init_1(var_2, var_0, var_1);
    return var_2;
},
jl_Exception__init_0 = ($this, $message) => {
    jl_Throwable__init_2($this, $message);
},
jl_Exception__init_3 = var_0 => {
    let var_1 = new jl_Exception();
    jl_Exception__init_0(var_1, var_0);
    return var_1;
},
jl_RuntimeException = $rt_classWithoutFields(jl_Exception),
jl_RuntimeException__init_ = $this => {
    jl_Exception__init_($this);
},
jl_RuntimeException__init_4 = () => {
    let var_0 = new jl_RuntimeException();
    jl_RuntimeException__init_(var_0);
    return var_0;
},
jl_RuntimeException__init_2 = ($this, $message, $cause) => {
    jl_Exception__init_1($this, $message, $cause);
},
jl_RuntimeException__init_3 = (var_0, var_1) => {
    let var_2 = new jl_RuntimeException();
    jl_RuntimeException__init_2(var_2, var_0, var_1);
    return var_2;
},
jl_RuntimeException__init_0 = ($this, $message) => {
    jl_Exception__init_0($this, $message);
},
jl_RuntimeException__init_1 = var_0 => {
    let var_1 = new jl_RuntimeException();
    jl_RuntimeException__init_0(var_1, var_0);
    return var_1;
},
jl_ClassCastException = $rt_classWithoutFields(jl_RuntimeException),
jl_ClassCastException__init_ = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
jl_ClassCastException__init_0 = var_0 => {
    let var_1 = new jl_ClassCastException();
    jl_ClassCastException__init_(var_1, var_0);
    return var_1;
};
function jur_QuantifierSet() {
    jur_AbstractSet.call(this);
    this.$innerSet = null;
}
let jur_QuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_AbstractSet__init_0($this, $next);
    $this.$innerSet = $innerSet;
    $this.$setType($type);
},
jur_QuantifierSet_getInnerSet = $this => {
    return $this.$innerSet;
},
jur_QuantifierSet_first = ($this, $set) => {
    return !$this.$innerSet.$first($set) && !$this.$next1.$first($set) ? 0 : 1;
},
jur_QuantifierSet_hasConsumed = ($this, $mr) => {
    return 1;
},
jur_QuantifierSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$next1 !== null && !$this.$next1.$isSecondPassVisited) {
        $set = $this.$next1.$processBackRefReplacement();
        if ($set !== null) {
            $this.$next1.$isSecondPassVisited = 1;
            $this.$next1 = $set;
        }
        $this.$next1.$processSecondPass();
    }
    if ($this.$innerSet !== null) {
        if (!$this.$innerSet.$isSecondPassVisited) {
            $set = $this.$innerSet.$processBackRefReplacement();
            if ($set !== null) {
                $this.$innerSet.$isSecondPassVisited = 1;
                $this.$innerSet = $set;
            }
            $this.$innerSet.$processSecondPass();
        } else if ($this.$innerSet instanceof jur_SingleSet && $this.$innerSet.$fSet.$isBackReferenced)
            $this.$innerSet = $this.$innerSet.$next1;
    }
},
jur_GroupQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet),
jur_GroupQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_GroupQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_GroupQuantifierSet();
    jur_GroupQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_GroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_GroupQuantifierSet_getName = $this => {
    return $rt_s(53);
},
jur_PosPlusGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_PosPlusGroupQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_GroupQuantifierSet__init_($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
},
jur_PosPlusGroupQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_PosPlusGroupQuantifierSet();
    jur_PosPlusGroupQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_PosPlusGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex, var$5;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        return (-1);
    if ($nextIndex > $stringIndex) {
        while (true) {
            var$5 = $this.$innerSet.$matches($nextIndex, $testString, $matchResult);
            if (var$5 <= $nextIndex)
                break;
            $nextIndex = var$5;
        }
        $stringIndex = $nextIndex;
    }
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
cbgf_FileHandle = $rt_classWithoutFields(),
cbgf_FileHandle__init_ = $this => {
    jl_Object__init_($this);
},
cbgf_FileHandle__init_0 = () => {
    let var_0 = new cbgf_FileHandle();
    cbgf_FileHandle__init_(var_0);
    return var_0;
},
cbgf_FileHandle_readString = ($this, $charset) => {
    let $output, $reader, var$4, var$5, var$6, $buffer, $length, $ex, $$je;
    $output = jl_StringBuilder__init_0(cbgf_FileHandle_estimateLength($this));
    $reader = null;
    a: {
        b: {
            try {
                var$4 = $reader;
                var$5 = $reader;
                if ($charset !== null) {
                    var$4 = $reader;
                    var$5 = $reader;
                    var$6 = new ji_InputStreamReader;
                    var$5 = var$6;
                    var$4 = var$6;
                    ji_InputStreamReader__init_1(var$6, $this.$read(), $charset);
                } else {
                    var$4 = $reader;
                    var$5 = $reader;
                    var$6 = new ji_InputStreamReader;
                    var$5 = var$6;
                    var$4 = var$6;
                    ji_InputStreamReader__init_0(var$6, $this.$read());
                }
                var$5 = var$6;
                var$4 = var$6;
                $buffer = $rt_createCharArray(256);
                while (true) {
                    var$4 = var$6;
                    var$5 = var$6;
                    $length = var$6.$read0($buffer);
                    if ($length == (-1))
                        break;
                    var$4 = var$6;
                    var$5 = var$6;
                    $output.$append7($buffer, 0, $length);
                }
                var$4 = var$6;
                var$5 = var$6;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    $ex = $$je;
                    break b;
                } else{
                    var$6 = $$je;
                    break a;
                }
            }
            cbgu_StreamUtils_closeQuietly(var$6);
            return $output.$toString();
        }
        try {
            var$5 = var$4;
            $rt_throw(cbgu_GdxRuntimeException__init_2((((jl_StringBuilder__init_()).$append1($rt_s(54))).$append($this)).$toString(), $ex));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$6 = $$je;

        }
    }
    cbgu_StreamUtils_closeQuietly(var$5);
    $rt_throw(var$6);
},
cbgf_FileHandle_readBytes = $this => {
    let $input, var$2, $ex, var$4, $$je;
    $input = $this.$read();
    a: {
        b: {
            try {
                var$2 = cbgu_StreamUtils_copyStreamToByteArray($input, cbgf_FileHandle_estimateLength($this));
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    $ex = $$je;
                    break b;
                } else{
                    var$4 = $$je;
                    break a;
                }
            }
            cbgu_StreamUtils_closeQuietly($input);
            return var$2;
        }
        try {
            $rt_throw(cbgu_GdxRuntimeException__init_2((((jl_StringBuilder__init_()).$append1($rt_s(55))).$append($this)).$toString(), $ex));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$4 = $$je;

        }
    }
    cbgu_StreamUtils_closeQuietly($input);
    $rt_throw(var$4);
},
cbgf_FileHandle_estimateLength = $this => {
    let $length;
    $length = Long_lo(($this.$length0()));
    if (!$length)
        $length = 512;
    return $length;
};
function cgxgbt_TeaFileHandle() {
    let a = this; cbgf_FileHandle.call(a);
    a.$file = null;
    a.$type0 = null;
    a.$teaFiles = null;
}
let cgxgbt_TeaFileHandle__init_ = ($this, $teaFiles, $fileName, $type) => {
    let var$4, var$5, var$6;
    cbgf_FileHandle__init_($this);
    cbg_Files$FileType_$callClinit();
    if ($type !== cbg_Files$FileType_Internal && $type !== cbg_Files$FileType_Classpath && $type !== cbg_Files$FileType_Local) {
        var$4 = new cbgu_GdxRuntimeException;
        var$5 = jl_String_valueOf($type);
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(56)), var$5), $rt_s(57));
        cbgu_GdxRuntimeException__init_0(var$4, jl_StringBuilder_toString(var$6));
        $rt_throw(var$4);
    }
    $this.$file = cgxgbt_TeaFileHandle_fixSlashes($fileName);
    $this.$type0 = $type;
    $this.$teaFiles = $teaFiles;
},
cgxgbt_TeaFileHandle__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbt_TeaFileHandle();
    cgxgbt_TeaFileHandle__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbt_TeaFileHandle_path = $this => {
    return $this.$file;
},
cgxgbt_TeaFileHandle_name = $this => {
    let $index;
    $index = $this.$file.$lastIndexOf(47);
    if ($index < 0)
        return $this.$file;
    return $this.$file.$substring0($index + 1 | 0);
},
cgxgbt_TeaFileHandle_nameWithoutExtension = $this => {
    let $name, $dotIndex;
    $name = $this.$name();
    $dotIndex = $name.$lastIndexOf(46);
    if ($dotIndex == (-1))
        return $name;
    return $name.$substring(0, $dotIndex);
},
cgxgbt_TeaFileHandle_type = $this => {
    return $this.$type0;
},
cgxgbt_TeaFileHandle_read = $this => {
    let $exists, var$2, $input, var$4, var$5, var$6;
    $exists = ($this.$teaFiles.$getFileDB($this.$type0)).$exists0($this);
    var$2 = $this.$type0;
    cbg_Files$FileType_$callClinit();
    if (var$2 !== cbg_Files$FileType_Classpath && !($this.$type0 === cbg_Files$FileType_Internal && !$exists) && !($this.$type0 === cbg_Files$FileType_Local && !$exists))
        return ($this.$teaFiles.$getFileDB($this.$type0)).$read1($this);
    $input = ($this.$teaFiles.$getFileDB(cbg_Files$FileType_Classpath)).$read1($this);
    if ($input !== null)
        return $input;
    var$2 = new cbgu_GdxRuntimeException;
    var$4 = $this.$file;
    var$5 = jl_String_valueOf($this.$type0);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, $rt_s(58)), var$4), $rt_s(59)), var$5), 41);
    cbgu_GdxRuntimeException__init_0(var$2, jl_StringBuilder_toString(var$6));
    $rt_throw(var$2);
},
cgxgbt_TeaFileHandle_readString0 = $this => {
    return $this.$readString(null);
},
cgxgbt_TeaFileHandle_readString = ($this, $charset) => {
    return cbgf_FileHandle_readString($this, $charset);
},
cgxgbt_TeaFileHandle_write = ($this, $append, $bufferSize) => {
    return cgxgbtf_FileDB_write($this.$teaFiles.$getFileDB($this.$type0), $this, $append, $bufferSize);
},
cgxgbt_TeaFileHandle_child = ($this, $name) => {
    let var$2, var$3, var$4, var$5, var$6;
    var$2 = new cgxgbt_TeaFileHandle;
    var$3 = $this.$teaFiles;
    if ($this.$file.$isEmpty())
        var$4 = $rt_s(60);
    else {
        var$5 = $this.$file;
        var$6 = !$this.$file.$endsWith($rt_s(32)) ? $rt_s(32) : $rt_s(60);
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, var$5), var$6);
        var$4 = jl_StringBuilder_toString(var$4);
    }
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, var$4), $name);
    cgxgbt_TeaFileHandle__init_(var$2, var$3, jl_StringBuilder_toString(var$5), $this.$type0);
    return var$2;
},
cgxgbt_TeaFileHandle_parent = $this => {
    let $index, $dir;
    $index = $this.$file.$lastIndexOf0($rt_s(32));
    $dir = $rt_s(60);
    if ($index > 0)
        $dir = $this.$file.$substring(0, $index);
    return cgxgbt_TeaFileHandle__init_0($this.$teaFiles, $dir, $this.$type0);
},
cgxgbt_TeaFileHandle_mkdirsInternal = $this => {
    ($this.$teaFiles.$getFileDB($this.$type0)).$mkdirs($this);
},
cgxgbt_TeaFileHandle_exists = $this => {
    let $exists, var$2;
    a: {
        $exists = ($this.$teaFiles.$getFileDB($this.$type0)).$exists0($this);
        cgxgbt_TeaFileHandle$1_$callClinit();
        switch (cgxgbt_TeaFileHandle$1_$SwitchMap$com$badlogic$gdx$Files$FileType.data[jl_Enum_ordinal($this.$type0)]) {
            case 1:
                if (!$exists)
                    break a;
                return 1;
            case 2:
                break a;
            default:
        }
        return $exists;
    }
    var$2 = $this.$teaFiles;
    cbg_Files$FileType_$callClinit();
    return (var$2.$getFileDB(cbg_Files$FileType_Classpath)).$exists0($this);
},
cgxgbt_TeaFileHandle_length = $this => {
    return ($this.$teaFiles.$getFileDB($this.$type0)).$length1($this);
},
cgxgbt_TeaFileHandle_toString = $this => {
    return $this.$file;
},
cgxgbt_TeaFileHandle_fixSlashes = $path => {
    let var$2;
    var$2 = $path.$replace($rt_s(31), $rt_s(32));
    if (var$2.$endsWith($rt_s(32)))
        var$2 = var$2.$substring(0, var$2.$length() - 1 | 0);
    return var$2;
},
cbgggus_BaseShapeBuilder = $rt_classWithoutFields(),
cbgggus_BaseShapeBuilder_tmpColor0 = null,
cbgggus_BaseShapeBuilder_tmpColor1 = null,
cbgggus_BaseShapeBuilder_tmpColor2 = null,
cbgggus_BaseShapeBuilder_tmpColor3 = null,
cbgggus_BaseShapeBuilder_tmpColor4 = null,
cbgggus_BaseShapeBuilder_tmpV0 = null,
cbgggus_BaseShapeBuilder_tmpV1 = null,
cbgggus_BaseShapeBuilder_tmpV2 = null,
cbgggus_BaseShapeBuilder_tmpV3 = null,
cbgggus_BaseShapeBuilder_tmpV4 = null,
cbgggus_BaseShapeBuilder_tmpV5 = null,
cbgggus_BaseShapeBuilder_tmpV6 = null,
cbgggus_BaseShapeBuilder_tmpV7 = null,
cbgggus_BaseShapeBuilder_vertTmp0 = null,
cbgggus_BaseShapeBuilder_vertTmp1 = null,
cbgggus_BaseShapeBuilder_vertTmp2 = null,
cbgggus_BaseShapeBuilder_vertTmp3 = null,
cbgggus_BaseShapeBuilder_vertTmp4 = null,
cbgggus_BaseShapeBuilder_vertTmp5 = null,
cbgggus_BaseShapeBuilder_vertTmp6 = null,
cbgggus_BaseShapeBuilder_vertTmp7 = null,
cbgggus_BaseShapeBuilder_vertTmp8 = null,
cbgggus_BaseShapeBuilder_matTmp1 = null,
cbgggus_BaseShapeBuilder_vectorPool = null,
cbgggus_BaseShapeBuilder_matrices4Pool = null,
cbgggus_BaseShapeBuilder_$callClinit = () => {
    cbgggus_BaseShapeBuilder_$callClinit = $rt_eraseClinit(cbgggus_BaseShapeBuilder);
    cbgggus_BaseShapeBuilder__clinit_();
},
cbgggus_BaseShapeBuilder_obtainV3 = () => {
    cbgggus_BaseShapeBuilder_$callClinit();
    return cbgggus_BaseShapeBuilder_vectorPool.$obtain0();
},
cbgggus_BaseShapeBuilder_freeAll = () => {
    cbgggus_BaseShapeBuilder_$callClinit();
    cbgggus_BaseShapeBuilder_vectorPool.$flush();
    cbgggus_BaseShapeBuilder_matrices4Pool.$flush();
},
cbgggus_BaseShapeBuilder__clinit_ = () => {
    cbgggus_BaseShapeBuilder_tmpColor0 = cbgg_Color__init_1();
    cbgggus_BaseShapeBuilder_tmpColor1 = cbgg_Color__init_1();
    cbgggus_BaseShapeBuilder_tmpColor2 = cbgg_Color__init_1();
    cbgggus_BaseShapeBuilder_tmpColor3 = cbgg_Color__init_1();
    cbgggus_BaseShapeBuilder_tmpColor4 = cbgg_Color__init_1();
    cbgggus_BaseShapeBuilder_tmpV0 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_tmpV1 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_tmpV2 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_tmpV3 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_tmpV4 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_tmpV5 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_tmpV6 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_tmpV7 = cbgm_Vector3__init_();
    cbgggus_BaseShapeBuilder_vertTmp0 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp1 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp2 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp3 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp4 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp5 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp6 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp7 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_vertTmp8 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    cbgggus_BaseShapeBuilder_matTmp1 = cbgm_Matrix4__init_();
    cbgggus_BaseShapeBuilder_vectorPool = cbgggus_BaseShapeBuilder$1__init_0();
    cbgggus_BaseShapeBuilder_matrices4Pool = cbgggus_BaseShapeBuilder$2__init_0();
};
function jl_AbstractStringBuilder() {
    let a = this; jl_Object.call(a);
    a.$buffer = null;
    a.$length2 = 0;
}
let jl_AbstractStringBuilder__init_0 = $this => {
    jl_AbstractStringBuilder__init_($this, 16);
},
jl_AbstractStringBuilder__init_2 = () => {
    let var_0 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_0(var_0);
    return var_0;
},
jl_AbstractStringBuilder__init_ = ($this, $capacity) => {
    jl_Object__init_($this);
    $this.$buffer = $rt_createCharArray($capacity);
},
jl_AbstractStringBuilder__init_1 = var_0 => {
    let var_1 = new jl_AbstractStringBuilder();
    jl_AbstractStringBuilder__init_(var_1, var_0);
    return var_1;
},
jl_AbstractStringBuilder_append7 = ($this, $obj) => {
    return $this.$insert0($this.$length2, $obj);
},
jl_AbstractStringBuilder_append = ($this, $string) => {
    return $this.$insert1($this.$length2, $string);
},
jl_AbstractStringBuilder_insert0 = ($this, $index, $string) => {
    let $i, var$4, var$5;
    if ($index >= 0 && $index <= $this.$length2) {
        if ($string === null)
            $string = $rt_s(61);
        else if ($string.$isEmpty())
            return $this;
        $this.$ensureCapacity($this.$length2 + $string.$length() | 0);
        $i = $this.$length2 - 1 | 0;
        while ($i >= $index) {
            $this.$buffer.data[$i + $string.$length() | 0] = $this.$buffer.data[$i];
            $i = $i + (-1) | 0;
        }
        $this.$length2 = $this.$length2 + $string.$length() | 0;
        $i = 0;
        while ($i < $string.$length()) {
            var$4 = $this.$buffer.data;
            var$5 = $index + 1 | 0;
            var$4[$index] = $string.$charAt($i);
            $i = $i + 1 | 0;
            $index = var$5;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
},
jl_AbstractStringBuilder_append3 = ($this, $value) => {
    return $this.$append3($value, 10);
},
jl_AbstractStringBuilder_append10 = ($this, $value, $radix) => {
    return $this.$insert2($this.$length2, $value, $radix);
},
jl_AbstractStringBuilder_insert8 = ($this, $target, $value, $radix) => {
    let $positive, var$5, var$6, $pos, $sz, $posLimit, var$10, var$11;
    $positive = 1;
    if ($value < 0) {
        $positive = 0;
        $value =  -$value | 0;
    }
    a: {
        if ($rt_ucmp($value, $radix) < 0) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$5 = $this.$buffer.data;
                var$6 = $target + 1 | 0;
                var$5[$target] = 45;
                $target = var$6;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit($value, $radix);
        } else {
            $pos = 1;
            $sz = 1;
            $posLimit = $rt_udiv((-1), $radix);
            b: {
                while (true) {
                    var$10 = $rt_imul($pos, $radix);
                    if ($rt_ucmp(var$10, $value) > 0) {
                        var$10 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if ($rt_ucmp(var$10, $posLimit) > 0)
                        break;
                    $pos = var$10;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                var$11 = $target;
            else {
                var$5 = $this.$buffer.data;
                var$11 = $target + 1 | 0;
                var$5[$target] = 45;
            }
            while (true) {
                if (!var$10)
                    break a;
                var$5 = $this.$buffer.data;
                var$6 = var$11 + 1 | 0;
                var$5[var$11] = jl_Character_forDigit($rt_udiv($value, var$10), $radix);
                $value = $rt_umod($value, var$10);
                var$10 = $rt_udiv(var$10, $radix);
                var$11 = var$6;
            }
        }
    }
    return $this;
},
jl_AbstractStringBuilder_append8 = ($this, $value) => {
    return $this.$insert3($this.$length2, $value);
},
jl_AbstractStringBuilder_insert4 = ($this, $target, $value) => {
    return $this.$insert4($target, $value, 10);
},
jl_AbstractStringBuilder_insert7 = ($this, $target, $value, $radix) => {
    let $positive, var$5, var$6, var$7, $sz, $pos, $posLimit, var$11, var$12;
    $positive = 1;
    if (Long_lt($value, Long_ZERO)) {
        $positive = 0;
        $value = Long_neg($value);
    }
    a: {
        var$5 = Long_fromInt($radix);
        if (jl_Long_compareUnsigned($value, var$5) < 0) {
            if ($positive)
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 1 | 0);
            else {
                jl_AbstractStringBuilder_insertSpace($this, $target, $target + 2 | 0);
                var$6 = $this.$buffer.data;
                var$7 = $target + 1 | 0;
                var$6[$target] = 45;
                $target = var$7;
            }
            $this.$buffer.data[$target] = jl_Character_forDigit(Long_lo($value), $radix);
        } else {
            $sz = 1;
            $pos = Long_fromInt(1);
            $posLimit = jl_Long_divideUnsigned(Long_fromInt(-1), var$5);
            b: {
                while (true) {
                    var$11 = Long_mul($pos, var$5);
                    if (jl_Long_compareUnsigned(var$11, $value) > 0) {
                        var$11 = $pos;
                        break b;
                    }
                    $sz = $sz + 1 | 0;
                    if (jl_Long_compareUnsigned(var$11, $posLimit) > 0)
                        break;
                    $pos = var$11;
                }
            }
            if (!$positive)
                $sz = $sz + 1 | 0;
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + $sz | 0);
            if ($positive)
                var$12 = $target;
            else {
                var$6 = $this.$buffer.data;
                var$12 = $target + 1 | 0;
                var$6[$target] = 45;
            }
            while (true) {
                if (Long_eq(var$11, Long_ZERO))
                    break a;
                var$6 = $this.$buffer.data;
                var$7 = var$12 + 1 | 0;
                var$6[var$12] = jl_Character_forDigit(Long_lo((jl_Long_divideUnsigned($value, var$11))), $radix);
                $value = jl_Long_remainderUnsigned($value, var$11);
                var$11 = jl_Long_divideUnsigned(var$11, var$5);
                var$12 = var$7;
            }
        }
    }
    return $this;
},
jl_AbstractStringBuilder_append6 = ($this, $value) => {
    return $this.$insert5($this.$length2, $value);
},
jl_AbstractStringBuilder_insert6 = ($this, $target, $value) => {
    let var$3, var$4, var$5, $number, $mantissa, $exp, $negative, $intPart, $sz, $digits, $zeros, $leadingZeros, $leadingZero, var$16, $pos, $i, $intDigit, var$20;
    var$3 = $rt_compare($value, 0.0);
    if (!var$3) {
        if (1.0 / $value === Infinity) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
            var$4 = $this.$buffer.data;
            var$3 = $target + 1 | 0;
            var$4[$target] = 48;
            var$4 = $this.$buffer.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 46;
            $this.$buffer.data[var$5] = 48;
            return $this;
        }
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 4 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 45;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 48;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 46;
        $this.$buffer.data[var$3] = 48;
        return $this;
    }
    if (isNaN($value) ? 1 : 0) {
        jl_AbstractStringBuilder_insertSpace($this, $target, $target + 3 | 0);
        var$4 = $this.$buffer.data;
        var$3 = $target + 1 | 0;
        var$4[$target] = 78;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 97;
        $this.$buffer.data[var$5] = 78;
        return $this;
    }
    if (!isFinite($value) ? 1 : 0) {
        if (var$3 > 0) {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 8 | 0);
            var$3 = $target;
        } else {
            jl_AbstractStringBuilder_insertSpace($this, $target, $target + 9 | 0);
            var$4 = $this.$buffer.data;
            var$3 = $target + 1 | 0;
            var$4[$target] = 45;
        }
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 73;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 110;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 102;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 110;
        var$4 = $this.$buffer.data;
        var$3 = var$5 + 1 | 0;
        var$4[var$5] = 105;
        var$4 = $this.$buffer.data;
        var$5 = var$3 + 1 | 0;
        var$4[var$3] = 116;
        $this.$buffer.data[var$5] = 121;
        return $this;
    }
    jl_AbstractStringBuilder$Constants_$callClinit();
    $number = jl_AbstractStringBuilder$Constants_floatAnalysisResult;
    otcit_FloatAnalyzer_analyze($value, $number);
    $mantissa = $number.$mantissa;
    $exp = $number.$exponent0;
    $negative = $number.$sign0;
    $intPart = 1;
    $sz = 1;
    if ($negative)
        $sz = 2;
    $digits = 9;
    $zeros = jl_AbstractStringBuilder_trailingDecimalZeros($mantissa);
    if ($zeros > 0)
        $digits = $digits - $zeros | 0;
    $leadingZeros = 0;
    $leadingZero = 0;
    if ($exp < 7 && $exp >= (-3)) {
        if ($exp >= 0) {
            $intPart = $exp + 1 | 0;
            $digits = jl_Math_max($digits, $intPart + 1 | 0);
            $exp = 0;
        } else {
            $intPart = 0;
            $leadingZeros = ( -$exp | 0) - 1 | 0;
            $leadingZero = 1;
            $sz = $sz + 1 | 0;
            $exp = 0;
        }
    }
    if ($exp) {
        $sz = $sz + 2 | 0;
        if (!($exp > (-10) && $exp < 10))
            $sz = $sz + 1 | 0;
        if ($exp < 0)
            $sz = $sz + 1 | 0;
    }
    if ($exp && $digits == $intPart)
        $digits = $digits + 1 | 0;
    var$3 = $sz + ($digits + $leadingZeros | 0) | 0;
    jl_AbstractStringBuilder_insertSpace($this, $target, $target + var$3 | 0);
    if (!$negative)
        var$16 = $target;
    else {
        var$4 = $this.$buffer.data;
        var$16 = $target + 1 | 0;
        var$4[$target] = 45;
    }
    $pos = 100000000;
    if ($leadingZero) {
        var$4 = $this.$buffer.data;
        var$3 = var$16 + 1 | 0;
        var$4[var$16] = 48;
        var$4 = $this.$buffer.data;
        var$16 = var$3 + 1 | 0;
        var$4[var$3] = 46;
        while (true) {
            var$3 = $leadingZeros + (-1) | 0;
            if ($leadingZeros <= 0)
                break;
            var$4 = $this.$buffer.data;
            var$5 = var$16 + 1 | 0;
            var$4[var$16] = 48;
            $leadingZeros = var$3;
            var$16 = var$5;
        }
    }
    $i = 0;
    while ($i < $digits) {
        if ($pos <= 0)
            $intDigit = 0;
        else {
            $intDigit = $mantissa / $pos | 0;
            $mantissa = $mantissa % $pos | 0;
        }
        var$4 = $this.$buffer.data;
        var$5 = var$16 + 1 | 0;
        var$4[var$16] = (48 + $intDigit | 0) & 65535;
        $intPart = $intPart + (-1) | 0;
        if ($intPart)
            var$16 = var$5;
        else {
            var$4 = $this.$buffer.data;
            var$16 = var$5 + 1 | 0;
            var$4[var$5] = 46;
        }
        $pos = $pos / 10 | 0;
        $i = $i + 1 | 0;
    }
    if ($exp) {
        var$4 = $this.$buffer.data;
        var$3 = var$16 + 1 | 0;
        var$4[var$16] = 69;
        if ($exp >= 0)
            var$5 = var$3;
        else {
            $exp =  -$exp | 0;
            var$4 = $this.$buffer.data;
            var$5 = var$3 + 1 | 0;
            var$4[var$3] = 45;
        }
        if ($exp < 10)
            var$20 = var$5;
        else {
            var$4 = $this.$buffer.data;
            var$20 = var$5 + 1 | 0;
            var$4[var$5] = (48 + ($exp / 10 | 0) | 0) & 65535;
        }
        $this.$buffer.data[var$20] = (48 + ($exp % 10 | 0) | 0) & 65535;
    }
    return $this;
},
jl_AbstractStringBuilder_trailingDecimalZeros = $n => {
    let $result, $zeros, var$4, var$5;
    if (!($n % 1000000000 | 0))
        return 9;
    $result = 0;
    $zeros = 1;
    if (!($n % 100000000 | 0)) {
        $result = 8;
        $zeros = 100000000;
    }
    var$4 = $zeros * 10000 | 0;
    if ($n % var$4 | 0)
        var$4 = $zeros;
    else
        $result = $result | 4;
    var$5 = var$4 * 100 | 0;
    if ($n % var$5 | 0)
        var$5 = var$4;
    else
        $result = $result | 2;
    if (!($n % (var$5 * 10 | 0) | 0))
        $result = $result | 1;
    return $result;
},
jl_AbstractStringBuilder_append0 = ($this, $c) => {
    return $this.$insert6($this.$length2, $c);
},
jl_AbstractStringBuilder_insert1 = ($this, $index, $c) => {
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + 1 | 0);
    $this.$buffer.data[$index] = $c;
    return $this;
},
jl_AbstractStringBuilder_insert3 = ($this, $index, $obj) => {
    return $this.$insert1($index, $obj === null ? $rt_s(61) : $obj.$toString());
},
jl_AbstractStringBuilder_append5 = ($this, $b) => {
    return $this.$insert7($this.$length2, $b);
},
jl_AbstractStringBuilder_insert2 = ($this, $index, $b) => {
    return $this.$insert1($index, !$b ? $rt_s(62) : $rt_s(63));
},
jl_AbstractStringBuilder_ensureCapacity = ($this, $capacity) => {
    let $newLength;
    if ($this.$buffer.data.length >= $capacity)
        return;
    $newLength = $this.$buffer.data.length >= 1073741823 ? 2147483647 : jl_Math_max($capacity, jl_Math_max($this.$buffer.data.length * 2 | 0, 5));
    $this.$buffer = ju_Arrays_copyOf1($this.$buffer, $newLength);
},
jl_AbstractStringBuilder_toString = $this => {
    return jl_String__init_($this.$buffer, 0, $this.$length2);
},
jl_AbstractStringBuilder_length = $this => {
    return $this.$length2;
},
jl_AbstractStringBuilder_charAt = ($this, $index) => {
    if ($index >= 0 && $index < $this.$length2)
        return $this.$buffer.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jl_AbstractStringBuilder_isEmpty = $this => {
    return $this.$length2 ? 0 : 1;
},
jl_AbstractStringBuilder_append4 = ($this, $s, $start, $end) => {
    return $this.$insert8($this.$length2, $s, $start, $end);
},
jl_AbstractStringBuilder_insert5 = ($this, $index, $s, $i, $end) => {
    let var$5, var$6;
    if ($i <= $end && $end <= $s.$length() && $i >= 0) {
        jl_AbstractStringBuilder_insertSpace($this, $index, ($index + $end | 0) - $i | 0);
        while ($i < $end) {
            var$5 = $this.$buffer.data;
            var$6 = $index + 1 | 0;
            var$5[$index] = $s.$charAt($i);
            $i = $i + 1 | 0;
            $index = var$6;
        }
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jl_AbstractStringBuilder_append9 = ($this, $s) => {
    return $this.$append8($s, 0, $s.$length());
},
jl_AbstractStringBuilder_append2 = ($this, $chars, $offset, $len) => {
    return $this.$insert9($this.$length2, $chars, $offset, $len);
},
jl_AbstractStringBuilder_insert = ($this, $index, $chars, $offset, $len) => {
    let var$5, var$6, var$7, var$8, var$9;
    jl_AbstractStringBuilder_insertSpace($this, $index, $index + $len | 0);
    var$5 = $len + $offset | 0;
    while ($offset < var$5) {
        var$6 = $chars.data;
        var$7 = $this.$buffer.data;
        var$8 = $index + 1 | 0;
        var$9 = $offset + 1 | 0;
        var$7[$index] = var$6[$offset];
        $index = var$8;
        $offset = var$9;
    }
    return $this;
},
jl_AbstractStringBuilder_append1 = ($this, $chars) => {
    return $this.$append9($chars, 0, $chars.data.length);
},
jl_AbstractStringBuilder_subSequence = ($this, $start, $end) => {
    return $this.$substring($start, $end);
},
jl_AbstractStringBuilder_setLength = ($this, $newLength) => {
    $this.$length2 = $newLength;
},
jl_AbstractStringBuilder_deleteCharAt = ($this, $i) => {
    let var$2, var$3, $i_0;
    if ($i >= 0 && $i < $this.$length2) {
        $this.$length2 = $this.$length2 - 1 | 0;
        while ($i < $this.$length2) {
            var$2 = $this.$buffer.data;
            var$3 = $this.$buffer.data;
            $i_0 = $i + 1 | 0;
            var$2[$i] = var$3[$i_0];
            $i = $i_0;
        }
        return $this;
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
},
jl_AbstractStringBuilder_delete = ($this, $start, $end) => {
    let var$3, $sz, $i, var$6, var$7, var$8;
    if ($start >= 0) {
        var$3 = $rt_compare($start, $end);
        if (var$3 <= 0 && $start <= $this.$length2) {
            if (!var$3)
                return $this;
            if ($end > $this.$length2)
                $end = $this.$length2;
            $sz = $this.$length2 - $end | 0;
            $this.$length2 = $this.$length2 - ($end - $start | 0) | 0;
            $i = 0;
            while ($i < $sz) {
                var$6 = $this.$buffer.data;
                var$3 = $start + 1 | 0;
                var$7 = $this.$buffer.data;
                var$8 = $end + 1 | 0;
                var$6[$start] = var$7[$end];
                $i = $i + 1 | 0;
                $start = var$3;
                $end = var$8;
            }
            return $this;
        }
    }
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
},
jl_AbstractStringBuilder_insertSpace = ($this, $start, $end) => {
    let $sz, $i;
    $sz = $this.$length2 - $start | 0;
    $this.$ensureCapacity(($this.$length2 + $end | 0) - $start | 0);
    $i = $sz - 1 | 0;
    while ($i >= 0) {
        $this.$buffer.data[$end + $i | 0] = $this.$buffer.data[$start + $i | 0];
        $i = $i + (-1) | 0;
    }
    $this.$length2 = $this.$length2 + ($end - $start | 0) | 0;
},
jl_AbstractStringBuilder_substring = ($this, $from, $to) => {
    if ($from <= $to && $from >= 0 && $to <= $this.$length2)
        return jl_String__init_($this.$buffer, $from, $to - $from | 0);
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jl_Appendable = $rt_classWithoutFields(0),
jl_StringBuffer = $rt_classWithoutFields(jl_AbstractStringBuilder),
jl_StringBuffer__init_0 = $this => {
    jl_AbstractStringBuilder__init_0($this);
},
jl_StringBuffer__init_ = () => {
    let var_0 = new jl_StringBuffer();
    jl_StringBuffer__init_0(var_0);
    return var_0;
},
jl_StringBuffer_append = ($this, $string) => {
    jl_AbstractStringBuilder_append($this, $string);
    return $this;
},
jl_StringBuffer_append1 = ($this, $c) => {
    jl_AbstractStringBuilder_append0($this, $c);
    return $this;
},
jl_StringBuffer_append2 = ($this, $chars, $offset, $len) => {
    jl_AbstractStringBuilder_append2($this, $chars, $offset, $len);
    return $this;
},
jl_StringBuffer_append0 = ($this, $chars) => {
    jl_AbstractStringBuilder_append1($this, $chars);
    return $this;
},
jl_StringBuffer_append3 = ($this, $s, $start, $end) => {
    jl_AbstractStringBuilder_append4($this, $s, $start, $end);
    return $this;
},
jl_StringBuffer_append6 = ($this, $s) => {
    jl_AbstractStringBuilder_append9($this, $s);
    return $this;
},
jl_StringBuffer_insert2 = ($this, $index, $s, $start, $end) => {
    jl_AbstractStringBuilder_insert5($this, $index, $s, $start, $end);
    return $this;
},
jl_StringBuffer_insert3 = ($this, $index, $chars, $offset, $len) => {
    jl_AbstractStringBuilder_insert($this, $index, $chars, $offset, $len);
    return $this;
};
let jl_StringBuffer_insert6 = ($this, $index, $c) => {
    jl_AbstractStringBuilder_insert1($this, $index, $c);
    return $this;
},
jl_StringBuffer_insert4 = ($this, $index, $string) => {
    jl_AbstractStringBuilder_insert0($this, $index, $string);
    return $this;
},
jl_StringBuffer_insert = ($this, var$1, var$2, var$3, var$4) => {
    return $this.$insert10(var$1, var$2, var$3, var$4);
},
jl_StringBuffer_append4 = ($this, var$1, var$2, var$3) => {
    return $this.$append14(var$1, var$2, var$3);
},
jl_StringBuffer_insert1 = ($this, var$1, var$2, var$3, var$4) => {
    return $this.$insert11(var$1, var$2, var$3, var$4);
},
jl_StringBuffer_append5 = ($this, var$1, var$2, var$3) => {
    return $this.$append15(var$1, var$2, var$3);
},
jl_StringBuffer_charAt = ($this, var$1) => {
    return jl_AbstractStringBuilder_charAt($this, var$1);
},
jl_StringBuffer_length = $this => {
    return jl_AbstractStringBuilder_length($this);
},
jl_StringBuffer_toString = $this => {
    return jl_AbstractStringBuilder_toString($this);
},
jl_StringBuffer_ensureCapacity = ($this, var$1) => {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
},
jl_StringBuffer_insert5 = ($this, var$1, var$2) => {
    return $this.$insert12(var$1, var$2);
},
jl_StringBuffer_insert0 = ($this, var$1, var$2) => {
    return $this.$insert13(var$1, var$2);
},
cbgu_Pool$Poolable = $rt_classWithoutFields(0);
function jn_Buffer() {
    let a = this; jl_Object.call(a);
    a.$position6 = 0;
    a.$limit4 = 0;
    a.$mark = 0;
}
let jn_Buffer__init_ = $this => {
    jl_Object__init_($this);
    $this.$mark = (-1);
},
jn_Buffer_capacity = $this => {
    return $this.$capacityImpl();
},
jn_Buffer_position = $this => {
    return $this.$position6;
},
jn_Buffer_position0 = ($this, $newPosition) => {
    let var$2, var$3, var$4;
    if ($newPosition >= 0 && $newPosition <= $this.$limit4) {
        $this.$position6 = $newPosition;
        if ($newPosition < $this.$mark)
            $this.$mark = 0;
        return $this;
    }
    var$2 = new jl_IllegalArgumentException;
    var$3 = $this.$limit4;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(64)), $newPosition), $rt_s(65)), var$3), 93);
    jl_IllegalArgumentException__init_1(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jn_Buffer_limit = $this => {
    return $this.$limit4;
},
jn_Buffer_limit0 = ($this, $newLimit) => {
    if ($newLimit >= 0 && $newLimit <= jn_Buffer_capacity($this)) {
        if ($this.$mark > $newLimit)
            $this.$mark = (-1);
        $this.$limit4 = $newLimit;
        if ($this.$position6 > $this.$limit4)
            $this.$position6 = $this.$limit4;
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
},
jn_Buffer_clear = $this => {
    $this.$position6 = 0;
    $this.$limit4 = jn_Buffer_capacity($this);
    $this.$mark = (-1);
    return $this;
},
jn_Buffer_flip = $this => {
    $this.$limit4 = $this.$position6;
    $this.$position6 = 0;
    $this.$mark = (-1);
    return $this;
},
jn_Buffer_remaining = $this => {
    return $this.$limit4 - $this.$position6 | 0;
},
jn_Buffer_hasRemaining = $this => {
    return $this.$position6 >= $this.$limit4 ? 0 : 1;
},
jur_SpecialToken = $rt_classWithoutFields(),
jur_SpecialToken__init_ = $this => {
    jl_Object__init_($this);
};
function jur_AbstractCharClass() {
    let a = this; jur_SpecialToken.call(a);
    a.$alt = 0;
    a.$altSurrogates = 0;
    a.$lowHighSurrogates = null;
    a.$charClassWithoutSurrogates = null;
    a.$charClassWithSurrogates = null;
    a.$mayContainSupplCodepoints0 = 0;
}
let jur_AbstractCharClass_charClasses = null,
jur_AbstractCharClass_$callClinit = () => {
    jur_AbstractCharClass_$callClinit = $rt_eraseClinit(jur_AbstractCharClass);
    jur_AbstractCharClass__clinit_();
},
jur_AbstractCharClass__init_ = $this => {
    jur_AbstractCharClass_$callClinit();
    jur_SpecialToken__init_($this);
    $this.$lowHighSurrogates = ju_BitSet__init_2(2048);
},
jur_AbstractCharClass_getBits = $this => {
    return null;
},
jur_AbstractCharClass_getLowHighSurrogates = $this => {
    return $this.$lowHighSurrogates;
},
jur_AbstractCharClass_hasLowHighSurrogates = $this => {
    return !$this.$altSurrogates ? ($this.$lowHighSurrogates.$nextSetBit(0) >= 2048 ? 0 : 1) : $this.$lowHighSurrogates.$nextClearBit(0) >= 2048 ? 0 : 1;
},
jur_AbstractCharClass_mayContainSupplCodepoints = $this => {
    return $this.$mayContainSupplCodepoints0;
},
jur_AbstractCharClass_getInstance = $this => {
    return $this;
},
jur_AbstractCharClass_getSurrogates = $this => {
    let $lHS;
    if ($this.$charClassWithSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        $this.$charClassWithSurrogates = jur_AbstractCharClass$1__init_0($this, $lHS);
        $this.$charClassWithSurrogates.$setNegative($this.$altSurrogates);
    }
    return $this.$charClassWithSurrogates;
},
jur_AbstractCharClass_getWithoutSurrogates = $this => {
    let $lHS;
    if ($this.$charClassWithoutSurrogates === null) {
        $lHS = $this.$getLowHighSurrogates();
        $this.$charClassWithoutSurrogates = jur_AbstractCharClass$2__init_0($this, $lHS, $this);
        $this.$charClassWithoutSurrogates.$setNegative($this.$isNegative());
        $this.$charClassWithoutSurrogates.$mayContainSupplCodepoints0 = $this.$mayContainSupplCodepoints0;
    }
    return $this.$charClassWithoutSurrogates;
},
jur_AbstractCharClass_hasUCI = $this => {
    return 0;
},
jur_AbstractCharClass_setNegative = ($this, $value) => {
    if ($this.$alt ^ $value) {
        $this.$alt = $this.$alt ? 0 : 1;
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
    }
    if (!$this.$mayContainSupplCodepoints0)
        $this.$mayContainSupplCodepoints0 = 1;
    return $this;
},
jur_AbstractCharClass_isNegative = $this => {
    return $this.$alt;
},
jur_AbstractCharClass_intersects0 = ($cc, $ch) => {
    jur_AbstractCharClass_$callClinit();
    return $cc.$contains($ch);
},
jur_AbstractCharClass_intersects = ($cc1, $cc2) => {
    jur_AbstractCharClass_$callClinit();
    if ($cc1.$getBits() !== null && $cc2.$getBits() !== null)
        return ($cc1.$getBits()).$intersects($cc2.$getBits());
    return 1;
},
jur_AbstractCharClass_getPredefinedClass = ($name, $negative) => {
    jur_AbstractCharClass_$callClinit();
    return (jur_AbstractCharClass$PredefinedCharacterClasses_getObject(jur_AbstractCharClass_charClasses, $name)).$getValue($negative);
},
jur_AbstractCharClass__clinit_ = () => {
    jur_AbstractCharClass_charClasses = jur_AbstractCharClass$PredefinedCharacterClasses__init_0();
};
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$032 = null;
}
let jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_ = ($this, $this$0) => {
    $this.$this$032 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains = ($this, $ch) => {
    return jl_Character_isUnicodeIdentifierPart($ch);
},
jur_AbstractCharClass$PredefinedCharacterClasses = $rt_classWithoutFields(),
jur_AbstractCharClass$PredefinedCharacterClasses_space = null,
jur_AbstractCharClass$PredefinedCharacterClasses_digit = null,
jur_AbstractCharClass$PredefinedCharacterClasses_contents = null,
jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit = () => {
    jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit = $rt_eraseClinit(jur_AbstractCharClass$PredefinedCharacterClasses);
    jur_AbstractCharClass$PredefinedCharacterClasses__clinit_();
},
jur_AbstractCharClass$PredefinedCharacterClasses__init_ = $this => {
    jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit();
    jl_Object__init_($this);
},
jur_AbstractCharClass$PredefinedCharacterClasses__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$PredefinedCharacterClasses();
    jur_AbstractCharClass$PredefinedCharacterClasses__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$PredefinedCharacterClasses_getObject = ($this, $name) => {
    let $i, $row, var$4;
    $i = 0;
    while (true) {
        jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit();
        if ($i >= jur_AbstractCharClass$PredefinedCharacterClasses_contents.data.length)
            $rt_throw(ju_MissingResourceException__init_0($rt_s(60), $rt_s(60), $name));
        $row = jur_AbstractCharClass$PredefinedCharacterClasses_contents.data[$i];
        var$4 = $row.data;
        if ($name.$equals(var$4[0]))
            break;
        $i = $i + 1 | 0;
    }
    return var$4[1];
},
jur_AbstractCharClass$PredefinedCharacterClasses__clinit_ = () => {
    let var$1, var$2, var$3, var$4;
    jur_AbstractCharClass$PredefinedCharacterClasses_space = jur_AbstractCharClass$LazySpace__init_0();
    jur_AbstractCharClass$PredefinedCharacterClasses_digit = jur_AbstractCharClass$LazyDigit__init_0();
    var$1 = $rt_createArray($rt_arraycls(jl_Object), 194);
    var$2 = var$1.data;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(66);
    var$4[1] = jur_AbstractCharClass$LazyLower__init_0();
    var$2[0] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(67);
    var$4[1] = jur_AbstractCharClass$LazyUpper__init_0();
    var$2[1] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(68);
    var$4[1] = jur_AbstractCharClass$LazyASCII__init_0();
    var$2[2] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(69);
    var$4[1] = jur_AbstractCharClass$LazyAlpha__init_0();
    var$2[3] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(70);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_digit;
    var$2[4] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(71);
    var$4[1] = jur_AbstractCharClass$LazyAlnum__init_0();
    var$2[5] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(72);
    var$4[1] = jur_AbstractCharClass$LazyPunct__init_0();
    var$2[6] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(73);
    var$4[1] = jur_AbstractCharClass$LazyGraph__init_0();
    var$2[7] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(74);
    var$4[1] = jur_AbstractCharClass$LazyPrint__init_0();
    var$2[8] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(75);
    var$4[1] = jur_AbstractCharClass$LazyBlank__init_0();
    var$2[9] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(76);
    var$4[1] = jur_AbstractCharClass$LazyCntrl__init_0();
    var$2[10] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(77);
    var$4[1] = jur_AbstractCharClass$LazyXDigit__init_0();
    var$2[11] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(78);
    var$4[1] = jur_AbstractCharClass$LazyJavaLowerCase__init_0();
    var$2[12] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(79);
    var$4[1] = jur_AbstractCharClass$LazyJavaUpperCase__init_0();
    var$2[13] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(80);
    var$4[1] = jur_AbstractCharClass$LazyJavaWhitespace__init_0();
    var$2[14] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(81);
    var$4[1] = jur_AbstractCharClass$LazyJavaMirrored__init_0();
    var$2[15] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(82);
    var$4[1] = jur_AbstractCharClass$LazyJavaDefined__init_0();
    var$2[16] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(83);
    var$4[1] = jur_AbstractCharClass$LazyJavaDigit__init_0();
    var$2[17] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(84);
    var$4[1] = jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0();
    var$2[18] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(85);
    var$4[1] = jur_AbstractCharClass$LazyJavaISOControl__init_0();
    var$2[19] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(86);
    var$4[1] = jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0();
    var$2[20] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(87);
    var$4[1] = jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0();
    var$2[21] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(88);
    var$4[1] = jur_AbstractCharClass$LazyJavaLetter__init_0();
    var$2[22] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(89);
    var$4[1] = jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0();
    var$2[23] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(90);
    var$4[1] = jur_AbstractCharClass$LazyJavaSpaceChar__init_0();
    var$2[24] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(91);
    var$4[1] = jur_AbstractCharClass$LazyJavaTitleCase__init_0();
    var$2[25] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(92);
    var$4[1] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0();
    var$2[26] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(93);
    var$4[1] = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0();
    var$2[27] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(94);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_space;
    var$2[28] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(95);
    var$4[1] = jur_AbstractCharClass$LazyWord__init_0();
    var$2[29] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(96);
    var$4[1] = jur_AbstractCharClass$LazyNonWord__init_0();
    var$2[30] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(97);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_space;
    var$2[31] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(98);
    var$4[1] = jur_AbstractCharClass$LazyNonSpace__init_0();
    var$2[32] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(99);
    var$4[1] = jur_AbstractCharClass$PredefinedCharacterClasses_digit;
    var$2[33] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(100);
    var$4[1] = jur_AbstractCharClass$LazyNonDigit__init_0();
    var$2[34] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(101);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(0, 127);
    var$2[35] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(102);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(128, 255);
    var$2[36] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(103);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(256, 383);
    var$2[37] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(104);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(384, 591);
    var$2[38] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(105);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(592, 687);
    var$2[39] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(106);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(688, 767);
    var$2[40] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(107);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(768, 879);
    var$2[41] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(108);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(880, 1023);
    var$2[42] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(109);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1024, 1279);
    var$2[43] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(110);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1280, 1327);
    var$2[44] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(111);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1328, 1423);
    var$2[45] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(112);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1424, 1535);
    var$2[46] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(113);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1536, 1791);
    var$2[47] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(114);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1792, 1871);
    var$2[48] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(115);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1872, 1919);
    var$2[49] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(116);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(1920, 1983);
    var$2[50] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(117);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2304, 2431);
    var$2[51] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(118);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2432, 2559);
    var$2[52] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(119);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2560, 2687);
    var$2[53] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(120);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2688, 2815);
    var$2[54] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(121);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2816, 2943);
    var$2[55] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(122);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(2944, 3071);
    var$2[56] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(123);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3072, 3199);
    var$2[57] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(124);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3200, 3327);
    var$2[58] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(125);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3328, 3455);
    var$2[59] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(126);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3456, 3583);
    var$2[60] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(127);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3584, 3711);
    var$2[61] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(128);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3712, 3839);
    var$2[62] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(129);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(3840, 4095);
    var$2[63] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(130);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4096, 4255);
    var$2[64] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(131);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4256, 4351);
    var$2[65] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(132);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4352, 4607);
    var$2[66] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(133);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4608, 4991);
    var$2[67] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(134);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(4992, 5023);
    var$2[68] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(135);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5024, 5119);
    var$2[69] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(136);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5120, 5759);
    var$2[70] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(137);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5760, 5791);
    var$2[71] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(138);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5792, 5887);
    var$2[72] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(139);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5888, 5919);
    var$2[73] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(140);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5920, 5951);
    var$2[74] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(141);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5952, 5983);
    var$2[75] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(142);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(5984, 6015);
    var$2[76] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(143);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6016, 6143);
    var$2[77] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(144);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6144, 6319);
    var$2[78] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(145);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6400, 6479);
    var$2[79] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(146);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6480, 6527);
    var$2[80] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(147);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6528, 6623);
    var$2[81] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(148);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6624, 6655);
    var$2[82] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(149);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(6656, 6687);
    var$2[83] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(150);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7424, 7551);
    var$2[84] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(151);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7552, 7615);
    var$2[85] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(152);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7616, 7679);
    var$2[86] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(153);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7680, 7935);
    var$2[87] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(154);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(7936, 8191);
    var$2[88] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(155);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8192, 8303);
    var$2[89] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(156);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8304, 8351);
    var$2[90] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(157);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8352, 8399);
    var$2[91] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(158);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8400, 8447);
    var$2[92] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(159);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8448, 8527);
    var$2[93] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(160);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8528, 8591);
    var$2[94] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(161);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8592, 8703);
    var$2[95] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(162);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8704, 8959);
    var$2[96] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(163);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(8960, 9215);
    var$2[97] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(164);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9216, 9279);
    var$2[98] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(165);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9280, 9311);
    var$2[99] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(166);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9312, 9471);
    var$2[100] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(167);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9472, 9599);
    var$2[101] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(168);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9600, 9631);
    var$2[102] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(169);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9632, 9727);
    var$2[103] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(170);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9728, 9983);
    var$2[104] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(171);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(9984, 10175);
    var$2[105] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(172);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10176, 10223);
    var$2[106] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(173);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10224, 10239);
    var$2[107] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(174);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10240, 10495);
    var$2[108] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(175);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10496, 10623);
    var$2[109] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(176);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10624, 10751);
    var$2[110] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(177);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(10752, 11007);
    var$2[111] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(178);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11008, 11263);
    var$2[112] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(179);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11264, 11359);
    var$2[113] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(180);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11392, 11519);
    var$2[114] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(181);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11520, 11567);
    var$2[115] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(182);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11568, 11647);
    var$2[116] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(183);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11648, 11743);
    var$2[117] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(184);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11776, 11903);
    var$2[118] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(185);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(11904, 12031);
    var$2[119] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(186);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12032, 12255);
    var$2[120] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(187);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12272, 12287);
    var$2[121] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(188);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12288, 12351);
    var$2[122] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(189);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12352, 12447);
    var$2[123] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(190);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12448, 12543);
    var$2[124] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(191);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12544, 12591);
    var$2[125] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(192);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12592, 12687);
    var$2[126] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(193);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12688, 12703);
    var$2[127] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(194);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12704, 12735);
    var$2[128] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(195);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12736, 12783);
    var$2[129] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(196);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12784, 12799);
    var$2[130] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(197);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(12800, 13055);
    var$2[131] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(198);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(13056, 13311);
    var$2[132] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(199);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(13312, 19893);
    var$2[133] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(200);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(19904, 19967);
    var$2[134] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(201);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(19968, 40959);
    var$2[135] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(202);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(40960, 42127);
    var$2[136] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(203);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(42128, 42191);
    var$2[137] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(204);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(42752, 42783);
    var$2[138] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(205);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(43008, 43055);
    var$2[139] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(206);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(44032, 55203);
    var$2[140] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(207);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(55296, 56191);
    var$2[141] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(208);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(56192, 56319);
    var$2[142] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(209);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(56320, 57343);
    var$2[143] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(210);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(57344, 63743);
    var$2[144] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(211);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(63744, 64255);
    var$2[145] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(212);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(64256, 64335);
    var$2[146] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(213);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(64336, 65023);
    var$2[147] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(214);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65024, 65039);
    var$2[148] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(215);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65040, 65055);
    var$2[149] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(216);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65056, 65071);
    var$2[150] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(217);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65072, 65103);
    var$2[151] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(218);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65104, 65135);
    var$2[152] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(219);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65136, 65279);
    var$2[153] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(220);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(65280, 65519);
    var$2[154] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(221);
    var$4[1] = jur_AbstractCharClass$LazyRange__init_(0, 1114111);
    var$2[155] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(222);
    var$4[1] = jur_AbstractCharClass$LazySpecialsBlock__init_0();
    var$2[156] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(223);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(0, 1);
    var$2[157] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(224);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(62, 1);
    var$2[158] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(225);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(1, 1);
    var$2[159] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(226);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(2, 1);
    var$2[160] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(227);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(3, 0);
    var$2[161] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(228);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(4, 0);
    var$2[162] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(229);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(5, 1);
    var$2[163] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(230);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(448, 1);
    var$2[164] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(231);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(6, 1);
    var$2[165] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(232);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(7, 0);
    var$2[166] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(233);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(8, 1);
    var$2[167] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(234);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(3584, 1);
    var$2[168] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(235);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(9, 1);
    var$2[169] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(236);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(10, 1);
    var$2[170] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(237);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(11, 1);
    var$2[171] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(238);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(28672, 0);
    var$2[172] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(239);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(12, 0);
    var$2[173] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(240);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(13, 0);
    var$2[174] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(241);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(14, 0);
    var$2[175] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(242);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_2(983040, 1, 1);
    var$2[176] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(243);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(15, 0);
    var$2[177] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(244);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(16, 1);
    var$2[178] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(245);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(18, 1);
    var$2[179] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(246);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_2(19, 0, 1);
    var$2[180] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(247);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(1643118592, 1);
    var$2[181] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(248);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(20, 0);
    var$2[182] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(249);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(21, 0);
    var$2[183] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(250);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(22, 0);
    var$2[184] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(251);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(23, 0);
    var$2[185] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(252);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(24, 1);
    var$2[186] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(253);
    var$4[1] = jur_AbstractCharClass$LazyCategoryScope__init_(2113929216, 1);
    var$2[187] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(254);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(25, 1);
    var$2[188] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(255);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(26, 0);
    var$2[189] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(256);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(27, 0);
    var$2[190] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(257);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(28, 1);
    var$2[191] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(258);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(29, 0);
    var$2[192] = var$3;
    var$3 = $rt_createArray(jl_Object, 2);
    var$4 = var$3.data;
    var$4[0] = $rt_s(259);
    var$4[1] = jur_AbstractCharClass$LazyCategory__init_(30, 0);
    var$2[193] = var$3;
    jur_AbstractCharClass$PredefinedCharacterClasses_contents = var$1;
},
cbg_Input = $rt_classWithoutFields(0),
cbggg_PixmapNativeInterface = $rt_classWithoutFields(0);
function cbgmc_BoundingBox() {
    let a = this; jl_Object.call(a);
    a.$min3 = null;
    a.$max3 = null;
    a.$cnt = null;
    a.$dim = null;
}
let cbgmc_BoundingBox_tmpVector = null,
cbgmc_BoundingBox_$callClinit = () => {
    cbgmc_BoundingBox_$callClinit = $rt_eraseClinit(cbgmc_BoundingBox);
    cbgmc_BoundingBox__clinit_();
},
cbgmc_BoundingBox_getCenter = ($this, $out) => {
    return $out.$set7($this.$cnt);
},
cbgmc_BoundingBox_getDimensions = ($this, $out) => {
    return $out.$set7($this.$dim);
},
cbgmc_BoundingBox__init_ = $this => {
    cbgmc_BoundingBox_$callClinit();
    jl_Object__init_($this);
    $this.$min3 = cbgm_Vector3__init_();
    $this.$max3 = cbgm_Vector3__init_();
    $this.$cnt = cbgm_Vector3__init_();
    $this.$dim = cbgm_Vector3__init_();
    $this.$clr();
},
cbgmc_BoundingBox__init_0 = () => {
    let var_0 = new cbgmc_BoundingBox();
    cbgmc_BoundingBox__init_(var_0);
    return var_0;
},
cbgmc_BoundingBox_set = ($this, $minimum, $maximum) => {
    let var$3, var$4, var$5, var$6, var$7;
    var$3 = $this.$min3;
    var$4 = $minimum.$x >= $maximum.$x ? $maximum.$x : $minimum.$x;
    var$5 = $minimum.$y >= $maximum.$y ? $maximum.$y : $minimum.$y;
    var$6 = $minimum.$z >= $maximum.$z ? $maximum.$z : $minimum.$z;
    var$3.$set8(var$4, var$5, var$6);
    var$3 = $this.$max3;
    var$5 = $minimum.$x <= $maximum.$x ? $maximum.$x : $minimum.$x;
    var$6 = $minimum.$y <= $maximum.$y ? $maximum.$y : $minimum.$y;
    var$7 = $minimum.$z <= $maximum.$z ? $maximum.$z : $minimum.$z;
    var$3.$set8(var$5, var$6, var$7);
    $this.$update0();
    return $this;
},
cbgmc_BoundingBox_update = $this => {
    (($this.$cnt.$set7($this.$min3)).$add5($this.$max3)).$scl(0.5);
    ($this.$dim.$set7($this.$max3)).$sub($this.$min3);
},
cbgmc_BoundingBox_inf = $this => {
    $this.$min3.$set8(Infinity, Infinity, Infinity);
    $this.$max3.$set8((-Infinity), (-Infinity), (-Infinity));
    $this.$cnt.$set8(0.0, 0.0, 0.0);
    $this.$dim.$set8(0.0, 0.0, 0.0);
    return $this;
},
cbgmc_BoundingBox_clr = $this => {
    return $this.$set9($this.$min3.$set8(0.0, 0.0, 0.0), $this.$max3.$set8(0.0, 0.0, 0.0));
},
cbgmc_BoundingBox_ext = ($this, $x, $y, $z) => {
    return $this.$set9($this.$min3.$set8(cbgmc_BoundingBox_min($this.$min3.$x, $x), cbgmc_BoundingBox_min($this.$min3.$y, $y), cbgmc_BoundingBox_min($this.$min3.$z, $z)), $this.$max3.$set8(cbgmc_BoundingBox_max($this.$max3.$x, $x), cbgmc_BoundingBox_max($this.$max3.$y, $y), cbgmc_BoundingBox_max($this.$max3.$z, $z)));
},
cbgmc_BoundingBox_min = ($a, $b) => {
    cbgmc_BoundingBox_$callClinit();
    if ($a > $b)
        $a = $b;
    return $a;
},
cbgmc_BoundingBox_max = ($a, $b) => {
    cbgmc_BoundingBox_$callClinit();
    if ($a > $b)
        $b = $a;
    return $b;
},
cbgmc_BoundingBox__clinit_ = () => {
    cbgmc_BoundingBox_tmpVector = cbgm_Vector3__init_();
},
jur_AbstractCharClass$LazyDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyDigit__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyDigit();
    jur_AbstractCharClass$LazyDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyDigit_computeValue = $this => {
    return (jur_CharClass__init_()).$add0(48, 57);
},
jur_AbstractCharClass$LazyJavaLetter = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLetter__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaLetter__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaLetter();
    jur_AbstractCharClass$LazyJavaLetter__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaLetter_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLetter$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
},
cbgu_TimeUtils = $rt_classWithoutFields(),
cbgu_TimeUtils_nanoTime = () => {
    return jl_System_nanoTime();
},
cbgm_Interpolation$1 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$1__init_ = $this => {
    cbgm_Interpolation__init_($this);
},
cbgm_Interpolation$1__init_0 = () => {
    let var_0 = new cbgm_Interpolation$1();
    cbgm_Interpolation$1__init_(var_0);
    return var_0;
},
cbgm_Interpolation$1_apply = ($this, $a) => {
    return $a;
},
cbgm_Interpolation$2 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$2__init_ = $this => {
    cbgm_Interpolation__init_($this);
},
cbgm_Interpolation$2__init_0 = () => {
    let var_0 = new cbgm_Interpolation$2();
    cbgm_Interpolation$2__init_(var_0);
    return var_0;
},
jur_AheadFSet = $rt_classWithoutFields(jur_FSet),
jur_AheadFSet__init_ = $this => {
    jur_FSet__init_($this, (-1));
},
jur_AheadFSet__init_0 = () => {
    let var_0 = new jur_AheadFSet();
    jur_AheadFSet__init_(var_0);
    return var_0;
},
jur_AheadFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    return $stringIndex;
},
jur_AheadFSet_getName = $this => {
    return $rt_s(260);
},
cbgm_Interpolation$5 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$5__init_ = $this => {
    cbgm_Interpolation__init_($this);
},
cbgm_Interpolation$5__init_0 = () => {
    let var_0 = new cbgm_Interpolation$5();
    cbgm_Interpolation$5__init_(var_0);
    return var_0;
};
function cbgm_Interpolation$Pow() {
    cbgm_Interpolation.call(this);
    this.$power1 = 0;
}
let cbgm_Interpolation$Pow__init_0 = ($this, $power) => {
    cbgm_Interpolation__init_($this);
    $this.$power1 = $power;
},
cbgm_Interpolation$Pow__init_ = var_0 => {
    let var_1 = new cbgm_Interpolation$Pow();
    cbgm_Interpolation$Pow__init_0(var_1, var_0);
    return var_1;
},
cbgm_Interpolation$6 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$6__init_ = $this => {
    cbgm_Interpolation__init_($this);
},
cbgm_Interpolation$6__init_0 = () => {
    let var_0 = new cbgm_Interpolation$6();
    cbgm_Interpolation$6__init_(var_0);
    return var_0;
},
cbgggs_BaseShader$Validator = $rt_classWithoutFields(0),
cbgm_Interpolation$3 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$3__init_ = $this => {
    cbgm_Interpolation__init_($this);
},
cbgm_Interpolation$3__init_0 = () => {
    let var_0 = new cbgm_Interpolation$3();
    cbgm_Interpolation$3__init_(var_0);
    return var_0;
},
cbgm_Interpolation$4 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$4__init_ = $this => {
    cbgm_Interpolation__init_($this);
},
cbgm_Interpolation$4__init_0 = () => {
    let var_0 = new cbgm_Interpolation$4();
    cbgm_Interpolation$4__init_(var_0);
    return var_0;
},
cbgm_Interpolation$9 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$9__init_ = $this => {
    cbgm_Interpolation__init_($this);
},
cbgm_Interpolation$9__init_0 = () => {
    let var_0 = new cbgm_Interpolation$9();
    cbgm_Interpolation$9__init_(var_0);
    return var_0;
},
cbgm_Interpolation$7 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$7__init_ = $this => {
    cbgm_Interpolation__init_($this);
},
cbgm_Interpolation$7__init_0 = () => {
    let var_0 = new cbgm_Interpolation$7();
    cbgm_Interpolation$7__init_(var_0);
    return var_0;
},
cbgm_Interpolation$8 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$8__init_ = $this => {
    cbgm_Interpolation__init_($this);
},
cbgm_Interpolation$8__init_0 = () => {
    let var_0 = new cbgm_Interpolation$8();
    cbgm_Interpolation$8__init_(var_0);
    return var_0;
},
cbgu_DefaultPool$PoolSupplier = $rt_classWithoutFields(0),
cbgss_Stage$fireEnterAndExit$lambda$_8_1 = $rt_classWithoutFields(),
cbgss_Stage$fireEnterAndExit$lambda$_8_1__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgss_Stage$fireEnterAndExit$lambda$_8_1__init_0 = () => {
    let var_0 = new cbgss_Stage$fireEnterAndExit$lambda$_8_1();
    cbgss_Stage$fireEnterAndExit$lambda$_8_1__init_(var_0);
    return var_0;
},
cbgss_Stage$fireEnterAndExit$lambda$_8_1_get0 = var$0 => {
    return cbgss_Stage$fireEnterAndExit$lambda$_8_1_get(var$0);
},
cbgss_Stage$fireEnterAndExit$lambda$_8_1_get = var$0 => {
    return cbgss_InputEvent__init_();
},
cbgss_Stage$fireEnterAndExit$lambda$_8_0 = $rt_classWithoutFields(),
cbgss_Stage$fireEnterAndExit$lambda$_8_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgss_Stage$fireEnterAndExit$lambda$_8_0__init_0 = () => {
    let var_0 = new cbgss_Stage$fireEnterAndExit$lambda$_8_0();
    cbgss_Stage$fireEnterAndExit$lambda$_8_0__init_(var_0);
    return var_0;
},
cbgss_Stage$fireEnterAndExit$lambda$_8_0_get0 = var$0 => {
    return cbgss_Stage$fireEnterAndExit$lambda$_8_0_get(var$0);
},
cbgss_Stage$fireEnterAndExit$lambda$_8_0_get = var$0 => {
    return cbgss_InputEvent__init_();
},
jur_NonCapJointSet = $rt_classWithoutFields(jur_JointSet),
jur_NonCapJointSet__init_ = ($this, $children, $fSet) => {
    jur_JointSet__init_0($this, $children, $fSet);
},
jur_NonCapJointSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_NonCapJointSet();
    jur_NonCapJointSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_NonCapJointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $size, $i, $e, $shift;
    $start = $matchResult.$getConsumed($this.$groupIndex);
    $matchResult.$setConsumed($this.$groupIndex, $stringIndex);
    $size = $this.$children.$size();
    $i = 0;
    while (true) {
        if ($i >= $size) {
            $matchResult.$setConsumed($this.$groupIndex, $start);
            return (-1);
        }
        $e = $this.$children.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return $shift;
},
jur_NonCapJointSet_getName = $this => {
    return $rt_s(261);
},
jur_NonCapJointSet_hasConsumed = ($this, $matchResult) => {
    let $cons;
    $cons = $matchResult.$getConsumed($this.$groupIndex);
    return !$cons ? 0 : 1;
},
jur_AtomicJointSet = $rt_classWithoutFields(jur_NonCapJointSet),
jur_AtomicJointSet__init_ = ($this, $children, $fSet) => {
    jur_NonCapJointSet__init_($this, $children, $fSet);
},
jur_AtomicJointSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_AtomicJointSet();
    jur_AtomicJointSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_AtomicJointSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $size, $i, $e, $shift;
    $start = $matchResult.$getConsumed($this.$groupIndex);
    $matchResult.$setConsumed($this.$groupIndex, $stringIndex);
    $size = $this.$children.$size();
    $i = 0;
    while ($i < $size) {
        $e = $this.$children.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $this.$next1.$matches($this.$fSet.$getIndex(), $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    $matchResult.$setConsumed($this.$groupIndex, $start);
    return (-1);
},
jur_AtomicJointSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_AtomicJointSet_getName = $this => {
    return $rt_s(261);
},
jur_PositiveLookAhead = $rt_classWithoutFields(jur_AtomicJointSet),
jur_PositiveLookAhead__init_ = ($this, $children, $fSet) => {
    jur_AtomicJointSet__init_($this, $children, $fSet);
},
jur_PositiveLookAhead__init_0 = (var_0, var_1) => {
    let var_2 = new jur_PositiveLookAhead();
    jur_PositiveLookAhead__init_(var_2, var_0, var_1);
    return var_2;
},
jur_PositiveLookAhead_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i, $e, $shift;
    $size = $this.$children.$size();
    $i = 0;
    while ($i < $size) {
        $e = $this.$children.$get($i);
        $shift = $e.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            return $this.$next1.$matches($stringIndex, $testString, $matchResult);
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_PositiveLookAhead_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PositiveLookAhead_getName = $this => {
    return $rt_s(262);
};
let jur_NegativeLookAhead = $rt_classWithoutFields(jur_AtomicJointSet),
jur_NegativeLookAhead__init_ = ($this, $children, $fSet) => {
    jur_AtomicJointSet__init_($this, $children, $fSet);
},
jur_NegativeLookAhead__init_0 = (var_0, var_1) => {
    let var_2 = new jur_NegativeLookAhead();
    jur_NegativeLookAhead__init_(var_2, var_0, var_1);
    return var_2;
},
jur_NegativeLookAhead_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i, $e;
    $size = $this.$children.$size();
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next1.$matches($stringIndex, $testString, $matchResult);
        $e = $this.$children.$get($i);
        if ($e.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_NegativeLookAhead_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_NegativeLookAhead_getName = $this => {
    return $rt_s(263);
},
jl_Readable = $rt_classWithoutFields(0),
jn_CharBuffer = $rt_classWithoutFields(jn_Buffer),
jn_CharBuffer__init_ = ($this, $position, $limit) => {
    jn_Buffer__init_($this);
    $this.$position6 = $position;
    $this.$limit4 = $limit;
},
jn_CharBuffer_allocate = $capacity => {
    let $array, var$3, var$4;
    if ($capacity >= 0) {
        $array = $rt_createCharArray($capacity);
        return jn_CharBufferOverTypedArray__init_(0, $capacity, 0, $array.data, $array);
    }
    var$3 = new jl_IllegalArgumentException;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(264)), $capacity);
    jl_IllegalArgumentException__init_1(var$3, jl_StringBuilder_toString(var$4));
    $rt_throw(var$3);
},
jn_CharBuffer_wrap0 = ($array, $offset, $length) => {
    let var$4, var$5, var$6, $result;
    if ($length >= 0 && $offset >= 0) {
        var$4 = $array.data;
        var$5 = $length + $offset | 0;
        var$6 = var$4.length;
        if (var$5 <= var$6) {
            $result = jn_CharBufferOverTypedArray__init_(0, var$6, 0, $array.data, $array);
            $result.$position6 = $offset;
            $result.$limit4 = var$5;
            return $result;
        }
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_CharBuffer_wrap = $array => {
    return jn_CharBuffer_wrap0($array, 0, $array.data.length);
},
jn_CharBuffer_get = ($this, $dst, $offset, $length) => {
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $dst.data.length) {
        if ($length > jn_Buffer_remaining($this))
            $rt_throw(jn_BufferUnderflowException__init_());
        $this.$getImpl($this.$position6, $dst, $offset, $length);
        $this.$position6 = $this.$position6 + $length | 0;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_CharBuffer_get0 = ($this, $dst) => {
    return $this.$get7($dst, 0, $dst.data.length);
},
jn_CharBuffer_put1 = ($this, $src, $offset, $length) => {
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $src.data.length) {
        $this.$putImpl($this.$position6, $src, $offset, $length);
        $this.$position6 = $this.$position6 + $length | 0;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_CharBuffer_put0 = ($this, $src, $start, $end) => {
    let $sz, $pos;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($end >= $start && $start >= 0 && $end <= $src.$length()) {
        $sz = $end - $start | 0;
        if (jn_Buffer_remaining($this) < $sz)
            $rt_throw(jn_BufferOverflowException__init_());
        $pos = $this.$position6;
        $this.$putImpl0($pos, $src, $start, $end);
        $this.$position6 = $this.$position6 + $sz | 0;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_CharBuffer_put = ($this, $src) => {
    return $this.$put0($src, 0, $src.$length());
},
jn_CharBuffer_hasArray = $this => {
    return $this.$isArrayPresent();
},
jn_CharBuffer_array = $this => {
    return $this.$getArray();
},
jn_CharBuffer_flip = $this => {
    jn_Buffer_flip($this);
    return $this;
},
jn_CharBuffer_position = ($this, $newPosition) => {
    jn_Buffer_position0($this, $newPosition);
    return $this;
},
jn_CharBufferImpl = $rt_classWithoutFields(jn_CharBuffer),
jn_CharBufferImpl__init_ = ($this, $position, $limit) => {
    jn_CharBuffer__init_($this, $position, $limit);
},
jn_CharBufferImpl_compact = $this => {
    let $sz, $src, $i, var$4;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    a: {
        $sz = jn_Buffer_remaining($this);
        if ($this.$position6 > 0) {
            $src = $this.$position6;
            $i = 0;
            while (true) {
                if ($i >= $sz)
                    break a;
                var$4 = $src + 1 | 0;
                $this.$putChar($i, $this.$getChar($src));
                $i = $i + 1 | 0;
                $src = var$4;
            }
        }
    }
    $this.$position6 = $sz;
    $this.$limit4 = jn_Buffer_capacity($this);
    $this.$mark = (-1);
    return $this;
},
jn_CharBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
},
jn_ArrayBufferViewProvider = $rt_classWithoutFields(0);
function jn_CharBufferOverTypedArray() {
    let a = this; jn_CharBufferImpl.call(a);
    a.$readOnly1 = 0;
    a.$data2 = null;
    a.$array5 = null;
}
let jn_CharBufferOverTypedArray__init_0 = ($this, $position, $limit, $readOnly, $data, $array) => {
    jn_CharBufferImpl__init_($this, $position, $limit);
    $this.$readOnly1 = $readOnly;
    $this.$data2 = $data;
    $this.$array5 = $array;
},
jn_CharBufferOverTypedArray__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_CharBufferOverTypedArray();
    jn_CharBufferOverTypedArray__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_CharBufferOverTypedArray_readOnly = $this => {
    return $this.$readOnly1;
},
jn_CharBufferOverTypedArray_getChar = ($this, $index) => {
    return $this.$data2[$index] & 65535;
},
jn_CharBufferOverTypedArray_putChar = ($this, $index, $value) => {
    $this.$data2[$index] = $value;
},
jn_CharBufferOverTypedArray_isArrayPresent = $this => {
    return $this.$array5 === null ? 0 : 1;
},
jn_CharBufferOverTypedArray_getArray = $this => {
    if ($this.$array5 !== null)
        return $this.$array5;
    $rt_throw(jl_UnsupportedOperationException__init_0());
},
jn_CharBufferOverTypedArray_capacityImpl = $this => {
    return $this.$data2.length;
},
jn_CharBufferOverTypedArray_getImpl = ($this, $index, $dst, $offset, $length) => {
    let var$5, var$6, $slice;
    var$5 = $this.$data2.buffer;
    var$6 = $this.$data2.byteOffset + ($index * 2 | 0) | 0;
    $slice = new Uint16Array(var$5, var$6, $length);
    $dst.data.set($slice, $offset);
},
jn_CharBufferOverTypedArray_putImpl0 = ($this, $index, $src, $offset, $length) => {
    let var$5, var$6, $slice;
    var$5 = $src.data.buffer;
    var$6 = $offset * 2 | 0;
    $slice = new Uint16Array(var$5, var$6, $length);
    $this.$data2.set($slice, $index);
},
jn_CharBufferOverTypedArray_putImpl = ($this, $index, $src, $offset, $length) => {
    let $length_0, var$6, $index_0, $offset_0, var$9;
    while (true) {
        $length_0 = $length + (-1) | 0;
        if ($length <= 0)
            break;
        var$6 = $this.$data2;
        $index_0 = $index + 1 | 0;
        $offset_0 = $offset + 1 | 0;
        var$9 = $src.$charAt($offset);
        var$6[$index] = var$9;
        $length = $length_0;
        $index = $index_0;
        $offset = $offset_0;
    }
},
otjt_ArrayBufferView = $rt_classWithoutFields(),
otjt_TypedArray = $rt_classWithoutFields(otjt_ArrayBufferView),
jl_UnsupportedOperationException = $rt_classWithoutFields(jl_RuntimeException),
jl_UnsupportedOperationException__init_ = $this => {
    jl_RuntimeException__init_($this);
},
jl_UnsupportedOperationException__init_0 = () => {
    let var_0 = new jl_UnsupportedOperationException();
    jl_UnsupportedOperationException__init_(var_0);
    return var_0;
},
jn_ReadOnlyBufferException = $rt_classWithoutFields(jl_UnsupportedOperationException),
jn_ReadOnlyBufferException__init_0 = $this => {
    jl_UnsupportedOperationException__init_($this);
},
jn_ReadOnlyBufferException__init_ = () => {
    let var_0 = new jn_ReadOnlyBufferException();
    jn_ReadOnlyBufferException__init_0(var_0);
    return var_0;
},
cgxgbt_TeaPermissions$TeaPermissionResult = $rt_classWithoutFields(0);
function cgxgbt_TeaClipboard$ClipboardWriteHandler() {
    jl_Object.call(this);
    this.$this$03 = null;
}
let cgxgbt_TeaClipboard$ClipboardWriteHandler__init_ = ($this, var$1) => {
    $this.$this$03 = var$1;
    jl_Object__init_($this);
},
cgxgbt_TeaClipboard$ClipboardWriteHandler__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaClipboard$ClipboardWriteHandler();
    cgxgbt_TeaClipboard$ClipboardWriteHandler__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaClipboard$ClipboardWriteHandler_granted = $this => {
    $this.$this$03.$hasWritePermissions = 1;
    cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4($rt_ustr($this.$this$03.$content));
},
cgxgbt_TeaClipboard$ClipboardWriteHandler_denied = $this => {
    $this.$this$03.$hasWritePermissions = 0;
},
cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt = $this => {
    $this.$this$03.$hasWritePermissions = 1;
    cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4($rt_ustr($this.$this$03.$content));
},
cgxgbt_TeaClipboard$ClipboardWriteHandler_granted$exported$0 = var$1 => {
    var$1.$granted();
},
cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt$exported$1 = var$1 => {
    var$1.$prompt();
},
cgxgbt_TeaClipboard$ClipboardWriteHandler_denied$exported$2 = var$1 => {
    var$1.$denied();
};
function cgxgbta_AssetType() {
    jl_Enum.call(this);
    this.$code = null;
}
let cgxgbta_AssetType_Binary = null,
cgxgbta_AssetType_Directory = null,
cgxgbta_AssetType_$VALUES = null,
cgxgbta_AssetType_$callClinit = () => {
    cgxgbta_AssetType_$callClinit = $rt_eraseClinit(cgxgbta_AssetType);
    cgxgbta_AssetType__clinit_();
},
cgxgbta_AssetType_values = () => {
    cgxgbta_AssetType_$callClinit();
    return cgxgbta_AssetType_$VALUES.$clone0();
},
cgxgbta_AssetType__init_0 = ($this, var$1, var$2, $code) => {
    cgxgbta_AssetType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$code = $code;
},
cgxgbta_AssetType__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbta_AssetType();
    cgxgbta_AssetType__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbta_AssetType__clinit_ = () => {
    let var$1, var$2;
    cgxgbta_AssetType_Binary = cgxgbta_AssetType__init_($rt_s(265), 0, $rt_s(266));
    cgxgbta_AssetType_Directory = cgxgbta_AssetType__init_($rt_s(267), 1, $rt_s(99));
    var$1 = $rt_createArray(cgxgbta_AssetType, 2);
    var$2 = var$1.data;
    var$2[0] = cgxgbta_AssetType_Binary;
    var$2[1] = cgxgbta_AssetType_Directory;
    cgxgbta_AssetType_$VALUES = var$1;
},
jlr_Array = $rt_classWithoutFields(),
jlr_Array_getLength = var$1 => {
    if (var$1 === null || var$1.constructor.$meta.item === 'undefined') {
        $rt_throw(jl_IllegalArgumentException__init_0());
    }
    return var$1.data.length;
},
jlr_Array_newInstance = (var$1, $length) => {
    if (var$1 === null)
        $rt_throw(jl_NullPointerException__init_());
    if (var$1 === $rt_cls($rt_voidcls))
        $rt_throw(jl_IllegalArgumentException__init_0());
    if ($length < 0)
        $rt_throw(jl_NegativeArraySizeException__init_());
    return jlr_Array_newInstanceImpl(jl_Class_getPlatformClass(var$1), $length);
},
jlr_Array_newInstanceImpl = (var$1, var$2) => {
    if (var$1.$meta.primitive) {
        switch (var$1) {
        }
        ;
    }
    return $rt_createArray(var$1, var$2);
};
function cbggge_BaseLight() {
    jl_Object.call(this);
    this.$color2 = null;
}
let cbggge_BaseLight__init_ = $this => {
    jl_Object__init_($this);
    $this.$color2 = cbgg_Color__init_0(0.0, 0.0, 0.0, 1.0);
};
function cbggge_PointLight() {
    let a = this; cbggge_BaseLight.call(a);
    a.$position9 = null;
    a.$intensity = 0.0;
}
let cbggge_PointLight__init_ = $this => {
    cbggge_BaseLight__init_($this);
    $this.$position9 = cbgm_Vector3__init_();
},
cbggge_PointLight__init_0 = () => {
    let var_0 = new cbggge_PointLight();
    cbggge_PointLight__init_(var_0);
    return var_0;
},
cbggge_PointLight_set0 = ($this, $copyFrom) => {
    return $this.$set10($copyFrom.$color2, $copyFrom.$position9, $copyFrom.$intensity);
},
cbggge_PointLight_set1 = ($this, $color, $position, $intensity) => {
    if ($color !== null)
        $this.$color2.$set11($color);
    if ($position !== null)
        $this.$position9.$set7($position);
    $this.$intensity = $intensity;
    return $this;
},
cbggge_PointLight_set = ($this, $r, $g, $b, $x, $y, $z, $intensity) => {
    $this.$color2.$set12($r, $g, $b, 1.0);
    $this.$position9.$set8($x, $y, $z);
    $this.$intensity = $intensity;
    return $this;
},
cbggge_PointLight_equals = ($this, $other) => {
    let var$2, var$3, var$4;
    a: {
        b: {
            if ($other !== null) {
                if ($other === $this)
                    break b;
                var$2 = $this.$color2;
                var$3 = $other.$color2;
                if (var$2.$equals(var$3) && $this.$position9.$equals($other.$position9) && $this.$intensity === $other.$intensity)
                    break b;
            }
            var$4 = 0;
            break a;
        }
        var$4 = 1;
    }
    return var$4;
},
cbg_Files = $rt_classWithoutFields(0);
function cgxgbt_TeaFiles() {
    let a = this; jl_Object.call(a);
    a.$internalStorage = null;
    a.$classpathStorage = null;
    a.$localStorage = null;
    a.$localStoragePrefix0 = null;
}
let cgxgbt_TeaFiles__init_ = ($this, $config, $teaApplication) => {
    jl_Object__init_($this);
    $this.$internalStorage = cgxgbtft_InternalStorage__init_0();
    $this.$classpathStorage = cgxgbtft_ClasspathStorage__init_0();
    $this.$localStorage = cgxgbtft_LocalDBStorage__init_0($teaApplication);
    $this.$localStoragePrefix0 = $config.$localStoragePrefix;
},
cgxgbt_TeaFiles__init_0 = (var_0, var_1) => {
    let var_2 = new cgxgbt_TeaFiles();
    cgxgbt_TeaFiles__init_(var_2, var_0, var_1);
    return var_2;
},
cgxgbt_TeaFiles_getFileDB = ($this, $type) => {
    cbg_Files$FileType_$callClinit();
    if ($type === cbg_Files$FileType_Internal)
        return $this.$internalStorage;
    if ($type === cbg_Files$FileType_Classpath)
        return $this.$classpathStorage;
    if ($type !== cbg_Files$FileType_Local)
        return null;
    return $this.$localStorage;
},
cgxgbt_TeaFiles_getFileHandle = ($this, $path, $type) => {
    let var$3, var$4, var$5;
    cbg_Files$FileType_$callClinit();
    if ($type === cbg_Files$FileType_Internal)
        return $this.$internal($path);
    if ($type === cbg_Files$FileType_Classpath)
        return $this.$classpath($path);
    if ($type === cbg_Files$FileType_Local)
        return $this.$local($path);
    var$3 = new cbgu_GdxRuntimeException;
    var$4 = jl_String_valueOf($type);
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(268)), var$4), $rt_s(269));
    cbgu_GdxRuntimeException__init_0(var$3, jl_StringBuilder_toString(var$5));
    $rt_throw(var$3);
},
cgxgbt_TeaFiles_classpath = ($this, $path) => {
    let var$2;
    var$2 = new cgxgbt_TeaFileHandle;
    cbg_Files$FileType_$callClinit();
    cgxgbt_TeaFileHandle__init_(var$2, $this, $path, cbg_Files$FileType_Classpath);
    return var$2;
},
cgxgbt_TeaFiles_internal = ($this, $path) => {
    let var$2;
    var$2 = new cgxgbt_TeaFileHandle;
    cbg_Files$FileType_$callClinit();
    cgxgbt_TeaFileHandle__init_(var$2, $this, $path, cbg_Files$FileType_Internal);
    return var$2;
},
cgxgbt_TeaFiles_local = ($this, $path) => {
    let var$2;
    var$2 = new cgxgbt_TeaFileHandle;
    cbg_Files$FileType_$callClinit();
    cgxgbt_TeaFileHandle__init_(var$2, $this, $path, cbg_Files$FileType_Local);
    return var$2;
},
jur_AbstractCharClass$LazyJavaDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaDigit__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaDigit();
    jur_AbstractCharClass$LazyJavaDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaDigit_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaDigit$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
},
cbgssu_TransformDrawable = $rt_classWithoutFields(0),
cbgggs_BaseShader$Setter = $rt_classWithoutFields(0),
cbgggs_BaseShader$LocalSetter = $rt_classWithoutFields(),
cbgggs_BaseShader$LocalSetter__init_ = $this => {
    jl_Object__init_($this);
},
cbgggs_BaseShader$LocalSetter_isGlobal = ($this, $shader, $inputID) => {
    return 0;
},
otjb_TimerHandler = $rt_classWithoutFields(0);
function cgxgbtu_Timer$1() {
    let a = this; jl_Object.call(a);
    a.$val$timer = null;
    a.$val$cancelCounter = 0;
}
let cgxgbtu_Timer$1__init_ = ($this, var$1, var$2) => {
    $this.$val$timer = var$1;
    $this.$val$cancelCounter = var$2;
    jl_Object__init_($this);
},
cgxgbtu_Timer$1__init_0 = (var_0, var_1) => {
    let var_2 = new cgxgbtu_Timer$1();
    cgxgbtu_Timer$1__init_(var_2, var_0, var_1);
    return var_2;
},
cgxgbtu_Timer$1_onTimer = $this => {
    cgxgbtu_Timer_fire($this.$val$timer, $this.$val$cancelCounter);
},
cgxgbtu_Timer$1_onTimer$exported$0 = var$1 => {
    var$1.$onTimer();
},
otji_JS = $rt_classWithoutFields(),
otji_JS_wrap = $array => {
    let var$2, var$3, $result, $i, var$6;
    if ($array === null)
        return null;
    var$2 = $array.data;
    var$3 = var$2.length;
    $result = new Int8Array(var$3);
    $i = 0;
    while ($i < var$3) {
        var$6 = var$2[$i];
        $result[$i] = var$6;
        $i = $i + 1 | 0;
    }
    return $result;
},
otji_JS_function = (var$1, var$2) => {
    let name = 'jso$functor$' + var$2;
    let result = var$1[name];
    if (typeof result !== 'function') {
        let fn = function() {
            return var$1[var$2].apply(var$1, arguments);
        };
        result = () => fn;
        var$1[name] = result;
    }
    return result();
},
otji_JS_functionAsObject = (var$1, var$2) => {
    if (typeof var$1 !== 'function') return var$1;
    let result = {  };
    result[var$2] = var$1;
    return result;
};
function jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$065 = null;
}
let jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_ = ($this, var$1) => {
    $this.$this$065 = var$1;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains = ($this, $ch) => {
    return jl_Character_isUnicodeIdentifierStart($ch);
};
function jnc_Charset() {
    let a = this; jl_Object.call(a);
    a.$canonicalName = null;
    a.$aliases = null;
}
let jnc_Charset__init_ = ($this, $canonicalName, $aliases) => {
    let var$3, var$4, var$5, $alias;
    var$3 = $aliases.data;
    jl_Object__init_($this);
    jnc_Charset_checkCanonicalName($canonicalName);
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $alias = var$3[var$5];
        jnc_Charset_checkCanonicalName($alias);
        var$5 = var$5 + 1 | 0;
    }
    $this.$canonicalName = $canonicalName;
    $this.$aliases = $aliases.$clone0();
},
jnc_Charset_checkCanonicalName = $name => {
    let $i, $c;
    if ($name.$isEmpty())
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    if (!jnc_Charset_isValidCharsetStart($name.$charAt(0)))
        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
    $i = 1;
    while ($i < $name.$length()) {
        a: {
            $c = $name.$charAt($i);
            switch ($c) {
                case 43:
                case 45:
                case 46:
                case 58:
                case 95:
                    break;
                default:
                    if (jnc_Charset_isValidCharsetStart($c))
                        break a;
                    else
                        $rt_throw(jnc_IllegalCharsetNameException__init_($name));
            }
        }
        $i = $i + 1 | 0;
    }
},
jnc_Charset_isValidCharsetStart = $c => {
    let var$2;
    a: {
        b: {
            if (!($c >= 48 && $c <= 57) && !($c >= 97 && $c <= 122)) {
                if ($c < 65)
                    break b;
                if ($c > 90)
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
},
jnc_Charset_forName = $charsetName => {
    let $charset;
    if ($charsetName === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(270)));
    jnc_Charset_checkCanonicalName($charsetName);
    jnc_Charset$Charsets_$callClinit();
    $charset = jnc_Charset$Charsets_value.$get2($charsetName.$toUpperCase());
    if ($charset !== null)
        return $charset;
    $rt_throw(jnc_UnsupportedCharsetException__init_0($charsetName));
},
jnc_Charset_name = $this => {
    return $this.$canonicalName;
},
jnc_Charset_decode = ($this, $bb) => {
    let var$2, var$3, $e, $$je;
    a: {
        try {
            var$2 = $this.$newDecoder();
            jnc_CodingErrorAction_$callClinit();
            var$3 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetDecoder_onMalformedInput(var$2, var$3);
            var$2 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetDecoder_onUnmappableCharacter(var$3, var$2);
            var$3 = jnc_CharsetDecoder_decode0(var$3, $bb);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_CharacterCodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    $rt_throw(jl_AssertionError__init_0($rt_s(271), $e));
},
jnc_Charset_encode = ($this, $cb) => {
    let var$2, var$3, $e, $$je;
    a: {
        try {
            var$2 = $this.$newEncoder();
            jnc_CodingErrorAction_$callClinit();
            var$3 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetEncoder_onMalformedInput(var$2, var$3);
            var$2 = jnc_CodingErrorAction_REPLACE;
            var$3 = jnc_CharsetEncoder_onUnmappableCharacter(var$3, var$2);
            var$3 = jnc_CharsetEncoder_encode0(var$3, $cb);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_CharacterCodingException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    $rt_throw(jl_AssertionError__init_0($rt_s(271), $e));
};
function jnci_UTF16Charset() {
    let a = this; jnc_Charset.call(a);
    a.$bom0 = 0;
    a.$littleEndian3 = 0;
}
let jnci_UTF16Charset__init_0 = ($this, $canonicalName, $bom, $littleEndian) => {
    jnc_Charset__init_($this, $canonicalName, $rt_createArray(jl_String, 0));
    $this.$bom0 = $bom;
    $this.$littleEndian3 = $littleEndian;
},
jnci_UTF16Charset__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jnci_UTF16Charset();
    jnci_UTF16Charset__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jnci_UTF16Charset_newDecoder = $this => {
    return jnci_UTF16Decoder__init_0($this, $this.$bom0, $this.$littleEndian3);
};
function cgxgbt_TeaPreloadApplicationListener$BorderDrawable() {
    let a = this; cbgssu_BaseDrawable.call(a);
    a.$texture1 = null;
    a.$thickness = 0.0;
    a.$padding = 0.0;
    a.$fixedHeight = 0.0;
}
let cgxgbt_TeaPreloadApplicationListener$BorderDrawable__init_ = ($this, $texture) => {
    cbgssu_BaseDrawable__init_($this);
    $this.$thickness = 4.0;
    $this.$padding = 6.0;
    $this.$fixedHeight = 40.0;
    $this.$texture1 = $texture;
},
cgxgbt_TeaPreloadApplicationListener$BorderDrawable__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaPreloadApplicationListener$BorderDrawable();
    cgxgbt_TeaPreloadApplicationListener$BorderDrawable__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaPreloadApplicationListener$BorderDrawable_draw = ($this, $batch, $x, $y, $width, $height) => {
    $batch.$draw1($this.$texture1, $x, $y + $this.$fixedHeight - $this.$thickness, $width, $this.$thickness);
    $batch.$draw1($this.$texture1, $x, $y, $width, $this.$thickness);
    $batch.$draw1($this.$texture1, $x, $y, $this.$thickness, $this.$fixedHeight);
    $batch.$draw1($this.$texture1, $x + $width - $this.$thickness, $y, $this.$thickness, $this.$fixedHeight);
},
cgxgbt_TeaPreloadApplicationListener$BorderDrawable_getLeftWidth = $this => {
    return $this.$thickness + $this.$padding;
},
cgxgbt_TeaPreloadApplicationListener$BorderDrawable_getRightWidth = $this => {
    return $this.$thickness + $this.$padding;
},
cgxgbt_TeaPreloadApplicationListener$BorderDrawable_getTopHeight = $this => {
    return $this.$thickness + $this.$padding;
},
cgxgbt_TeaPreloadApplicationListener$BorderDrawable_getBottomHeight = $this => {
    return $this.$thickness + $this.$padding;
},
cgxgbt_TeaPreloadApplicationListener$BorderDrawable_getMinHeight = $this => {
    return $this.$fixedHeight;
},
otciu_UnicodeHelper = $rt_classWithoutFields(),
otciu_UnicodeHelper_decodeIntPairsDiff = $text => {
    let $flow, $sz, $data, $j, $lastKey, $lastValue, $i, var$9, var$10;
    $flow = otci_CharFlow__init_($text.$toCharArray());
    $sz = otci_Base46_decodeUnsigned($flow);
    $data = $rt_createIntArray($sz * 2 | 0);
    $j = 0;
    $lastKey = 0;
    $lastValue = 0;
    $i = 0;
    while ($i < $sz) {
        var$9 = $data.data;
        $lastKey = $lastKey + otci_Base46_decode($flow) | 0;
        $lastValue = $lastValue + otci_Base46_decode($flow) | 0;
        var$10 = $j + 1 | 0;
        var$9[$j] = $lastKey;
        $j = var$10 + 1 | 0;
        var$9[var$10] = $lastValue;
        $i = $i + 1 | 0;
    }
    return $data;
},
otciu_UnicodeHelper_decodeCaseMapping = $text => {
    let $flow, $sz, $data, $last, $i, var$7, var$8;
    $flow = otci_CharFlow__init_($text.$toCharArray());
    $sz = otci_Base46_decodeUnsigned($flow);
    $data = $rt_createIntArray($sz * 2 | 0);
    $last = 0;
    $i = 0;
    while ($i < $sz) {
        var$7 = $data.data;
        $last = $last + otci_Base46_decodeUnsigned($flow) | 0;
        var$8 = $i * 2 | 0;
        var$7[var$8] = $last;
        var$7[var$8 + 1 | 0] = otci_Base46_decode($flow);
        $i = $i + 1 | 0;
    }
    return $data;
},
otciu_UnicodeHelper_createCharMapping = $data => {
    let $result, $last, $lastValue, $i, var$6, var$7, $key, $value, var$10;
    $result = $rt_createIntArray(65536);
    $last = 0;
    $lastValue = 0;
    $i = 0;
    a: {
        while (true) {
            var$6 = $data.data;
            if ($i >= var$6.length)
                break a;
            var$7 = $result.data;
            $key = var$6[$i];
            $value = var$6[$i + 1 | 0];
            var$10 = var$7.length;
            if ($key < var$10)
                var$10 = $key;
            else if ($key == $last)
                break;
            ju_Arrays_fill2($result, $last, var$10, $lastValue);
            $i = $i + 2 | 0;
            $last = var$10;
            $lastValue = $value;
        }
    }
    return otciu_CharMapping__init_0($data, $result);
},
otciu_UnicodeHelper_decodeByte = $c => {
    if ($c > 92)
        return (($c - 32 | 0) - 2 | 0) << 24 >> 24;
    if ($c <= 34)
        return ($c - 32 | 0) << 24 >> 24;
    return (($c - 32 | 0) - 1 | 0) << 24 >> 24;
},
otciu_UnicodeHelper_extractRle = $encoded => {
    let $ranges, $buffer, $index, $rangeIndex, $codePoint, $i, $b, $count, $pos, $j, $digit, var$13, var$14, var$15, var$16, var$17;
    $ranges = $rt_createArray(otciu_UnicodeHelper$Range, 16384);
    $buffer = $rt_createByteArray(16384);
    $index = 0;
    $rangeIndex = 0;
    $codePoint = 0;
    $i = 0;
    while ($i < $encoded.$length()) {
        $b = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
        if ($b == 64) {
            $i = $i + 1 | 0;
            $b = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
            $count = 0;
            $pos = 1;
            $j = 0;
            while ($j < 3) {
                $i = $i + 1 | 0;
                $digit = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
                $count = $count | $rt_imul($pos, $digit);
                $pos = $pos * 64 | 0;
                $j = $j + 1 | 0;
            }
        } else if ($b < 32)
            $count = 1;
        else {
            $b = ($b - 32 | 0) << 24 >> 24;
            $i = $i + 1 | 0;
            $count = otciu_UnicodeHelper_decodeByte($encoded.$charAt($i));
        }
        if (!$b && $count >= 128) {
            if ($index > 0) {
                var$13 = $ranges.data;
                var$14 = $rangeIndex + 1 | 0;
                var$13[$rangeIndex] = otciu_UnicodeHelper$Range__init_($codePoint, $codePoint + $index | 0, ju_Arrays_copyOf0($buffer, $index));
                $rangeIndex = var$14;
            }
            $codePoint = $codePoint + ($index + $count | 0) | 0;
            $index = 0;
        } else {
            var$15 = $buffer.data;
            var$14 = $index + $count | 0;
            if (var$14 < var$15.length)
                var$16 = $rangeIndex;
            else {
                var$13 = $ranges.data;
                var$16 = $rangeIndex + 1 | 0;
                var$13[$rangeIndex] = otciu_UnicodeHelper$Range__init_($codePoint, $codePoint + $index | 0, ju_Arrays_copyOf0($buffer, $index));
                $codePoint = $codePoint + var$14 | 0;
                $index = 0;
            }
            while (true) {
                var$14 = $count + (-1) | 0;
                if ($count <= 0)
                    break;
                var$17 = $index + 1 | 0;
                var$15[$index] = $b;
                $index = var$17;
                $count = var$14;
            }
            $rangeIndex = var$16;
        }
        $i = $i + 1 | 0;
    }
    return ju_Arrays_copyOf($ranges, $rangeIndex);
},
otp_PlatformRunnable = $rt_classWithoutFields(0);
function jl_Object$monitorEnterWait$lambda$_6_0() {
    let a = this; jl_Object.call(a);
    a.$_04 = null;
    a.$_13 = null;
    a.$_22 = 0;
    a.$_31 = null;
}
let jl_Object$monitorEnterWait$lambda$_6_0__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_04 = var$1;
    var$0.$_13 = var$2;
    var$0.$_22 = var$3;
    var$0.$_31 = var$4;
},
jl_Object$monitorEnterWait$lambda$_6_0__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jl_Object$monitorEnterWait$lambda$_6_0();
    jl_Object$monitorEnterWait$lambda$_6_0__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jl_Object$monitorEnterWait$lambda$_6_0_run = var$0 => {
    jl_Object_lambda$monitorEnterWait$0(var$0.$_04, var$0.$_13, var$0.$_22, var$0.$_31);
},
jur_AbstractCharClass$LazyAlnum = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlpha),
jur_AbstractCharClass$LazyAlnum__init_ = $this => {
    jur_AbstractCharClass$LazyAlpha__init_($this);
},
jur_AbstractCharClass$LazyAlnum__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyAlnum();
    jur_AbstractCharClass$LazyAlnum__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyAlnum_computeValue = $this => {
    return (jur_AbstractCharClass$LazyAlpha_computeValue($this)).$add0(48, 57);
},
jur_AbstractCharClass$LazyGraph = $rt_classWithoutFields(jur_AbstractCharClass$LazyAlnum),
jur_AbstractCharClass$LazyGraph__init_ = $this => {
    jur_AbstractCharClass$LazyAlnum__init_($this);
},
jur_AbstractCharClass$LazyGraph__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyGraph();
    jur_AbstractCharClass$LazyGraph__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyGraph_computeValue = $this => {
    return (((jur_AbstractCharClass$LazyAlnum_computeValue($this)).$add0(33, 64)).$add0(91, 96)).$add0(123, 126);
},
jur_AbstractCharClass$LazyPrint = $rt_classWithoutFields(jur_AbstractCharClass$LazyGraph),
jur_AbstractCharClass$LazyPrint__init_ = $this => {
    jur_AbstractCharClass$LazyGraph__init_($this);
},
jur_AbstractCharClass$LazyPrint__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyPrint();
    jur_AbstractCharClass$LazyPrint__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyPrint_computeValue = $this => {
    return (jur_AbstractCharClass$LazyGraph_computeValue($this)).$add(32);
},
jur_AbstractCharClass$LazyJavaSpaceChar = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaSpaceChar__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaSpaceChar__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaSpaceChar();
    jur_AbstractCharClass$LazyJavaSpaceChar__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaSpaceChar_computeValue = $this => {
    return jur_AbstractCharClass$LazyJavaSpaceChar$1__init_0($this);
},
otjc_JSUndefined = $rt_classWithoutFields(),
jur_PositiveLookBehind = $rt_classWithoutFields(jur_AtomicJointSet),
jur_PositiveLookBehind__init_ = ($this, $children, $fSet) => {
    jur_AtomicJointSet__init_($this, $children, $fSet);
},
jur_PositiveLookBehind__init_0 = (var_0, var_1) => {
    let var_2 = new jur_PositiveLookBehind();
    jur_PositiveLookBehind__init_(var_2, var_0, var_1);
    return var_2;
},
jur_PositiveLookBehind_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $leftBound, $shift, $i, $e;
    $size = $this.$children.$size();
    $leftBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getLeftBound() : 0;
    a: {
        $shift = $this.$next1.$matches($stringIndex, $testString, $matchResult);
        if ($shift >= 0) {
            $matchResult.$setConsumed($this.$groupIndex, $stringIndex);
            $i = 0;
            while (true) {
                if ($i >= $size)
                    break a;
                $e = $this.$children.$get($i);
                if ($e.$findBack($leftBound, $stringIndex, $testString, $matchResult) >= 0) {
                    $matchResult.$setConsumed($this.$groupIndex, (-1));
                    return $shift;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    return (-1);
},
jur_PositiveLookBehind_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PositiveLookBehind_getName = $this => {
    return $rt_s(272);
};
function jnc_CharsetEncoder() {
    let a = this; jl_Object.call(a);
    a.$charset0 = null;
    a.$replacement1 = null;
    a.$averageBytesPerChar = 0.0;
    a.$maxBytesPerChar = 0.0;
    a.$malformedAction0 = null;
    a.$unmappableAction0 = null;
    a.$status = 0;
}
let jnc_CharsetEncoder__init_0 = ($this, $cs, $averageBytesPerChar, $maxBytesPerChar, $replacement) => {
    jl_Object__init_($this);
    jnc_CodingErrorAction_$callClinit();
    $this.$malformedAction0 = jnc_CodingErrorAction_REPORT;
    $this.$unmappableAction0 = jnc_CodingErrorAction_REPORT;
    jnc_CharsetEncoder_checkReplacement($this, $replacement);
    $this.$charset0 = $cs;
    $this.$replacement1 = $replacement.$clone0();
    $this.$averageBytesPerChar = $averageBytesPerChar;
    $this.$maxBytesPerChar = $maxBytesPerChar;
},
jnc_CharsetEncoder__init_ = ($this, $cs, $averageBytesPerChar, $maxBytesPerChar) => {
    let var$4;
    var$4 = $rt_createByteArray(1);
    var$4.data[0] = 63;
    jnc_CharsetEncoder__init_0($this, $cs, $averageBytesPerChar, $maxBytesPerChar, var$4);
},
jnc_CharsetEncoder_checkReplacement = ($this, $replacement) => {
    let var$2;
    if ($replacement !== null) {
        var$2 = $replacement.data.length;
        if (var$2 && var$2 >= $this.$maxBytesPerChar)
            return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(273)));
},
jnc_CharsetEncoder_onMalformedInput = ($this, $newAction) => {
    if ($newAction !== null) {
        $this.$malformedAction0 = $newAction;
        $this.$implOnMalformedInput($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(274)));
},
jnc_CharsetEncoder_implOnMalformedInput = ($this, $newAction) => {
    return;
},
jnc_CharsetEncoder_onUnmappableCharacter = ($this, $newAction) => {
    if ($newAction !== null) {
        $this.$unmappableAction0 = $newAction;
        $this.$implOnUnmappableCharacter($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(274)));
},
jnc_CharsetEncoder_implOnUnmappableCharacter = ($this, $newAction) => {
    return;
},
jnc_CharsetEncoder_encode = ($this, $in, $out, $endOfInput) => {
    let $result, $e, $remaining, $action, $$je;
    a: {
        if ($this.$status != 3) {
            if ($endOfInput)
                break a;
            if ($this.$status != 2)
                break a;
        }
        $rt_throw(jl_IllegalStateException__init_0());
    }
    $this.$status = !$endOfInput ? 1 : 2;
    while (true) {
        try {
            $result = $this.$encodeLoop($in, $out);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                $rt_throw(jnc_CoderMalfunctionError__init_0($e));
            } else {
                throw $$e;
            }
        }
        if ($result.$isUnderflow()) {
            if (!$endOfInput)
                return $result;
            $remaining = jn_Buffer_remaining($in);
            if ($remaining <= 0)
                return $result;
            $result = jnc_CoderResult_malformedForLength($remaining);
        } else if ($result.$isOverflow())
            break;
        $action = !$result.$isUnmappable() ? $this.$malformedAction0 : $this.$unmappableAction0;
        b: {
            jnc_CodingErrorAction_$callClinit();
            if ($action !== jnc_CodingErrorAction_REPLACE) {
                if ($action === jnc_CodingErrorAction_IGNORE)
                    break b;
                else
                    return $result;
            }
            if (jn_Buffer_remaining($out) < $this.$replacement1.data.length)
                return jnc_CoderResult_OVERFLOW;
            jn_ByteBuffer_put($out, $this.$replacement1);
        }
        $in.$position0(jn_Buffer_position($in) + $result.$length() | 0);
    }
    return $result;
},
jnc_CharsetEncoder_encode0 = ($this, $in) => {
    let $output, $result, var$4;
    if (!jn_Buffer_remaining($in))
        return jn_ByteBuffer_allocate(0);
    jnc_CharsetEncoder_reset($this);
    $output = jn_ByteBuffer_allocate(jn_Buffer_remaining($in) * $this.$averageBytesPerChar | 0);
    while (true) {
        $result = jnc_CharsetEncoder_encode($this, $in, $output, 0);
        jnc_CoderResult_$callClinit();
        if ($result === jnc_CoderResult_UNDERFLOW)
            break;
        if ($result === jnc_CoderResult_OVERFLOW) {
            $output = jnc_CharsetEncoder_allocateMore($this, $output);
            continue;
        }
        if (!$result.$isError())
            continue;
        $result.$throwException();
    }
    var$4 = jnc_CharsetEncoder_encode($this, $in, $output, 1);
    if (var$4.$isError())
        var$4.$throwException();
    while (true) {
        var$4 = jnc_CharsetEncoder_flush($this, $output);
        if (var$4.$isUnderflow())
            break;
        if (!var$4.$isOverflow())
            continue;
        $output = jnc_CharsetEncoder_allocateMore($this, $output);
    }
    jn_ByteBuffer_flip($output);
    return $output;
},
jnc_CharsetEncoder_allocateMore = ($this, $buffer) => {
    let $array, var$3, $result;
    $array = jn_ByteBuffer_array($buffer);
    var$3 = $array.data;
    var$3 = ju_Arrays_copyOf0($array, var$3.length * 2 | 0);
    $result = jn_ByteBuffer_wrap(var$3);
    $result.$position2(jn_Buffer_position($buffer));
    return $result;
},
jnc_CharsetEncoder_flush = ($this, $out) => {
    let $result;
    if ($this.$status != 2 && $this.$status != 4)
        $rt_throw(jl_IllegalStateException__init_0());
    $result = $this.$implFlush($out);
    jnc_CoderResult_$callClinit();
    if ($result === jnc_CoderResult_UNDERFLOW)
        $this.$status = 3;
    return $result;
},
jnc_CharsetEncoder_implFlush = ($this, $out) => {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult_UNDERFLOW;
},
jnc_CharsetEncoder_reset = $this => {
    $this.$status = 0;
    $this.$implReset();
    return $this;
},
jnc_CharsetEncoder_implReset = $this => {
    return;
};
function cbgu_StringBuilder() {
    let a = this; jl_Object.call(a);
    a.$chars = null;
    a.$length4 = 0;
}
let cbgu_StringBuilder_digits = null,
cbgu_StringBuilder_$callClinit = () => {
    cbgu_StringBuilder_$callClinit = $rt_eraseClinit(cbgu_StringBuilder);
    cbgu_StringBuilder__clinit_();
},
cbgu_StringBuilder_numChars = ($value, $radix) => {
    let $result;
    cbgu_StringBuilder_$callClinit();
    $result = $value >= 0 ? 1 : 2;
    while (true) {
        $value = $value / $radix | 0;
        if (!$value)
            break;
        $result = $result + 1 | 0;
    }
    return $result;
},
cbgu_StringBuilder__init_0 = ($this, $capacity) => {
    cbgu_StringBuilder_$callClinit();
    jl_Object__init_($this);
    if ($capacity >= 0) {
        $this.$chars = $rt_createCharArray($capacity);
        return;
    }
    $rt_throw(jl_NegativeArraySizeException__init_());
},
cbgu_StringBuilder__init_ = var_0 => {
    let var_1 = new cbgu_StringBuilder();
    cbgu_StringBuilder__init_0(var_1, var_0);
    return var_1;
},
cbgu_StringBuilder_enlargeBuffer = ($this, $min) => {
    let $newSize, $newData;
    $newSize = (($this.$chars.data.length >> 1) + $this.$chars.data.length | 0) + 2 | 0;
    if ($min > $newSize)
        $newSize = $min;
    $newData = $rt_createCharArray($newSize);
    jl_System_fastArraycopy($this.$chars, 0, $newData, 0, $this.$length4);
    $this.$chars = $newData;
},
cbgu_StringBuilder_appendNull = $this => {
    let $newSize, var$2, var$3, var$4;
    $newSize = $this.$length4 + 4 | 0;
    if ($newSize > $this.$chars.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, $newSize);
    var$2 = $this.$chars.data;
    var$3 = $this.$length4;
    $this.$length4 = var$3 + 1 | 0;
    var$2[var$3] = 110;
    var$2 = $this.$chars.data;
    var$4 = $this.$length4;
    $this.$length4 = var$4 + 1 | 0;
    var$2[var$4] = 117;
    var$2 = $this.$chars.data;
    var$4 = $this.$length4;
    $this.$length4 = var$4 + 1 | 0;
    var$2[var$4] = 108;
    var$2 = $this.$chars.data;
    var$4 = $this.$length4;
    $this.$length4 = var$4 + 1 | 0;
    var$2[var$4] = 108;
},
cbgu_StringBuilder_append0 = ($this, $ch) => {
    let var$2, var$3;
    if ($this.$length4 == $this.$chars.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, $this.$length4 + 1 | 0);
    var$2 = $this.$chars.data;
    var$3 = $this.$length4;
    $this.$length4 = var$3 + 1 | 0;
    var$2[var$3] = $ch;
},
cbgu_StringBuilder_append00 = ($this, $string) => {
    let $adding, $newSize;
    if ($string === null) {
        cbgu_StringBuilder_appendNull($this);
        return;
    }
    $adding = $string.$length();
    $newSize = $this.$length4 + $adding | 0;
    if ($newSize > $this.$chars.data.length)
        cbgu_StringBuilder_enlargeBuffer($this, $newSize);
    $string.$getChars(0, $adding, $this.$chars, $this.$length4);
    $this.$length4 = $newSize;
},
cbgu_StringBuilder_toString = $this => {
    if (!$this.$length4)
        return $rt_s(60);
    return jl_String__init_($this.$chars, 0, $this.$length4);
},
cbgu_StringBuilder_append2 = ($this, $c) => {
    cbgu_StringBuilder_append0($this, $c);
    return $this;
},
cbgu_StringBuilder_append3 = ($this, $value) => {
    return $this.$append16($value, 0);
},
cbgu_StringBuilder_append1 = ($this, $value, $minLength) => {
    return $this.$append17($value, $minLength, 48);
},
cbgu_StringBuilder_append = ($this, $value, $minLength, $prefix) => {
    let $j;
    if ($value == (-2147483648)) {
        cbgu_StringBuilder_append00($this, $rt_s(275));
        return $this;
    }
    if ($value < 0) {
        cbgu_StringBuilder_append0($this, 45);
        $value =  -$value | 0;
    }
    a: {
        if ($minLength > 1) {
            $j = $minLength - cbgu_StringBuilder_numChars($value, 10) | 0;
            while (true) {
                if ($j <= 0)
                    break a;
                $this.$append4($prefix);
                $j = $j + (-1) | 0;
            }
        }
    }
    if ($value >= 10000) {
        if ($value >= 1000000000) {
            cbgu_StringBuilder_$callClinit();
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[Long_lo(Long_div(Long_rem(Long_fromInt($value), Long_create(1410065408, 2)), Long_fromInt(1000000000)))]);
        }
        if ($value >= 100000000) {
            cbgu_StringBuilder_$callClinit();
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000000000 | 0) / 100000000 | 0]);
        }
        if ($value >= 10000000) {
            cbgu_StringBuilder_$callClinit();
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100000000 | 0) / 10000000 | 0]);
        }
        if ($value >= 1000000) {
            cbgu_StringBuilder_$callClinit();
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 10000000 | 0) / 1000000 | 0]);
        }
        if ($value >= 100000) {
            cbgu_StringBuilder_$callClinit();
            cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000000 | 0) / 100000 | 0]);
        }
        cbgu_StringBuilder_$callClinit();
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100000 | 0) / 10000 | 0]);
    }
    if ($value >= 1000) {
        cbgu_StringBuilder_$callClinit();
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 10000 | 0) / 1000 | 0]);
    }
    if ($value >= 100) {
        cbgu_StringBuilder_$callClinit();
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 1000 | 0) / 100 | 0]);
    }
    if ($value >= 10) {
        cbgu_StringBuilder_$callClinit();
        cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[($value % 100 | 0) / 10 | 0]);
    }
    cbgu_StringBuilder_$callClinit();
    cbgu_StringBuilder_append0($this, cbgu_StringBuilder_digits.data[$value % 10 | 0]);
    return $this;
},
cbgu_StringBuilder_append5 = ($this, $obj) => {
    if ($obj === null)
        cbgu_StringBuilder_appendNull($this);
    else
        cbgu_StringBuilder_append00($this, $obj.$toString());
    return $this;
},
cbgu_StringBuilder_append4 = ($this, $str) => {
    cbgu_StringBuilder_append00($this, $str);
    return $this;
},
cbgu_StringBuilder__clinit_ = () => {
    cbgu_StringBuilder_digits = $rt_createCharArrayFromData([48, 49, 50, 51, 52, 53, 54, 55, 56, 57]);
},
jnci_AsciiCharset = $rt_classWithoutFields(jnc_Charset),
jnci_AsciiCharset__init_ = $this => {
    jnc_Charset__init_($this, $rt_s(276), $rt_createArray(jl_String, 0));
},
jnci_AsciiCharset__init_0 = () => {
    let var_0 = new jnci_AsciiCharset();
    jnci_AsciiCharset__init_(var_0);
    return var_0;
},
jnci_AsciiCharset_newDecoder = $this => {
    return jnci_AsciiDecoder__init_0($this);
},
jl_ArrayStoreException = $rt_classWithoutFields(jl_RuntimeException),
jl_ArrayStoreException__init_0 = $this => {
    jl_RuntimeException__init_($this);
},
jl_ArrayStoreException__init_ = () => {
    let var_0 = new jl_ArrayStoreException();
    jl_ArrayStoreException__init_0(var_0);
    return var_0;
},
jur_MatchResult = $rt_classWithoutFields(0);
function jur_MatchResultImpl() {
    let a = this; jl_Object.call(a);
    a.$groupBounds = null;
    a.$consumers = null;
    a.$compQuantCounters = null;
    a.$string4 = null;
    a.$groupCount0 = 0;
    a.$valid0 = 0;
    a.$leftBound0 = 0;
    a.$rightBound0 = 0;
    a.$startIndex = 0;
    a.$transparentBounds = 0;
    a.$anchoringBounds = 0;
    a.$hitEnd = 0;
    a.$requireEnd = 0;
    a.$previousMatch = 0;
    a.$mode1 = 0;
}
let jur_MatchResultImpl__init_ = ($this, $string, $leftBound, $rightBound, $groupCount, $compQuantCount, $consumersCount) => {
    let var$7;
    jl_Object__init_($this);
    $this.$previousMatch = (-1);
    var$7 = $groupCount + 1 | 0;
    $this.$groupCount0 = var$7;
    $this.$groupBounds = $rt_createIntArray(var$7 * 2 | 0);
    $this.$consumers = $rt_createIntArray($consumersCount);
    ju_Arrays_fill($this.$consumers, (-1));
    if ($compQuantCount > 0)
        $this.$compQuantCounters = $rt_createIntArray($compQuantCount);
    ju_Arrays_fill($this.$groupBounds, (-1));
    $this.$reset0($string, $leftBound, $rightBound);
},
jur_MatchResultImpl__init_0 = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new jur_MatchResultImpl();
    jur_MatchResultImpl__init_(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
jur_MatchResultImpl_setConsumed = ($this, $counter, $value) => {
    $this.$consumers.data[$counter] = $value;
},
jur_MatchResultImpl_getConsumed = ($this, $counter) => {
    return $this.$consumers.data[$counter];
},
jur_MatchResultImpl_end0 = $this => {
    return $this.$end0(0);
},
jur_MatchResultImpl_end = ($this, $group) => {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
},
jur_MatchResultImpl_setStart = ($this, $group, $offset) => {
    $this.$groupBounds.data[$group * 2 | 0] = $offset;
},
jur_MatchResultImpl_setEnd = ($this, $group, $offset) => {
    $this.$groupBounds.data[($group * 2 | 0) + 1 | 0] = $offset;
},
jur_MatchResultImpl_getStart = ($this, $group) => {
    return $this.$groupBounds.data[$group * 2 | 0];
},
jur_MatchResultImpl_getEnd = ($this, $group) => {
    return $this.$groupBounds.data[($group * 2 | 0) + 1 | 0];
},
jur_MatchResultImpl_group = ($this, $group) => {
    if ($this.$start0($group) < 0)
        return null;
    return ($this.$string4.$subSequence($this.$start0($group), $this.$end0($group))).$toString();
},
jur_MatchResultImpl_getGroupNoCheck = ($this, $group) => {
    let $st, $end;
    $st = $this.$getStart($group);
    $end = $this.$getEnd($group);
    if (($end | $st | ($end - $st | 0)) >= 0 && $end <= $this.$string4.$length())
        return ($this.$string4.$subSequence($st, $end)).$toString();
    return null;
},
jur_MatchResultImpl_start0 = $this => {
    return $this.$start0(0);
},
jur_MatchResultImpl_start = ($this, $group) => {
    jur_MatchResultImpl_checkGroup($this, $group);
    return $this.$groupBounds.data[$group * 2 | 0];
},
jur_MatchResultImpl_finalizeMatch = $this => {
    if ($this.$groupBounds.data[0] == (-1)) {
        $this.$groupBounds.data[0] = $this.$startIndex;
        $this.$groupBounds.data[1] = $this.$startIndex;
    }
    $this.$previousMatch = $this.$end1();
},
jur_MatchResultImpl_getEnterCounter = ($this, $setCounter) => {
    return $this.$compQuantCounters.data[$setCounter];
},
jur_MatchResultImpl_setEnterCounter = ($this, $setCounter, $value) => {
    $this.$compQuantCounters.data[$setCounter] = $value;
},
jur_MatchResultImpl_checkGroup = ($this, $group) => {
    if (!$this.$valid0)
        $rt_throw(jl_IllegalStateException__init_0());
    if ($group >= 0 && $group < $this.$groupCount0)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_String_valueOf0($group)));
},
jur_MatchResultImpl_setValid = $this => {
    $this.$valid0 = 1;
},
jur_MatchResultImpl_isValid = $this => {
    return $this.$valid0;
},
jur_MatchResultImpl_reset0 = ($this, $newSequence, $leftBound, $rightBound) => {
    $this.$valid0 = 0;
    $this.$mode1 = 2;
    ju_Arrays_fill($this.$groupBounds, (-1));
    ju_Arrays_fill($this.$consumers, (-1));
    if ($newSequence !== null)
        $this.$string4 = $newSequence;
    if ($leftBound >= 0)
        jur_MatchResultImpl_setBounds($this, $leftBound, $rightBound);
    $this.$startIndex = $this.$leftBound0;
},
jur_MatchResultImpl_reset = $this => {
    $this.$reset0(null, (-1), (-1));
},
jur_MatchResultImpl_setBounds = ($this, $leftBound, $rightBound) => {
    $this.$leftBound0 = $leftBound;
    $this.$rightBound0 = $rightBound;
},
jur_MatchResultImpl_setStartIndex = ($this, $startIndex) => {
    $this.$startIndex = $startIndex;
    if ($this.$previousMatch >= 0)
        $startIndex = $this.$previousMatch;
    $this.$previousMatch = $startIndex;
},
jur_MatchResultImpl_getLeftBound = $this => {
    return $this.$leftBound0;
},
jur_MatchResultImpl_getRightBound = $this => {
    return $this.$rightBound0;
},
jur_MatchResultImpl_setMode = ($this, $mode) => {
    $this.$mode1 = $mode;
},
jur_MatchResultImpl_mode = $this => {
    return $this.$mode1;
},
jur_MatchResultImpl_useAnchoringBounds = ($this, $value) => {
    $this.$anchoringBounds = $value;
},
jur_MatchResultImpl_hasAnchoringBounds = $this => {
    return $this.$anchoringBounds;
},
jur_MatchResultImpl_hasTransparentBounds = $this => {
    return $this.$transparentBounds;
},
jur_MatchResultImpl_getPreviousMatchEnd = $this => {
    return $this.$previousMatch;
},
cbgu_Disposable = $rt_classWithoutFields(0),
cbg_Screen = $rt_classWithoutFields(0),
cbg_ScreenAdapter = $rt_classWithoutFields(),
cbg_ScreenAdapter__init_ = $this => {
    jl_Object__init_($this);
},
cbg_ScreenAdapter__init_0 = () => {
    let var_0 = new cbg_ScreenAdapter();
    cbg_ScreenAdapter__init_(var_0);
    return var_0;
},
cbg_ScreenAdapter_resize = ($this, $width, $height) => {
    return;
},
cbg_ScreenAdapter_hide = $this => {
    return;
},
cbg_ScreenAdapter_pause = $this => {
    return;
},
cbg_ScreenAdapter_resume = $this => {
    return;
};
function beb_BulletInitScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$game = null;
    a.$bulletInit = 0;
}
let beb_BulletInitScreen__init_ = ($this, $game) => {
    cbg_ScreenAdapter__init_($this);
    $this.$bulletInit = 0;
    $this.$game = $game;
},
beb_BulletInitScreen__init_0 = var_0 => {
    let var_1 = new beb_BulletInitScreen();
    beb_BulletInitScreen__init_(var_1, var_0);
    return var_1;
},
beb_BulletInitScreen_show = $this => {
    b_BulletLoader_init(beb_BulletInitScreen$show$lambda$_1_0__init_0($this));
},
beb_BulletInitScreen_render = ($this, $delta) => {
    if ($this.$bulletInit) {
        $this.$bulletInit = 0;
        $this.$game.$setScreen(beb_BulletTestScreen__init_0());
    }
},
beb_BulletInitScreen_lambda$show$0 = ($this, $bulletSuccess, $e2) => {
    $this.$bulletInit = $bulletSuccess;
    if ($e2 !== null)
        $e2.$printStackTrace0();
};
function cbggg_Renderable() {
    let a = this; jl_Object.call(a);
    a.$worldTransform = null;
    a.$meshPart = null;
    a.$material = null;
    a.$environment = null;
    a.$bones = null;
    a.$shader1 = null;
    a.$userData = null;
}
let cbggg_Renderable__init_ = $this => {
    jl_Object__init_($this);
    $this.$worldTransform = cbgm_Matrix4__init_();
    $this.$meshPart = cbgggm_MeshPart__init_1();
},
cbggg_Renderable__init_0 = () => {
    let var_0 = new cbggg_Renderable();
    cbggg_Renderable__init_(var_0);
    return var_0;
};
function cbggg_BitmapFont$Glyph() {
    let a = this; jl_Object.call(a);
    a.$id0 = 0;
    a.$srcX = 0;
    a.$srcY = 0;
    a.$width2 = 0;
    a.$height2 = 0;
    a.$u0 = 0.0;
    a.$v0 = 0.0;
    a.$u20 = 0.0;
    a.$v2 = 0.0;
    a.$xoffset = 0;
    a.$yoffset = 0;
    a.$xadvance = 0;
    a.$kerning = null;
    a.$fixedWidth = 0;
    a.$page = 0;
}
let cbggg_BitmapFont$Glyph__init_0 = $this => {
    jl_Object__init_($this);
    $this.$page = 0;
},
cbggg_BitmapFont$Glyph__init_ = () => {
    let var_0 = new cbggg_BitmapFont$Glyph();
    cbggg_BitmapFont$Glyph__init_0(var_0);
    return var_0;
},
cbggg_BitmapFont$Glyph_getKerning = ($this, $ch) => {
    let $page;
    if ($this.$kerning !== null) {
        $page = $this.$kerning.data[$ch >>> 9 | 0];
        if ($page !== null)
            return $page.data[$ch & 511];
    }
    return 0;
},
cbggg_BitmapFont$Glyph_setKerning = ($this, $ch, $value) => {
    let var$3, var$4, $page;
    if ($this.$kerning === null)
        $this.$kerning = $rt_createArray($rt_arraycls($rt_bytecls), 128);
    var$3 = $this.$kerning.data;
    var$4 = $ch >>> 9 | 0;
    $page = var$3[var$4];
    if ($page === null) {
        var$3 = $this.$kerning.data;
        $page = $rt_createByteArray(512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $value << 24 >> 24;
},
cbggg_BitmapFont$Glyph_toString = $this => {
    return jl_Character_toString($this.$id0 & 65535);
},
otji_EventHandler = $rt_classWithoutFields(0);
function cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0() {
    let a = this; jl_Object.call(a);
    a.$_03 = null;
    a.$_12 = null;
}
let cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_03 = var$1;
    var$0.$_12 = var$2;
},
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0__init_0 = (var_0, var_1) => {
    let var_2 = new cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0();
    cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0__init_(var_2, var_0, var_1);
    return var_2;
},
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0_handleEvent = var$0 => {
    cgxgbtft_LocalDBStorage_lambda$readAllFilesAsync$5(var$0.$_03, var$0.$_12);
},
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0_handleEvent$exported$0 = var$1 => {
    var$1.$handleEvent();
},
otjf_JSMapping = $rt_classWithoutFields(0),
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1 = $rt_classWithoutFields(),
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1__init_0 = () => {
    let var_0 = new cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1();
    cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1__init_(var_0);
    return var_0;
},
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1_apply0 = (var$0, var$1) => {
    return cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1_apply(var$0, var$1);
},
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1_apply = (var$0, var$1) => {
    return cgxgbta_AssetLoadImpl_lambda$downloadDroppedFile$2(var$1);
},
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1_apply$exported$0 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return otji_JSWrapper_javaToJs(var$1.$apply1(var$2));
},
otjf_JSSupplier = $rt_classWithoutFields(0),
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2 = $rt_classWithoutFields(),
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2__init_0 = () => {
    let var_0 = new cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2();
    cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2__init_(var_0);
    return var_0;
},
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2_get = var$0 => {
    return cgxgbta_AssetLoadImpl_lambda$downloadDroppedFile$3();
},
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2_get$exported$0 = var$1 => {
    return otji_JSWrapper_javaToJs(var$1.$get3());
};
function jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$031 = null;
}
let jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_ = ($this, $this$0) => {
    $this.$this$031 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains = ($this, $ch) => {
    return jl_Character_isJavaIdentifierPart($ch);
};
function cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2() {
    jl_Object.call(this);
    this.$_015 = null;
}
let cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_015 = var$1;
},
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2__init_0 = var_0 => {
    let var_1 = new cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2();
    cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2__init_(var_1, var_0);
    return var_1;
},
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2_handleEvent = var$0 => {
    cgxgbtft_LocalDBStorage_lambda$readAllFilesAsync$7(var$0.$_015);
},
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2_handleEvent$exported$0 = var$1 => {
    var$1.$handleEvent();
};
function cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1() {
    jl_Object.call(this);
    this.$_011 = null;
}
let cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_011 = var$1;
},
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1__init_0 = var_0 => {
    let var_1 = new cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1();
    cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1__init_(var_1, var_0);
    return var_1;
},
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1_handleEvent = var$0 => {
    cgxgbtft_LocalDBStorage_lambda$readAllFilesAsync$6(var$0.$_011);
},
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1_handleEvent$exported$0 = var$1 => {
    var$1.$handleEvent();
};
function cbgg_GLTexture() {
    let a = this; jl_Object.call(a);
    a.$glTarget = 0;
    a.$glHandle = 0;
    a.$minFilter = null;
    a.$magFilter = null;
    a.$uWrap0 = null;
    a.$vWrap0 = null;
    a.$anisotropicFilterLevel = 0.0;
}
let cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0,
cbgg_GLTexture_$callClinit = () => {
    cbgg_GLTexture_$callClinit = $rt_eraseClinit(cbgg_GLTexture);
    cbgg_GLTexture__clinit_();
},
cbgg_GLTexture__init_ = ($this, $glTarget, $glHandle) => {
    cbgg_GLTexture_$callClinit();
    jl_Object__init_($this);
    cbgg_Texture$TextureFilter_$callClinit();
    $this.$minFilter = cbgg_Texture$TextureFilter_Nearest;
    $this.$magFilter = cbgg_Texture$TextureFilter_Nearest;
    cbgg_Texture$TextureWrap_$callClinit();
    $this.$uWrap0 = cbgg_Texture$TextureWrap_ClampToEdge;
    $this.$vWrap0 = cbgg_Texture$TextureWrap_ClampToEdge;
    $this.$anisotropicFilterLevel = 1.0;
    $this.$glTarget = $glTarget;
    $this.$glHandle = $glHandle;
},
cbgg_GLTexture_bind0 = $this => {
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, $this.$glHandle);
},
cbgg_GLTexture_bind = ($this, $unit) => {
    cbg_Gdx_gl.$glActiveTexture(33984 + $unit | 0);
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, $this.$glHandle);
},
cbgg_GLTexture_getTextureObjectHandle = $this => {
    return $this.$glHandle;
},
cbgg_GLTexture_unsafeSetWrap0 = ($this, $u, $v) => {
    $this.$unsafeSetWrap($u, $v, 0);
},
cbgg_GLTexture_unsafeSetWrap = ($this, $u, $v, $force) => {
    if ($u !== null && !(!$force && $this.$uWrap0 === $u)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10242, cbgg_Texture$TextureWrap_getGLEnum($u));
        $this.$uWrap0 = $u;
    }
    if ($v !== null && !(!$force && $this.$vWrap0 === $v)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10243, cbgg_Texture$TextureWrap_getGLEnum($v));
        $this.$vWrap0 = $v;
    }
},
cbgg_GLTexture_unsafeSetFilter0 = ($this, $minFilter, $magFilter) => {
    $this.$unsafeSetFilter($minFilter, $magFilter, 0);
},
cbgg_GLTexture_unsafeSetFilter = ($this, $minFilter, $magFilter, $force) => {
    if ($minFilter !== null && !(!$force && $this.$minFilter === $minFilter)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10241, cbgg_Texture$TextureFilter_getGLEnum($minFilter));
        $this.$minFilter = $minFilter;
    }
    if ($magFilter !== null && !(!$force && $this.$magFilter === $magFilter)) {
        cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10240, cbgg_Texture$TextureFilter_getGLEnum($magFilter));
        $this.$magFilter = $magFilter;
    }
},
cbgg_GLTexture_setFilter = ($this, $minFilter, $magFilter) => {
    $this.$minFilter = $minFilter;
    $this.$magFilter = $magFilter;
    $this.$bind();
    cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10241, cbgg_Texture$TextureFilter_getGLEnum($minFilter));
    cbg_Gdx_gl.$glTexParameteri($this.$glTarget, 10240, cbgg_Texture$TextureFilter_getGLEnum($magFilter));
},
cbgg_GLTexture_unsafeSetAnisotropicFilter = ($this, $level, $force) => {
    let $max, var$4;
    $max = cbgg_GLTexture_getMaxAnisotropicFilterLevel();
    if ($max === 1.0)
        return 1.0;
    var$4 = jl_Math_min0($level, $max);
    if (!$force && cbgm_MathUtils_isEqual0(var$4, $this.$anisotropicFilterLevel, 0.10000000149011612))
        return $this.$anisotropicFilterLevel;
    cbg_Gdx_gl20.$glTexParameterf(3553, 34046, var$4);
    $this.$anisotropicFilterLevel = var$4;
    return var$4;
},
cbgg_GLTexture_getMaxAnisotropicFilterLevel = () => {
    let $buffer, var$2;
    cbgg_GLTexture_$callClinit();
    if (cbgg_GLTexture_maxAnisotropicFilterLevel > 0.0)
        return cbgg_GLTexture_maxAnisotropicFilterLevel;
    if (!cbg_Gdx_graphics.$supportsExtension($rt_s(277))) {
        cbgg_GLTexture_maxAnisotropicFilterLevel = 1.0;
        return 1.0;
    }
    $buffer = cbgu_BufferUtils_newFloatBuffer(16);
    $buffer.$position(0);
    $buffer.$limit(jn_Buffer_capacity($buffer));
    cbg_Gdx_gl20.$glGetFloatv(34047, $buffer);
    var$2 = $buffer.$get8(0);
    cbgg_GLTexture_maxAnisotropicFilterLevel = var$2;
    return var$2;
},
cbgg_GLTexture_delete = $this => {
    if ($this.$glHandle) {
        cbg_Gdx_gl.$glDeleteTexture($this.$glHandle);
        $this.$glHandle = 0;
    }
},
cbgg_GLTexture_uploadImageData0 = ($target, $data) => {
    cbgg_GLTexture_$callClinit();
    cbgg_GLTexture_uploadImageData($target, $data, 0);
},
cbgg_GLTexture_uploadImageData = ($target, $data, $miplevel) => {
    let $type, $pixmap, $disposePixmap, $tmp_0, var$8, var$9, var$10, var$11, var$12, var$13, var$14;
    cbgg_GLTexture_$callClinit();
    if ($data === null)
        return;
    if (!$data.$isPrepared())
        $data.$prepare();
    $type = $data.$getType();
    cbgg_TextureData$TextureDataType_$callClinit();
    if ($type === cbgg_TextureData$TextureDataType_Custom) {
        $data.$consumeCustomData($target);
        return;
    }
    $pixmap = $data.$consumePixmap();
    $disposePixmap = $data.$disposePixmap();
    if ($data.$getFormat() === $pixmap.$getFormat())
        $tmp_0 = $pixmap;
    else {
        $tmp_0 = cbgg_Pixmap__init_($pixmap.$getWidth0(), $pixmap.$getHeight0(), $data.$getFormat());
        cbgg_Pixmap$Blending_$callClinit();
        $tmp_0.$setBlending(cbgg_Pixmap$Blending_None);
        $tmp_0.$drawPixmap($pixmap, 0, 0, 0, 0, $pixmap.$getWidth0(), $pixmap.$getHeight0());
        if ($data.$disposePixmap())
            $pixmap.$dispose();
        $disposePixmap = 1;
    }
    cbg_Gdx_gl.$glPixelStorei(3317, 1);
    if ($data.$useMipMaps())
        cbggg_MipMapGenerator_generateMipMap($target, $tmp_0, $tmp_0.$getWidth0(), $tmp_0.$getHeight0());
    else {
        var$8 = cbg_Gdx_gl;
        var$9 = $tmp_0.$getGLInternalFormat();
        var$10 = $tmp_0.$getWidth0();
        var$11 = $tmp_0.$getHeight0();
        var$12 = $tmp_0.$getGLFormat();
        var$13 = $tmp_0.$getGLType();
        var$14 = $tmp_0.$getPixels();
        var$8.$glTexImage2D($target, $miplevel, var$9, var$10, var$11, 0, var$12, var$13, var$14);
    }
    if ($disposePixmap)
        $tmp_0.$dispose();
},
cbgg_GLTexture__clinit_ = () => {
    cbgg_GLTexture_maxAnisotropicFilterLevel = 0.0;
};
function cbgg_Texture() {
    cbgg_GLTexture.call(this);
    this.$data3 = null;
}
let cbgg_Texture_managedTextures = null,
cbgg_Texture_$callClinit = () => {
    cbgg_Texture_$callClinit = $rt_eraseClinit(cbgg_Texture);
    cbgg_Texture__clinit_();
},
cbgg_Texture__init_4 = ($this, $file) => {
    cbgg_Texture_$callClinit();
    cbgg_Texture__init_0($this, $file, null, 0);
},
cbgg_Texture__init_5 = var_0 => {
    let var_1 = new cbgg_Texture();
    cbgg_Texture__init_4(var_1, var_0);
    return var_1;
},
cbgg_Texture__init_6 = ($this, $file, $useMipMaps) => {
    cbgg_Texture_$callClinit();
    cbgg_Texture__init_0($this, $file, null, $useMipMaps);
},
cbgg_Texture__init_2 = (var_0, var_1) => {
    let var_2 = new cbgg_Texture();
    cbgg_Texture__init_6(var_2, var_0, var_1);
    return var_2;
},
cbgg_Texture__init_0 = ($this, $file, $format, $useMipMaps) => {
    cbgg_Texture_$callClinit();
    cbgg_Texture__init_($this, cbgg_TextureData$Factory_loadFromFile($file, $format, $useMipMaps));
},
cbgg_Texture__init_8 = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_Texture();
    cbgg_Texture__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_Texture__init_3 = ($this, $pixmap) => {
    cbgg_Texture_$callClinit();
    cbgg_Texture__init_($this, cbggg_PixmapTextureData__init_1($pixmap, null, 0, 0));
},
cbgg_Texture__init_7 = var_0 => {
    let var_1 = new cbgg_Texture();
    cbgg_Texture__init_3(var_1, var_0);
    return var_1;
},
cbgg_Texture__init_ = ($this, $data) => {
    cbgg_Texture_$callClinit();
    cbgg_Texture__init_1($this, 3553, cbg_Gdx_gl.$glGenTexture(), $data);
},
cbgg_Texture__init_10 = var_0 => {
    let var_1 = new cbgg_Texture();
    cbgg_Texture__init_(var_1, var_0);
    return var_1;
},
cbgg_Texture__init_1 = ($this, $glTarget, $glHandle, $data) => {
    cbgg_Texture_$callClinit();
    cbgg_GLTexture__init_($this, $glTarget, $glHandle);
    $this.$load0($data);
    if ($data.$isManaged())
        cbgg_Texture_addManagedTexture(cbg_Gdx_app, $this);
},
cbgg_Texture__init_9 = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_Texture();
    cbgg_Texture__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_Texture_load = ($this, $data) => {
    if ($this.$data3 !== null && $data.$isManaged() != $this.$data3.$isManaged())
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(278)));
    $this.$data3 = $data;
    if (!$data.$isPrepared())
        $data.$prepare();
    $this.$bind();
    cbgg_GLTexture_uploadImageData0(3553, $data);
    $this.$unsafeSetFilter($this.$minFilter, $this.$magFilter, 1);
    $this.$unsafeSetWrap($this.$uWrap0, $this.$vWrap0, 1);
    $this.$unsafeSetAnisotropicFilter($this.$anisotropicFilterLevel, 1);
    cbg_Gdx_gl.$glBindTexture($this.$glTarget, 0);
},
cbgg_Texture_getWidth = $this => {
    return $this.$data3.$getWidth0();
},
cbgg_Texture_getHeight = $this => {
    return $this.$data3.$getHeight0();
},
cbgg_Texture_dispose = $this => {
    if (!$this.$glHandle)
        return;
    $this.$delete();
    if ($this.$data3.$isManaged() && cbgg_Texture_managedTextures.$get2(cbg_Gdx_app) !== null)
        (cbgg_Texture_managedTextures.$get2(cbg_Gdx_app)).$removeValue($this, 1);
},
cbgg_Texture_toString = $this => {
    if (!($this.$data3 instanceof cbggg_FileTextureData))
        return jl_Object_toString($this);
    return $this.$data3.$toString();
},
cbgg_Texture_addManagedTexture = ($app, $texture) => {
    let $managedTextureArray;
    cbgg_Texture_$callClinit();
    $managedTextureArray = cbgg_Texture_managedTextures.$get2($app);
    if ($managedTextureArray === null)
        $managedTextureArray = cbgu_Array__init_();
    $managedTextureArray.$add1($texture);
    cbgg_Texture_managedTextures.$put($app, $managedTextureArray);
},
cbgg_Texture__clinit_ = () => {
    cbgg_Texture_managedTextures = ju_HashMap__init_();
};
function cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0() {
    jl_Object.call(this);
    this.$_09 = null;
}
let cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_09 = var$1;
},
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0__init_0 = var_0 => {
    let var_1 = new cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0();
    cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0__init_(var_1, var_0);
    return var_1;
},
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0_apply0 = (var$0, var$1) => {
    return cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0_apply(var$0, otji_JSWrapper_unwrap(var$1));
},
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0_apply = (var$0, var$1) => {
    return cgxgbta_AssetLoadImpl_lambda$downloadDroppedFile$1(var$0.$_09, var$1);
},
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0_apply$exported$0 = (var$1, var$2) => {
    var$2 = otji_JSWrapper_jsToJava(var$2);
    return otji_JSWrapper_javaToJs(var$1.$apply1(var$2));
},
cbgu_GdxRuntimeException = $rt_classWithoutFields(jl_RuntimeException),
cbgu_GdxRuntimeException__init_0 = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
cbgu_GdxRuntimeException__init_ = var_0 => {
    let var_1 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_0(var_1, var_0);
    return var_1;
},
cbgu_GdxRuntimeException__init_1 = ($this, $message, $t) => {
    jl_RuntimeException__init_2($this, $message, $t);
},
cbgu_GdxRuntimeException__init_2 = (var_0, var_1) => {
    let var_2 = new cbgu_GdxRuntimeException();
    cbgu_GdxRuntimeException__init_1(var_2, var_0, var_1);
    return var_2;
},
bl_btIDebugDraw$drawLine = $rt_classWithoutFields(0);
function jur_DecomposedCharSet() {
    let a = this; jur_JointSet.call(a);
    a.$readCharsForCodePoint = 0;
    a.$decomposedCharUTF16 = null;
    a.$decomposedChar0 = null;
    a.$decomposedCharLength0 = 0;
}
let jur_DecomposedCharSet__init_ = ($this, $decomposedChar, $decomposedCharLength) => {
    jur_JointSet__init_($this);
    $this.$readCharsForCodePoint = 1;
    $this.$decomposedChar0 = $decomposedChar;
    $this.$decomposedCharLength0 = $decomposedCharLength;
},
jur_DecomposedCharSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_DecomposedCharSet();
    jur_DecomposedCharSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_DecomposedCharSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_DecomposedCharSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $decCodePoint, $readCodePoints, $rightBound, $curChar, var$8, $decCurCodePoint, var$10, var$11, var$12, var$13, var$14, var$15;
    $decCodePoint = $rt_createIntArray(4);
    $readCodePoints = 0;
    $rightBound = $matchResult.$getRightBound();
    if ($strIndex >= $rightBound)
        return (-1);
    $curChar = $this.$codePointAt($strIndex, $testString, $rightBound);
    var$8 = $strIndex + $this.$readCharsForCodePoint | 0;
    $decCurCodePoint = jur_Lexer_getDecomposition($curChar);
    if ($decCurCodePoint === null) {
        var$10 = $decCodePoint.data;
        var$11 = 1;
        var$10[$readCodePoints] = $curChar;
    } else {
        var$11 = $decCurCodePoint.data.length;
        jl_System_fastArraycopy($decCurCodePoint, 0, $decCodePoint, 0, var$11);
        var$11 = $readCodePoints + var$11 | 0;
    }
    a: {
        if (var$8 < $rightBound) {
            var$12 = $this.$codePointAt(var$8, $testString, $rightBound);
            while (var$11 < 4) {
                if (!jur_Lexer_hasDecompositionNonNullCanClass(var$12)) {
                    var$10 = $decCodePoint.data;
                    var$13 = var$11 + 1 | 0;
                    var$10[var$11] = var$12;
                } else {
                    var$10 = (jur_Lexer_getDecomposition(var$12)).data;
                    if (var$10.length != 2) {
                        var$14 = $decCodePoint.data;
                        var$13 = var$11 + 1 | 0;
                        var$14[var$11] = var$10[0];
                    } else {
                        var$14 = $decCodePoint.data;
                        var$12 = var$11 + 1 | 0;
                        var$14[var$11] = var$10[0];
                        var$13 = var$12 + 1 | 0;
                        var$14[var$12] = var$10[1];
                    }
                }
                var$8 = var$8 + $this.$readCharsForCodePoint | 0;
                if (var$8 >= $rightBound) {
                    var$11 = var$13;
                    break a;
                }
                var$12 = $this.$codePointAt(var$8, $testString, $rightBound);
                var$11 = var$13;
            }
        }
    }
    if (var$11 != $this.$decomposedCharLength0)
        return (-1);
    var$15 = 0;
    while (true) {
        if (var$15 >= var$11)
            return $this.$next1.$matches(var$8, $testString, $matchResult);
        if ($decCodePoint.data[var$15] != $this.$decomposedChar0.data[var$15])
            break;
        var$15 = var$15 + 1 | 0;
    }
    return (-1);
},
jur_DecomposedCharSet_getDecomposedChar = $this => {
    let $strBuff, $i;
    if ($this.$decomposedCharUTF16 === null) {
        $strBuff = jl_StringBuilder__init_();
        $i = 0;
        while ($i < $this.$decomposedCharLength0) {
            $strBuff.$append18(jl_Character_toChars($this.$decomposedChar0.data[$i]));
            $i = $i + 1 | 0;
        }
        $this.$decomposedCharUTF16 = $strBuff.$toString();
    }
    return $this.$decomposedCharUTF16;
},
jur_DecomposedCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = jur_DecomposedCharSet_getDecomposedChar($this);
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(279)), var$1);
    return jl_StringBuilder_toString(var$2);
},
jur_DecomposedCharSet_codePointAt = ($this, $strIndex, $testString, $rightBound) => {
    let $curChar, var$5, $low, $curCodePointUTF16;
    $this.$readCharsForCodePoint = 1;
    if ($strIndex >= ($rightBound - 1 | 0))
        $curChar = $testString.$charAt($strIndex);
    else {
        var$5 = $strIndex + 1 | 0;
        $curChar = $testString.$charAt($strIndex);
        $low = $testString.$charAt(var$5);
        if (jl_Character_isSurrogatePair($curChar, $low)) {
            $curCodePointUTF16 = $rt_createCharArrayFromData([$curChar, $low]);
            $curChar = jl_Character_codePointAt($curCodePointUTF16, 0);
            $this.$readCharsForCodePoint = 2;
        }
    }
    return $curChar;
},
jur_DecomposedCharSet_first = ($this, $set) => {
    let var$2, var$3;
    a: {
        if ($set instanceof jur_DecomposedCharSet) {
            var$2 = $set;
            if (!(jur_DecomposedCharSet_getDecomposedChar(var$2)).$equals(jur_DecomposedCharSet_getDecomposedChar($this))) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
},
jur_DecomposedCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
},
jl_IllegalArgumentException = $rt_classWithoutFields(jl_RuntimeException),
jl_IllegalArgumentException__init_2 = $this => {
    jl_RuntimeException__init_($this);
},
jl_IllegalArgumentException__init_0 = () => {
    let var_0 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_2(var_0);
    return var_0;
},
jl_IllegalArgumentException__init_1 = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
jl_IllegalArgumentException__init_ = var_0 => {
    let var_1 = new jl_IllegalArgumentException();
    jl_IllegalArgumentException__init_1(var_1, var_0);
    return var_1;
};
function jnc_IllegalCharsetNameException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName = null;
}
let jnc_IllegalCharsetNameException__init_0 = ($this, $charsetName) => {
    jl_IllegalArgumentException__init_2($this);
    $this.$charsetName = $charsetName;
},
jnc_IllegalCharsetNameException__init_ = var_0 => {
    let var_1 = new jnc_IllegalCharsetNameException();
    jnc_IllegalCharsetNameException__init_0(var_1, var_0);
    return var_1;
},
cbgssu_Table$DebugRect$_clinit_$lambda$_1_0 = $rt_classWithoutFields(),
cbgssu_Table$DebugRect$_clinit_$lambda$_1_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgssu_Table$DebugRect$_clinit_$lambda$_1_0__init_0 = () => {
    let var_0 = new cbgssu_Table$DebugRect$_clinit_$lambda$_1_0();
    cbgssu_Table$DebugRect$_clinit_$lambda$_1_0__init_(var_0);
    return var_0;
},
cbgssu_Table$DebugRect$_clinit_$lambda$_1_0_get0 = var$0 => {
    return cbgssu_Table$DebugRect$_clinit_$lambda$_1_0_get(var$0);
},
cbgssu_Table$DebugRect$_clinit_$lambda$_1_0_get = var$0 => {
    return cbgssu_Table$DebugRect__init_0();
};
function ji_FilterOutputStream() {
    ji_OutputStream.call(this);
    this.$out2 = null;
}
let ji_FilterOutputStream__init_ = ($this, $out) => {
    ji_OutputStream__init_($this);
    $this.$out2 = $out;
},
ji_FilterOutputStream__init_0 = var_0 => {
    let var_1 = new ji_FilterOutputStream();
    ji_FilterOutputStream__init_(var_1, var_0);
    return var_1;
};
function ji_PrintStream() {
    let a = this; ji_FilterOutputStream.call(a);
    a.$autoFlush = 0;
    a.$sb = null;
    a.$buffer7 = null;
    a.$charset = null;
}
let ji_PrintStream__init_ = ($this, $out, $autoFlush, $charset) => {
    ji_FilterOutputStream__init_($this, $out);
    $this.$sb = jl_StringBuilder__init_();
    $this.$buffer7 = $rt_createCharArray(32);
    $this.$autoFlush = $autoFlush;
    $this.$charset = $charset;
},
ji_PrintStream__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new ji_PrintStream();
    ji_PrintStream__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
bl_btIDebugDraw$drawContactPoint = $rt_classWithoutFields(0);
function bl_btIDebugDraw$2() {
    jl_Object.call(this);
    this.$this$017 = null;
}
let bl_btIDebugDraw$2__init_ = ($this, $this$0) => {
    $this.$this$017 = $this$0;
    jl_Object__init_($this);
},
bl_btIDebugDraw$2__init_0 = var_0 => {
    let var_1 = new bl_btIDebugDraw$2();
    bl_btIDebugDraw$2__init_(var_1, var_0);
    return var_1;
},
bl_btIDebugDraw$2_drawContactPoint = ($this, $PointOnB_addr, $normalOnB_addr, $distance, $lifeTime, $color_addr) => {
    bl_btIDebugDraw_internal_drawContactPoint($this.$this$017, $PointOnB_addr, $normalOnB_addr, $distance, $lifeTime, $color_addr);
},
bl_btIDebugDraw$2_drawContactPoint$exported$0 = (var$1, var$2, var$3, var$4, var$5, var$6) => {
    let var$7, var$8, var$9, var$10, var$11;
    var$7 = var$2;
    var$8 = var$3;
    var$9 = var$4;
    var$10 = var$5;
    var$11 = var$6;
    var$1.$drawContactPoint(var$7, var$8, var$9, var$10, var$11);
},
jur_NegativeLookBehind = $rt_classWithoutFields(jur_AtomicJointSet),
jur_NegativeLookBehind__init_ = ($this, $children, $fSet) => {
    jur_AtomicJointSet__init_($this, $children, $fSet);
},
jur_NegativeLookBehind__init_0 = (var_0, var_1) => {
    let var_2 = new jur_NegativeLookBehind();
    jur_NegativeLookBehind__init_(var_2, var_0, var_1);
    return var_2;
},
jur_NegativeLookBehind_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $size, $i, $e, $shift;
    $size = $this.$children.$size();
    $matchResult.$setConsumed($this.$groupIndex, $stringIndex);
    $i = 0;
    while (true) {
        if ($i >= $size)
            return $this.$next1.$matches($stringIndex, $testString, $matchResult);
        $e = $this.$children.$get($i);
        $shift = $e.$findBack(0, $stringIndex, $testString, $matchResult);
        if ($shift >= 0)
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_NegativeLookBehind_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_NegativeLookBehind_getName = $this => {
    return $rt_s(280);
};
function bl_btIDebugDraw$1() {
    jl_Object.call(this);
    this.$this$028 = null;
}
let bl_btIDebugDraw$1__init_ = ($this, $this$0) => {
    $this.$this$028 = $this$0;
    jl_Object__init_($this);
},
bl_btIDebugDraw$1__init_0 = var_0 => {
    let var_1 = new bl_btIDebugDraw$1();
    bl_btIDebugDraw$1__init_(var_1, var_0);
    return var_1;
},
bl_btIDebugDraw$1_drawLine = ($this, $vecFrom_addr, $vecTo_addr, $color_addr) => {
    bl_btIDebugDraw_internal_drawLine($this.$this$028, $vecFrom_addr, $vecTo_addr, $color_addr);
},
bl_btIDebugDraw$1_drawLine$exported$0 = (var$1, var$2, var$3, var$4) => {
    let var$5, var$6, var$7;
    var$5 = var$2;
    var$6 = var$3;
    var$7 = var$4;
    var$1.$drawLine(var$5, var$6, var$7);
},
bl_btIDebugDraw$getDebugMode = $rt_classWithoutFields(0);
function bl_btIDebugDraw$6() {
    jl_Object.call(this);
    this.$this$024 = null;
}
let bl_btIDebugDraw$6__init_ = ($this, $this$0) => {
    $this.$this$024 = $this$0;
    jl_Object__init_($this);
},
bl_btIDebugDraw$6__init_0 = var_0 => {
    let var_1 = new bl_btIDebugDraw$6();
    bl_btIDebugDraw$6__init_(var_1, var_0);
    return var_1;
},
bl_btIDebugDraw$6_getDebugMode = $this => {
    return bl_btIDebugDraw_internal_getDebugMode($this.$this$024);
},
bl_btIDebugDraw$6_getDebugMode$exported$0 = var$1 => {
    return var$1.$getDebugMode();
},
bl_btIDebugDraw$setDebugMode = $rt_classWithoutFields(0);
function bl_btIDebugDraw$5() {
    jl_Object.call(this);
    this.$this$025 = null;
}
let bl_btIDebugDraw$5__init_ = ($this, $this$0) => {
    $this.$this$025 = $this$0;
    jl_Object__init_($this);
},
bl_btIDebugDraw$5__init_0 = var_0 => {
    let var_1 = new bl_btIDebugDraw$5();
    bl_btIDebugDraw$5__init_(var_1, var_0);
    return var_1;
},
bl_btIDebugDraw$5_setDebugMode = ($this, $debugMode) => {
    bl_btIDebugDraw_internal_setDebugMode($this.$this$025, $debugMode);
},
bl_btIDebugDraw$5_setDebugMode$exported$0 = (var$1, var$2) => {
    let var$3;
    var$3 = var$2;
    var$1.$setDebugMode(var$3);
},
bl_btIDebugDraw$draw3dText = $rt_classWithoutFields(0);
function bl_btIDebugDraw$4() {
    jl_Object.call(this);
    this.$this$029 = null;
}
let bl_btIDebugDraw$4__init_ = ($this, $this$0) => {
    $this.$this$029 = $this$0;
    jl_Object__init_($this);
},
bl_btIDebugDraw$4__init_0 = var_0 => {
    let var_1 = new bl_btIDebugDraw$4();
    bl_btIDebugDraw$4__init_(var_1, var_0);
    return var_1;
},
bl_btIDebugDraw$4_draw3dText = ($this, $location_addr, $textString_addr) => {
    bl_btIDebugDraw_internal_draw3dText($this.$this$029, $location_addr, $rt_str(bullet.UTF8ToString($textString_addr)));
},
bl_btIDebugDraw$4_draw3dText$exported$0 = (var$1, var$2, var$3) => {
    let var$4, var$5;
    var$4 = var$2;
    var$5 = var$3;
    var$1.$draw3dText(var$4, var$5);
},
bl_btIDebugDraw$reportErrorWarning = $rt_classWithoutFields(0);
function bl_btIDebugDraw$3() {
    jl_Object.call(this);
    this.$this$021 = null;
}
let bl_btIDebugDraw$3__init_ = ($this, $this$0) => {
    $this.$this$021 = $this$0;
    jl_Object__init_($this);
},
bl_btIDebugDraw$3__init_0 = var_0 => {
    let var_1 = new bl_btIDebugDraw$3();
    bl_btIDebugDraw$3__init_(var_1, var_0);
    return var_1;
},
bl_btIDebugDraw$3_reportErrorWarning = ($this, $warningString_addr) => {
    bl_btIDebugDraw_internal_reportErrorWarning($this.$this$021, $rt_str(bullet.UTF8ToString($warningString_addr)));
},
bl_btIDebugDraw$3_reportErrorWarning$exported$0 = (var$1, var$2) => {
    let var$3;
    var$3 = var$2;
    var$1.$reportErrorWarning(var$3);
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierPart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function bi_IDLBase() {
    let a = this; jl_Object.call(a);
    a.$native_address = 0;
    a.$native_void_address = 0;
    a.$native_object = null;
    a.$native_cMemOwn = 0;
    a.$native_disposed = 0;
}
let bi_IDLBase_NULL = null,
bi_IDLBase_ENABLE_LOGGING = 0,
bi_IDLBase_$callClinit = () => {
    bi_IDLBase_$callClinit = $rt_eraseClinit(bi_IDLBase);
    bi_IDLBase__clinit_();
},
bi_IDLBase_internal_reset = ($this, $address, $cMemoryOwn) => {
    $this.$native_cMemOwn = $cMemoryOwn;
    $this.$native_address = $address;
    $this.$native_disposed = 0;
    $this.$native_object = null;
    if ($address)
        $this.$onNativeAddressChanged();
},
bi_IDLBase_native_new = () => {
    bi_IDLBase_$callClinit();
    return bi_IDLBase__init_1(0, 0);
},
bi_IDLBase__init_ = $this => {
    bi_IDLBase_$callClinit();
    jl_Object__init_($this);
},
bi_IDLBase__init_2 = () => {
    let var_0 = new bi_IDLBase();
    bi_IDLBase__init_(var_0);
    return var_0;
},
bi_IDLBase__init_0 = ($this, $b, $c) => {
    bi_IDLBase_$callClinit();
    jl_Object__init_($this);
},
bi_IDLBase__init_1 = (var_0, var_1) => {
    let var_2 = new bi_IDLBase();
    bi_IDLBase__init_0(var_2, var_0, var_1);
    return var_2;
},
bi_IDLBase_dispose = $this => {
    let var$1, var$2;
    if (!$this.$native_cMemOwn) {
        bi_IDLBase_$callClinit();
        if (bi_IDLBase_ENABLE_LOGGING) {
            var$1 = jl_String_valueOf($this);
            var$2 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(281)), var$1), $rt_s(282));
            bi_IDLBase_error($rt_s(283), jl_StringBuilder_toString(var$2));
        }
    } else if ($this.$native_disposed) {
        bi_IDLBase_$callClinit();
        if (bi_IDLBase_ENABLE_LOGGING) {
            var$1 = jl_String_valueOf($this);
            var$2 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(281)), var$1), $rt_s(284));
            bi_IDLBase_error($rt_s(283), jl_StringBuilder_toString(var$2));
        }
    } else if ($this.$native_address) {
        $this.$native_disposed = 1;
        $this.$deleteNative();
        $this.$native_address = 0;
        $this.$native_void_address = 0;
        $this.$native_object = null;
        $this.$onNativeDispose();
    } else {
        bi_IDLBase_$callClinit();
        if (bi_IDLBase_ENABLE_LOGGING) {
            var$1 = jl_String_valueOf($this);
            var$2 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(285)), var$1), $rt_s(286));
            bi_IDLBase_error($rt_s(283), jl_StringBuilder_toString(var$2));
        }
    }
},
bi_IDLBase_toString = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = jl_Class_getSimpleName(jl_Object_getClass($this));
    var$2 = $this.$native_address;
    var$3 = $this.$native_cMemOwn;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append2(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(jl_StringBuilder_append(var$4, var$1), 40), var$2), 44), var$3), 41);
    return jl_StringBuilder_toString(var$4);
},
bi_IDLBase_onNativeAddressChanged = $this => {
    return;
},
bi_IDLBase_onNativeDispose = $this => {
    return;
},
bi_IDLBase_equals = ($this, $obj) => {
    let $idlBase;
    if (!($obj instanceof bi_IDLBase))
        return 0;
    $idlBase = $obj;
    return $idlBase.$native_address != $this.$native_address ? 0 : 1;
},
bi_IDLBase_error = ($tag, $message) => {
    let var$3, var$4;
    bi_IDLBase_$callClinit();
    var$3 = jl_System_err();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $tag), $rt_s(10)), $message);
    var$3.$println1(jl_StringBuilder_toString(var$4));
},
bi_IDLBase__clinit_ = () => {
    bi_IDLBase_NULL = bi_IDLBase_native_new();
    bi_IDLBase_ENABLE_LOGGING = 1;
},
bbc_btCollisionObject = $rt_classWithoutFields(bi_IDLBase),
bbc_btCollisionObject_NULL = null,
bbc_btCollisionObject_T_01 = null,
bbc_btCollisionObject_T_02 = null,
bbc_btCollisionObject_T_03 = null,
bbc_btCollisionObject_$callClinit = () => {
    bbc_btCollisionObject_$callClinit = $rt_eraseClinit(bbc_btCollisionObject);
    bbc_btCollisionObject__clinit_();
},
bbc_btCollisionObject__init_ = ($this, $b, $c) => {
    bbc_btCollisionObject_$callClinit();
    bi_IDLBase__init_($this);
},
bbc_btCollisionObject__init_0 = (var_0, var_1) => {
    let var_2 = new bbc_btCollisionObject();
    bbc_btCollisionObject__init_(var_2, var_0, var_1);
    return var_2;
},
bbc_btCollisionObject_native_new = () => {
    bbc_btCollisionObject_$callClinit();
    return bbc_btCollisionObject__init_0(0, 0);
},
bbc_btCollisionObject_setRestitution = ($this, $rest) => {
    bbc_btCollisionObject_internal_native_setRestitution$js_body$_53($this.$native_address, $rest);
},
bbc_btCollisionObject__clinit_ = () => {
    bbc_btCollisionObject_NULL = bbc_btCollisionObject_native_new();
    bbc_btCollisionObject_T_01 = bbc_btCollisionObject_native_new();
    bbc_btCollisionObject_T_02 = bbc_btCollisionObject_native_new();
    bbc_btCollisionObject_T_03 = bbc_btCollisionObject_native_new();
},
bbc_btCollisionObject_internal_native_setRestitution$js_body$_53 = (var$1, var$2) => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btCollisionObject);
    jsObj.setRestitution(var$2);
};
function cbgg_Color() {
    let a = this; jl_Object.call(a);
    a.$r = 0.0;
    a.$g = 0.0;
    a.$b = 0.0;
    a.$a = 0.0;
}
let cbgg_Color_WHITE = null,
cbgg_Color_LIGHT_GRAY = null,
cbgg_Color_GRAY = null,
cbgg_Color_DARK_GRAY = null,
cbgg_Color_BLACK = null,
cbgg_Color_WHITE_FLOAT_BITS = 0.0,
cbgg_Color_CLEAR = null,
cbgg_Color_CLEAR_WHITE = null,
cbgg_Color_BLUE = null,
cbgg_Color_NAVY = null,
cbgg_Color_ROYAL = null,
cbgg_Color_SLATE = null,
cbgg_Color_SKY = null,
cbgg_Color_CYAN = null,
cbgg_Color_TEAL = null,
cbgg_Color_GREEN = null,
cbgg_Color_CHARTREUSE = null,
cbgg_Color_LIME = null,
cbgg_Color_FOREST = null,
cbgg_Color_OLIVE = null,
cbgg_Color_YELLOW = null,
cbgg_Color_GOLD = null,
cbgg_Color_GOLDENROD = null,
cbgg_Color_ORANGE = null,
cbgg_Color_BROWN = null,
cbgg_Color_TAN = null,
cbgg_Color_FIREBRICK = null,
cbgg_Color_RED = null,
cbgg_Color_SCARLET = null,
cbgg_Color_CORAL = null,
cbgg_Color_SALMON = null,
cbgg_Color_PINK = null,
cbgg_Color_MAGENTA = null,
cbgg_Color_PURPLE = null,
cbgg_Color_VIOLET = null,
cbgg_Color_MAROON = null,
cbgg_Color_$callClinit = () => {
    cbgg_Color_$callClinit = $rt_eraseClinit(cbgg_Color);
    cbgg_Color__clinit_();
},
cbgg_Color__init_4 = $this => {
    cbgg_Color_$callClinit();
    jl_Object__init_($this);
},
cbgg_Color__init_1 = () => {
    let var_0 = new cbgg_Color();
    cbgg_Color__init_4(var_0);
    return var_0;
},
cbgg_Color__init_5 = ($this, $rgba8888) => {
    cbgg_Color_$callClinit();
    jl_Object__init_($this);
    cbgg_Color_rgba8888ToColor($this, $rgba8888);
},
cbgg_Color__init_ = var_0 => {
    let var_1 = new cbgg_Color();
    cbgg_Color__init_5(var_1, var_0);
    return var_1;
},
cbgg_Color__init_2 = ($this, $r, $g, $b, $a) => {
    cbgg_Color_$callClinit();
    jl_Object__init_($this);
    $this.$r = $r;
    $this.$g = $g;
    $this.$b = $b;
    $this.$a = $a;
    $this.$clamp();
},
cbgg_Color__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgg_Color();
    cbgg_Color__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgg_Color__init_3 = ($this, $color) => {
    cbgg_Color_$callClinit();
    jl_Object__init_($this);
    $this.$set11($color);
},
cbgg_Color__init_6 = var_0 => {
    let var_1 = new cbgg_Color();
    cbgg_Color__init_3(var_1, var_0);
    return var_1;
},
cbgg_Color_set = ($this, $color) => {
    $this.$r = $color.$r;
    $this.$g = $color.$g;
    $this.$b = $color.$b;
    $this.$a = $color.$a;
    return $this;
},
cbgg_Color_mul = ($this, $color) => {
    $this.$r = $this.$r * $color.$r;
    $this.$g = $this.$g * $color.$g;
    $this.$b = $this.$b * $color.$b;
    $this.$a = $this.$a * $color.$a;
    return $this.$clamp();
},
cbgg_Color_clamp = $this => {
    if ($this.$r < 0.0)
        $this.$r = 0.0;
    else if ($this.$r > 1.0)
        $this.$r = 1.0;
    if ($this.$g < 0.0)
        $this.$g = 0.0;
    else if ($this.$g > 1.0)
        $this.$g = 1.0;
    if ($this.$b < 0.0)
        $this.$b = 0.0;
    else if ($this.$b > 1.0)
        $this.$b = 1.0;
    if ($this.$a < 0.0)
        $this.$a = 0.0;
    else if ($this.$a > 1.0)
        $this.$a = 1.0;
    return $this;
},
cbgg_Color_set0 = ($this, $r, $g, $b, $a) => {
    $this.$r = $r;
    $this.$g = $g;
    $this.$b = $b;
    $this.$a = $a;
    return $this.$clamp();
},
cbgg_Color_equals = ($this, $o) => {
    let $color;
    if ($this === $o)
        return 1;
    if ($o !== null && jl_Object_getClass($this) === jl_Object_getClass($o)) {
        $color = $o;
        return $this.$toIntBits() != $color.$toIntBits() ? 0 : 1;
    }
    return 0;
};
let cbgg_Color_hashCode = $this => {
    let $result, var$2;
    $result = $this.$r === 0.0 ? 0 : cbgu_NumberUtils_floatToIntBits($this.$r);
    var$2 = (31 * $result | 0) + ($this.$g === 0.0 ? 0 : cbgu_NumberUtils_floatToIntBits($this.$g)) | 0;
    var$2 = (31 * var$2 | 0) + ($this.$b === 0.0 ? 0 : cbgu_NumberUtils_floatToIntBits($this.$b)) | 0;
    var$2 = (31 * var$2 | 0) + ($this.$a === 0.0 ? 0 : cbgu_NumberUtils_floatToIntBits($this.$a)) | 0;
    return var$2;
},
cbgg_Color_toFloatBits0 = $this => {
    let $color;
    $color = (255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r | 0;
    return cbgu_NumberUtils_intToFloatColor($color);
},
cbgg_Color_toIntBits = $this => {
    return (255.0 * $this.$a | 0) << 24 | (255.0 * $this.$b | 0) << 16 | (255.0 * $this.$g | 0) << 8 | 255.0 * $this.$r | 0;
},
cbgg_Color_toString = $this => {
    let var$1, $value;
    var$1 = (255.0 * $this.$r | 0) << 24 | (255.0 * $this.$g | 0) << 16 | (255.0 * $this.$b | 0) << 8 | 255.0 * $this.$a | 0;
    $value = jl_Integer_toHexString(var$1);
    while ($value.$length() < 8) {
        $value = (((jl_StringBuilder__init_()).$append1($rt_s(287))).$append1($value)).$toString();
    }
    return $value;
},
cbgg_Color_toFloatBits = ($r, $g, $b, $a) => {
    let $color;
    cbgg_Color_$callClinit();
    $color = (255.0 * $a | 0) << 24 | (255.0 * $b | 0) << 16 | (255.0 * $g | 0) << 8 | 255.0 * $r | 0;
    return cbgu_NumberUtils_intToFloatColor($color);
},
cbgg_Color_rgba8888 = ($r, $g, $b, $a) => {
    cbgg_Color_$callClinit();
    return ($r * 255.0 | 0) << 24 | ($g * 255.0 | 0) << 16 | ($b * 255.0 | 0) << 8 | $a * 255.0 | 0;
},
cbgg_Color_rgba8888ToColor = ($color, $value) => {
    cbgg_Color_$callClinit();
    $color.$r = (($value & (-16777216)) >>> 24 | 0) / 255.0;
    $color.$g = (($value & 16711680) >>> 16 | 0) / 255.0;
    $color.$b = (($value & 65280) >>> 8 | 0) / 255.0;
    $color.$a = ($value & 255) / 255.0;
},
cbgg_Color_abgr8888ToColor = ($color, $value) => {
    let $c;
    cbgg_Color_$callClinit();
    $c = cbgu_NumberUtils_floatToIntColor($value);
    $color.$a = (($c & (-16777216)) >>> 24 | 0) / 255.0;
    $color.$b = (($c & 16711680) >>> 16 | 0) / 255.0;
    $color.$g = (($c & 65280) >>> 8 | 0) / 255.0;
    $color.$r = ($c & 255) / 255.0;
},
cbgg_Color__clinit_ = () => {
    cbgg_Color_WHITE = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
    cbgg_Color_LIGHT_GRAY = cbgg_Color__init_((-1077952513));
    cbgg_Color_GRAY = cbgg_Color__init_(2139062271);
    cbgg_Color_DARK_GRAY = cbgg_Color__init_(1061109759);
    cbgg_Color_BLACK = cbgg_Color__init_0(0.0, 0.0, 0.0, 1.0);
    cbgg_Color_WHITE_FLOAT_BITS = cbgg_Color_WHITE.$toFloatBits();
    cbgg_Color_CLEAR = cbgg_Color__init_0(0.0, 0.0, 0.0, 0.0);
    cbgg_Color_CLEAR_WHITE = cbgg_Color__init_0(1.0, 1.0, 1.0, 0.0);
    cbgg_Color_BLUE = cbgg_Color__init_0(0.0, 0.0, 1.0, 1.0);
    cbgg_Color_NAVY = cbgg_Color__init_0(0.0, 0.0, 0.5, 1.0);
    cbgg_Color_ROYAL = cbgg_Color__init_(1097458175);
    cbgg_Color_SLATE = cbgg_Color__init_(1887473919);
    cbgg_Color_SKY = cbgg_Color__init_((-2016482305));
    cbgg_Color_CYAN = cbgg_Color__init_0(0.0, 1.0, 1.0, 1.0);
    cbgg_Color_TEAL = cbgg_Color__init_0(0.0, 0.5, 0.5, 1.0);
    cbgg_Color_GREEN = cbgg_Color__init_(16711935);
    cbgg_Color_CHARTREUSE = cbgg_Color__init_(2147418367);
    cbgg_Color_LIME = cbgg_Color__init_(852308735);
    cbgg_Color_FOREST = cbgg_Color__init_(579543807);
    cbgg_Color_OLIVE = cbgg_Color__init_(1804477439);
    cbgg_Color_YELLOW = cbgg_Color__init_((-65281));
    cbgg_Color_GOLD = cbgg_Color__init_((-2686721));
    cbgg_Color_GOLDENROD = cbgg_Color__init_((-626712321));
    cbgg_Color_ORANGE = cbgg_Color__init_((-5963521));
    cbgg_Color_BROWN = cbgg_Color__init_((-1958407169));
    cbgg_Color_TAN = cbgg_Color__init_((-759919361));
    cbgg_Color_FIREBRICK = cbgg_Color__init_((-1306385665));
    cbgg_Color_RED = cbgg_Color__init_((-16776961));
    cbgg_Color_SCARLET = cbgg_Color__init_((-13361921));
    cbgg_Color_CORAL = cbgg_Color__init_((-8433409));
    cbgg_Color_SALMON = cbgg_Color__init_((-92245249));
    cbgg_Color_PINK = cbgg_Color__init_((-9849601));
    cbgg_Color_MAGENTA = cbgg_Color__init_0(1.0, 0.0, 1.0, 1.0);
    cbgg_Color_PURPLE = cbgg_Color__init_((-1608453889));
    cbgg_Color_VIOLET = cbgg_Color__init_((-293409025));
    cbgg_Color_MAROON = cbgg_Color__init_((-1339006721));
};
function cbgg_VertexAttribute() {
    let a = this; jl_Object.call(a);
    a.$usage = 0;
    a.$numComponents = 0;
    a.$normalized = 0;
    a.$type3 = 0;
    a.$offset = 0;
    a.$alias = null;
    a.$unit = 0;
    a.$usageIndex = 0;
}
let cbgg_VertexAttribute__init_2 = ($this, $usage, $numComponents, $alias) => {
    cbgg_VertexAttribute__init_1($this, $usage, $numComponents, $alias, 0);
},
cbgg_VertexAttribute__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_VertexAttribute();
    cbgg_VertexAttribute__init_2(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_VertexAttribute__init_1 = ($this, $usage, $numComponents, $alias, $unit) => {
    let var$5;
    var$5 = $rt_compare($usage, 4);
    cbgg_VertexAttribute__init_0($this, $usage, $numComponents, var$5 ? 5126 : 5121, var$5 ? 0 : 1, $alias, $unit);
},
cbgg_VertexAttribute__init_4 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgg_VertexAttribute();
    cbgg_VertexAttribute__init_1(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgg_VertexAttribute__init_0 = ($this, $usage, $numComponents, $type, $normalized, $alias, $unit) => {
    jl_Object__init_($this);
    $this.$usage = $usage;
    $this.$numComponents = $numComponents;
    $this.$type3 = $type;
    $this.$normalized = $normalized;
    $this.$alias = $alias;
    $this.$unit = $unit;
    $this.$usageIndex = jl_Integer_numberOfTrailingZeros($usage);
},
cbgg_VertexAttribute__init_3 = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new cbgg_VertexAttribute();
    cbgg_VertexAttribute__init_0(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
cbgg_VertexAttribute_equals0 = ($this, $obj) => {
    if (!($obj instanceof cbgg_VertexAttribute))
        return 0;
    return cbgg_VertexAttribute_equals($this, $obj);
},
cbgg_VertexAttribute_equals = ($this, $other) => {
    let var$2, var$3, var$4;
    a: {
        if ($other !== null && $this.$usage == $other.$usage && $this.$numComponents == $other.$numComponents && $this.$type3 == $other.$type3 && $this.$normalized == $other.$normalized) {
            var$2 = $this.$alias;
            var$3 = $other.$alias;
            if (var$2.$equals(var$3) && $this.$unit == $other.$unit) {
                var$4 = 1;
                break a;
            }
        }
        var$4 = 0;
    }
    return var$4;
},
cbgg_VertexAttribute_getKey = $this => {
    return ($this.$usageIndex << 8) + ($this.$unit & 255) | 0;
},
cbgg_VertexAttribute_getSizeInBytes = $this => {
    a: {
        switch ($this.$type3) {
            case 5120:
            case 5121:
                break;
            case 5122:
            case 5123:
                return 2 * $this.$numComponents | 0;
            case 5124:
            case 5125:
            case 5127:
            case 5128:
            case 5129:
            case 5130:
            case 5131:
                break a;
            case 5126:
            case 5132:
                return 4 * $this.$numComponents | 0;
            default:
                break a;
        }
        return $this.$numComponents;
    }
    return 0;
},
cbgg_VertexAttribute_hashCode = $this => {
    let $result, var$2;
    $result = cbgg_VertexAttribute_getKey($this);
    var$2 = (541 * $result | 0) + $this.$numComponents | 0;
    var$2 = (541 * var$2 | 0) + $this.$alias.$hashCode0() | 0;
    return var$2;
},
b_Bullet = $rt_classWithoutFields(),
bl_btMotionState = $rt_classWithoutFields(bi_IDLBase),
bl_btMotionState_btTransform_TEMP_STATIC_GEN_0 = null,
bl_btMotionState_btTransform_TEMP_STATIC_GEN_1 = null,
bl_btMotionState_NULL = null,
bl_btMotionState_T_01 = null,
bl_btMotionState_T_02 = null,
bl_btMotionState_T_03 = null,
bl_btMotionState_$callClinit = () => {
    bl_btMotionState_$callClinit = $rt_eraseClinit(bl_btMotionState);
    bl_btMotionState__clinit_();
},
bl_btMotionState__init_0 = ($this, $b, $c) => {
    bl_btMotionState_$callClinit();
    bi_IDLBase__init_($this);
},
bl_btMotionState__init_1 = (var_0, var_1) => {
    let var_2 = new bl_btMotionState();
    bl_btMotionState__init_0(var_2, var_0, var_1);
    return var_2;
},
bl_btMotionState_native_new = () => {
    bl_btMotionState_$callClinit();
    return bl_btMotionState__init_1(0, 0);
},
bl_btMotionState__init_ = $this => {
    let $addr;
    bl_btMotionState_$callClinit();
    bi_IDLBase__init_($this);
    $addr = bl_btMotionState_internal_native_create$js_body$_10();
    bi_IDLBase_internal_reset($this, $addr, 1);
    bl_btMotionState_setupCallback($this);
},
bl_btMotionState__init_2 = () => {
    let var_0 = new bl_btMotionState();
    bl_btMotionState__init_(var_0);
    return var_0;
},
bl_btMotionState_setupCallback = $this => {
    let $getWorldTransform, $setWorldTransform;
    $getWorldTransform = bl_btMotionState$1__init_0($this);
    $setWorldTransform = bl_btMotionState$2__init_0($this);
    bl_btMotionState_internal_native_setupCallback$js_body$_11($this.$native_address, otji_JS_function(otji_JSWrapper_unwrap($getWorldTransform), "getWorldTransform"), otji_JS_function(otji_JSWrapper_unwrap($setWorldTransform), "setWorldTransform"));
},
bl_btMotionState_internal_getWorldTransform = ($this, $worldTrans_addr) => {
    bl_btMotionState_$callClinit();
    if (bl_btMotionState_btTransform_TEMP_STATIC_GEN_0 === null)
        bl_btMotionState_btTransform_TEMP_STATIC_GEN_0 = bl_btTransform_native_new();
    bi_IDLBase_internal_reset(bl_btMotionState_btTransform_TEMP_STATIC_GEN_0, $worldTrans_addr, 0);
    $this.$getWorldTransform(bl_btMotionState_btTransform_TEMP_STATIC_GEN_0);
},
bl_btMotionState_internal_setWorldTransform = ($this, $worldTrans_addr) => {
    bl_btMotionState_$callClinit();
    if (bl_btMotionState_btTransform_TEMP_STATIC_GEN_1 === null)
        bl_btMotionState_btTransform_TEMP_STATIC_GEN_1 = bl_btTransform_native_new();
    bi_IDLBase_internal_reset(bl_btMotionState_btTransform_TEMP_STATIC_GEN_1, $worldTrans_addr, 0);
    $this.$setWorldTransform(bl_btMotionState_btTransform_TEMP_STATIC_GEN_1);
},
bl_btMotionState__clinit_ = () => {
    bl_btMotionState_NULL = bl_btMotionState_native_new();
    bl_btMotionState_T_01 = bl_btMotionState_native_new();
    bl_btMotionState_T_02 = bl_btMotionState_native_new();
    bl_btMotionState_T_03 = bl_btMotionState_native_new();
},
bl_btMotionState_internal_native_create$js_body$_10 = () => {
    var jsObj = new bullet.MotionStateImpl();
    return bullet.getPointer(jsObj);
},
bl_btMotionState_internal_native_setupCallback$js_body$_11 = (var$1, var$2, var$3) => {
    var MotionStateImpl = bullet.wrapPointer(var$1, bullet.MotionStateImpl);
    MotionStateImpl.getWorldTransform = var$2;
    MotionStateImpl.setWorldTransform = var$3;
};
function beb_TestMotionState() {
    bl_btMotionState.call(this);
    this.$transform1 = null;
}
let beb_TestMotionState__init_ = ($this, var$1) => {
    bl_btMotionState__init_($this);
    $this.$transform1 = var$1;
},
beb_TestMotionState__init_0 = var_0 => {
    let var_1 = new beb_TestMotionState();
    beb_TestMotionState__init_(var_1, var_0);
    return var_1;
},
beb_TestMotionState_getWorldTransform = ($this, $worldTrans) => {
    bg_btGdx_convert1($this.$transform1, $worldTrans);
},
beb_TestMotionState_setWorldTransform = ($this, $worldTrans) => {
    bg_btGdx_convert0($worldTrans, $this.$transform1);
};
function jur_LeafQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$leaf = null;
}
let jur_LeafQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$leaf = $innerSet;
},
jur_LeafQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_LeafQuantifierSet();
    jur_LeafQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_LeafQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $i, var$5;
    $i = 0;
    a: {
        while (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
            var$5 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$5 <= 0)
                break a;
            $stringIndex = $stringIndex + var$5 | 0;
            $i = $i + 1 | 0;
        }
    }
    while (true) {
        if ($i < 0)
            return (-1);
        var$5 = $this.$next1.$matches($stringIndex, $testString, $matchResult);
        if (var$5 >= 0)
            break;
        $stringIndex = $stringIndex - $this.$leaf.$charCount() | 0;
        $i = $i + (-1) | 0;
    }
    return var$5;
},
jur_LeafQuantifierSet_getName = $this => {
    return $rt_s(288);
},
jur_UnifiedQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_UnifiedQuantifierSet__init_ = ($this, $quant) => {
    jur_LeafQuantifierSet__init_($this, $quant.$getInnerSet(), $quant.$getNext(), $quant.$getType0());
    $this.$innerSet.$setNext($this);
},
jur_UnifiedQuantifierSet__init_0 = var_0 => {
    let var_1 = new jur_UnifiedQuantifierSet();
    jur_UnifiedQuantifierSet__init_(var_1, var_0);
    return var_1;
},
jur_UnifiedQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    while (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
        var$4 = $this.$leaf;
        if (var$4.$accepts($stringIndex, $testString) <= 0)
            break;
        $stringIndex = $stringIndex + $this.$leaf.$charCount() | 0;
    }
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_UnifiedQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $startSearch, $newSearch, $newSearch_0;
    $startSearch = $this.$next1.$find($stringIndex, $testString, $matchResult);
    if ($startSearch < 0)
        return (-1);
    $newSearch = $startSearch - $this.$leaf.$charCount() | 0;
    while ($newSearch >= $stringIndex && $this.$leaf.$accepts($newSearch, $testString) > 0) {
        $newSearch_0 = $newSearch - $this.$leaf.$charCount() | 0;
        $startSearch = $newSearch;
        $newSearch = $newSearch_0;
    }
    return $startSearch;
},
jlr_AnnotatedElement = $rt_classWithoutFields(0),
jlr_Type = $rt_classWithoutFields(0);
function jl_Class() {
    let a = this; jl_Object.call(a);
    a.$name0 = null;
    a.$simpleName = null;
    a.$platformClass = null;
}
let jl_Class__init_0 = ($this, $platformClass) => {
    let var$2;
    jl_Object__init_($this);
    $this.$platformClass = $platformClass;
    var$2 = $this;
    $platformClass.classObject = var$2;
},
jl_Class__init_ = var_0 => {
    let var_1 = new jl_Class();
    jl_Class__init_0(var_1, var_0);
    return var_1;
},
jl_Class_getClass = $cls => {
    let $result;
    if ($cls === null)
        return null;
    $result = $cls.classObject;
    if ($result === null)
        $result = jl_Class__init_($cls);
    return $result;
},
jl_Class_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = jl_Class_isInterface($this) ? $rt_s(289) : !jl_Class_isPrimitive($this) ? $rt_s(290) : $rt_s(60);
    var$2 = jl_Class_getName($this);
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, var$1), var$2);
    return jl_StringBuilder_toString(var$3);
},
jl_Class_getPlatformClass = $this => {
    return $this.$platformClass;
},
jl_Class_isInstance = ($this, $obj) => {
    return otp_Platform_isInstance($obj, $this.$platformClass);
},
jl_Class_isAssignableFrom = ($this, $obj) => {
    return otp_Platform_isAssignable(jl_Class_getPlatformClass($obj), $this.$platformClass);
},
jl_Class_getName = $this => {
    if ($this.$name0 === null)
        $this.$name0 = otp_Platform_getName($this.$platformClass);
    return $this.$name0;
},
jl_Class_getSimpleName = $this => {
    let $name, var$2, var$3, $lastDollar, $lastDot;
    $name = jl_Class_getSimpleNameCache($this);
    if ($name === null) {
        if (jl_Class_isArray($this)) {
            var$2 = jl_Class_getSimpleName(jl_Class_getComponentType($this));
            var$3 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$3, var$2), $rt_s(26));
            $name = jl_StringBuilder_toString(var$3);
        } else if (jl_Class_getEnclosingClass($this) !== null) {
            $name = otp_Platform_getSimpleName($this.$platformClass);
            if ($name === null)
                $name = $rt_s(60);
        } else {
            $name = otp_Platform_getName($this.$platformClass);
            $lastDollar = $name.$lastIndexOf(36);
            if ($lastDollar == (-1)) {
                $lastDot = $name.$lastIndexOf(46);
                if ($lastDot != (-1))
                    $name = $name.$substring0($lastDot + 1 | 0);
            } else {
                $name = $name.$substring0($lastDollar + 1 | 0);
                if ($name.$charAt(0) >= 48 && $name.$charAt(0) <= 57)
                    $name = $rt_s(60);
            }
        }
        jl_Class_setSimpleNameCache($this, $name);
    }
    return $name;
},
jl_Class_getSimpleNameCache = $self => {
    return $self.$simpleName;
},
jl_Class_setSimpleNameCache = ($self, $value) => {
    $self.$simpleName = $value;
},
jl_Class_isPrimitive = $this => {
    return otp_Platform_isPrimitive($this.$platformClass);
},
jl_Class_isArray = $this => {
    return otp_Platform_getArrayItem($this.$platformClass) === null ? 0 : 1;
},
jl_Class_isInterface = $this => {
    return !($this.$platformClass.$meta.flags & 2) ? 0 : 1;
},
jl_Class_getComponentType = $this => {
    return jl_Class_getClass(otp_Platform_getArrayItem($this.$platformClass));
},
jl_Class_cast = ($this, $obj) => {
    let var$2, var$3, var$4, var$5;
    if ($obj !== null && !jl_Class_isAssignableFrom($this, jl_Object_getClass($obj))) {
        var$2 = new jl_ClassCastException;
        var$3 = jl_Class_getName(jl_Object_getClass($obj));
        var$4 = jl_Class_getName($this);
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, var$3), $rt_s(291)), var$4);
        jl_ClassCastException__init_(var$2, jl_StringBuilder_toString(var$5));
        $rt_throw(var$2);
    }
    return $obj;
},
jl_Class_getEnclosingClass = $this => {
    let $result;
    $result = otp_Platform_getEnclosingClass(jl_Class_getPlatformClass($this));
    return $result === null ? null : jl_Class_getClass($result);
},
otjt_Int16Array = $rt_classWithoutFields(otjt_TypedArray),
jl_Cloneable = $rt_classWithoutFields(0);
function ju_BitSet() {
    let a = this; jl_Object.call(a);
    a.$data = null;
    a.$length3 = 0;
}
let ju_BitSet__init_0 = $this => {
    jl_Object__init_($this);
    $this.$data = $rt_createIntArray(2);
},
ju_BitSet__init_1 = () => {
    let var_0 = new ju_BitSet();
    ju_BitSet__init_0(var_0);
    return var_0;
},
ju_BitSet__init_ = ($this, $nbits) => {
    jl_Object__init_($this);
    if ($nbits < 0)
        $rt_throw(jl_NegativeArraySizeException__init_());
    $this.$data = $rt_createIntArray((($nbits + 32 | 0) - 1 | 0) / 32 | 0);
},
ju_BitSet__init_2 = var_0 => {
    let var_1 = new ju_BitSet();
    ju_BitSet__init_(var_1, var_0);
    return var_1;
},
ju_BitSet_set0 = ($this, $bitIndex) => {
    let $index, var$3;
    if ($bitIndex < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $index = $bitIndex / 32 | 0;
    if ($bitIndex >= $this.$length3) {
        ju_BitSet_ensureCapacity($this, $index + 1 | 0);
        $this.$length3 = $bitIndex + 1 | 0;
    }
    var$3 = $this.$data.data;
    var$3[$index] = var$3[$index] | 1 << ($bitIndex % 32 | 0);
},
ju_BitSet_set = ($this, $fromIndex, $toIndex) => {
    let var$3, $fromDataIndex, $toDataIndex, var$6, $i;
    if ($fromIndex >= 0) {
        var$3 = $rt_compare($fromIndex, $toIndex);
        if (var$3 <= 0) {
            if (!var$3)
                return;
            $fromDataIndex = $fromIndex / 32 | 0;
            $toDataIndex = $toIndex / 32 | 0;
            if ($toIndex > $this.$length3) {
                ju_BitSet_ensureCapacity($this, $toDataIndex + 1 | 0);
                $this.$length3 = $toIndex;
            }
            if ($fromDataIndex == $toDataIndex) {
                var$6 = $this.$data.data;
                var$6[$fromDataIndex] = var$6[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex) & ju_BitSet_trailingOneBits($this, $toIndex);
            } else {
                var$6 = $this.$data.data;
                var$6[$fromDataIndex] = var$6[$fromDataIndex] | ju_BitSet_trailingZeroBits($this, $fromIndex);
                $i = $fromDataIndex + 1 | 0;
                while ($i < $toDataIndex) {
                    $this.$data.data[$i] = (-1);
                    $i = $i + 1 | 0;
                }
                if ($toIndex & 31) {
                    var$6 = $this.$data.data;
                    var$6[$toDataIndex] = var$6[$toDataIndex] | ju_BitSet_trailingOneBits($this, $toIndex);
                }
            }
            return;
        }
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
ju_BitSet_trailingZeroBits = ($this, $num) => {
    let var$2;
    var$2 = $num % 32 | 0;
    return (-1) << var$2;
},
ju_BitSet_trailingOneBits = ($this, $num) => {
    let var$2;
    var$2 = $num % 32 | 0;
    return !var$2 ? 0 : (-1) >>> (32 - var$2 | 0) | 0;
},
ju_BitSet_clear0 = ($this, $bitIndex) => {
    let $index, var$3;
    if ($bitIndex < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $index = $bitIndex / 32 | 0;
    if ($index < $this.$data.data.length) {
        var$3 = $this.$data.data;
        var$3[$index] = var$3[$index] & jl_Integer_rotateLeft((-2), $bitIndex % 32 | 0);
        if ($bitIndex == ($this.$length3 - 1 | 0))
            ju_BitSet_recalculateLength($this);
    }
},
ju_BitSet_clear = ($this, $fromIndex, $toIndex) => {
    let var$3, $fromDataIndex, $toDataIndex, var$6, $i;
    if ($fromIndex >= 0 && $fromIndex <= $toIndex) {
        if ($fromIndex >= $this.$length3)
            return;
        var$3 = jl_Math_min($this.$length3, $toIndex);
        if ($fromIndex == var$3)
            return;
        $fromDataIndex = $fromIndex / 32 | 0;
        $toDataIndex = var$3 / 32 | 0;
        if ($fromDataIndex == $toDataIndex) {
            var$6 = $this.$data.data;
            var$6[$fromDataIndex] = var$6[$fromDataIndex] & (ju_BitSet_trailingOneBits($this, $fromIndex) | ju_BitSet_trailingZeroBits($this, var$3));
        } else {
            var$6 = $this.$data.data;
            var$6[$fromDataIndex] = var$6[$fromDataIndex] & ju_BitSet_trailingOneBits($this, $fromIndex);
            $i = $fromDataIndex + 1 | 0;
            while ($i < $toDataIndex) {
                $this.$data.data[$i] = 0;
                $i = $i + 1 | 0;
            }
            if (var$3 & 31) {
                var$6 = $this.$data.data;
                var$6[$toDataIndex] = var$6[$toDataIndex] & ju_BitSet_trailingZeroBits($this, var$3);
            }
        }
        ju_BitSet_recalculateLength($this);
        return;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
ju_BitSet_get = ($this, $bitIndex) => {
    let $index;
    if ($bitIndex < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    $index = $bitIndex / 32 | 0;
    return $index < $this.$data.data.length && $this.$data.data[$index] & 1 << ($bitIndex % 32 | 0) ? 1 : 0;
},
ju_BitSet_nextSetBit = ($this, $fromIndex) => {
    let $index, $val, var$4, $top, $i;
    if ($fromIndex < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if ($fromIndex >= $this.$length3)
        return (-1);
    $index = $fromIndex / 32 | 0;
    $val = $this.$data.data[$index];
    var$4 = $val >>> ($fromIndex % 32 | 0) | 0;
    if (var$4)
        return jl_Integer_numberOfTrailingZeros(var$4) + $fromIndex | 0;
    $top = ($this.$length3 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if ($this.$data.data[$i])
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros($this.$data.data[$i]) | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
ju_BitSet_nextClearBit = ($this, $fromIndex) => {
    let $index, $val, var$4, $top, $i;
    if ($fromIndex < 0)
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    if ($fromIndex >= $this.$length3)
        return $fromIndex;
    $index = $fromIndex / 32 | 0;
    $val = $this.$data.data[$index] ^ (-1);
    var$4 = $val >>> ($fromIndex % 32 | 0) | 0;
    if (var$4)
        return jl_Integer_numberOfTrailingZeros(var$4) + $fromIndex | 0;
    $top = ($this.$length3 + 31 | 0) / 32 | 0;
    $i = $index + 1 | 0;
    while ($i < $top) {
        if ($this.$data.data[$i] != (-1))
            return ($i * 32 | 0) + jl_Integer_numberOfTrailingZeros($this.$data.data[$i] ^ (-1)) | 0;
        $i = $i + 1 | 0;
    }
    return $this.$length3;
},
ju_BitSet_ensureCapacity = ($this, $capacity) => {
    let $newArrayLength;
    if ($this.$data.data.length >= $capacity)
        return;
    $newArrayLength = jl_Math_max(($capacity * 3 | 0) / 2 | 0, ($this.$data.data.length * 2 | 0) + 1 | 0);
    $this.$data = ju_Arrays_copyOf2($this.$data, $newArrayLength);
},
ju_BitSet_recalculateLength = $this => {
    let $top, $i, $sz;
    $top = ($this.$length3 + 31 | 0) / 32 | 0;
    $this.$length3 = $top * 32 | 0;
    $i = $top - 1 | 0;
    a: {
        while (true) {
            if ($i < 0)
                break a;
            $sz = jl_Integer_numberOfLeadingZeros($this.$data.data[$i]);
            if ($sz < 32)
                break;
            $i = $i + (-1) | 0;
            $this.$length3 = $this.$length3 - 32 | 0;
        }
        $this.$length3 = $this.$length3 - $sz | 0;
    }
},
ju_BitSet_intersects = ($this, $set) => {
    let $sz, $i;
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        if ($this.$data.data[$i] & $set.$data.data[$i])
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
},
ju_BitSet_and = ($this, $set) => {
    let $i, $i_0, var$4;
    $i = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i_0 = 0;
    while ($i_0 < $i) {
        var$4 = $this.$data.data;
        var$4[$i_0] = var$4[$i_0] & $set.$data.data[$i_0];
        $i_0 = $i_0 + 1 | 0;
    }
    while ($i < $this.$data.data.length) {
        $this.$data.data[$i] = 0;
        $i = $i + 1 | 0;
    }
    $this.$length3 = jl_Math_min($this.$length3, $set.$length3);
    ju_BitSet_recalculateLength($this);
},
ju_BitSet_andNot = ($this, $set) => {
    let $sz, $i, var$4;
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] & ($set.$data.data[$i] ^ (-1));
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
},
ju_BitSet_or = ($this, $set) => {
    let $sz, $i, var$4;
    $this.$length3 = jl_Math_max($this.$length3, $set.$length3);
    ju_BitSet_ensureCapacity($this, ($this.$length3 + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] | $set.$data.data[$i];
        $i = $i + 1 | 0;
    }
},
ju_BitSet_xor = ($this, $set) => {
    let $sz, $i, var$4;
    $this.$length3 = jl_Math_max($this.$length3, $set.$length3);
    ju_BitSet_ensureCapacity($this, ($this.$length3 + 31 | 0) / 32 | 0);
    $sz = jl_Math_min($this.$data.data.length, $set.$data.data.length);
    $i = 0;
    while ($i < $sz) {
        var$4 = $this.$data.data;
        var$4[$i] = var$4[$i] ^ $set.$data.data[$i];
        $i = $i + 1 | 0;
    }
    ju_BitSet_recalculateLength($this);
},
ju_BitSet_isEmpty = $this => {
    return $this.$length3 ? 0 : 1;
};
function jl_Float() {
    jl_Number.call(this);
    this.$value6 = 0.0;
}
let jl_Float_TYPE = null,
jl_Float_$callClinit = () => {
    jl_Float_$callClinit = $rt_eraseClinit(jl_Float);
    jl_Float__clinit_();
},
jl_Float__init_ = ($this, $value) => {
    jl_Float_$callClinit();
    jl_Number__init_($this);
    $this.$value6 = $value;
},
jl_Float__init_0 = var_0 => {
    let var_1 = new jl_Float();
    jl_Float__init_(var_1, var_0);
    return var_1;
},
jl_Float_floatValue = $this => {
    return $this.$value6;
},
jl_Float_valueOf = $d => {
    jl_Float_$callClinit();
    return jl_Float__init_0($d);
},
jl_Float_parseFloat = $string => {
    let $start, $end, var$4, $negative, $c, $mantissa, $exp, $mantissaPos, $hasOneDigit, var$11, var$12, $negativeExp, $numExp;
    jl_Float_$callClinit();
    if ($string.$isEmpty())
        $rt_throw(jl_NumberFormatException__init_());
    $start = 0;
    $end = $string.$length();
    while (true) {
        if ($string.$charAt($start) > 32) {
            while (true) {
                var$4 = $end - 1 | 0;
                if ($string.$charAt(var$4) > 32)
                    break;
                $end = $end + (-1) | 0;
            }
            if (!($string.$charAt(var$4) != 102 && $string.$charAt(var$4) != 70 && $string.$charAt(var$4) != 100 && $string.$charAt(var$4) != 68))
                $end = $end + (-1) | 0;
            $negative = 0;
            if ($string.$charAt($start) == 45) {
                $start = $start + 1 | 0;
                $negative = 1;
            } else if ($string.$charAt($start) == 43)
                $start = $start + 1 | 0;
            if ($start == $end)
                $rt_throw(jl_NumberFormatException__init_());
            a: {
                $c = $string.$charAt($start);
                $mantissa = 0;
                $exp = (-1);
                $mantissaPos = 100000000;
                $hasOneDigit = 0;
                if ($c != 46) {
                    $hasOneDigit = 1;
                    if ($c >= 48 && $c <= 57) {
                        b: {
                            while ($start < $end) {
                                if ($string.$charAt($start) != 48)
                                    break b;
                                $start = $start + 1 | 0;
                            }
                        }
                        while ($start < $end) {
                            var$4 = $string.$charAt($start);
                            if (var$4 < 48)
                                break a;
                            if (var$4 > 57)
                                break a;
                            if ($mantissaPos > 0) {
                                $mantissa = $mantissa + $rt_imul($mantissaPos, var$4 - 48 | 0) | 0;
                                $mantissaPos = $rt_udiv($mantissaPos, 10);
                            }
                            $exp = $exp + 1 | 0;
                            $start = $start + 1 | 0;
                        }
                    } else
                        $rt_throw(jl_NumberFormatException__init_());
                }
            }
            if ($start < $end && $string.$charAt($start) == 46) {
                $start = $start + 1 | 0;
                c: {
                    while (true) {
                        if ($start >= $end)
                            break c;
                        var$11 = $string.$charAt($start);
                        var$4 = $rt_compare(var$11, 48);
                        if (var$4 < 0)
                            break c;
                        if (var$11 > 57)
                            break;
                        if (!$mantissa && !var$4)
                            $exp = $exp + (-1) | 0;
                        else if ($mantissaPos > 0) {
                            $mantissa = $mantissa + $rt_imul($mantissaPos, var$11 - 48 | 0) | 0;
                            $mantissaPos = $rt_udiv($mantissaPos, 10);
                        }
                        $start = $start + 1 | 0;
                        $hasOneDigit = 1;
                    }
                }
                if (!$hasOneDigit)
                    $rt_throw(jl_NumberFormatException__init_());
            }
            if ($start < $end) {
                var$11 = $string.$charAt($start);
                if (var$11 != 101 && var$11 != 69)
                    $rt_throw(jl_NumberFormatException__init_());
                var$12 = $start + 1 | 0;
                $negativeExp = 0;
                if (var$12 == $end)
                    $rt_throw(jl_NumberFormatException__init_());
                if ($string.$charAt(var$12) == 45) {
                    var$12 = var$12 + 1 | 0;
                    $negativeExp = 1;
                } else if ($string.$charAt(var$12) == 43)
                    var$12 = var$12 + 1 | 0;
                $numExp = 0;
                var$4 = 0;
                d: {
                    while (true) {
                        if (var$12 >= $end)
                            break d;
                        var$11 = $string.$charAt(var$12);
                        if (var$11 < 48)
                            break d;
                        if (var$11 > 57)
                            break;
                        $numExp = (10 * $numExp | 0) + (var$11 - 48 | 0) | 0;
                        var$4 = 1;
                        var$12 = var$12 + 1 | 0;
                    }
                }
                if (!var$4)
                    $rt_throw(jl_NumberFormatException__init_());
                if ($negativeExp)
                    $numExp =  -$numExp | 0;
                $exp = $exp + $numExp | 0;
            }
            return otcit_FloatSynthesizer_synthesizeFloat($mantissa, $exp, $negative);
        }
        $start = $start + 1 | 0;
        if ($start == $end)
            break;
    }
    $rt_throw(jl_NumberFormatException__init_());
},
jl_Float_floatToIntBits = $value => {
    jl_Float_$callClinit();
    if (isNaN($value) ? 1 : 0)
        return 2143289344;
    return $rt_floatToRawIntBits($value);
},
jl_Float__clinit_ = () => {
    jl_Float_TYPE = $rt_cls($rt_floatcls);
};
function jur_CharSet() {
    jur_LeafSet.call(this);
    this.$ch0 = 0;
}
let jur_CharSet__init_0 = ($this, $ch) => {
    jur_LeafSet__init_($this);
    $this.$ch0 = $ch;
},
jur_CharSet__init_ = var_0 => {
    let var_1 = new jur_CharSet();
    jur_CharSet__init_0(var_1, var_0);
    return var_1;
},
jur_CharSet_charCount = $this => {
    return 1;
},
jur_CharSet_accepts = ($this, $strIndex, $testString) => {
    return $this.$ch0 != $testString.$charAt($strIndex) ? (-1) : 1;
},
jur_CharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = $testStr.$indexOf0($this.$ch0, $strIndex);
        if (var$6 < 0)
            return (-1);
        var$7 = $this.$next1;
        $strIndex = var$6 + 1 | 0;
        if (var$7.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
},
jur_CharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $testStr, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = $testStr.$lastIndexOf1($this.$ch0, $lastIndex);
            if (var$6 < 0)
                break a;
            if (var$6 < $strIndex)
                break a;
            if ($this.$next1.$matches(var$6 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$6 + (-1) | 0;
        }
        return var$6;
    }
    return (-1);
},
jur_CharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$ch0;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(var$2, var$1);
    return jl_StringBuilder_toString(var$2);
},
jur_CharSet_getChar = $this => {
    return $this.$ch0;
},
jur_CharSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return $set.$getChar0() != $this.$ch0 ? 0 : 1;
    if (!($set instanceof jur_RangeSet)) {
        if ($set instanceof jur_SupplRangeSet)
            return $set.$contains($this.$ch0);
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        return 0;
    }
    return $set.$accepts(0, jl_Character_toString($this.$ch0)) <= 0 ? 0 : 1;
},
cgxgbtu_TeaBaseUrlProvider = $rt_classWithoutFields(0),
cgxgbtu_TeaDefaultBaseUrlProvider = $rt_classWithoutFields(),
cgxgbtu_TeaDefaultBaseUrlProvider__init_ = $this => {
    jl_Object__init_($this);
},
cgxgbtu_TeaDefaultBaseUrlProvider__init_0 = () => {
    let var_0 = new cgxgbtu_TeaDefaultBaseUrlProvider();
    cgxgbtu_TeaDefaultBaseUrlProvider__init_(var_0);
    return var_0;
},
cgxgbtu_TeaDefaultBaseUrlProvider_getBaseUrl = $this => {
    let $currentWindow, $location, $hostPageBaseURL, var$4, $indexQM;
    $currentWindow = cgxgbtdi_TeaWindow_get();
    $location = $currentWindow.$getLocation();
    $hostPageBaseURL = $rt_str($location.href);
    if ($hostPageBaseURL.$contains0($rt_s(292))) {
        var$4 = $hostPageBaseURL.$replace($rt_s(293), $rt_s(60));
        var$4 = var$4.$replace($rt_s(294), $rt_s(60));
        $hostPageBaseURL = var$4.$replace($rt_s(295), $rt_s(60));
    }
    $indexQM = $hostPageBaseURL.$indexOf1(63);
    if ($indexQM >= 0)
        $hostPageBaseURL = $hostPageBaseURL.$substring(0, $indexQM);
    return $hostPageBaseURL;
},
otjb_AnimationFrameCallback = $rt_classWithoutFields(0);
function cbgssu_ProgressBar$ProgressBarStyle() {
    let a = this; jl_Object.call(a);
    a.$background0 = null;
    a.$disabledBackground = null;
    a.$knob = null;
    a.$disabledKnob = null;
    a.$knobBefore = null;
    a.$disabledKnobBefore = null;
    a.$knobAfter = null;
    a.$disabledKnobAfter = null;
}
let cbgssu_ProgressBar$ProgressBarStyle__init_ = $this => {
    jl_Object__init_($this);
},
cbgssu_ProgressBar$ProgressBarStyle__init_0 = () => {
    let var_0 = new cbgssu_ProgressBar$ProgressBarStyle();
    cbgssu_ProgressBar$ProgressBarStyle__init_(var_0);
    return var_0;
},
cbggg_VertexData = $rt_classWithoutFields(0),
cgxjl_JParserLibraryLoader = $rt_classWithoutFields(),
cgxjl_JParserLibraryLoader_loadedLibraries = null,
cgxjl_JParserLibraryLoader_$callClinit = () => {
    cgxjl_JParserLibraryLoader_$callClinit = $rt_eraseClinit(cgxjl_JParserLibraryLoader);
    cgxjl_JParserLibraryLoader__clinit_();
},
cgxjl_JParserLibraryLoader_load = ($libraryName, $listener) => {
    cgxjl_JParserLibraryLoader_$callClinit();
    cgxjl_JParserLibraryLoader_loadInternal($libraryName, null, null, $listener);
},
cgxjl_JParserLibraryLoader_loadInternal = ($libraryName, $path, $options, $listener) => {
    let var$5, var$6, var$7, $fullLibraryName, $lis, $scriptPath, $platformWebScriptPath, $error;
    cgxjl_JParserLibraryLoader_$callClinit();
    if ($listener === null)
        $rt_throw(jl_RuntimeException__init_1($rt_s(296)));
    if ($path === null)
        var$5 = $rt_s(60);
    else {
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append1(jl_StringBuilder_append(var$5, $path), 47);
        var$6 = jl_StringBuilder_toString(var$5);
        var$5 = var$6.$replace($rt_s(297), $rt_s(32));
    }
    var$7 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$7, var$5), $libraryName);
    $fullLibraryName = jl_StringBuilder_toString(var$7);
    if (cgxjl_JParserLibraryLoader_loadedLibraries.$contains1($fullLibraryName))
        return;
    $lis = cgxjl_JParserLibraryLoader$1__init_0($listener);
    $scriptPath = cgxjc_JPlatformMap_getObject(cgxjc_JMultiplatform_getMap(cgxjc_JMultiplatform_getInstance()), $rt_s(298), $rt_cls(jl_String));
    if ($scriptPath === null) {
        $platformWebScriptPath = $rt_s(298);
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(299)), $platformWebScriptPath), $rt_s(300));
        $error = jl_StringBuilder_toString(var$5);
        $listener.$onLoad(0, js_ScriptException__init_0($error));
    } else if ($fullLibraryName.$endsWith($rt_s(301)))
        cgxjl_JParserLibraryLoader_loadWasm($lis, $fullLibraryName, $scriptPath, $rt_s(60), 0);
    else if ($fullLibraryName.$endsWith($rt_s(302)))
        cgxjl_JParserLibraryLoader_loadJS($lis, $fullLibraryName, $scriptPath);
    else
        cgxjl_JParserLibraryLoader_loadWasm($lis, $fullLibraryName, $scriptPath, $rt_s(301), 1);
},
cgxjl_JParserLibraryLoader_loadWasm = ($listener, $libraryName, $prefix, $postfix, $fallback) => {
    cgxjl_JParserLibraryLoader_$callClinit();
    cgxjl_JParserLibraryLoader_loadScript($libraryName, cgxjl_JParserLibraryLoader$loadWasm$lambda$_10_0__init_0($libraryName, $listener, $fallback, $prefix), $prefix, $postfix);
},
cgxjl_JParserLibraryLoader_loadJS = ($listener, $libraryName, $prefix) => {
    cgxjl_JParserLibraryLoader_$callClinit();
    cgxjl_JParserLibraryLoader_loadScript($libraryName, cgxjl_JParserLibraryLoader$loadJS$lambda$_11_0__init_0($listener), $prefix, $rt_s(302));
},
cgxjl_JParserLibraryLoader_loadScript = ($libraryName, $listener, $prefix, $postfix) => {
    let var$5, $url, $current, $document, var$9, var$10;
    cgxjl_JParserLibraryLoader_$callClinit();
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$5, $prefix), $libraryName), $postfix);
    $url = jl_StringBuilder_toString(var$5);
    $current = window;
    $document = $current.document;
    var$9 = $document.createElement("script");
    var$5 = cgxjl_JParserLibraryLoader$loadScript$lambda$_12_0__init_0($listener);
    var$9.addEventListener("load", otji_JS_function(otji_JSWrapper_unwrap(var$5), "handleEvent"));
    var$5 = cgxjl_JParserLibraryLoader$loadScript$lambda$_12_1__init_0($prefix, $libraryName, $listener);
    var$9.addEventListener("error", otji_JS_function(otji_JSWrapper_unwrap(var$5), "handleEvent"));
    var$10 = $rt_ustr($url);
    var$9.src = var$10;
    $document.body.appendChild(var$9);
},
cgxjl_JParserLibraryLoader_lambda$loadScript$4 = ($prefix, $libraryName, $listener, $error) => {
    let var$5, $str, var$7;
    cgxjl_JParserLibraryLoader_$callClinit();
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $prefix), $libraryName);
    $str = jl_StringBuilder_toString(var$5);
    var$5 = new js_ScriptException;
    var$7 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(303)), $str);
    js_ScriptException__init_(var$5, jl_StringBuilder_toString(var$7));
    $listener.$onLoad(0, var$5);
},
cgxjl_JParserLibraryLoader_lambda$loadScript$3 = ($listener, $event) => {
    cgxjl_JParserLibraryLoader_$callClinit();
    $listener.$onLoad(1, null);
},
cgxjl_JParserLibraryLoader_lambda$loadJS$2 = ($listener, $isSuccess, $e) => {
    cgxjl_JParserLibraryLoader_$callClinit();
    if (!$isSuccess)
        $listener.$onLoad(0, $e);
    else
        $listener.$onLoad(1, null);
},
cgxjl_JParserLibraryLoader_lambda$loadWasm$1 = ($libraryName, $listener, $fallback, $prefix, $isSuccess, $e) => {
    let var$7, $fullLibName;
    cgxjl_JParserLibraryLoader_$callClinit();
    if (!$isSuccess) {
        if ($fallback)
            cgxjl_JParserLibraryLoader_loadJS($listener, $libraryName, $prefix);
        else
            $listener.$onLoad(0, $e);
    } else {
        var$7 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$7, $libraryName), $rt_s(304));
        $fullLibName = jl_StringBuilder_toString(var$7);
        var$7 = cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_17_0__init_0($libraryName, $listener);
        window[$rt_ustr($fullLibName)] = otji_JS_function(otji_JSWrapper_unwrap(var$7), "onInit");
    }
},
cgxjl_JParserLibraryLoader_lambda$loadWasm$0 = ($libraryName, $listener) => {
    cgxjl_JParserLibraryLoader_$callClinit();
    cgxjl_JParserLibraryLoader_loadedLibraries.$add3($libraryName);
    $listener.$onLoad(1, null);
},
cgxjl_JParserLibraryLoader__clinit_ = () => {
    cgxjl_JParserLibraryLoader_loadedLibraries = ju_HashSet__init_1();
};
function cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_10_0() {
    let a = this; jl_Object.call(a);
    a.$_00 = null;
    a.$_10 = 0;
    a.$_20 = null;
    a.$_30 = null;
    a.$_4 = 0;
}
let cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_10_0__init_ = (var$0, var$1, var$2, var$3, var$4, var$5) => {
    jl_Object__init_(var$0);
    var$0.$_00 = var$1;
    var$0.$_10 = var$2;
    var$0.$_20 = var$3;
    var$0.$_30 = var$4;
    var$0.$_4 = var$5;
},
cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_10_0__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_10_0();
    cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_10_0__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_10_0_onTimer = var$0 => {
    cgxgbta_AssetDownloadImpl_lambda$loadBinaryInternally$2(var$0.$_00, var$0.$_10, var$0.$_20, var$0.$_30, var$0.$_4);
},
cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_10_0_onTimer$exported$0 = var$1 => {
    var$1.$onTimer();
};
function jur_AbstractCharClass$LazyCategoryScope() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$category0 = 0;
    a.$mayContainSupplCodepoints1 = 0;
    a.$containsAllSurrogates = 0;
}
let jur_AbstractCharClass$LazyCategoryScope__init_0 = ($this, $cat, $mayContainSupplCodepoints) => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
},
jur_AbstractCharClass$LazyCategoryScope__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyCategoryScope__init_1 = ($this, $cat, $mayContainSupplCodepoints, $containsAllSurrogates) => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$containsAllSurrogates = $containsAllSurrogates;
    $this.$mayContainSupplCodepoints1 = $mayContainSupplCodepoints;
    $this.$category0 = $cat;
},
jur_AbstractCharClass$LazyCategoryScope__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AbstractCharClass$LazyCategoryScope();
    jur_AbstractCharClass$LazyCategoryScope__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AbstractCharClass$LazyCategoryScope_computeValue = $this => {
    let $chCl;
    $chCl = jur_UnicodeCategoryScope__init_0($this.$category0);
    if ($this.$containsAllSurrogates)
        $chCl.$lowHighSurrogates.$set6(0, 2048);
    $chCl.$mayContainSupplCodepoints0 = $this.$mayContainSupplCodepoints1;
    return $chCl;
};
function jur_AbstractCharClass$LazyJavaTitleCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$059 = null;
}
let jur_AbstractCharClass$LazyJavaTitleCase$1__init_ = ($this, $this$0) => {
    $this.$this$059 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaTitleCase$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaTitleCase$1();
    jur_AbstractCharClass$LazyJavaTitleCase$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaTitleCase$1_contains = ($this, $ch) => {
    return jl_Character_isTitleCase($ch);
},
ju_Comparator = $rt_classWithoutFields(0);
function cbggg_Attributes() {
    let a = this; jl_Object.call(a);
    a.$mask0 = Long_ZERO;
    a.$attributes0 = null;
    a.$sorted = 0;
}
let cbggg_Attributes__init_ = $this => {
    jl_Object__init_($this);
    $this.$attributes0 = cbgu_Array__init_();
    $this.$sorted = 1;
},
cbggg_Attributes__init_0 = () => {
    let var_0 = new cbggg_Attributes();
    cbggg_Attributes__init_(var_0);
    return var_0;
},
cbggg_Attributes_sort = $this => {
    if (!$this.$sorted) {
        $this.$attributes0.$sort0($this);
        $this.$sorted = 1;
    }
},
cbggg_Attributes_getMask = $this => {
    return $this.$mask0;
},
cbggg_Attributes_get = ($this, $type) => {
    let $i;
    a: {
        if (cbggg_Attributes_has($this, $type)) {
            $i = 0;
            while (true) {
                if ($i >= $this.$attributes0.$size0)
                    break a;
                if (Long_eq(($this.$attributes0.$get($i)).$type1, $type))
                    return $this.$attributes0.$get($i);
                $i = $i + 1 | 0;
            }
        }
    }
    return null;
},
cbggg_Attributes_get0 = ($this, $clazz, $type) => {
    return cbggg_Attributes_get($this, $type);
},
cbggg_Attributes_clear = $this => {
    $this.$mask0 = Long_ZERO;
    $this.$attributes0.$clear();
},
cbggg_Attributes_enable = ($this, $mask) => {
    $this.$mask0 = Long_or($this.$mask0, $mask);
},
cbggg_Attributes_set = ($this, $attribute) => {
    let $idx;
    $idx = $this.$indexOf2($attribute.$type1);
    if ($idx >= 0)
        $this.$attributes0.$set13($idx, $attribute);
    else {
        cbggg_Attributes_enable($this, $attribute.$type1);
        $this.$attributes0.$add1($attribute);
        $this.$sorted = 0;
    }
    cbggg_Attributes_sort($this);
},
cbggg_Attributes_set1 = ($this, $attributes) => {
    let var$2, var$3, var$4, $attr;
    var$2 = $attributes.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $attr = var$2[var$4];
        cbggg_Attributes_set($this, $attr);
        var$4 = var$4 + 1 | 0;
    }
},
cbggg_Attributes_set0 = ($this, $attributes) => {
    let var$2, $attr;
    var$2 = $attributes.$iterator0();
    while (var$2.$hasNext()) {
        $attr = var$2.$next();
        cbggg_Attributes_set($this, $attr);
    }
},
cbggg_Attributes_has = ($this, $type) => {
    return Long_ne($type, Long_ZERO) && Long_eq(Long_and($this.$mask0, $type), $type) ? 1 : 0;
},
cbggg_Attributes_indexOf = ($this, $type) => {
    let $i;
    a: {
        if (cbggg_Attributes_has($this, $type)) {
            $i = 0;
            while (true) {
                if ($i >= $this.$attributes0.$size0)
                    break a;
                if (Long_eq(($this.$attributes0.$get($i)).$type1, $type))
                    break;
                $i = $i + 1 | 0;
            }
            return $i;
        }
    }
    return (-1);
},
cbggg_Attributes_same = ($this, $other, $compareValues) => {
    let $i;
    if ($other === $this)
        return 1;
    if ($other !== null && Long_eq($this.$mask0, $other.$mask0)) {
        if (!$compareValues)
            return 1;
        cbggg_Attributes_sort($this);
        cbggg_Attributes_sort($other);
        $i = 0;
        while ($i < $this.$attributes0.$size0) {
            if (!($this.$attributes0.$get($i)).$equals1($other.$attributes0.$get($i)))
                return 0;
            $i = $i + 1 | 0;
        }
        return 1;
    }
    return 0;
},
cbggg_Attributes_compare = ($this, $arg0, $arg1) => {
    return Long_lo(Long_sub($arg0.$type1, $arg1.$type1));
},
cbggg_Attributes_iterator = $this => {
    return $this.$attributes0.$iterator();
},
cbggg_Attributes_attributesHash = $this => {
    let $n, $result, $m, $i, var$5;
    cbggg_Attributes_sort($this);
    $n = $this.$attributes0.$size0;
    $result = Long_add(Long_fromInt(71), $this.$mask0);
    $m = 1;
    $i = 0;
    while ($i < $n) {
        var$5 = Long_mul($this.$mask0, Long_fromInt(($this.$attributes0.$get($i)).$hashCode0()));
        $m = ($m * 7 | 0) & 65535;
        $result = Long_add($result, Long_mul(var$5, Long_fromInt($m)));
        $i = $i + 1 | 0;
    }
    return Long_lo(Long_xor($result, Long_shr($result, 32)));
},
cbggg_Attributes_hashCode = $this => {
    return $this.$attributesHash();
},
cbggg_Attributes_equals = ($this, $other) => {
    if (!($other instanceof cbggg_Attributes))
        return 0;
    if ($other === $this)
        return 1;
    return cbggg_Attributes_same($this, $other, 1);
},
cbggg_Attributes_compare0 = ($this, var$1, var$2) => {
    return cbggg_Attributes_compare($this, var$1, var$2);
};
function cbggg_Material() {
    cbggg_Attributes.call(this);
    this.$id1 = null;
}
let cbggg_Material_counter = 0,
cbggg_Material_$callClinit = () => {
    cbggg_Material_$callClinit = $rt_eraseClinit(cbggg_Material);
    cbggg_Material__clinit_();
},
cbggg_Material__init_1 = $this => {
    let var$1, var$2;
    cbggg_Material_$callClinit();
    var$1 = (jl_StringBuilder__init_()).$append1($rt_s(305));
    var$2 = cbggg_Material_counter + 1 | 0;
    cbggg_Material_counter = var$2;
    cbggg_Material__init_($this, (var$1.$append2(var$2)).$toString());
},
cbggg_Material__init_8 = () => {
    let var_0 = new cbggg_Material();
    cbggg_Material__init_1(var_0);
    return var_0;
},
cbggg_Material__init_ = ($this, $id) => {
    cbggg_Material_$callClinit();
    cbggg_Attributes__init_($this);
    $this.$id1 = $id;
},
cbggg_Material__init_6 = var_0 => {
    let var_1 = new cbggg_Material();
    cbggg_Material__init_(var_1, var_0);
    return var_1;
},
cbggg_Material__init_0 = ($this, $attributes) => {
    cbggg_Material_$callClinit();
    cbggg_Material__init_1($this);
    cbggg_Attributes_set1($this, $attributes);
},
cbggg_Material__init_7 = var_0 => {
    let var_1 = new cbggg_Material();
    cbggg_Material__init_0(var_1, var_0);
    return var_1;
},
cbggg_Material__init_3 = ($this, $copyFrom) => {
    cbggg_Material_$callClinit();
    cbggg_Material__init_2($this, $copyFrom.$id1, $copyFrom);
},
cbggg_Material__init_4 = var_0 => {
    let var_1 = new cbggg_Material();
    cbggg_Material__init_3(var_1, var_0);
    return var_1;
},
cbggg_Material__init_2 = ($this, $id, $copyFrom) => {
    let var$3, $attr;
    cbggg_Material_$callClinit();
    cbggg_Material__init_($this, $id);
    var$3 = cbggg_Attributes_iterator($copyFrom);
    while (var$3.$hasNext()) {
        $attr = var$3.$next();
        cbggg_Attributes_set($this, $attr.$copy());
    }
},
cbggg_Material__init_5 = (var_0, var_1) => {
    let var_2 = new cbggg_Material();
    cbggg_Material__init_2(var_2, var_0, var_1);
    return var_2;
},
cbggg_Material_copy = $this => {
    return cbggg_Material__init_4($this);
},
cbggg_Material_hashCode = $this => {
    return cbggg_Attributes_hashCode($this) + (3 * $this.$id1.$hashCode0() | 0) | 0;
},
cbggg_Material_equals = ($this, $other) => {
    let var$2;
    a: {
        b: {
            if ($other instanceof cbggg_Material) {
                if ($other === $this)
                    break b;
                if ($other.$id1.$equals($this.$id1) && cbggg_Attributes_equals($this, $other))
                    break b;
            }
            var$2 = 0;
            break a;
        }
        var$2 = 1;
    }
    return var$2;
},
cbggg_Material__clinit_ = () => {
    cbggg_Material_counter = 0;
},
bl_btVector3 = $rt_classWithoutFields(bi_IDLBase),
bl_btVector3_NULL = null,
bl_btVector3_T_01 = null,
bl_btVector3_T_02 = null,
bl_btVector3_T_03 = null,
bl_btVector3_$callClinit = () => {
    bl_btVector3_$callClinit = $rt_eraseClinit(bl_btVector3);
    bl_btVector3__clinit_();
},
bl_btVector3__init_ = $this => {
    let $addr;
    bl_btVector3_$callClinit();
    bi_IDLBase__init_($this);
    $addr = bl_btVector3_internal_native_create$js_body$_1();
    bi_IDLBase_internal_reset($this, $addr, 1);
},
bl_btVector3__init_4 = () => {
    let var_0 = new bl_btVector3();
    bl_btVector3__init_(var_0);
    return var_0;
},
bl_btVector3__init_1 = ($this, $x, $y, $z) => {
    let $addr;
    bl_btVector3_$callClinit();
    bi_IDLBase__init_($this);
    $addr = bl_btVector3_internal_native_create_float_float_float$js_body$_3($x, $y, $z);
    bi_IDLBase_internal_reset($this, $addr, 1);
},
bl_btVector3__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new bl_btVector3();
    bl_btVector3__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
bl_btVector3__init_0 = ($this, $b, $c) => {
    bl_btVector3_$callClinit();
    bi_IDLBase__init_($this);
},
bl_btVector3__init_3 = (var_0, var_1) => {
    let var_2 = new bl_btVector3();
    bl_btVector3__init_0(var_2, var_0, var_1);
    return var_2;
},
bl_btVector3_native_new = () => {
    bl_btVector3_$callClinit();
    return bl_btVector3__init_3(0, 0);
},
bl_btVector3_getX = $this => {
    return bl_btVector3_internal_native_getX$js_body$_11($this.$native_address);
},
bl_btVector3_getY = $this => {
    return bl_btVector3_internal_native_getY$js_body$_13($this.$native_address);
},
bl_btVector3_getZ = $this => {
    return bl_btVector3_internal_native_getZ$js_body$_15($this.$native_address);
},
bl_btVector3__clinit_ = () => {
    bl_btVector3_NULL = bl_btVector3_native_new();
    bl_btVector3_T_01 = bl_btVector3_native_new();
    bl_btVector3_T_02 = bl_btVector3_native_new();
    bl_btVector3_T_03 = bl_btVector3_native_new();
},
bl_btVector3_internal_native_create$js_body$_1 = () => {
    var jsObj = new bullet.btVector3();
    return bullet.getPointer(jsObj);
},
bl_btVector3_internal_native_create_float_float_float$js_body$_3 = (var$1, var$2, var$3) => {
    var jsObj = new bullet.btVector3(var$1, var$2, var$3);
    return bullet.getPointer(jsObj);
},
bl_btVector3_internal_native_getX$js_body$_11 = var$1 => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btVector3);
    var returnedJSObj = jsObj.getX();
    return returnedJSObj;
},
bl_btVector3_internal_native_getY$js_body$_13 = var$1 => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btVector3);
    var returnedJSObj = jsObj.getY();
    return returnedJSObj;
},
bl_btVector3_internal_native_getZ$js_body$_15 = var$1 => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btVector3);
    var returnedJSObj = jsObj.getZ();
    return returnedJSObj;
},
cbggg_MipMapGenerator = $rt_classWithoutFields(),
cbggg_MipMapGenerator_useHWMipMap = 0,
cbggg_MipMapGenerator_$callClinit = () => {
    cbggg_MipMapGenerator_$callClinit = $rt_eraseClinit(cbggg_MipMapGenerator);
    cbggg_MipMapGenerator__clinit_();
},
cbggg_MipMapGenerator_generateMipMap = (var$1, var$2, var$3, $textureHeight) => {
    let var$5;
    cbggg_MipMapGenerator_$callClinit();
    if (!cbggg_MipMapGenerator_useHWMipMap) {
        cbggg_MipMapGenerator_generateMipMapCPU(var$1, var$2, var$3, $textureHeight);
        return;
    }
    a: {
        var$5 = cbg_Gdx_app.$getType1();
        cbg_Application$ApplicationType_$callClinit();
        if (var$5 !== cbg_Application$ApplicationType_Android && cbg_Gdx_app.$getType1() !== cbg_Application$ApplicationType_WebGL) {
            var$5 = cbg_Gdx_app;
            if (var$5.$getType1() !== cbg_Application$ApplicationType_iOS) {
                cbggg_MipMapGenerator_generateMipMapDesktop(var$1, var$2, var$3, $textureHeight);
                break a;
            }
        }
        cbggg_MipMapGenerator_generateMipMapGLES20(var$1, var$2);
    }
},
cbggg_MipMapGenerator_generateMipMapGLES20 = ($target, $pixmap) => {
    let var$3, var$4, var$5, var$6, var$7, var$8, var$9;
    cbggg_MipMapGenerator_$callClinit();
    var$3 = cbg_Gdx_gl;
    var$4 = $pixmap.$getGLInternalFormat();
    var$5 = $pixmap.$getWidth0();
    var$6 = $pixmap.$getHeight0();
    var$7 = $pixmap.$getGLFormat();
    var$8 = $pixmap.$getGLType();
    var$9 = $pixmap.$getPixels();
    var$3.$glTexImage2D($target, 0, var$4, var$5, var$6, 0, var$7, var$8, var$9);
    cbg_Gdx_gl20.$glGenerateMipmap($target);
},
cbggg_MipMapGenerator_generateMipMapDesktop = ($target, $pixmap, $textureWidth, $textureHeight) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    cbggg_MipMapGenerator_$callClinit();
    a: {
        if (!cbg_Gdx_graphics.$supportsExtension($rt_s(306))) {
            var$5 = cbg_Gdx_graphics;
            if (!var$5.$supportsExtension($rt_s(307))) {
                var$5 = cbg_Gdx_gl20;
                if (!(jl_Class_getName(jl_Object_getClass(var$5))).$equals($rt_s(308)) && cbg_Gdx_gl30 === null) {
                    cbggg_MipMapGenerator_generateMipMapCPU($target, $pixmap, $textureWidth, $textureHeight);
                    break a;
                }
            }
        }
        var$5 = cbg_Gdx_gl;
        var$6 = $pixmap.$getGLInternalFormat();
        var$7 = $pixmap.$getWidth0();
        var$8 = $pixmap.$getHeight0();
        var$9 = $pixmap.$getGLFormat();
        var$10 = $pixmap.$getGLType();
        var$11 = $pixmap.$getPixels();
        var$5.$glTexImage2D($target, 0, var$6, var$7, var$8, 0, var$9, var$10, var$11);
        cbg_Gdx_gl20.$glGenerateMipmap($target);
    }
},
cbggg_MipMapGenerator_generateMipMapCPU = ($target, $pixmap, $textureWidth, $textureHeight) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11, $width, $height, $level, $tmp_0, var$16;
    cbggg_MipMapGenerator_$callClinit();
    var$5 = cbg_Gdx_gl;
    var$6 = $pixmap.$getGLInternalFormat();
    var$7 = $pixmap.$getWidth0();
    var$8 = $pixmap.$getHeight0();
    var$9 = $pixmap.$getGLFormat();
    var$10 = $pixmap.$getGLType();
    var$11 = $pixmap.$getPixels();
    var$5.$glTexImage2D($target, 0, var$6, var$7, var$8, 0, var$9, var$10, var$11);
    if (cbg_Gdx_gl20 === null && $textureWidth != $textureHeight)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(309)));
    $width = $pixmap.$getWidth0() / 2 | 0;
    $height = $pixmap.$getHeight0() / 2 | 0;
    $level = 1;
    while ($width > 0 && $height > 0) {
        $tmp_0 = cbgg_Pixmap__init_($width, $height, $pixmap.$getFormat());
        cbgg_Pixmap$Blending_$callClinit();
        $tmp_0.$setBlending(cbgg_Pixmap$Blending_None);
        $tmp_0.$drawPixmap0($pixmap, 0, 0, $pixmap.$getWidth0(), $pixmap.$getHeight0(), 0, 0, $width, $height);
        if ($level > 1)
            $pixmap.$dispose();
        var$5 = cbg_Gdx_gl;
        var$9 = $tmp_0.$getGLInternalFormat();
        var$10 = $tmp_0.$getWidth0();
        var$16 = $tmp_0.$getHeight0();
        var$6 = $tmp_0.$getGLFormat();
        var$7 = $tmp_0.$getGLType();
        var$11 = $tmp_0.$getPixels();
        var$5.$glTexImage2D($target, $level, var$9, var$10, var$16, 0, var$6, var$7, var$11);
        $width = $tmp_0.$getWidth0() / 2 | 0;
        $height = $tmp_0.$getHeight0() / 2 | 0;
        $level = $level + 1 | 0;
        $pixmap = $tmp_0;
    }
},
cbggg_MipMapGenerator__clinit_ = () => {
    cbggg_MipMapGenerator_useHWMipMap = 1;
};
function jnc_UnsupportedCharsetException() {
    jl_IllegalArgumentException.call(this);
    this.$charsetName0 = null;
}
let jnc_UnsupportedCharsetException__init_ = ($this, $charsetName) => {
    jl_IllegalArgumentException__init_2($this);
    $this.$charsetName0 = $charsetName;
},
jnc_UnsupportedCharsetException__init_0 = var_0 => {
    let var_1 = new jnc_UnsupportedCharsetException();
    jnc_UnsupportedCharsetException__init_(var_1, var_0);
    return var_1;
};
function cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0() {
    jl_Object.call(this);
    this.$_021 = null;
}
let cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_021 = var$1;
},
cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0__init_0 = var_0 => {
    let var_1 = new cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0();
    cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0__init_(var_1, var_0);
    return var_1;
},
cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0_handleEvent = var$0 => {
    cgxgbtft_LocalDBStorage_lambda$removeFile$4(var$0.$_021);
},
cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0_handleEvent$exported$0 = var$1 => {
    var$1.$handleEvent();
};
function jur_AbstractCharClass$LazyJavaISOControl$1() {
    jur_AbstractCharClass.call(this);
    this.$this$039 = null;
}
let jur_AbstractCharClass$LazyJavaISOControl$1__init_ = ($this, $this$0) => {
    $this.$this$039 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaISOControl$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaISOControl$1();
    jur_AbstractCharClass$LazyJavaISOControl$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaISOControl$1_contains = ($this, $ch) => {
    return jl_Character_isISOControl($ch);
},
cbgm_Interpolation$BounceIn = $rt_classWithoutFields(cbgm_Interpolation$BounceOut),
cbgm_Interpolation$BounceIn__init_ = ($this, $bounces) => {
    cbgm_Interpolation$BounceOut__init_($this, $bounces);
},
cbgm_Interpolation$BounceIn__init_0 = var_0 => {
    let var_1 = new cbgm_Interpolation$BounceIn();
    cbgm_Interpolation$BounceIn__init_(var_1, var_0);
    return var_1;
};
function jur_AtomicFSet() {
    jur_FSet.call(this);
    this.$index8 = 0;
}
let jur_AtomicFSet__init_ = ($this, $groupIndex) => {
    jur_FSet__init_($this, $groupIndex);
},
jur_AtomicFSet__init_0 = var_0 => {
    let var_1 = new jur_AtomicFSet();
    jur_AtomicFSet__init_(var_1, var_0);
    return var_1;
},
jur_AtomicFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $gr;
    $gr = $this.$getGroupIndex();
    $matchResult.$setConsumed($gr, $stringIndex - $matchResult.$getConsumed($gr) | 0);
    $this.$index8 = $stringIndex;
    return $stringIndex;
},
jur_AtomicFSet_getIndex = $this => {
    return $this.$index8;
},
jur_AtomicFSet_getName = $this => {
    return $rt_s(310);
},
jur_AtomicFSet_hasConsumed = ($this, $mr) => {
    return 0;
},
cbggg_IndexData = $rt_classWithoutFields(0);
function jur_LowSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$low = 0;
}
let jur_LowSurrogateCharSet__init_ = ($this, $low) => {
    jur_JointSet__init_($this);
    $this.$low = $low;
},
jur_LowSurrogateCharSet__init_0 = var_0 => {
    let var_1 = new jur_LowSurrogateCharSet();
    jur_LowSurrogateCharSet__init_(var_1, var_0);
    return var_1;
},
jur_LowSurrogateCharSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_LowSurrogateCharSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4, $low, $high;
    var$4 = $stringIndex + 1 | 0;
    if (var$4 > $matchResult.$getRightBound()) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $low = $testString.$charAt($stringIndex);
    if ($stringIndex > $matchResult.$getLeftBound()) {
        $high = $testString.$charAt($stringIndex - 1 | 0);
        if (jl_Character_isHighSurrogate($high))
            return (-1);
    }
    if ($this.$low != $low)
        return (-1);
    return $this.$next1.$matches(var$4, $testString, $matchResult);
},
jur_LowSurrogateCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $startStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $startStr = $matchResult.$getLeftBound();
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$7 = $testStr.$indexOf0($this.$low, $strIndex);
        if (var$7 < 0)
            return (-1);
        if (var$7 > $startStr && jl_Character_isHighSurrogate($testStr.$charAt(var$7 - 1 | 0))) {
            $strIndex = var$7 + 1 | 0;
            continue;
        }
        var$8 = $this.$next1;
        $strIndex = var$7 + 1 | 0;
        if (var$8.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$7;
},
jur_LowSurrogateCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $startStr, $testStr, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $startStr = $matchResult.$getLeftBound();
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf1($this.$low, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if (var$7 > $startStr && jl_Character_isHighSurrogate($testStr.$charAt(var$7 - 1 | 0))) {
                $lastIndex = var$7 + (-2) | 0;
                continue;
            }
            if ($this.$next1.$matches(var$7 + 1 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
},
jur_LowSurrogateCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$low;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(var$2, var$1);
    return jl_StringBuilder_toString(var$2);
},
jur_LowSurrogateCharSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_HighSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_LowSurrogateCharSet))
        return 1;
    return $set.$low != $this.$low ? 0 : 1;
},
jur_LowSurrogateCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
},
jn_JSBufferHelper = $rt_classWithoutFields(),
jn_JSBufferHelper_getArrayBufferView = $buffer => {
    let $provider, $result;
    if (!$rt_isInstance($buffer, jn_ArrayBufferViewProvider))
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(311)));
    $provider = $buffer;
    $result = $provider.$getArrayBufferView();
    return $result;
},
jn_JSBufferHelper_toInt8Array = $view => {
    return new Int8Array($view.buffer, $view.byteOffset, $view.byteLength);
},
jn_JSBufferHelper_toUint8Array = $view => {
    return new Uint8Array($view.buffer, $view.byteOffset, $view.byteLength);
},
jn_JSBufferHelper_toInt16Array = $view => {
    return new Int16Array($view.buffer, $view.byteOffset, $view.byteLength / 2 | 0);
},
jn_JSBufferHelper_toUint16Array = $view => {
    return new Uint16Array($view.buffer, $view.byteOffset, $view.byteLength / 2 | 0);
},
jn_JSBufferHelper_toInt32Array = $view => {
    return new Int32Array($view.buffer, $view.byteOffset, $view.byteLength / 4 | 0);
},
jn_JSBufferHelper_toFloat32Array = $view => {
    return new Float32Array($view.buffer, $view.byteOffset, $view.byteLength / 4 | 0);
},
jl_Error = $rt_classWithoutFields(jl_Throwable),
jl_Error__init_ = ($this, $message, $cause) => {
    jl_Throwable__init_($this, $message, $cause);
},
jl_Error__init_1 = (var_0, var_1) => {
    let var_2 = new jl_Error();
    jl_Error__init_(var_2, var_0, var_1);
    return var_2;
},
jl_Error__init_0 = ($this, $cause) => {
    jl_Throwable__init_1($this, $cause);
},
jl_Error__init_2 = var_0 => {
    let var_1 = new jl_Error();
    jl_Error__init_0(var_1, var_0);
    return var_1;
},
jl_AssertionError = $rt_classWithoutFields(jl_Error),
jl_AssertionError__init_ = ($this, $message, $cause) => {
    jl_Error__init_($this, $message, $cause);
},
jl_AssertionError__init_0 = (var_0, var_1) => {
    let var_2 = new jl_AssertionError();
    jl_AssertionError__init_(var_2, var_0, var_1);
    return var_2;
},
cbgm_MathUtils$Sin = $rt_classWithoutFields(),
cbgm_MathUtils$Sin_table = null,
cbgm_MathUtils$Sin_$callClinit = () => {
    cbgm_MathUtils$Sin_$callClinit = $rt_eraseClinit(cbgm_MathUtils$Sin);
    cbgm_MathUtils$Sin__clinit_();
},
cbgm_MathUtils$Sin__clinit_ = () => {
    let $i;
    cbgm_MathUtils$Sin_table = $rt_createFloatArray(16384);
    $i = 0;
    while ($i < 16384) {
        cbgm_MathUtils$Sin_table.data[$i] = jl_Math_sin(($i + 0.5) / 16384.0 * 6.2831854820251465);
        $i = $i + 1 | 0;
    }
    cbgm_MathUtils$Sin_table.data[0] = 0.0;
    cbgm_MathUtils$Sin_table.data[4096] = 1.0;
    cbgm_MathUtils$Sin_table.data[8192] = 0.0;
    cbgm_MathUtils$Sin_table.data[12288] = (-1.0);
},
cbggg_Batch = $rt_classWithoutFields(0),
otcit_FloatSynthesizer = $rt_classWithoutFields(),
otcit_FloatSynthesizer_mantissa10Table = null,
otcit_FloatSynthesizer_exp10Table = null,
otcit_FloatSynthesizer_$callClinit = () => {
    otcit_FloatSynthesizer_$callClinit = $rt_eraseClinit(otcit_FloatSynthesizer);
    otcit_FloatSynthesizer__clinit_();
},
otcit_FloatSynthesizer_synthesizeFloat = ($mantissa, $exp, $negative) => {
    let $indexInTable, $binMantissa, $binExp, $binMantissaShift, var$8, var$9, $iee754;
    otcit_FloatSynthesizer_$callClinit();
    $indexInTable = 50 + $exp | 0;
    if ($mantissa && $indexInTable >= 0) {
        if ($indexInTable >= otcit_FloatSynthesizer_mantissa10Table.data.length)
            return !$negative ? Infinity : (-Infinity);
        $binMantissa = otcit_FloatAnalyzer_mulAndShiftRight($mantissa, otcit_FloatSynthesizer_mantissa10Table.data[$indexInTable], 0);
        $binExp = otcit_FloatSynthesizer_exp10Table.data[$indexInTable] - 1 | 0;
        $binMantissaShift = (32 - jl_Integer_numberOfLeadingZeros($binMantissa) | 0) - 30 | 0;
        var$8 = $binMantissaShift >= 0 ? $binMantissa >>> $binMantissaShift | 0 : $binMantissa << ( -$binMantissaShift | 0);
        var$9 = $binExp + $binMantissaShift | 0;
        if (var$9 >= 255)
            return !$negative ? Infinity : (-Infinity);
        var$8 = var$8 + 32 | 0;
        if (var$8 & (-1073741824)) {
            var$8 = var$8 >>> 1 | 0;
            var$9 = var$9 + 1 | 0;
        }
        if (var$9 <= 0) {
            var$8 = var$8 >> jl_Math_min(( -var$9 | 0) + 1 | 0, 32);
            var$9 = 0;
        }
        var$8 = (var$8 >>> 6 | 0) & 8388607;
        $iee754 = var$8 | var$9 << 23;
        if ($negative)
            $iee754 = $iee754 ^ (-2147483648);
        return $rt_intBitsToFloat($iee754);
    }
    return $rt_intBitsToFloat(!$negative ? 0 : (-2147483648));
},
otcit_FloatSynthesizer__clinit_ = () => {
    otcit_FloatSynthesizer_mantissa10Table = $rt_createIntArrayFromData([(-1598972629), (-924973963), (-82475629), (-1662160004), (-1003958181), (-181205903), (-1723866425), (-1081091207), (-277622185), (-1784126602), (-1156416428), (-371778711), (-1842974431), (-1229976214), (-463728444), (-1900443013), (-1301811943), (-553523104), (-1956564676), (-1371964021), (-641213203), (-2011370988), (-1440471911), (-726848064), (-2064892776), (-1507374146), (-810475859), (-2117160148), (-1572708361), (-892143627), (-41437709),
    (-1636511304), (-971897307), (-141129809), (-1698818867), (-1049781759), (-238485375), (-1759666096), (-1125840795), (-333559170), (-1819087217), (-1200117198), (-426404673), (-1877115657), (-1272652747), (-517074110), (-1933784055), (-1343488244), (-605618481), (-1989124287), (-1412663534), (-692087594), (-2043167482), (-1480217529), (-776530087), (-2095944040), (-1546188227), (-858993459), (-2147483648), (-1610612736), (-939524096), (-100663296), (-1673527296), (-1018167296), (-198967296), (-1734967296),
    (-1094967296), (-294967296), (-1794967296), (-1169967296), (-388717296), (-1853561046), (-1243209483), (-480270030), (-1910781505), (-1314735057), (-569676998), (-1966660859), (-1384584250), (-656988489), (-2021230542), (-1452796353), (-742253617), (-2074521247), (-1519409734), (-825520344), (-2126562951), (-1584461865), (-906835507), (-59802560), (-1647989336), (-986244846), (-159064233), (-1710027882), (-1063793028), (-255999461), (-1770612399), (-1139523675), (-350662770), (-1829776967)]);
    otcit_FloatSynthesizer_exp10Table = $rt_createIntArrayFromData([(-35), (-32), (-29), (-25), (-22), (-19), (-15), (-12), (-9), (-5), (-2), 1, 5, 8, 11, 15, 18, 21, 25, 28, 31, 35, 38, 41, 45, 48, 51, 55, 58, 61, 64, 68, 71, 74, 78, 81, 84, 88, 91, 94, 98, 101, 104, 108, 111, 114, 118, 121, 124, 128, 131, 134, 138, 141, 144, 148, 151, 154, 158, 161, 164, 167, 171, 174, 177, 181, 184, 187, 191, 194, 197, 201, 204, 207, 211, 214, 217, 221, 224, 227, 231, 234, 237, 241, 244, 247, 251, 254, 257, 260, 264, 267,
    270, 274, 277, 280, 284, 287, 290, 294]);
};
function cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2() {
    let a = this; jl_Object.call(a);
    a.$_07 = null;
    a.$_14 = null;
}
let cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_07 = var$1;
    var$0.$_14 = var$2;
},
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2__init_0 = (var_0, var_1) => {
    let var_2 = new cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2();
    cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2__init_(var_2, var_0, var_1);
    return var_2;
},
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2_handleEvent = var$0 => {
    cgxgbtft_LocalDBStorage_lambda$setupIndexedDB$2(var$0.$_07, var$0.$_14);
},
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2_handleEvent$exported$0 = var$1 => {
    var$1.$handleEvent();
};
function cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1() {
    let a = this; jl_Object.call(a);
    a.$_010 = null;
    a.$_15 = null;
    a.$_23 = null;
}
let cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_010 = var$1;
    var$0.$_15 = var$2;
    var$0.$_23 = var$3;
},
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1();
    cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1_handleEvent = var$0 => {
    cgxgbtft_LocalDBStorage_lambda$setupIndexedDB$1(var$0.$_010, var$0.$_15, var$0.$_23);
},
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1_handleEvent$exported$0 = var$1 => {
    var$1.$handleEvent();
},
otjde_EventListener = $rt_classWithoutFields(0);
function cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0() {
    jl_Object.call(this);
    this.$_02 = null;
}
let cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_02 = var$1;
},
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0__init_0 = var_0 => {
    let var_1 = new cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0();
    cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0__init_(var_1, var_0);
    return var_1;
},
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0_handleEvent0 = (var$0, var$1) => {
    cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0_handleEvent(var$0, var$1);
},
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0_handleEvent = (var$0, var$1) => {
    cgxgbtft_LocalDBStorage_lambda$setupIndexedDB$0(var$0.$_02, var$1);
},
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
};
function jur_CompositeQuantifierSet() {
    jur_LeafQuantifierSet.call(this);
    this.$quantifier0 = null;
}
let jur_CompositeQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type) => {
    jur_LeafQuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$quantifier0 = $quant;
},
jur_CompositeQuantifierSet__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CompositeQuantifierSet();
    jur_CompositeQuantifierSet__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $min, $max, $i, $shift;
    $min = $this.$quantifier0.$min1();
    $max = $this.$quantifier0.$max1();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while ($i < $max) {
                    if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound())
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break a;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            while (true) {
                if ($i < $min)
                    return (-1);
                $shift = $this.$next1.$matches($stringIndex, $testString, $matchResult);
                if ($shift >= 0)
                    break;
                $stringIndex = $stringIndex - $this.$leaf.$charCount() | 0;
                $i = $i + (-1) | 0;
            }
            return $shift;
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_CompositeQuantifierSet_getName = $this => {
    return $this.$quantifier0.$toString();
},
cbgss_Actor$fire$lambda$_3_0 = $rt_classWithoutFields(),
cbgss_Actor$fire$lambda$_3_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgss_Actor$fire$lambda$_3_0__init_0 = () => {
    let var_0 = new cbgss_Actor$fire$lambda$_3_0();
    cbgss_Actor$fire$lambda$_3_0__init_(var_0);
    return var_0;
},
cbgss_Actor$fire$lambda$_3_0_get0 = var$0 => {
    return cbgss_Actor$fire$lambda$_3_0_get(var$0);
},
cbgss_Actor$fire$lambda$_3_0_get = var$0 => {
    return cbgu_Array__init_();
};
function jur_SupplRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$chars0 = null;
    a.$alt0 = 0;
}
let jur_SupplRangeSet__init_ = ($this, $cc) => {
    jur_JointSet__init_($this);
    $this.$chars0 = $cc.$getInstance();
    $this.$alt0 = $cc.$alt;
},
jur_SupplRangeSet__init_0 = var_0 => {
    let var_1 = new jur_SupplRangeSet();
    jur_SupplRangeSet__init_(var_1, var_0);
    return var_1;
},
jur_SupplRangeSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, $high, $offset, var$8, $low;
    $strLength = $matchResult.$getRightBound();
    if ($stringIndex < $strLength) {
        var$5 = $stringIndex + 1 | 0;
        $high = $testString.$charAt($stringIndex);
        if ($this.$contains($high)) {
            $offset = $this.$next1.$matches(var$5, $testString, $matchResult);
            if ($offset > 0)
                return $offset;
        }
        if (var$5 < $strLength) {
            var$8 = var$5 + 1 | 0;
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low) && $this.$contains(jl_Character_toCodePoint($high, $low)))
                return $this.$next1.$matches(var$8, $testString, $matchResult);
        }
    }
    return (-1);
},
jur_SupplRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt0 ? $rt_s(48) : $rt_s(49);
    var$2 = $this.$chars0.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(50)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
},
jur_SupplRangeSet_contains = ($this, $ch) => {
    return $this.$chars0.$contains($ch);
},
jur_SupplRangeSet_first = ($this, $set) => {
    if ($set instanceof jur_SupplCharSet)
        return jur_AbstractCharClass_intersects0($this.$chars0, $set.$getCodePoint());
    if ($set instanceof jur_CharSet)
        return jur_AbstractCharClass_intersects0($this.$chars0, $set.$getChar0());
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects($this.$chars0, $set.$chars0);
    if (!($set instanceof jur_RangeSet))
        return 1;
    return jur_AbstractCharClass_intersects($this.$chars0, $set.$getChars0());
},
jur_SupplRangeSet_getChars = $this => {
    return $this.$chars0;
},
jur_SupplRangeSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_SupplRangeSet_hasConsumed = ($this, $mr) => {
    return 1;
};
function jl_String() {
    jl_Object.call(this);
    this.$hashCode1 = 0;
}
let jl_String_EMPTY_CHARS = null,
jl_String_EMPTY = null,
jl_String_CASE_INSENSITIVE_ORDER = null,
jl_String_$callClinit = () => {
    jl_String_$callClinit = $rt_eraseClinit(jl_String);
    jl_String__clinit_();
},
jl_String__init_3 = $this => {
    jl_String_$callClinit();
    jl_Object__init_($this);
    $this.$nativeString = "";
},
jl_String__init_5 = () => {
    let var_0 = new jl_String();
    jl_String__init_3(var_0);
    return var_0;
},
jl_String__init_1 = ($this, $characters) => {
    let var$2;
    jl_String_$callClinit();
    var$2 = $characters.data;
    jl_Object__init_($this);
    $this.$nativeString = $rt_charArrayToString($characters.data, 0, var$2.length);
},
jl_String__init_0 = var_0 => {
    let var_1 = new jl_String();
    jl_String__init_1(var_1, var_0);
    return var_1;
},
jl_String__init_4 = (var$0, var$1) => {
    var$0.$nativeString = var$1;
},
jl_String__init_6 = var_0 => {
    let var_1 = new jl_String();
    jl_String__init_4(var_1, var_0);
    return var_1;
},
jl_String__init_2 = (var$0, var$1, $offset, $count) => {
    let var$4;
    jl_String_$callClinit();
    var$4 = var$1.data;
    jl_Object__init_(var$0);
    ju_Objects_checkFromIndexSize($offset, $count, var$4.length);
    var$0.$nativeString = $rt_charArrayToString(var$1.data, $offset, $count);
},
jl_String__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jl_String();
    jl_String__init_2(var_3, var_0, var_1, var_2);
    return var_3;
},
jl_String_fromArray = $characters => {
    let $s;
    jl_String_$callClinit();
    $s = jl_String__init_5();
    $s.$nativeString = $rt_fullArrayToString($characters.data);
    return $s;
},
jl_String__init_7 = ($this, $bytes) => {
    let var$2, var$3;
    jl_String_$callClinit();
    var$2 = $bytes.data;
    jl_Object__init_($this);
    var$3 = var$2.length;
    jnci_UTF8Charset_$callClinit();
    jl_String_initWithBytes($this, $bytes, 0, var$3, jnci_UTF8Charset_INSTANCE);
},
jl_String__init_8 = var_0 => {
    let var_1 = new jl_String();
    jl_String__init_7(var_1, var_0);
    return var_1;
},
jl_String_initWithBytes = ($this, $bytes, $offset, $length, $charset) => {
    let $buffer, $characters;
    $buffer = jnc_Charset_decode($charset, jn_ByteBuffer_wrap0($bytes, $offset, $length));
    if (jn_CharBuffer_hasArray($buffer) && !jn_Buffer_position($buffer) && jn_Buffer_limit($buffer) == jn_Buffer_capacity($buffer))
        $characters = jn_CharBuffer_array($buffer);
    else {
        $characters = $rt_createCharArray(jn_Buffer_remaining($buffer));
        $buffer.$get13($characters);
    }
    $this.$nativeString = $rt_fullArrayToString($characters.data);
},
jl_String_charAt = ($this, $index) => {
    if ($index >= 0 && $index < $this.$nativeString.length)
        return $this.$nativeString.charCodeAt($index);
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
},
jl_String_length = $this => {
    return $this.$nativeString.length;
},
jl_String_isEmpty = $this => {
    return $this.$nativeString.length ? 0 : 1;
},
jl_String_getChars = ($this, $srcBegin, $srcEnd, $dst, $dstBegin) => {
    let var$5, var$6;
    if ($srcBegin >= 0 && $srcBegin <= $srcEnd && $srcEnd <= $this.$length() && $dstBegin >= 0) {
        var$5 = $dst.data;
        var$6 = $srcEnd - $srcBegin | 0;
        if (($dstBegin + var$6 | 0) <= var$5.length) {
            $rt_stringToCharArray($this.$nativeString, $srcBegin, $dst.data, $dstBegin, var$6);
            return;
        }
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jl_String_compareTo = ($this, $anotherString) => {
    let $l, $i, $a, $b, var$6;
    if ($this === $anotherString)
        return 0;
    $l = jl_Math_min($this.$length(), $anotherString.$length());
    $i = 0;
    while (true) {
        if ($i >= $l)
            return $this.$length() - $anotherString.$length() | 0;
        $a = $this.$charAt($i);
        $b = $anotherString.$charAt($i);
        var$6 = $a - $b | 0;
        if (var$6)
            break;
        $i = $i + 1 | 0;
    }
    return var$6;
},
jl_String_startsWith0 = ($this, $prefix, $toffset) => {
    let $i, var$4, var$5;
    if (($toffset + $prefix.$length() | 0) > $this.$length())
        return 0;
    $i = 0;
    while ($i < $prefix.$length()) {
        var$4 = $prefix.$charAt($i);
        var$5 = $toffset + 1 | 0;
        if (var$4 != $this.$charAt($toffset))
            return 0;
        $i = $i + 1 | 0;
        $toffset = var$5;
    }
    return 1;
},
jl_String_startsWith = ($this, $prefix) => {
    if ($this === $prefix)
        return 1;
    return $this.$startsWith0($prefix, 0);
},
jl_String_endsWith = ($this, $suffix) => {
    let $j, $i, var$4, var$5;
    if ($this === $suffix)
        return 1;
    if ($suffix.$length() > $this.$length())
        return 0;
    $j = 0;
    $i = $this.$length() - $suffix.$length() | 0;
    while ($i < $this.$length()) {
        var$4 = $this.$charAt($i);
        var$5 = $j + 1 | 0;
        if (var$4 != $suffix.$charAt($j))
            return 0;
        $i = $i + 1 | 0;
        $j = var$5;
    }
    return 1;
},
jl_String_indexOf1 = ($this, $ch, $fromIndex) => {
    let $i, $bmpChar, $hi, $lo;
    $i = jl_Math_max(0, $fromIndex);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i >= $this.$nativeString.length)
                return (-1);
            if ($this.$nativeString.charCodeAt($i) == $bmpChar)
                break;
            $i = $i + 1 | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i >= ($this.$nativeString.length - 1 | 0))
            return (-1);
        if ($this.$nativeString.charCodeAt($i) == $hi && $this.$nativeString.charCodeAt(($i + 1 | 0)) == $lo)
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
jl_String_indexOf0 = ($this, $ch) => {
    return $this.$indexOf0($ch, 0);
},
jl_String_lastIndexOf2 = ($this, $ch, $fromIndex) => {
    let $i, $bmpChar, $hi, $lo, var$7;
    $i = jl_Math_min($fromIndex, $this.$length() - 1 | 0);
    if ($ch < 65536) {
        $bmpChar = $ch & 65535;
        while (true) {
            if ($i < 0)
                return (-1);
            if ($this.$nativeString.charCodeAt($i) == $bmpChar)
                break;
            $i = $i + (-1) | 0;
        }
        return $i;
    }
    $hi = jl_Character_highSurrogate($ch);
    $lo = jl_Character_lowSurrogate($ch);
    while (true) {
        if ($i < 1)
            return (-1);
        if ($this.$nativeString.charCodeAt($i) == $lo) {
            var$7 = $i - 1 | 0;
            if ($this.$nativeString.charCodeAt(var$7) == $hi)
                break;
        }
        $i = $i + (-1) | 0;
    }
    return var$7;
},
jl_String_lastIndexOf1 = ($this, $ch) => {
    return $this.$lastIndexOf1($ch, $this.$length() - 1 | 0);
},
jl_String_indexOf = ($this, $str, $fromIndex) => {
    let $i, $toIndex, $j;
    $i = jl_Math_max(0, $fromIndex);
    $toIndex = $this.$length() - $str.$length() | 0;
    a: while (true) {
        if ($i > $toIndex)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$length())
                break a;
            if ($this.$charAt($i + $j | 0) != $str.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    return $i;
},
jl_String_indexOf2 = ($this, $str) => {
    return $this.$indexOf3($str, 0);
},
jl_String_lastIndexOf = ($this, $str, $fromIndex) => {
    let $i, $j;
    $i = jl_Math_min($fromIndex, $this.$length() - $str.$length() | 0);
    a: while (true) {
        if ($i < 0)
            return (-1);
        $j = 0;
        while (true) {
            if ($j >= $str.$length())
                break a;
            if ($this.$charAt($i + $j | 0) != $str.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + (-1) | 0;
    }
    return $i;
},
jl_String_lastIndexOf0 = ($this, $str) => {
    return $this.$lastIndexOf2($str, $this.$length());
},
jl_String_substring = ($this, $beginIndex, $endIndex) => {
    let $length, var$4;
    $length = $this.$nativeString.length;
    var$4 = $rt_compare($beginIndex, $endIndex);
    if (!var$4)
        return jl_String_EMPTY;
    if (!$beginIndex && $endIndex == $length)
        return $this;
    if ($beginIndex >= 0 && var$4 <= 0 && $endIndex <= $length)
        return jl_String__init_6($this.$nativeString.substring($beginIndex, $endIndex));
    $rt_throw(jl_StringIndexOutOfBoundsException__init_());
},
jl_String_substring0 = ($this, $beginIndex) => {
    return $this.$substring($beginIndex, $this.$length());
},
jl_String_subSequence = ($this, $beginIndex, $endIndex) => {
    return $this.$substring($beginIndex, $endIndex);
},
jl_String_replace0 = ($this, $oldChar, $newChar) => {
    let $buffer, $i, var$5;
    if ($oldChar == $newChar)
        return $this;
    $buffer = $rt_createCharArray($this.$length());
    $i = 0;
    while ($i < $this.$length()) {
        var$5 = $this.$charAt($i) != $oldChar ? $this.$charAt($i) : $newChar;
        $buffer.data[$i] = var$5;
        $i = $i + 1 | 0;
    }
    return jl_String_fromArray($buffer);
},
jl_String_contains = ($this, $s) => {
    let $sz, $i, $j;
    $sz = $this.$length() - $s.$length() | 0;
    $i = 0;
    while ($i <= $sz) {
        $j = 0;
        while (true) {
            if ($j >= $s.$length())
                return 1;
            if ($this.$charAt($i + $j | 0) != $s.$charAt($j))
                break;
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    return 0;
},
jl_String_replace = ($this, $target, $replacement) => {
    let $sb, $i, $sz, $j;
    if ($target === $replacement)
        return $this;
    if ($target.$isEmpty()) {
        $sb = jl_StringBuilder__init_();
        $i = 0;
        while ($i < $this.$length()) {
            $sb.$append($replacement);
            $sb.$append0($this.$charAt($i));
            $i = $i + 1 | 0;
        }
        $sb.$append($replacement);
        return $sb.$toString();
    }
    if ($target.$length() == 1 && $replacement.$length() == 1)
        return $this.$replace0($target.$charAt(0), $replacement.$charAt(0));
    $sb = jl_StringBuilder__init_();
    $sz = $this.$length() - $target.$length() | 0;
    $i = 0;
    while ($i <= $sz) {
        $j = 0;
        a: {
            while (true) {
                if ($j >= $target.$length()) {
                    $sb.$append($replacement);
                    $i = $i + ($target.$length() - 1 | 0) | 0;
                    break a;
                }
                if ($this.$charAt($i + $j | 0) != $target.$charAt($j))
                    break;
                $j = $j + 1 | 0;
            }
            $sb.$append0($this.$charAt($i));
        }
        $i = $i + 1 | 0;
    }
    $sb.$append($this.$substring0($i));
    return $sb.$toString();
},
jl_String_trim = $this => {
    let $lower, $upper;
    $lower = 0;
    $upper = $this.$length() - 1 | 0;
    a: {
        while ($lower <= $upper) {
            if ($this.$charAt($lower) > 32)
                break a;
            $lower = $lower + 1 | 0;
        }
    }
    while ($lower <= $upper && $this.$charAt($upper) <= 32) {
        $upper = $upper + (-1) | 0;
    }
    return $this.$substring($lower, $upper + 1 | 0);
},
jl_String_toString = $this => {
    return $this;
},
jl_String_toCharArray = $this => {
    let $array, $i, var$3;
    $array = $rt_createCharArray($this.$nativeString.length);
    $i = 0;
    while (true) {
        var$3 = $array.data;
        if ($i >= var$3.length)
            break;
        var$3[$i] = $this.$charAt($i);
        $i = $i + 1 | 0;
    }
    return $array;
},
jl_String_valueOf = $obj => {
    jl_String_$callClinit();
    return $obj === null ? $rt_s(61) : $obj.$toString();
},
jl_String_valueOf1 = $c => {
    let var$2, var$3;
    jl_String_$callClinit();
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_1(var$2, var$3);
    return var$2;
},
jl_String_valueOf0 = $i => {
    jl_String_$callClinit();
    return ((jl_StringBuilder__init_()).$append2($i)).$toString();
},
jl_String_equals = ($this, $other) => {
    let $str;
    if ($this === $other)
        return 1;
    if (!($other instanceof jl_String))
        return 0;
    $str = $other;
    return $this.$nativeString !== $str.$nativeString ? 0 : 1;
},
jl_String_equalsIgnoreCase = ($this, $other) => {
    let $i;
    if ($this === $other)
        return 1;
    if ($other === null)
        return 0;
    if ($this.$length() != $other.$length())
        return 0;
    $i = 0;
    while ($i < $this.$length()) {
        if (jl_Character_toLowerCase($this.$charAt($i)) != jl_Character_toLowerCase($other.$charAt($i)))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
},
jl_String_getBytes = $this => {
    jnci_UTF8Charset_$callClinit();
    return $this.$getBytes(jnci_UTF8Charset_INSTANCE);
},
jl_String_getBytes0 = ($this, $charset) => {
    let $buffer, $result;
    $buffer = jnc_Charset_encode($charset, jn_CharBuffer_wrap($rt_fastStringToCharArray($this.$nativeString)));
    if (jn_ByteBuffer_hasArray($buffer) && !jn_Buffer_position($buffer) && jn_Buffer_limit($buffer) == jn_Buffer_capacity($buffer))
        return jn_ByteBuffer_array($buffer);
    $result = $rt_createByteArray(jn_Buffer_remaining($buffer));
    $buffer.$get14($result);
    return $result;
},
jl_String_hashCode = $this => {
    let $i;
    a: {
        if (!$this.$hashCode1) {
            $i = 0;
            while (true) {
                if ($i >= $this.$nativeString.length)
                    break a;
                $this.$hashCode1 = (31 * $this.$hashCode1 | 0) + $this.$nativeString.charCodeAt($i) | 0;
                $i = $i + 1 | 0;
            }
        }
    }
    return $this.$hashCode1;
},
jl_String_split0 = ($this, $regex) => {
    return jur_Pattern_split0(jur_Pattern_compile($regex), $this.$toString());
};
let jl_String_split = ($this, $regex, $limit) => {
    return jur_Pattern_split(jur_Pattern_compile($regex), $this.$toString(), $limit);
},
jl_String_replaceAll = ($this, $regex, $replacement) => {
    return jur_Matcher_replaceAll(jur_Pattern_matcher(jur_Pattern_compile($regex), $this.$toString()), $replacement);
},
jl_String_replaceFirst = ($this, $regex, $replacement) => {
    return jur_Matcher_replaceFirst(jur_Pattern_matcher(jur_Pattern_compile($regex), $this.$toString()), $replacement);
},
jl_String__clinit_ = () => {
    jl_String_EMPTY_CHARS = $rt_createCharArray(0);
    jl_String_EMPTY = jl_String__init_5();
    jl_String_CASE_INSENSITIVE_ORDER = jl_String$_clinit_$lambda$_115_0__init_0();
};
function cbgss_Event() {
    let a = this; jl_Object.call(a);
    a.$stage1 = null;
    a.$targetActor = null;
    a.$listenerActor0 = null;
    a.$capture = 0;
    a.$bubbles = 0;
    a.$handled = 0;
    a.$stopped = 0;
    a.$cancelled = 0;
}
let cbgss_Event__init_ = $this => {
    jl_Object__init_($this);
    $this.$bubbles = 1;
},
cbgss_Event__init_0 = () => {
    let var_0 = new cbgss_Event();
    cbgss_Event__init_(var_0);
    return var_0;
},
cbgss_Event_handle = $this => {
    $this.$handled = 1;
},
cbgss_Event_reset = $this => {
    $this.$stage1 = null;
    $this.$targetActor = null;
    $this.$listenerActor0 = null;
    $this.$capture = 0;
    $this.$bubbles = 1;
    $this.$handled = 0;
    $this.$stopped = 0;
    $this.$cancelled = 0;
},
cbgss_Event_getTarget = $this => {
    return $this.$targetActor;
},
cbgss_Event_setTarget = ($this, $targetActor) => {
    $this.$targetActor = $targetActor;
},
cbgss_Event_setListenerActor = ($this, $listenerActor) => {
    $this.$listenerActor0 = $listenerActor;
},
cbgss_Event_getBubbles = $this => {
    return $this.$bubbles;
},
cbgss_Event_isStopped = $this => {
    return $this.$stopped;
},
cbgss_Event_isCancelled = $this => {
    return $this.$cancelled;
},
cbgss_Event_setCapture = ($this, $capture) => {
    $this.$capture = $capture;
},
cbgss_Event_setStage = ($this, $stage) => {
    $this.$stage1 = $stage;
},
cbgss_Event_getStage = $this => {
    return $this.$stage1;
},
cbgssu_ChangeListener$ChangeEvent = $rt_classWithoutFields(cbgss_Event),
cbgssu_ChangeListener$ChangeEvent__init_ = $this => {
    cbgss_Event__init_($this);
},
cbgssu_ChangeListener$ChangeEvent__init_0 = () => {
    let var_0 = new cbgssu_ChangeListener$ChangeEvent();
    cbgssu_ChangeListener$ChangeEvent__init_(var_0);
    return var_0;
},
cbgu_ArraySupplier = $rt_classWithoutFields(0),
cbgu_ArraySupplier_ANY = null,
cbgu_ArraySupplier_$callClinit = () => {
    cbgu_ArraySupplier_$callClinit = $rt_eraseClinit(cbgu_ArraySupplier);
    cbgu_ArraySupplier__clinit_();
},
cbgu_ArraySupplier_object = () => {
    cbgu_ArraySupplier_$callClinit();
    return cbgu_ArraySupplier_ANY;
},
cbgu_ArraySupplier_lambda$static$0 = $x$0 => {
    cbgu_ArraySupplier_$callClinit();
    return $rt_createArray(jl_Object, $x$0);
},
cbgu_ArraySupplier__clinit_ = () => {
    cbgu_ArraySupplier_ANY = cbgu_ArraySupplier$_clinit_$lambda$_3_0__init_0();
};
function cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0() {
    jl_Object.call(this);
    this.$_08 = null;
}
let cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_08 = var$1;
},
cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0__init_0 = var_0 => {
    let var_1 = new cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0();
    cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0__init_(var_1, var_0);
    return var_1;
},
cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0_handleEvent0 = (var$0, var$1) => {
    cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0_handleEvent(var$0, var$1);
},
cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0_handleEvent = (var$0, var$1) => {
    cgxgbta_AssetDownloadImpl_lambda$setOnProgress$4(var$0.$_08, var$1);
},
cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
},
cbgss_InputEvent$Type = $rt_classWithoutFields(jl_Enum),
cbgss_InputEvent$Type_touchDown = null,
cbgss_InputEvent$Type_touchUp = null,
cbgss_InputEvent$Type_touchDragged = null,
cbgss_InputEvent$Type_mouseMoved = null,
cbgss_InputEvent$Type_enter = null,
cbgss_InputEvent$Type_exit = null,
cbgss_InputEvent$Type_scrolled = null,
cbgss_InputEvent$Type_keyDown = null,
cbgss_InputEvent$Type_keyUp = null,
cbgss_InputEvent$Type_keyTyped = null,
cbgss_InputEvent$Type_$VALUES = null,
cbgss_InputEvent$Type_$callClinit = () => {
    cbgss_InputEvent$Type_$callClinit = $rt_eraseClinit(cbgss_InputEvent$Type);
    cbgss_InputEvent$Type__clinit_();
},
cbgss_InputEvent$Type__init_0 = ($this, var$1, var$2) => {
    cbgss_InputEvent$Type_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cbgss_InputEvent$Type__init_ = (var_0, var_1) => {
    let var_2 = new cbgss_InputEvent$Type();
    cbgss_InputEvent$Type__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgss_InputEvent$Type_$values = () => {
    let var$1, var$2;
    cbgss_InputEvent$Type_$callClinit();
    var$1 = $rt_createArray(cbgss_InputEvent$Type, 10);
    var$2 = var$1.data;
    var$2[0] = cbgss_InputEvent$Type_touchDown;
    var$2[1] = cbgss_InputEvent$Type_touchUp;
    var$2[2] = cbgss_InputEvent$Type_touchDragged;
    var$2[3] = cbgss_InputEvent$Type_mouseMoved;
    var$2[4] = cbgss_InputEvent$Type_enter;
    var$2[5] = cbgss_InputEvent$Type_exit;
    var$2[6] = cbgss_InputEvent$Type_scrolled;
    var$2[7] = cbgss_InputEvent$Type_keyDown;
    var$2[8] = cbgss_InputEvent$Type_keyUp;
    var$2[9] = cbgss_InputEvent$Type_keyTyped;
    return var$1;
},
cbgss_InputEvent$Type__clinit_ = () => {
    cbgss_InputEvent$Type_touchDown = cbgss_InputEvent$Type__init_($rt_s(312), 0);
    cbgss_InputEvent$Type_touchUp = cbgss_InputEvent$Type__init_($rt_s(313), 1);
    cbgss_InputEvent$Type_touchDragged = cbgss_InputEvent$Type__init_($rt_s(314), 2);
    cbgss_InputEvent$Type_mouseMoved = cbgss_InputEvent$Type__init_($rt_s(315), 3);
    cbgss_InputEvent$Type_enter = cbgss_InputEvent$Type__init_($rt_s(316), 4);
    cbgss_InputEvent$Type_exit = cbgss_InputEvent$Type__init_($rt_s(317), 5);
    cbgss_InputEvent$Type_scrolled = cbgss_InputEvent$Type__init_($rt_s(318), 6);
    cbgss_InputEvent$Type_keyDown = cbgss_InputEvent$Type__init_($rt_s(319), 7);
    cbgss_InputEvent$Type_keyUp = cbgss_InputEvent$Type__init_($rt_s(320), 8);
    cbgss_InputEvent$Type_keyTyped = cbgss_InputEvent$Type__init_($rt_s(321), 9);
    cbgss_InputEvent$Type_$VALUES = cbgss_InputEvent$Type_$values();
};
function jnci_BufferedEncoder() {
    let a = this; jnc_CharsetEncoder.call(a);
    a.$inArray0 = null;
    a.$outArray = null;
}
let jnci_BufferedEncoder__init_ = ($this, $cs, $averageBytesPerChar, $maxBytesPerChar) => {
    jnc_CharsetEncoder__init_($this, $cs, $averageBytesPerChar, $maxBytesPerChar);
    $this.$inArray0 = $rt_createCharArray(512);
    $this.$outArray = $rt_createByteArray(512);
},
jnci_BufferedEncoder_encodeLoop = ($this, $in, $out) => {
    let $inArray, $inPos, $inSize, $outArray, $i, var$8, var$9, $result, $outPos, $outSize, $controller;
    $inArray = $this.$inArray0;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$8 = $inArray.data;
                    var$8[$i - $inPos | 0] = var$8[$i];
                    $i = $i + 1 | 0;
                }
                var$8 = $inArray.data;
                var$9 = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + var$9 | 0, var$8.length);
                $in.$get7($inArray, var$9, $inSize - var$9 | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                } else {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                }
                break a;
            }
            var$8 = $outArray.data;
            $outPos = 0;
            $outSize = jl_Math_min(jn_Buffer_remaining($out), var$8.length);
            $controller = jnci_BufferedEncoder$Controller__init_0($in, $out);
            $result = $this.$arrayEncode($inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
            $inPos = $controller.$inPosition;
            var$9 = $controller.$outPosition0;
            if ($result === null) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                } else if (!jn_Buffer_hasRemaining($out) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                }
            }
            $out.$put2($outArray, 0, var$9);
            if ($result !== null)
                break;
        }
    }
    $in.$position0(jn_Buffer_position($in) - ($inSize - $inPos | 0) | 0);
    return $result;
},
jnci_UTF8Encoder = $rt_classWithoutFields(jnci_BufferedEncoder),
jnci_UTF8Encoder__init_ = ($this, $cs) => {
    jnci_BufferedEncoder__init_($this, $cs, 2.0, 4.0);
},
jnci_UTF8Encoder__init_0 = var_0 => {
    let var_1 = new jnci_UTF8Encoder();
    jnci_UTF8Encoder__init_(var_1, var_0);
    return var_1;
},
jnci_UTF8Encoder_arrayEncode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $ch, var$12, var$13, var$14, $low, $codePoint;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize) {
                var$9 = $inPos;
                break a;
            }
            var$10 = $inArray.data;
            var$9 = $inPos + 1 | 0;
            $ch = var$10[$inPos];
            if ($ch < 128) {
                var$10 = $outArray.data;
                var$12 = $outPos + 1 | 0;
                var$10[$outPos] = $ch << 24 >> 24;
            } else if ($ch < 2048) {
                if (($outPos + 2 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if ($controller.$hasMoreOutput(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                var$13 = $outPos + 1 | 0;
                var$10[$outPos] = (192 | $ch >> 6) << 24 >> 24;
                var$12 = var$13 + 1 | 0;
                var$10[var$13] = (128 | $ch & 63) << 24 >> 24;
            } else if (!jl_Character_isSurrogate($ch)) {
                if (($outPos + 3 | 0) > $outSize) {
                    var$9 = var$9 + (-1) | 0;
                    if ($controller.$hasMoreOutput(3))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                var$14 = $outPos + 1 | 0;
                var$10[$outPos] = (224 | $ch >> 12) << 24 >> 24;
                var$13 = var$14 + 1 | 0;
                var$10[var$14] = (128 | $ch >> 6 & 63) << 24 >> 24;
                var$12 = var$13 + 1 | 0;
                var$10[var$13] = (128 | $ch & 63) << 24 >> 24;
            } else {
                if (!jl_Character_isHighSurrogate($ch)) {
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (var$9 >= $inSize) {
                    if ($controller.$hasMoreInput())
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                    break a;
                }
                var$13 = var$9 + 1 | 0;
                $low = var$10[var$9];
                if (!jl_Character_isLowSurrogate($low)) {
                    var$9 = var$13 + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(1);
                    break a;
                }
                if (($outPos + 4 | 0) > $outSize) {
                    var$9 = var$13 + (-2) | 0;
                    if ($controller.$hasMoreOutput(4))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$10 = $outArray.data;
                $codePoint = jl_Character_toCodePoint($ch, $low);
                var$9 = $outPos + 1 | 0;
                var$10[$outPos] = (240 | $codePoint >> 18) << 24 >> 24;
                var$14 = var$9 + 1 | 0;
                var$10[var$9] = (128 | $codePoint >> 12 & 63) << 24 >> 24;
                var$9 = var$14 + 1 | 0;
                var$10[var$14] = (128 | $codePoint >> 6 & 63) << 24 >> 24;
                var$12 = var$9 + 1 | 0;
                var$10[var$9] = (128 | $codePoint & 63) << 24 >> 24;
                var$9 = var$13;
            }
            $inPos = var$9;
            $outPos = var$12;
        }
        var$9 = $inPos;
    }
    $controller.$setInPosition(var$9);
    $controller.$setOutPosition($outPos);
    return $result;
},
cgxjl_JParserLibraryLoaderListener = $rt_classWithoutFields(0);
function cgxjl_JParserLibraryLoader$loadWasm$lambda$_10_0() {
    let a = this; jl_Object.call(a);
    a.$_019 = null;
    a.$_17 = null;
    a.$_25 = 0;
    a.$_32 = null;
}
let cgxjl_JParserLibraryLoader$loadWasm$lambda$_10_0__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_019 = var$1;
    var$0.$_17 = var$2;
    var$0.$_25 = var$3;
    var$0.$_32 = var$4;
},
cgxjl_JParserLibraryLoader$loadWasm$lambda$_10_0__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cgxjl_JParserLibraryLoader$loadWasm$lambda$_10_0();
    cgxjl_JParserLibraryLoader$loadWasm$lambda$_10_0__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cgxjl_JParserLibraryLoader$loadWasm$lambda$_10_0_onLoad = (var$0, var$1, var$2) => {
    cgxjl_JParserLibraryLoader_lambda$loadWasm$1(var$0.$_019, var$0.$_17, var$0.$_25, var$0.$_32, var$1, var$2);
},
ju_Dictionary = $rt_classWithoutFields(),
ju_Dictionary__init_ = $this => {
    jl_Object__init_($this);
},
ju_Map = $rt_classWithoutFields(0);
function ju_Hashtable() {
    let a = this; ju_Dictionary.call(a);
    a.$elementCount0 = 0;
    a.$elementData0 = null;
    a.$loadFactor3 = 0.0;
    a.$threshold5 = 0;
    a.$firstSlot = 0;
    a.$lastSlot = 0;
    a.$modCount2 = 0;
}
let ju_Hashtable_EMPTY_ENUMERATION = null,
ju_Hashtable_EMPTY_ITERATOR = null,
ju_Hashtable_$callClinit = () => {
    ju_Hashtable_$callClinit = $rt_eraseClinit(ju_Hashtable);
    ju_Hashtable__clinit_();
},
ju_Hashtable_newEntry = ($key, $value, $hash) => {
    ju_Hashtable_$callClinit();
    return ju_Hashtable$Entry__init_0($key, $value);
},
ju_Hashtable__init_ = $this => {
    ju_Hashtable_$callClinit();
    ju_Hashtable__init_0($this, 11);
},
ju_Hashtable__init_1 = () => {
    let var_0 = new ju_Hashtable();
    ju_Hashtable__init_(var_0);
    return var_0;
},
ju_Hashtable__init_0 = ($this, $capacity) => {
    ju_Hashtable_$callClinit();
    ju_Dictionary__init_($this);
    $this.$lastSlot = (-1);
    if ($capacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $this.$elementCount0 = 0;
    if (!$capacity)
        $capacity = 1;
    $this.$elementData0 = ju_Hashtable_newElementArray($this, $capacity);
    $this.$firstSlot = $this.$elementData0.data.length;
    $this.$loadFactor3 = 0.75;
    ju_Hashtable_computeMaxSize($this);
},
ju_Hashtable__init_2 = var_0 => {
    let var_1 = new ju_Hashtable();
    ju_Hashtable__init_0(var_1, var_0);
    return var_1;
},
ju_Hashtable_newElementArray = ($this, $size) => {
    return $rt_createArray(ju_Hashtable$Entry, $size);
},
ju_Hashtable_computeMaxSize = $this => {
    $this.$threshold5 = $this.$elementData0.data.length * $this.$loadFactor3 | 0;
},
ju_Hashtable_put = ($this, $key, $value) => {
    let $hash, var$4, $index, $entry, $result, var$8, var$9;
    jl_Object_monitorEnterSync($this);
    try {
        if ($key !== null && $value !== null) {
            $hash = $key.$hashCode0();
            var$4 = $hash & 2147483647;
            $index = var$4 % $this.$elementData0.data.length | 0;
            $entry = $this.$elementData0.data[$index];
            while ($entry !== null && !$entry.$equalsKey($key, $hash)) {
                $entry = $entry.$next3;
            }
            if ($entry !== null) {
                $result = $entry.$value;
                $entry.$value = $value;
                return $result;
            }
            $this.$modCount2 = $this.$modCount2 + 1 | 0;
            var$8 = $this.$elementCount0 + 1 | 0;
            $this.$elementCount0 = var$8;
            if (var$8 > $this.$threshold5) {
                $this.$rehash();
                $index = var$4 % $this.$elementData0.data.length | 0;
            }
            if ($index < $this.$firstSlot)
                $this.$firstSlot = $index;
            if ($index > $this.$lastSlot)
                $this.$lastSlot = $index;
            var$9 = ju_Hashtable_newEntry($key, $value, $hash);
            var$9.$next3 = $this.$elementData0.data[$index];
            $this.$elementData0.data[$index] = var$9;
            return null;
        }
        $rt_throw(jl_NullPointerException__init_());
    } finally {
        jl_Object_monitorExitSync($this);
    }
},
ju_Hashtable_rehash = $this => {
    let $length, $newLast, $newData, $i, var$5, $entry, $index, var$8, $entry_0;
    $length = ($this.$elementData0.data.length << 1) + 1 | 0;
    if (!$length)
        $length = 1;
    $newLast = (-1);
    $newData = ju_Hashtable_newElementArray($this, $length);
    $i = $this.$lastSlot + 1 | 0;
    var$5 = $length;
    while (true) {
        $i = $i + (-1) | 0;
        if ($i < $this.$firstSlot)
            break;
        $entry = $this.$elementData0.data[$i];
        while ($entry !== null) {
            $index = ($entry.$getKeyHash() & 2147483647) % $length | 0;
            if ($index < var$5)
                var$5 = $index;
            if ($index > $newLast)
                $newLast = $index;
            var$8 = $newData.data;
            $entry_0 = $entry.$next3;
            $entry.$next3 = var$8[$index];
            var$8[$index] = $entry;
            $entry = $entry_0;
        }
    }
    $this.$firstSlot = var$5;
    $this.$lastSlot = $newLast;
    $this.$elementData0 = $newData;
    ju_Hashtable_computeMaxSize($this);
},
ju_Hashtable__clinit_ = () => {
    ju_Hashtable_EMPTY_ENUMERATION = ju_Hashtable$1__init_0();
    ju_Hashtable_EMPTY_ITERATOR = ju_Hashtable$2__init_0();
};
function ju_Properties() {
    ju_Hashtable.call(this);
    this.$defaults0 = null;
}
let ju_Properties__init_0 = $this => {
    ju_Hashtable__init_($this);
},
ju_Properties__init_1 = () => {
    let var_0 = new ju_Properties();
    ju_Properties__init_0(var_0);
    return var_0;
},
ju_Properties__init_ = ($this, $properties) => {
    ju_Hashtable__init_($this);
    $this.$defaults0 = $properties;
},
ju_Properties__init_2 = var_0 => {
    let var_1 = new ju_Properties();
    ju_Properties__init_(var_1, var_0);
    return var_1;
};
function cbgggs_DefaultShader$Setters$Bones() {
    cbgggs_BaseShader$LocalSetter.call(this);
    this.$bones1 = null;
}
let cbgggs_DefaultShader$Setters$Bones_idtMatrix = null,
cbgggs_DefaultShader$Setters$Bones_$callClinit = () => {
    cbgggs_DefaultShader$Setters$Bones_$callClinit = $rt_eraseClinit(cbgggs_DefaultShader$Setters$Bones);
    cbgggs_DefaultShader$Setters$Bones__clinit_();
},
cbgggs_DefaultShader$Setters$Bones__init_ = ($this, $numBones) => {
    cbgggs_DefaultShader$Setters$Bones_$callClinit();
    cbgggs_BaseShader$LocalSetter__init_($this);
    $this.$bones1 = $rt_createFloatArray($numBones * 16 | 0);
},
cbgggs_DefaultShader$Setters$Bones__init_0 = var_0 => {
    let var_1 = new cbgggs_DefaultShader$Setters$Bones();
    cbgggs_DefaultShader$Setters$Bones__init_(var_1, var_0);
    return var_1;
},
cbgggs_DefaultShader$Setters$Bones_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $i, $idx;
    $i = 0;
    while ($i < $this.$bones1.data.length) {
        $idx = $i / 16 | 0;
        if ($renderable.$bones !== null && $idx < $renderable.$bones.data.length && $renderable.$bones.data[$idx] !== null)
            jl_System_fastArraycopy($renderable.$bones.data[$idx].$val, 0, $this.$bones1, $i, 16);
        else {
            cbgggs_DefaultShader$Setters$Bones_$callClinit();
            jl_System_fastArraycopy(cbgggs_DefaultShader$Setters$Bones_idtMatrix.$val, 0, $this.$bones1, $i, 16);
        }
        $i = $i + 16 | 0;
    }
    $shader.$program.$setUniformMatrix4fv(cbgggs_BaseShader_loc($shader, $inputID), $this.$bones1, 0, $this.$bones1.data.length);
},
cbgggs_DefaultShader$Setters$Bones__clinit_ = () => {
    cbgggs_DefaultShader$Setters$Bones_idtMatrix = cbgm_Matrix4__init_();
};
function cbgm_Interpolation$Elastic() {
    let a = this; cbgm_Interpolation.call(a);
    a.$value10 = 0.0;
    a.$power = 0.0;
    a.$scale0 = 0.0;
    a.$bounces = 0.0;
}
let cbgm_Interpolation$Elastic__init_ = ($this, $value, $power, $bounces, $scale) => {
    cbgm_Interpolation__init_($this);
    $this.$value10 = $value;
    $this.$power = $power;
    $this.$scale0 = $scale;
    $this.$bounces = $bounces * 3.1415927410125732 * ($bounces % 2 | 0 ? (-1) : 1);
},
cbgm_Interpolation$Elastic__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgm_Interpolation$Elastic();
    cbgm_Interpolation$Elastic__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgm_Interpolation$ElasticOut = $rt_classWithoutFields(cbgm_Interpolation$Elastic),
cbgm_Interpolation$ElasticOut__init_ = ($this, $value, $power, $bounces, $scale) => {
    cbgm_Interpolation$Elastic__init_($this, $value, $power, $bounces, $scale);
},
cbgm_Interpolation$ElasticOut__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgm_Interpolation$ElasticOut();
    cbgm_Interpolation$ElasticOut__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgssu_Table$Debug = $rt_classWithoutFields(jl_Enum),
cbgssu_Table$Debug_none = null,
cbgssu_Table$Debug_all = null,
cbgssu_Table$Debug_table = null,
cbgssu_Table$Debug_cell = null,
cbgssu_Table$Debug_actor = null,
cbgssu_Table$Debug_$VALUES = null,
cbgssu_Table$Debug_$callClinit = () => {
    cbgssu_Table$Debug_$callClinit = $rt_eraseClinit(cbgssu_Table$Debug);
    cbgssu_Table$Debug__clinit_();
},
cbgssu_Table$Debug__init_0 = ($this, var$1, var$2) => {
    cbgssu_Table$Debug_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cbgssu_Table$Debug__init_ = (var_0, var_1) => {
    let var_2 = new cbgssu_Table$Debug();
    cbgssu_Table$Debug__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgssu_Table$Debug_$values = () => {
    let var$1, var$2;
    cbgssu_Table$Debug_$callClinit();
    var$1 = $rt_createArray(cbgssu_Table$Debug, 5);
    var$2 = var$1.data;
    var$2[0] = cbgssu_Table$Debug_none;
    var$2[1] = cbgssu_Table$Debug_all;
    var$2[2] = cbgssu_Table$Debug_table;
    var$2[3] = cbgssu_Table$Debug_cell;
    var$2[4] = cbgssu_Table$Debug_actor;
    return var$1;
},
cbgssu_Table$Debug__clinit_ = () => {
    cbgssu_Table$Debug_none = cbgssu_Table$Debug__init_($rt_s(322), 0);
    cbgssu_Table$Debug_all = cbgssu_Table$Debug__init_($rt_s(221), 1);
    cbgssu_Table$Debug_table = cbgssu_Table$Debug__init_($rt_s(323), 2);
    cbgssu_Table$Debug_cell = cbgssu_Table$Debug__init_($rt_s(324), 3);
    cbgssu_Table$Debug_actor = cbgssu_Table$Debug__init_($rt_s(325), 4);
    cbgssu_Table$Debug_$VALUES = cbgssu_Table$Debug_$values();
};
function cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_4_0() {
    let a = this; jl_Object.call(a);
    a.$_022 = null;
    a.$_18 = null;
    a.$_26 = null;
    a.$_33 = null;
    a.$_40 = 0;
    a.$_5 = 0;
}
let cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_4_0__init_ = (var$0, var$1, var$2, var$3, var$4, var$5, var$6) => {
    jl_Object__init_(var$0);
    var$0.$_022 = var$1;
    var$0.$_18 = var$2;
    var$0.$_26 = var$3;
    var$0.$_33 = var$4;
    var$0.$_40 = var$5;
    var$0.$_5 = var$6;
},
cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_4_0__init_0 = (var_0, var_1, var_2, var_3, var_4, var_5) => {
    let var_6 = new cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_4_0();
    cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_4_0__init_(var_6, var_0, var_1, var_2, var_3, var_4, var_5);
    return var_6;
},
cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_4_0_handleEvent = (var$0, var$1) => {
    cgxgbta_AssetDownloadImpl_lambda$loadBinaryInternally$3(var$0.$_022, var$0.$_18, var$0.$_26, var$0.$_33, var$0.$_40, var$0.$_5, var$1);
},
cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_4_0_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
},
jnci_UTF8Charset = $rt_classWithoutFields(jnc_Charset),
jnci_UTF8Charset_INSTANCE = null,
jnci_UTF8Charset_$callClinit = () => {
    jnci_UTF8Charset_$callClinit = $rt_eraseClinit(jnci_UTF8Charset);
    jnci_UTF8Charset__clinit_();
},
jnci_UTF8Charset__init_0 = $this => {
    jnci_UTF8Charset_$callClinit();
    jnc_Charset__init_($this, $rt_s(326), $rt_createArray(jl_String, 0));
},
jnci_UTF8Charset__init_ = () => {
    let var_0 = new jnci_UTF8Charset();
    jnci_UTF8Charset__init_0(var_0);
    return var_0;
},
jnci_UTF8Charset_newDecoder = $this => {
    return jnci_UTF8Decoder__init_0($this);
},
jnci_UTF8Charset_newEncoder = $this => {
    return jnci_UTF8Encoder__init_0($this);
},
jnci_UTF8Charset__clinit_ = () => {
    jnci_UTF8Charset_INSTANCE = jnci_UTF8Charset__init_();
};
function jur_MultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter = 0;
}
let jur_MultiLineEOLSet__init_ = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter = $counter;
},
jur_MultiLineEOLSet__init_0 = var_0 => {
    let var_1 = new jur_MultiLineEOLSet();
    jur_MultiLineEOLSet__init_(var_1, var_0);
    return var_1;
},
jur_MultiLineEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $strDif, $ch1, $ch2;
    $strDif = !$matchResult.$hasAnchoringBounds() ? $testString.$length() - $strIndex | 0 : $matchResult.$getRightBound() - $strIndex | 0;
    if (!$strDif) {
        $matchResult.$setConsumed($this.$consCounter, 0);
        return $this.$next1.$matches($strIndex, $testString, $matchResult);
    }
    if ($strDif < 2) {
        $ch1 = $testString.$charAt($strIndex);
        $ch2 = 97;
    } else {
        $ch1 = $testString.$charAt($strIndex);
        $ch2 = $testString.$charAt($strIndex + 1 | 0);
    }
    switch ($ch1) {
        case 10:
        case 133:
        case 8232:
        case 8233:
            $matchResult.$setConsumed($this.$consCounter, 0);
            return $this.$next1.$matches($strIndex, $testString, $matchResult);
        case 13:
            if ($ch2 != 10) {
                $matchResult.$setConsumed($this.$consCounter, 0);
                return $this.$next1.$matches($strIndex, $testString, $matchResult);
            }
            $matchResult.$setConsumed($this.$consCounter, 0);
            return $this.$next1.$matches($strIndex, $testString, $matchResult);
        default:
    }
    return (-1);
},
jur_MultiLineEOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !$matchResult.$getConsumed($this.$consCounter) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter, (-1));
    return $res;
},
jur_MultiLineEOLSet_getName = $this => {
    return $rt_s(327);
};
function ji_Reader() {
    jl_Object.call(this);
    this.$lock = null;
}
let ji_Reader__init_ = $this => {
    ji_Reader__init_0($this, jl_Object__init_0());
},
ji_Reader__init_0 = ($this, $lock) => {
    jl_Object__init_($this);
    $this.$lock = $lock;
},
ji_Reader_read = ($this, $cbuf) => {
    return $this.$read2($cbuf, 0, $cbuf.data.length);
};
function ji_BufferedReader() {
    let a = this; ji_Reader.call(a);
    a.$innerReader = null;
    a.$buffer6 = null;
    a.$index3 = 0;
    a.$count1 = 0;
    a.$eof = 0;
    a.$mark0 = 0;
}
let ji_BufferedReader__init_ = ($this, $innerReader, $size) => {
    ji_Reader__init_($this);
    $this.$mark0 = (-1);
    if ($size < 0)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $this.$innerReader = $innerReader;
    $this.$buffer6 = $rt_createCharArray(jl_Math_max(64, $size));
},
ji_BufferedReader__init_0 = (var_0, var_1) => {
    let var_2 = new ji_BufferedReader();
    ji_BufferedReader__init_(var_2, var_0, var_1);
    return var_2;
},
ji_BufferedReader_close = $this => {
    ji_BufferedReader_requireOpened($this);
    $this.$innerReader.$close();
    $this.$innerReader = null;
},
ji_BufferedReader_readLine = $this => {
    let $line, var$2, var$3, $ch;
    ji_BufferedReader_requireOpened($this);
    if ($this.$eof && $this.$index3 >= $this.$count1)
        return null;
    $line = jl_StringBuilder__init_();
    a: {
        b: {
            while (true) {
                if ($this.$index3 >= $this.$count1 && !ji_BufferedReader_fillBuffer($this, 0, $this.$count1 - $this.$index3 | 0)) {
                    if (!$line.$isEmpty())
                        break a;
                    return null;
                }
                var$2 = $this.$buffer6.data;
                var$3 = $this.$index3;
                $this.$index3 = var$3 + 1 | 0;
                $ch = var$2[var$3];
                if ($ch == 10)
                    break;
                if ($ch == 13)
                    break b;
                $line.$append0($ch);
            }
            break a;
        }
        if (!($this.$index3 >= $this.$count1 && !ji_BufferedReader_fillBuffer($this, 0, $this.$count1 - $this.$index3 | 0)) && $this.$buffer6.data[$this.$index3] == 10)
            $this.$index3 = $this.$index3 + 1 | 0;
    }
    return $line.$toString();
},
ji_BufferedReader_fillBuffer = ($this, $offset, $readLimit) => {
    let var$3, $totalRead, $charsRead;
    if ($this.$eof)
        return 0;
    var$3 = jl_Math_min($readLimit, $this.$buffer6.data.length - $this.$index3 | 0);
    $totalRead = 0;
    a: {
        while (true) {
            $charsRead = $this.$innerReader.$read2($this.$buffer6, $offset, $this.$buffer6.data.length - $offset | 0);
            if ($charsRead == (-1)) {
                $this.$eof = 1;
                break a;
            }
            $offset = $offset + $charsRead | 0;
            $totalRead = $totalRead + $charsRead | 0;
            if (!($offset < var$3 && $this.$innerReader.$ready()) && $totalRead > 0)
                break;
        }
    }
    $this.$count1 = $offset;
    $this.$index3 = 0;
    $this.$mark0 = (-1);
    return $totalRead <= 0 ? 0 : 1;
},
ji_BufferedReader_requireOpened = $this => {
    if ($this.$innerReader !== null)
        return;
    $rt_throw(ji_IOException__init_1());
};
function cbgssu_TextureRegionDrawable() {
    cbgssu_BaseDrawable.call(this);
    this.$region = null;
}
let cbgssu_TextureRegionDrawable__init_0 = ($this, $region) => {
    cbgssu_BaseDrawable__init_($this);
    $this.$setRegion($region);
},
cbgssu_TextureRegionDrawable__init_ = var_0 => {
    let var_1 = new cbgssu_TextureRegionDrawable();
    cbgssu_TextureRegionDrawable__init_0(var_1, var_0);
    return var_1;
},
cbgssu_TextureRegionDrawable_draw0 = ($this, $batch, $x, $y, $width, $height) => {
    $batch.$draw2($this.$region, $x, $y, $width, $height);
},
cbgssu_TextureRegionDrawable_draw = ($this, $batch, $x, $y, $originX, $originY, $width, $height, $scaleX, $scaleY, $rotation) => {
    $batch.$draw3($this.$region, $x, $y, $originX, $originY, $width, $height, $scaleX, $scaleY, $rotation);
},
cbgssu_TextureRegionDrawable_setRegion = ($this, $region) => {
    $this.$region = $region;
    if ($region !== null) {
        $this.$setMinWidth($region.$getRegionWidth());
        $this.$setMinHeight($region.$getRegionHeight());
    }
},
cbgss_Action = $rt_classWithoutFields();
function jl_Object$Monitor() {
    let a = this; jl_Object.call(a);
    a.$enteringThreads = null;
    a.$notifyListeners = null;
    a.$owner = null;
    a.$count = 0;
}
let jl_Object$Monitor__init_ = $this => {
    jl_Object__init_($this);
    $this.$owner = jl_Thread_currentThread();
},
jl_Object$Monitor__init_0 = () => {
    let var_0 = new jl_Object$Monitor();
    jl_Object$Monitor__init_(var_0);
    return var_0;
};
function cbggg_ShapeRenderer() {
    let a = this; jl_Object.call(a);
    a.$renderer = null;
    a.$matrixDirty = 0;
    a.$projectionMatrix0 = null;
    a.$transformMatrix = null;
    a.$combinedMatrix = null;
    a.$tmp2 = null;
    a.$color3 = null;
    a.$shapeType = null;
    a.$autoShapeType = 0;
    a.$defaultRectLineWidth = 0.0;
}
let cbggg_ShapeRenderer__init_1 = $this => {
    cbggg_ShapeRenderer__init_0($this, 5000);
},
cbggg_ShapeRenderer__init_2 = () => {
    let var_0 = new cbggg_ShapeRenderer();
    cbggg_ShapeRenderer__init_1(var_0);
    return var_0;
},
cbggg_ShapeRenderer__init_0 = ($this, $maxVertices) => {
    cbggg_ShapeRenderer__init_($this, $maxVertices, null);
},
cbggg_ShapeRenderer__init_3 = var_0 => {
    let var_1 = new cbggg_ShapeRenderer();
    cbggg_ShapeRenderer__init_0(var_1, var_0);
    return var_1;
},
cbggg_ShapeRenderer__init_ = ($this, $maxVertices, $defaultShader) => {
    jl_Object__init_($this);
    $this.$matrixDirty = 0;
    $this.$projectionMatrix0 = cbgm_Matrix4__init_();
    $this.$transformMatrix = cbgm_Matrix4__init_();
    $this.$combinedMatrix = cbgm_Matrix4__init_();
    $this.$tmp2 = cbgm_Vector2__init_();
    $this.$color3 = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
    $this.$defaultRectLineWidth = 0.75;
    if ($defaultShader !== null)
        $this.$renderer = cbggg_ImmediateModeRenderer20__init_2($maxVertices, 0, 1, 0, $defaultShader);
    else
        $this.$renderer = cbggg_ImmediateModeRenderer20__init_1($maxVertices, 0, 1, 0);
    $this.$projectionMatrix0.$setToOrtho2D(0.0, 0.0, cbg_Gdx_graphics.$getWidth0(), cbg_Gdx_graphics.$getHeight0());
    $this.$matrixDirty = 1;
},
cbggg_ShapeRenderer__init_4 = (var_0, var_1) => {
    let var_2 = new cbggg_ShapeRenderer();
    cbggg_ShapeRenderer__init_(var_2, var_0, var_1);
    return var_2;
},
cbggg_ShapeRenderer_setColor0 = ($this, $color) => {
    $this.$color3.$set11($color);
},
cbggg_ShapeRenderer_setColor = ($this, $r, $g, $b, $a) => {
    $this.$color3.$set12($r, $g, $b, $a);
},
cbggg_ShapeRenderer_setProjectionMatrix = ($this, $matrix) => {
    $this.$projectionMatrix0.$set1($matrix);
    $this.$matrixDirty = 1;
},
cbggg_ShapeRenderer_setTransformMatrix = ($this, $matrix) => {
    $this.$transformMatrix.$set1($matrix);
    $this.$matrixDirty = 1;
},
cbggg_ShapeRenderer_getTransformMatrix = $this => {
    return $this.$transformMatrix;
},
cbggg_ShapeRenderer_setAutoShapeType = ($this, $autoShapeType) => {
    $this.$autoShapeType = $autoShapeType;
},
cbggg_ShapeRenderer_begin = $this => {
    if ($this.$autoShapeType) {
        cbggg_ShapeRenderer$ShapeType_$callClinit();
        $this.$begin1(cbggg_ShapeRenderer$ShapeType_Line);
        return;
    }
    $rt_throw(jl_IllegalStateException__init_($rt_s(328)));
},
cbggg_ShapeRenderer_begin0 = ($this, $type) => {
    if ($this.$shapeType !== null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(329)));
    $this.$shapeType = $type;
    if ($this.$matrixDirty) {
        $this.$combinedMatrix.$set1($this.$projectionMatrix0);
        cbgm_Matrix4_mul($this.$combinedMatrix.$val, $this.$transformMatrix.$val);
        $this.$matrixDirty = 0;
    }
    $this.$renderer.$begin2($this.$combinedMatrix, cbggg_ShapeRenderer$ShapeType_getGlType($this.$shapeType));
},
cbggg_ShapeRenderer_set = ($this, $type) => {
    if ($this.$shapeType === $type)
        return;
    if ($this.$shapeType === null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(330)));
    if ($this.$autoShapeType) {
        $this.$end();
        $this.$begin1($type);
        return;
    }
    $rt_throw(jl_IllegalStateException__init_($rt_s(331)));
},
cbggg_ShapeRenderer_point = ($this, $x, $y, $z) => {
    let var$4, $size;
    var$4 = $this.$shapeType;
    cbggg_ShapeRenderer$ShapeType_$callClinit();
    if (var$4 === cbggg_ShapeRenderer$ShapeType_Line) {
        $size = $this.$defaultRectLineWidth * 0.5;
        cbggg_ShapeRenderer_line0($this, $x - $size, $y - $size, $z, $x + $size, $y + $size, $z);
        return;
    }
    if ($this.$shapeType !== cbggg_ShapeRenderer$ShapeType_Filled) {
        cbggg_ShapeRenderer_check($this, cbggg_ShapeRenderer$ShapeType_Point, null, 1);
        $this.$renderer.$color($this.$color3);
        $this.$renderer.$vertex($x, $y, $z);
        return;
    }
    $size = $this.$defaultRectLineWidth * 0.5;
    $this.$box($x - $size, $y - $size, $z - $size, $this.$defaultRectLineWidth, $this.$defaultRectLineWidth, $this.$defaultRectLineWidth);
},
cbggg_ShapeRenderer_line0 = ($this, $x, $y, $z, $x2, $y2, $z2) => {
    $this.$line0($x, $y, $z, $x2, $y2, $z2, $this.$color3, $this.$color3);
},
cbggg_ShapeRenderer_line = ($this, $v0, $v1) => {
    $this.$line0($v0.$x, $v0.$y, $v0.$z, $v1.$x, $v1.$y, $v1.$z, $this.$color3, $this.$color3);
},
cbggg_ShapeRenderer_line1 = ($this, $x, $y, $z, $x2, $y2, $z2, $c1, $c2) => {
    let var$9;
    var$9 = $this.$shapeType;
    cbggg_ShapeRenderer$ShapeType_$callClinit();
    if (var$9 === cbggg_ShapeRenderer$ShapeType_Filled) {
        $this.$rectLine($x, $y, $x2, $y2, $this.$defaultRectLineWidth, $c1, $c2);
        return;
    }
    cbggg_ShapeRenderer_check($this, cbggg_ShapeRenderer$ShapeType_Line, null, 2);
    $this.$renderer.$color0($c1.$r, $c1.$g, $c1.$b, $c1.$a);
    $this.$renderer.$vertex($x, $y, $z);
    $this.$renderer.$color0($c2.$r, $c2.$g, $c2.$b, $c2.$a);
    $this.$renderer.$vertex($x2, $y2, $z2);
},
cbggg_ShapeRenderer_rect = ($this, $x, $y, $width, $height) => {
    let $colorBits, var$6, var$7, var$8;
    cbggg_ShapeRenderer$ShapeType_$callClinit();
    cbggg_ShapeRenderer_check($this, cbggg_ShapeRenderer$ShapeType_Line, cbggg_ShapeRenderer$ShapeType_Filled, 8);
    $colorBits = $this.$color3.$toFloatBits();
    if ($this.$shapeType !== cbggg_ShapeRenderer$ShapeType_Line) {
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, 0.0);
        $this.$renderer.$color1($colorBits);
        var$6 = $this.$renderer;
        var$7 = $x + $width;
        var$6.$vertex(var$7, $y, 0.0);
        $this.$renderer.$color1($colorBits);
        var$6 = $this.$renderer;
        var$8 = $y + $height;
        var$6.$vertex(var$7, var$8, 0.0);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$7, var$8, 0.0);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$8, 0.0);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, 0.0);
    } else {
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, 0.0);
        $this.$renderer.$color1($colorBits);
        var$6 = $this.$renderer;
        var$7 = $x + $width;
        var$6.$vertex(var$7, $y, 0.0);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$7, $y, 0.0);
        $this.$renderer.$color1($colorBits);
        var$6 = $this.$renderer;
        var$8 = $y + $height;
        var$6.$vertex(var$7, var$8, 0.0);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$7, var$8, 0.0);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$8, 0.0);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$8, 0.0);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, 0.0);
    }
},
cbggg_ShapeRenderer_rect0 = ($this, $x, $y, $originX, $originY, $width, $height, $scaleX, $scaleY, $degrees) => {
    $this.$rect1($x, $y, $originX, $originY, $width, $height, $scaleX, $scaleY, $degrees, $this.$color3, $this.$color3, $this.$color3, $this.$color3);
},
cbggg_ShapeRenderer_rect1 = ($this, $x, $y, $originX, $originY, $width, $height, $scaleX, $scaleY, $degrees, $col1, $col2, $col3, $col4) => {
    let $cos, $sin, $fx, $fy, $fx2, $fy2, $worldOriginX, $worldOriginY, var$22, var$23, $x1, var$25, $y1, $x2, $y2, $x3, $y3, $x4, $y4;
    cbggg_ShapeRenderer$ShapeType_$callClinit();
    cbggg_ShapeRenderer_check($this, cbggg_ShapeRenderer$ShapeType_Line, cbggg_ShapeRenderer$ShapeType_Filled, 8);
    $cos = cbgm_MathUtils_cosDeg($degrees);
    $sin = cbgm_MathUtils_sinDeg($degrees);
    $fx =  -$originX;
    $fy =  -$originY;
    $fx2 = $width - $originX;
    $fy2 = $height - $originY;
    if (!($scaleX === 1.0 && $scaleY === 1.0)) {
        $fx = $fx * $scaleX;
        $fy = $fy * $scaleY;
        $fx2 = $fx2 * $scaleX;
        $fy2 = $fy2 * $scaleY;
    }
    $worldOriginX = $x + $originX;
    $worldOriginY = $y + $originY;
    var$22 = $cos * $fx;
    var$23 = $sin * $fy;
    $x1 = var$22 - var$23 + $worldOriginX;
    var$22 = $sin * $fx;
    var$25 = $cos * $fy;
    $y1 = var$22 + var$25 + $worldOriginY;
    var$22 = $cos * $fx2;
    $x2 = var$22 - var$23 + $worldOriginX;
    var$23 = $sin * $fx2;
    $y2 = var$23 + var$25 + $worldOriginY;
    $x3 = var$22 - $sin * $fy2 + $worldOriginX;
    $y3 = var$23 + $cos * $fy2 + $worldOriginY;
    $x4 = $x1 + $x3 - $x2;
    $y4 = $y3 - ($y2 - $y1);
    if ($this.$shapeType !== cbggg_ShapeRenderer$ShapeType_Line) {
        $this.$renderer.$color0($col1.$r, $col1.$g, $col1.$b, $col1.$a);
        $this.$renderer.$vertex($x1, $y1, 0.0);
        $this.$renderer.$color0($col2.$r, $col2.$g, $col2.$b, $col2.$a);
        $this.$renderer.$vertex($x2, $y2, 0.0);
        $this.$renderer.$color0($col3.$r, $col3.$g, $col3.$b, $col3.$a);
        $this.$renderer.$vertex($x3, $y3, 0.0);
        $this.$renderer.$color0($col3.$r, $col3.$g, $col3.$b, $col3.$a);
        $this.$renderer.$vertex($x3, $y3, 0.0);
        $this.$renderer.$color0($col4.$r, $col4.$g, $col4.$b, $col4.$a);
        $this.$renderer.$vertex($x4, $y4, 0.0);
        $this.$renderer.$color0($col1.$r, $col1.$g, $col1.$b, $col1.$a);
        $this.$renderer.$vertex($x1, $y1, 0.0);
    } else {
        $this.$renderer.$color0($col1.$r, $col1.$g, $col1.$b, $col1.$a);
        $this.$renderer.$vertex($x1, $y1, 0.0);
        $this.$renderer.$color0($col2.$r, $col2.$g, $col2.$b, $col2.$a);
        $this.$renderer.$vertex($x2, $y2, 0.0);
        $this.$renderer.$color0($col2.$r, $col2.$g, $col2.$b, $col2.$a);
        $this.$renderer.$vertex($x2, $y2, 0.0);
        $this.$renderer.$color0($col3.$r, $col3.$g, $col3.$b, $col3.$a);
        $this.$renderer.$vertex($x3, $y3, 0.0);
        $this.$renderer.$color0($col3.$r, $col3.$g, $col3.$b, $col3.$a);
        $this.$renderer.$vertex($x3, $y3, 0.0);
        $this.$renderer.$color0($col4.$r, $col4.$g, $col4.$b, $col4.$a);
        $this.$renderer.$vertex($x4, $y4, 0.0);
        $this.$renderer.$color0($col4.$r, $col4.$g, $col4.$b, $col4.$a);
        $this.$renderer.$vertex($x4, $y4, 0.0);
        $this.$renderer.$color0($col1.$r, $col1.$g, $col1.$b, $col1.$a);
        $this.$renderer.$vertex($x1, $y1, 0.0);
    }
},
cbggg_ShapeRenderer_rectLine = ($this, $x1, $y1, $x2, $y2, $width, $c1, $c2) => {
    let $col1Bits, $col2Bits, $t, var$11, $tx, $ty, var$14, var$15, var$16, var$17, var$18, var$19, var$20, var$21;
    cbggg_ShapeRenderer$ShapeType_$callClinit();
    cbggg_ShapeRenderer_check($this, cbggg_ShapeRenderer$ShapeType_Line, cbggg_ShapeRenderer$ShapeType_Filled, 8);
    $col1Bits = $c1.$toFloatBits();
    $col2Bits = $c2.$toFloatBits();
    $t = ($this.$tmp2.$set2($y2 - $y1, $x1 - $x2)).$nor();
    var$11 = $width * 0.5;
    $tx = $t.$x0 * var$11;
    $ty = $t.$y0 * var$11;
    if ($this.$shapeType !== cbggg_ShapeRenderer$ShapeType_Line) {
        $this.$renderer.$color1($col1Bits);
        $this.$renderer.$vertex($x1 + $tx, $y1 + $ty, 0.0);
        $this.$renderer.$color1($col1Bits);
        var$14 = $this.$renderer;
        var$11 = $x1 - $tx;
        var$15 = $y1 - $ty;
        var$14.$vertex(var$11, var$15, 0.0);
        $this.$renderer.$color1($col2Bits);
        var$14 = $this.$renderer;
        var$16 = $x2 + $tx;
        var$17 = $y2 + $ty;
        var$14.$vertex(var$16, var$17, 0.0);
        $this.$renderer.$color1($col2Bits);
        $this.$renderer.$vertex($x2 - $tx, $y2 - $ty, 0.0);
        $this.$renderer.$color1($col2Bits);
        $this.$renderer.$vertex(var$16, var$17, 0.0);
        $this.$renderer.$color1($col1Bits);
        $this.$renderer.$vertex(var$11, var$15, 0.0);
    } else {
        $this.$renderer.$color1($col1Bits);
        var$14 = $this.$renderer;
        var$15 = $x1 + $tx;
        var$16 = $y1 + $ty;
        var$14.$vertex(var$15, var$16, 0.0);
        $this.$renderer.$color1($col1Bits);
        var$14 = $this.$renderer;
        var$18 = $x1 - $tx;
        var$19 = $y1 - $ty;
        var$14.$vertex(var$18, var$19, 0.0);
        $this.$renderer.$color1($col2Bits);
        var$14 = $this.$renderer;
        var$11 = $x2 + $tx;
        var$17 = $y2 + $ty;
        var$14.$vertex(var$11, var$17, 0.0);
        $this.$renderer.$color1($col2Bits);
        var$14 = $this.$renderer;
        var$20 = $x2 - $tx;
        var$21 = $y2 - $ty;
        var$14.$vertex(var$20, var$21, 0.0);
        $this.$renderer.$color1($col2Bits);
        $this.$renderer.$vertex(var$11, var$17, 0.0);
        $this.$renderer.$color1($col1Bits);
        $this.$renderer.$vertex(var$15, var$16, 0.0);
        $this.$renderer.$color1($col2Bits);
        $this.$renderer.$vertex(var$20, var$21, 0.0);
        $this.$renderer.$color1($col1Bits);
        $this.$renderer.$vertex(var$18, var$19, 0.0);
    }
},
cbggg_ShapeRenderer_box = ($this, $x, $y, $z, $width, $height, $depth) => {
    let var$7, $colorBits, var$9, var$10, var$11, var$12;
    var$7 =  -$depth;
    $colorBits = $this.$color3.$toFloatBits();
    var$9 = $this.$shapeType;
    cbggg_ShapeRenderer$ShapeType_$callClinit();
    if (var$9 === cbggg_ShapeRenderer$ShapeType_Line) {
        cbggg_ShapeRenderer_check($this, cbggg_ShapeRenderer$ShapeType_Line, cbggg_ShapeRenderer$ShapeType_Filled, 24);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, $z);
        $this.$renderer.$color1($colorBits);
        var$10 = $this.$renderer;
        var$11 = $x + $width;
        var$10.$vertex(var$11, $y, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, $y, $z);
        $this.$renderer.$color1($colorBits);
        var$10 = $this.$renderer;
        var$7 = $z + var$7;
        var$10.$vertex(var$11, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, $z);
        $this.$renderer.$color1($colorBits);
        var$10 = $this.$renderer;
        var$12 = $y + $height;
        var$10.$vertex($x, var$12, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$12, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$12, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$12, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$12, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, $y, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$12, var$7);
    } else {
        cbggg_ShapeRenderer_check($this, cbggg_ShapeRenderer$ShapeType_Line, cbggg_ShapeRenderer$ShapeType_Filled, 36);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, $z);
        $this.$renderer.$color1($colorBits);
        var$10 = $this.$renderer;
        var$11 = $x + $width;
        var$10.$vertex(var$11, $y, $z);
        $this.$renderer.$color1($colorBits);
        var$10 = $this.$renderer;
        var$12 = $y + $height;
        var$10.$vertex(var$11, var$12, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$12, $z);
        $this.$renderer.$color1($colorBits);
        var$10 = $this.$renderer;
        var$7 = $z + var$7;
        var$10.$vertex(var$11, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$12, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$12, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$12, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$12, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, $y, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, $y, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$12, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$12, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, var$12, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, var$12, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, $y, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, var$7);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex(var$11, $y, $z);
        $this.$renderer.$color1($colorBits);
        $this.$renderer.$vertex($x, $y, $z);
    }
},
cbggg_ShapeRenderer_check = ($this, $preferred, $other, $newVertices) => {
    let $type;
    if ($this.$shapeType === null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(330)));
    if (!($this.$shapeType !== $preferred && $this.$shapeType !== $other)) {
        if ($this.$matrixDirty) {
            $type = $this.$shapeType;
            $this.$end();
            $this.$begin1($type);
        } else if (($this.$renderer.$getMaxVertices() - $this.$renderer.$getNumVertices() | 0) < $newVertices) {
            $type = $this.$shapeType;
            $this.$end();
            $this.$begin1($type);
        }
    } else {
        if (!$this.$autoShapeType) {
            if ($other === null)
                $rt_throw(jl_IllegalStateException__init_(((((jl_StringBuilder__init_()).$append1($rt_s(332))).$append($preferred)).$append1($rt_s(333))).$toString()));
            $rt_throw(jl_IllegalStateException__init_(((((((jl_StringBuilder__init_()).$append1($rt_s(332))).$append($preferred)).$append1($rt_s(334))).$append($other)).$append1($rt_s(333))).$toString()));
        }
        $this.$end();
        $this.$begin1($preferred);
    }
},
cbggg_ShapeRenderer_end = $this => {
    $this.$renderer.$end();
    $this.$shapeType = null;
},
cbggg_ShapeRenderer_flush = $this => {
    let $type;
    $type = $this.$shapeType;
    if ($type === null)
        return;
    $this.$end();
    $this.$begin1($type);
},
cbggg_ShapeRenderer_isDrawing = $this => {
    return $this.$shapeType === null ? 0 : 1;
},
cbggg_ShapeRenderer_dispose = $this => {
    $this.$renderer.$dispose();
};
function cbggg_VertexBufferObjectSubData() {
    let a = this; jl_Object.call(a);
    a.$attributes1 = null;
    a.$buffer3 = null;
    a.$byteBuffer = null;
    a.$bufferHandle2 = 0;
    a.$isDirect0 = 0;
    a.$isStatic1 = 0;
    a.$usage1 = 0;
    a.$isDirty1 = 0;
    a.$isBound1 = 0;
}
let cbggg_VertexBufferObjectSubData__init_ = ($this, $isStatic, $numVertices, $attributes) => {
    jl_Object__init_($this);
    $this.$isDirty1 = 0;
    $this.$isBound1 = 0;
    $this.$isStatic1 = $isStatic;
    $this.$attributes1 = $attributes;
    $this.$byteBuffer = cbgu_BufferUtils_newByteBuffer($rt_imul($this.$attributes1.$vertexSize, $numVertices));
    $this.$isDirect0 = 1;
    $this.$usage1 = !$isStatic ? 35048 : 35044;
    $this.$buffer3 = $this.$byteBuffer.$asFloatBuffer();
    $this.$bufferHandle2 = cbggg_VertexBufferObjectSubData_createBufferObject($this);
    $this.$buffer3.$flip();
    $this.$byteBuffer.$flip();
},
cbggg_VertexBufferObjectSubData__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_VertexBufferObjectSubData();
    cbggg_VertexBufferObjectSubData__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_VertexBufferObjectSubData_createBufferObject = $this => {
    let $result;
    $result = cbg_Gdx_gl20.$glGenBuffer();
    cbg_Gdx_gl20.$glBindBuffer(34962, $result);
    cbg_Gdx_gl20.$glBufferData(34962, jn_Buffer_capacity($this.$byteBuffer), null, $this.$usage1);
    cbg_Gdx_gl20.$glBindBuffer(34962, 0);
    return $result;
},
cbggg_VertexBufferObjectSubData_getAttributes = $this => {
    return $this.$attributes1;
},
cbggg_VertexBufferObjectSubData_getNumVertices = $this => {
    return (jn_Buffer_limit($this.$buffer3) * 4 | 0) / $this.$attributes1.$vertexSize | 0;
},
cbggg_VertexBufferObjectSubData_getNumMaxVertices = $this => {
    return jn_Buffer_capacity($this.$byteBuffer) / $this.$attributes1.$vertexSize | 0;
},
cbggg_VertexBufferObjectSubData_bufferChanged = $this => {
    if ($this.$isBound1) {
        cbg_Gdx_gl20.$glBufferSubData(34962, 0, jn_Buffer_limit($this.$byteBuffer), $this.$byteBuffer);
        $this.$isDirty1 = 0;
    }
},
cbggg_VertexBufferObjectSubData_setVertices = ($this, $vertices, $offset, $count) => {
    $this.$isDirty1 = 1;
    if ($this.$isDirect0) {
        cbgu_BufferUtils_copy($vertices, $this.$byteBuffer, $count, $offset);
        $this.$buffer3.$position(0);
        $this.$buffer3.$limit($count);
    } else {
        $this.$buffer3.$clear0();
        $this.$buffer3.$put3($vertices, $offset, $count);
        $this.$buffer3.$flip();
        $this.$byteBuffer.$position(0);
        $this.$byteBuffer.$limit(jn_Buffer_limit($this.$buffer3) << 2);
    }
    cbggg_VertexBufferObjectSubData_bufferChanged($this);
},
cbggg_VertexBufferObjectSubData_bind = ($this, $shader, $locations) => {
    let $gl, $numAttributes, $i, var$6, $attribute, $location;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle2);
    if ($this.$isDirty1) {
        $this.$byteBuffer.$limit(jn_Buffer_limit($this.$buffer3) * 4 | 0);
        $gl.$glBufferData(34962, jn_Buffer_limit($this.$byteBuffer), $this.$byteBuffer, $this.$usage1);
        $this.$isDirty1 = 0;
    }
    a: {
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes1);
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$6 = $locations.data;
                $attribute = cbgg_VertexAttributes_get($this.$attributes1, $i);
                $location = var$6[$i];
                if ($location >= 0) {
                    $shader.$enableVertexAttribute($location);
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type3, $attribute.$normalized, $this.$attributes1.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = cbgg_VertexAttributes_get($this.$attributes1, $i);
            $location = $shader.$getAttributeLocation($attribute.$alias);
            if ($location >= 0) {
                $shader.$enableVertexAttribute($location);
                $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type3, $attribute.$normalized, $this.$attributes1.$vertexSize, $attribute.$offset);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound1 = 1;
},
cbggg_VertexBufferObjectSubData_unbind = ($this, $shader, $locations) => {
    let $gl, $numAttributes, $i, $location;
    a: {
        $gl = cbg_Gdx_gl20;
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes1);
        if ($locations === null) {
            $i = 0;
            while ($i < $numAttributes) {
                $shader.$disableVertexAttribute((cbgg_VertexAttributes_get($this.$attributes1, $i)).$alias);
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0)
                    $shader.$disableVertexAttribute0($location);
                $i = $i + 1 | 0;
            }
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound1 = 0;
},
cbggg_VertexBufferObjectSubData_dispose = $this => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, 0);
    $gl.$glDeleteBuffer($this.$bufferHandle2);
    $this.$bufferHandle2 = 0;
},
otji_JSWrapper$Helper$FinalizationRegistryConsumer = $rt_classWithoutFields(0),
cbgssu_ScissorStack = $rt_classWithoutFields(),
cbgssu_ScissorStack_scissors = null,
cbgssu_ScissorStack_tmp = null,
cbgssu_ScissorStack_viewport = null,
cbgssu_ScissorStack_$callClinit = () => {
    cbgssu_ScissorStack_$callClinit = $rt_eraseClinit(cbgssu_ScissorStack);
    cbgssu_ScissorStack__clinit_();
},
cbgssu_ScissorStack_pushScissors = $scissor => {
    let $parent, $minX, $maxX, var$5, $minY, $maxY, var$8;
    cbgssu_ScissorStack_$callClinit();
    a: {
        cbgssu_ScissorStack_fix($scissor);
        if (!cbgssu_ScissorStack_scissors.$size0) {
            if ($scissor.$width1 >= 1.0 && $scissor.$height1 >= 1.0) {
                cbg_Gdx_gl.$glEnable(3089);
                break a;
            }
            return 0;
        }
        $parent = cbgssu_ScissorStack_scissors.$get(cbgssu_ScissorStack_scissors.$size0 - 1 | 0);
        $minX = jl_Math_max0($parent.$x2, $scissor.$x2);
        $maxX = jl_Math_min0($parent.$x2 + $parent.$width1, $scissor.$x2 + $scissor.$width1);
        var$5 = $maxX - $minX;
        if (var$5 < 1.0)
            return 0;
        $minY = jl_Math_max0($parent.$y2, $scissor.$y2);
        $maxY = jl_Math_min0($parent.$y2 + $parent.$height1, $scissor.$y2 + $scissor.$height1);
        var$8 = $maxY - $minY;
        if (var$8 < 1.0)
            return 0;
        $scissor.$x2 = $minX;
        $scissor.$y2 = $minY;
        $scissor.$width1 = var$5;
        $scissor.$height1 = jl_Math_max0(1.0, var$8);
    }
    cbgssu_ScissorStack_scissors.$add1($scissor);
    cbggg_HdpiUtils_glScissor($scissor.$x2 | 0, $scissor.$y2 | 0, $scissor.$width1 | 0, $scissor.$height1 | 0);
    return 1;
},
cbgssu_ScissorStack_popScissors = () => {
    let $old, $scissor;
    cbgssu_ScissorStack_$callClinit();
    $old = cbgssu_ScissorStack_scissors.$pop0();
    if (!cbgssu_ScissorStack_scissors.$size0)
        cbg_Gdx_gl.$glDisable(3089);
    else {
        $scissor = cbgssu_ScissorStack_scissors.$peek();
        cbggg_HdpiUtils_glScissor($scissor.$x2 | 0, $scissor.$y2 | 0, $scissor.$width1 | 0, $scissor.$height1 | 0);
    }
    return $old;
},
cbgssu_ScissorStack_fix = $rect => {
    cbgssu_ScissorStack_$callClinit();
    $rect.$x2 = jl_Math_round($rect.$x2);
    $rect.$y2 = jl_Math_round($rect.$y2);
    $rect.$width1 = jl_Math_round($rect.$width1);
    $rect.$height1 = jl_Math_round($rect.$height1);
    if ($rect.$width1 < 0.0) {
        $rect.$width1 =  -$rect.$width1;
        $rect.$x2 = $rect.$x2 - $rect.$width1;
    }
    if ($rect.$height1 < 0.0) {
        $rect.$height1 =  -$rect.$height1;
        $rect.$y2 = $rect.$y2 - $rect.$height1;
    }
},
cbgssu_ScissorStack_calculateScissors = ($camera, $viewportX, $viewportY, $viewportWidth, $viewportHeight, $batchTransform, $area, $scissor) => {
    cbgssu_ScissorStack_$callClinit();
    cbgssu_ScissorStack_tmp.$set8($area.$x2, $area.$y2, 0.0);
    cbgssu_ScissorStack_tmp.$mul0($batchTransform);
    $camera.$project(cbgssu_ScissorStack_tmp, $viewportX, $viewportY, $viewportWidth, $viewportHeight);
    $scissor.$x2 = cbgssu_ScissorStack_tmp.$x;
    $scissor.$y2 = cbgssu_ScissorStack_tmp.$y;
    cbgssu_ScissorStack_tmp.$set8($area.$x2 + $area.$width1, $area.$y2 + $area.$height1, 0.0);
    cbgssu_ScissorStack_tmp.$mul0($batchTransform);
    $camera.$project(cbgssu_ScissorStack_tmp, $viewportX, $viewportY, $viewportWidth, $viewportHeight);
    $scissor.$width1 = cbgssu_ScissorStack_tmp.$x - $scissor.$x2;
    $scissor.$height1 = cbgssu_ScissorStack_tmp.$y - $scissor.$y2;
},
cbgssu_ScissorStack__clinit_ = () => {
    cbgssu_ScissorStack_scissors = cbgu_Array__init_();
    cbgssu_ScissorStack_tmp = cbgm_Vector3__init_();
    cbgssu_ScissorStack_viewport = cbgm_Rectangle__init_();
};
function cbgggm_MeshPart() {
    let a = this; jl_Object.call(a);
    a.$id2 = null;
    a.$primitiveType0 = 0;
    a.$offset0 = 0;
    a.$size9 = 0;
    a.$mesh = null;
    a.$center = null;
    a.$halfExtents = null;
    a.$radius = 0.0;
}
let cbgggm_MeshPart_bounds = null,
cbgggm_MeshPart_$callClinit = () => {
    cbgggm_MeshPart_$callClinit = $rt_eraseClinit(cbgggm_MeshPart);
    cbgggm_MeshPart__clinit_();
},
cbgggm_MeshPart__init_0 = $this => {
    cbgggm_MeshPart_$callClinit();
    jl_Object__init_($this);
    $this.$center = cbgm_Vector3__init_();
    $this.$halfExtents = cbgm_Vector3__init_();
    $this.$radius = (-1.0);
},
cbgggm_MeshPart__init_1 = () => {
    let var_0 = new cbgggm_MeshPart();
    cbgggm_MeshPart__init_0(var_0);
    return var_0;
},
cbgggm_MeshPart__init_ = ($this, $copyFrom) => {
    cbgggm_MeshPart_$callClinit();
    jl_Object__init_($this);
    $this.$center = cbgm_Vector3__init_();
    $this.$halfExtents = cbgm_Vector3__init_();
    $this.$radius = (-1.0);
    $this.$set16($copyFrom);
},
cbgggm_MeshPart__init_2 = var_0 => {
    let var_1 = new cbgggm_MeshPart();
    cbgggm_MeshPart__init_(var_1, var_0);
    return var_1;
},
cbgggm_MeshPart_set0 = ($this, $other) => {
    $this.$id2 = $other.$id2;
    $this.$mesh = $other.$mesh;
    $this.$offset0 = $other.$offset0;
    $this.$size9 = $other.$size9;
    $this.$primitiveType0 = $other.$primitiveType0;
    $this.$center.$set7($other.$center);
    $this.$halfExtents.$set7($other.$halfExtents);
    $this.$radius = $other.$radius;
    return $this;
},
cbgggm_MeshPart_set = ($this, $id, $mesh, $offset, $size, $type) => {
    $this.$id2 = $id;
    $this.$mesh = $mesh;
    $this.$offset0 = $offset;
    $this.$size9 = $size;
    $this.$primitiveType0 = $type;
    $this.$center.$set8(0.0, 0.0, 0.0);
    $this.$halfExtents.$set8(0.0, 0.0, 0.0);
    $this.$radius = (-1.0);
    return $this;
},
cbgggm_MeshPart_equals0 = ($this, $other) => {
    let var$2;
    a: {
        b: {
            if ($other !== $this) {
                if ($other === null)
                    break b;
                if ($other.$mesh !== $this.$mesh)
                    break b;
                if ($other.$primitiveType0 != $this.$primitiveType0)
                    break b;
                if ($other.$offset0 != $this.$offset0)
                    break b;
                if ($other.$size9 != $this.$size9)
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
},
cbgggm_MeshPart_equals = ($this, $arg0) => {
    if ($arg0 === null)
        return 0;
    if ($arg0 === $this)
        return 1;
    if (!($arg0 instanceof cbgggm_MeshPart))
        return 0;
    return $this.$equals2($arg0);
},
cbgggm_MeshPart_render = ($this, $shader, $autoBind) => {
    $this.$mesh.$render($shader, $this.$primitiveType0, $this.$offset0, $this.$size9, $autoBind);
},
cbgggm_MeshPart__clinit_ = () => {
    cbgggm_MeshPart_bounds = cbgmc_BoundingBox__init_0();
},
cgxgbtu_KeyCodes = $rt_classWithoutFields(),
cgxgbtu_KeyCodes_keyForCode = $keyCode => {
    a: {
        switch ($keyCode) {
            case 8:
                break;
            case 9:
                return 61;
            case 10:
            case 11:
            case 12:
            case 14:
            case 15:
            case 21:
            case 22:
            case 23:
            case 24:
            case 25:
            case 26:
            case 28:
            case 29:
            case 30:
            case 31:
            case 41:
            case 42:
            case 43:
            case 44:
            case 47:
            case 58:
            case 59:
            case 60:
            case 61:
            case 62:
            case 63:
            case 64:
            case 93:
            case 94:
            case 95:
            case 108:
            case 124:
            case 125:
            case 126:
            case 127:
            case 128:
            case 129:
            case 130:
            case 131:
            case 132:
            case 133:
            case 134:
            case 135:
            case 136:
            case 137:
            case 138:
            case 139:
            case 140:
            case 141:
            case 142:
            case 143:
            case 146:
            case 147:
            case 148:
            case 149:
            case 150:
            case 151:
            case 152:
            case 153:
            case 154:
            case 155:
            case 156:
            case 157:
            case 158:
            case 159:
            case 160:
            case 161:
            case 162:
            case 163:
            case 164:
            case 165:
            case 166:
            case 167:
            case 168:
            case 169:
            case 170:
            case 171:
            case 172:
            case 173:
            case 174:
            case 175:
            case 176:
            case 177:
            case 178:
            case 179:
            case 180:
            case 181:
            case 182:
            case 183:
            case 184:
            case 185:
            case 193:
            case 194:
            case 195:
            case 196:
            case 197:
            case 198:
            case 199:
            case 200:
            case 201:
            case 202:
            case 203:
            case 204:
            case 205:
            case 206:
            case 207:
            case 208:
            case 209:
            case 210:
            case 211:
            case 212:
            case 213:
            case 214:
            case 215:
            case 216:
            case 217:
            case 218:
                break a;
            case 13:
                return 66;
            case 16:
                return 59;
            case 17:
                return 129;
            case 18:
                return 57;
            case 19:
                return 0;
            case 20:
                return 0;
            case 27:
                return 111;
            case 32:
                return 62;
            case 33:
                return 92;
            case 34:
                return 93;
            case 35:
                return 123;
            case 36:
                return 3;
            case 37:
                return 21;
            case 38:
                return 19;
            case 39:
                return 22;
            case 40:
                return 20;
            case 45:
                return 124;
            case 46:
                return 112;
            case 48:
                return 7;
            case 49:
                return 8;
            case 50:
                return 9;
            case 51:
                return 10;
            case 52:
                return 11;
            case 53:
                return 12;
            case 54:
                return 13;
            case 55:
                return 14;
            case 56:
                return 15;
            case 57:
                return 16;
            case 65:
                return 29;
            case 66:
                return 30;
            case 67:
                return 31;
            case 68:
                return 32;
            case 69:
                return 33;
            case 70:
                return 34;
            case 71:
                return 35;
            case 72:
                return 36;
            case 73:
                return 37;
            case 74:
                return 38;
            case 75:
                return 39;
            case 76:
                return 40;
            case 77:
                return 41;
            case 78:
                return 42;
            case 79:
                return 43;
            case 80:
                return 44;
            case 81:
                return 45;
            case 82:
                return 46;
            case 83:
                return 47;
            case 84:
                return 48;
            case 85:
                return 49;
            case 86:
                return 50;
            case 87:
                return 51;
            case 88:
                return 52;
            case 89:
                return 53;
            case 90:
                return 54;
            case 91:
                return 0;
            case 92:
                return 0;
            case 96:
                return 144;
            case 97:
                return 145;
            case 98:
                return 146;
            case 99:
                return 147;
            case 100:
                return 148;
            case 101:
                return 149;
            case 102:
                return 150;
            case 103:
                return 151;
            case 104:
                return 152;
            case 105:
                return 153;
            case 106:
                return 0;
            case 107:
                return 81;
            case 109:
                return 69;
            case 110:
                return 56;
            case 111:
                return 0;
            case 112:
                return 131;
            case 113:
                return 132;
            case 114:
                return 133;
            case 115:
                return 134;
            case 116:
                return 135;
            case 117:
                return 136;
            case 118:
                return 137;
            case 119:
                return 138;
            case 120:
                return 139;
            case 121:
                return 140;
            case 122:
                return 141;
            case 123:
                return 142;
            case 144:
                return 78;
            case 145:
                return 0;
            case 186:
                return 74;
            case 187:
                return 70;
            case 188:
                return 55;
            case 189:
                return 69;
            case 190:
                return 56;
            case 191:
                return 76;
            case 192:
                return 0;
            case 219:
                return 71;
            case 220:
                return 73;
            case 221:
                return 72;
            case 222:
                return 75;
            default:
                break a;
        }
        return 67;
    }
    return 0;
},
cgxgbtu_KeyCodes_getButton = $button => {
    if (!$button)
        return 0;
    if ($button == 2)
        return 1;
    if ($button != 1)
        return 0;
    return 2;
},
bbc_btCollisionShape = $rt_classWithoutFields(bi_IDLBase),
bbc_btCollisionShape_NULL = null,
bbc_btCollisionShape_T_01 = null,
bbc_btCollisionShape_T_02 = null,
bbc_btCollisionShape_T_03 = null,
bbc_btCollisionShape_$callClinit = () => {
    bbc_btCollisionShape_$callClinit = $rt_eraseClinit(bbc_btCollisionShape);
    bbc_btCollisionShape__clinit_();
},
bbc_btCollisionShape__init_ = ($this, $b, $c) => {
    bbc_btCollisionShape_$callClinit();
    bi_IDLBase__init_($this);
},
bbc_btCollisionShape__init_0 = (var_0, var_1) => {
    let var_2 = new bbc_btCollisionShape();
    bbc_btCollisionShape__init_(var_2, var_0, var_1);
    return var_2;
},
bbc_btCollisionShape_native_new = () => {
    bbc_btCollisionShape_$callClinit();
    return bbc_btCollisionShape__init_0(0, 0);
},
bbc_btCollisionShape_calculateLocalInertia = ($this, $mass, $inertia) => {
    let var$3, var$4;
    var$3 = $this.$native_address;
    var$4 = $inertia.$native_address;
    bbc_btCollisionShape_internal_native_calculateLocalInertia$js_body$_7(var$3, $mass, var$4);
},
bbc_btCollisionShape__clinit_ = () => {
    bbc_btCollisionShape_NULL = bbc_btCollisionShape_native_new();
    bbc_btCollisionShape_T_01 = bbc_btCollisionShape_native_new();
    bbc_btCollisionShape_T_02 = bbc_btCollisionShape_native_new();
    bbc_btCollisionShape_T_03 = bbc_btCollisionShape_native_new();
},
bbc_btCollisionShape_internal_native_calculateLocalInertia$js_body$_7 = (var$1, var$2, var$3) => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btCollisionShape);
    jsObj.calculateLocalInertia(var$2, var$3);
},
cbgm_Vector = $rt_classWithoutFields(0);
function cbgu_Pool() {
    let a = this; jl_Object.call(a);
    a.$max6 = 0;
    a.$peak = 0;
    a.$freeObjects = null;
}
let cbgu_Pool__init_0 = $this => {
    cbgu_Pool__init_($this, 16, 2147483647);
},
cbgu_Pool__init_ = ($this, $initialCapacity, $max) => {
    jl_Object__init_($this);
    $this.$freeObjects = cbgu_Array__init_6(0, $initialCapacity);
    $this.$max6 = $max;
},
cbgu_Pool_obtain = $this => {
    return !$this.$freeObjects.$size0 ? $this.$newObject() : $this.$freeObjects.$pop0();
},
cbgu_Pool_free = ($this, $object) => {
    if ($object === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(43)));
    if ($this.$freeObjects.$size0 >= $this.$max6)
        $this.$discard($object);
    else {
        $this.$freeObjects.$add1($object);
        $this.$peak = jl_Math_max($this.$peak, $this.$freeObjects.$size0);
        $this.$reset1($object);
    }
},
cbgu_Pool_reset = ($this, $object) => {
    if ($rt_isInstance($object, cbgu_Pool$Poolable))
        $object.$reset2();
},
cbgu_Pool_discard = ($this, $object) => {
    $this.$reset1($object);
},
cbgu_Pool_freeAll = ($this, $objects) => {
    let $freeObjects, $max, $i, $n, $object;
    if ($objects === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(44)));
    $freeObjects = $this.$freeObjects;
    $max = $this.$max6;
    $i = 0;
    $n = $objects.$size0;
    while ($i < $n) {
        $object = $objects.$get($i);
        if ($object !== null) {
            if ($freeObjects.$size0 >= $max)
                $this.$discard($object);
            else {
                $freeObjects.$add1($object);
                $this.$reset1($object);
            }
        }
        $i = $i + 1 | 0;
    }
    $this.$peak = jl_Math_max($this.$peak, $freeObjects.$size0);
};
function cbgu_DefaultPool() {
    cbgu_Pool.call(this);
    this.$poolTypeSupplier = null;
}
let cbgu_DefaultPool__init_ = ($this, $supplier, $initialCapacity, $max) => {
    cbgu_Pool__init_($this, $initialCapacity, $max);
    $this.$poolTypeSupplier = $supplier;
},
cbgu_DefaultPool__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cbgu_DefaultPool();
    cbgu_DefaultPool__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgu_DefaultPool_newObject = $this => {
    return $this.$poolTypeSupplier.$get3();
},
ju_Collection = $rt_classWithoutFields(0),
ju_SequencedCollection = $rt_classWithoutFields(0),
ju_List = $rt_classWithoutFields(0),
cbgggu_MeshPartBuilder = $rt_classWithoutFields(0);
function bl_btMatrix3x3() {
    bi_IDLBase.call(this);
    this.$btVector3_TEMP_GEN_00 = null;
}
let bl_btMatrix3x3_NULL = null,
bl_btMatrix3x3_T_01 = null,
bl_btMatrix3x3_T_02 = null,
bl_btMatrix3x3_T_03 = null,
bl_btMatrix3x3_$callClinit = () => {
    bl_btMatrix3x3_$callClinit = $rt_eraseClinit(bl_btMatrix3x3);
    bl_btMatrix3x3__clinit_();
},
bl_btMatrix3x3__init_ = ($this, $b, $c) => {
    bl_btMatrix3x3_$callClinit();
    bi_IDLBase__init_($this);
},
bl_btMatrix3x3__init_0 = (var_0, var_1) => {
    let var_2 = new bl_btMatrix3x3();
    bl_btMatrix3x3__init_(var_2, var_0, var_1);
    return var_2;
},
bl_btMatrix3x3_native_new = () => {
    bl_btMatrix3x3_$callClinit();
    return bl_btMatrix3x3__init_0(0, 0);
},
bl_btMatrix3x3_getRow = ($this, $i) => {
    let $pointer;
    $pointer = bl_btMatrix3x3_internal_native_getRow$js_body$_11($this.$native_address, $i);
    if (!$pointer) {
        bl_btVector3_$callClinit();
        return bl_btVector3_NULL;
    }
    if ($this.$btVector3_TEMP_GEN_00 === null)
        $this.$btVector3_TEMP_GEN_00 = bl_btVector3_native_new();
    bi_IDLBase_internal_reset($this.$btVector3_TEMP_GEN_00, $pointer, 0);
    return $this.$btVector3_TEMP_GEN_00;
},
bl_btMatrix3x3__clinit_ = () => {
    bl_btMatrix3x3_NULL = bl_btMatrix3x3_native_new();
    bl_btMatrix3x3_T_01 = bl_btMatrix3x3_native_new();
    bl_btMatrix3x3_T_02 = bl_btMatrix3x3_native_new();
    bl_btMatrix3x3_T_03 = bl_btMatrix3x3_native_new();
},
bl_btMatrix3x3_internal_native_getRow$js_body$_11 = (var$1, var$2) => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btMatrix3x3);
    var returnedJSObj = jsObj.getRow(var$2);
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return bullet.getPointer(returnedJSObj);
},
otjde_EventTarget = $rt_classWithoutFields(0),
otjde_EventTarget_onEvent$static = (var$1, var$2, $listener) => {
    var$1.addEventListener($rt_ustr(var$2), otji_JS_function($listener, "handleEvent"));
    return otjde_Registration__init_0(var$1, var$2, $listener, null);
},
cgxgbt_TeaTool = $rt_classWithoutFields(),
cgxgbt_TeaTool_isProd = 0,
cgxgbt_TeaTool_$callClinit = () => {
    cgxgbt_TeaTool_$callClinit = $rt_eraseClinit(cgxgbt_TeaTool);
    cgxgbt_TeaTool__clinit_();
},
cgxgbt_TeaTool_isProdMode = () => {
    cgxgbt_TeaTool_$callClinit();
    return cgxgbt_TeaTool_isProd;
},
cgxgbt_TeaTool__clinit_ = () => {
    cgxgbt_TeaTool_isProd = 1;
};
function cbggg_GLVersion() {
    let a = this; jl_Object.call(a);
    a.$majorVersion = 0;
    a.$minorVersion = 0;
    a.$releaseVersion = 0;
    a.$versionString = null;
    a.$vendorString = null;
    a.$rendererString = null;
    a.$type2 = null;
    a.$TAG = $rt_s(335);
}
let cbggg_GLVersion__init_ = ($this, $appType, $versionString, $vendorString, $rendererString) => {
    let var$5;
    jl_Object__init_($this);
    $this.$TAG = $rt_s(335);
    cbg_Application$ApplicationType_$callClinit();
    if ($appType === cbg_Application$ApplicationType_Android) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_GLES;
    } else if ($appType === cbg_Application$ApplicationType_iOS) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_GLES;
    } else if ($appType === cbg_Application$ApplicationType_Desktop) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_OpenGL;
    } else if ($appType === cbg_Application$ApplicationType_Applet) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_OpenGL;
    } else if ($appType !== cbg_Application$ApplicationType_WebGL) {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_NONE;
    } else {
        cbggg_GLVersion$Type_$callClinit();
        $this.$type2 = cbggg_GLVersion$Type_WebGL;
    }
    var$5 = $this.$type2;
    cbggg_GLVersion$Type_$callClinit();
    if (var$5 === cbggg_GLVersion$Type_GLES)
        cbggg_GLVersion_extractVersion($this, $rt_s(336), $versionString);
    else if ($this.$type2 === cbggg_GLVersion$Type_WebGL)
        cbggg_GLVersion_extractVersion($this, $rt_s(337), $versionString);
    else if ($this.$type2 === cbggg_GLVersion$Type_OpenGL)
        cbggg_GLVersion_extractVersion($this, $rt_s(338), $versionString);
    else {
        $this.$majorVersion = (-1);
        $this.$minorVersion = (-1);
        $this.$releaseVersion = (-1);
        $vendorString = $rt_s(60);
        $rendererString = $rt_s(60);
    }
    $this.$versionString = $versionString;
    $this.$vendorString = $vendorString;
    $this.$rendererString = $rendererString;
},
cbggg_GLVersion__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbggg_GLVersion();
    cbggg_GLVersion__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbggg_GLVersion_extractVersion = ($this, $patternString, $versionString) => {
    let $pattern, $matcher, $found, $result, $resultSplit, var$8, var$9;
    $pattern = jur_Pattern_compile($patternString);
    $matcher = jur_Pattern_matcher($pattern, $versionString);
    $found = jur_Matcher_find($matcher);
    if (!$found) {
        cbg_Gdx_app.$log($rt_s(335), (((jl_StringBuilder__init_()).$append1($rt_s(339))).$append1($versionString)).$toString());
        $this.$majorVersion = 2;
        $this.$minorVersion = 0;
        $this.$releaseVersion = 0;
    } else {
        $result = jur_Matcher_group($matcher, 1);
        $resultSplit = $result.$split1($rt_s(340));
        var$8 = $resultSplit.data;
        $this.$majorVersion = cbggg_GLVersion_parseInt($this, var$8[0], 2);
        var$9 = var$8.length;
        $this.$minorVersion = var$9 < 2 ? 0 : cbggg_GLVersion_parseInt($this, var$8[1], 0);
        $this.$releaseVersion = var$9 < 3 ? 0 : cbggg_GLVersion_parseInt($this, var$8[2], 0);
    }
},
cbggg_GLVersion_parseInt = ($this, $v, $defaultValue) => {
    let var$3, $$je;
    a: {
        try {
            var$3 = jl_Integer_parseInt($v);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_NumberFormatException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$3;
    }
    cbg_Gdx_app.$error($rt_s(341), (((((jl_StringBuilder__init_()).$append1($rt_s(342))).$append1($v)).$append1($rt_s(343))).$append2($defaultValue)).$toString());
    return $defaultValue;
};
function cbg_Graphics$DisplayMode() {
    let a = this; jl_Object.call(a);
    a.$width7 = 0;
    a.$height7 = 0;
    a.$refreshRate = 0;
    a.$bitsPerPixel = 0;
}
let cbg_Graphics$DisplayMode__init_ = ($this, $width, $height, $refreshRate, $bitsPerPixel) => {
    jl_Object__init_($this);
    $this.$width7 = $width;
    $this.$height7 = $height;
    $this.$refreshRate = $refreshRate;
    $this.$bitsPerPixel = $bitsPerPixel;
},
cbg_Graphics$DisplayMode__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbg_Graphics$DisplayMode();
    cbg_Graphics$DisplayMode__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jn_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException),
jn_BufferOverflowException__init_0 = $this => {
    jl_RuntimeException__init_($this);
},
jn_BufferOverflowException__init_ = () => {
    let var_0 = new jn_BufferOverflowException();
    jn_BufferOverflowException__init_0(var_0);
    return var_0;
},
ju_AbstractCollection = $rt_classWithoutFields(),
ju_AbstractCollection__init_ = $this => {
    jl_Object__init_($this);
},
ju_AbstractCollection_toArray = ($this, $a) => {
    let var$2, $i, var$4, $iter;
    var$2 = $a.data;
    $i = $this.$size();
    var$4 = var$2.length;
    if (var$4 < $i)
        $a = jlr_Array_newInstance(jl_Class_getComponentType(jl_Object_getClass($a)), $i);
    else
        while ($i < var$4) {
            var$2[$i] = null;
            $i = $i + 1 | 0;
        }
    $i = 0;
    $iter = $this.$iterator0();
    while ($iter.$hasNext()) {
        var$2 = $a.data;
        var$4 = $i + 1 | 0;
        var$2[$i] = $iter.$next();
        $i = var$4;
    }
    return $a;
},
ju_Set = $rt_classWithoutFields(0),
ju_AbstractSet = $rt_classWithoutFields(ju_AbstractCollection),
ju_AbstractSet__init_ = $this => {
    ju_AbstractCollection__init_($this);
},
jn_ShortBuffer = $rt_classWithoutFields(jn_Buffer),
jn_ShortBuffer__init_ = ($this, $position, $limit) => {
    jn_Buffer__init_($this);
    $this.$position6 = $position;
    $this.$limit4 = $limit;
},
jn_ShortBuffer_wrap = ($array, $offset, $length) => {
    let var$4, $result;
    var$4 = $array.data;
    $result = jn_ShortBufferOverTypedArray__init_0(0, var$4.length, 0, $array.data, $array);
    $result.$position6 = $offset;
    $result.$limit4 = $offset + $length | 0;
    return $result;
},
jn_ShortBuffer_wrap0 = $array => {
    return jn_ShortBuffer_wrap($array, 0, $array.data.length);
},
jn_ShortBuffer_put = ($this, $src, $offset, $length) => {
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $src.data.length) {
        $this.$putImpl1($this.$position6, $src, $offset, $length);
        $this.$position6 = $this.$position6 + $length | 0;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_ShortBuffer_clear = $this => {
    jn_Buffer_clear($this);
    return $this;
},
jn_ShortBuffer_flip = $this => {
    jn_Buffer_flip($this);
    return $this;
},
jn_ShortBuffer_limit = ($this, $newLimit) => {
    jn_Buffer_limit0($this, $newLimit);
    return $this;
},
jn_ShortBuffer_position0 = ($this, $newPosition) => {
    jn_Buffer_position0($this, $newPosition);
    return $this;
},
jn_ShortBuffer_flip0 = $this => {
    return jn_ShortBuffer_flip($this);
},
jn_ShortBuffer_clear0 = $this => {
    return jn_ShortBuffer_clear($this);
},
jn_ShortBuffer_limit0 = ($this, var$1) => {
    return $this.$limit1(var$1);
},
jn_ShortBuffer_position = ($this, var$1) => {
    return $this.$position3(var$1);
},
jn_IntBuffer = $rt_classWithoutFields(jn_Buffer),
jn_IntBuffer__init_ = ($this, $position, $limit) => {
    jn_Buffer__init_($this);
    $this.$position6 = $position;
    $this.$limit4 = $limit;
},
jn_IntBuffer_wrap = ($array, $offset, $length) => {
    let var$4, $result;
    var$4 = $array.data;
    $result = jn_IntBufferOverTypedArray__init_0(0, var$4.length, 0, $array.data, $array);
    $result.$position6 = $offset;
    $result.$limit4 = $offset + $length | 0;
    return $result;
},
jn_IntBuffer_wrap0 = $array => {
    return jn_IntBuffer_wrap($array, 0, $array.data.length);
},
jn_IntBuffer_clear = $this => {
    jn_Buffer_clear($this);
    return $this;
},
jn_IntBuffer_flip = $this => {
    jn_Buffer_flip($this);
    return $this;
},
jn_IntBuffer_position = ($this, $newPosition) => {
    jn_Buffer_position0($this, $newPosition);
    return $this;
},
jn_IntBuffer_clear0 = $this => {
    return jn_IntBuffer_clear($this);
},
jn_IntBufferImpl = $rt_classWithoutFields(jn_IntBuffer),
jn_IntBufferImpl__init_ = ($this, $position, $limit) => {
    jn_IntBuffer__init_($this, $position, $limit);
},
jn_IntBufferImpl_get0 = $this => {
    let var$1;
    if ($this.$position6 >= $this.$limit4)
        $rt_throw(jn_BufferUnderflowException__init_());
    var$1 = $this.$position6;
    $this.$position6 = var$1 + 1 | 0;
    return $this.$getElement(var$1);
},
jn_IntBufferImpl_put = ($this, $b) => {
    let var$2;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($this.$position6 >= $this.$limit4)
        $rt_throw(jn_BufferOverflowException__init_());
    var$2 = $this.$position6;
    $this.$position6 = var$2 + 1 | 0;
    $this.$putElement(var$2, $b);
    return $this;
},
jn_IntBufferImpl_get = ($this, $index) => {
    let var$2, var$3, var$4;
    if ($index >= 0 && $index < $this.$limit4)
        return $this.$getElement($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit4;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(344)), $index), $rt_s(65)), var$3), 41);
    jl_IndexOutOfBoundsException__init_1(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jn_IntBufferImpl_put0 = ($this, $index, $b) => {
    let var$3, var$4, var$5;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($index >= 0 && $index < $this.$limit4) {
        $this.$putElement($index, $b);
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$4 = $this.$limit4;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$5, $rt_s(344)), $index), $rt_s(65)), var$4), 41);
    jl_IndexOutOfBoundsException__init_1(var$3, jl_StringBuilder_toString(var$5));
    $rt_throw(var$3);
},
jn_IntBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
},
jur_AbstractCharClass$LazyJavaLetterOrDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLetterOrDigit__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaLetterOrDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaLetterOrDigit();
    jur_AbstractCharClass$LazyJavaLetterOrDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function otciu_UnicodeHelper$Range() {
    let a = this; jl_Object.call(a);
    a.$start4 = 0;
    a.$end5 = 0;
    a.$data12 = null;
}
let otciu_UnicodeHelper$Range__init_0 = ($this, $start, $end, $data) => {
    jl_Object__init_($this);
    $this.$start4 = $start;
    $this.$end5 = $end;
    $this.$data12 = $data;
},
otciu_UnicodeHelper$Range__init_ = (var_0, var_1, var_2) => {
    let var_3 = new otciu_UnicodeHelper$Range();
    otciu_UnicodeHelper$Range__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AbstractLineTerminator = $rt_classWithoutFields(),
jur_AbstractLineTerminator_unixLT = null,
jur_AbstractLineTerminator_unicodeLT = null,
jur_AbstractLineTerminator__init_ = $this => {
    jl_Object__init_($this);
},
jur_AbstractLineTerminator_getInstance = $flag => {
    if (!($flag & 1)) {
        if (jur_AbstractLineTerminator_unicodeLT !== null)
            return jur_AbstractLineTerminator_unicodeLT;
        jur_AbstractLineTerminator_unicodeLT = jur_AbstractLineTerminator$2__init_0();
        return jur_AbstractLineTerminator_unicodeLT;
    }
    if (jur_AbstractLineTerminator_unixLT !== null)
        return jur_AbstractLineTerminator_unixLT;
    jur_AbstractLineTerminator_unixLT = jur_AbstractLineTerminator$1__init_0();
    return jur_AbstractLineTerminator_unixLT;
},
jur_AbstractLineTerminator$2 = $rt_classWithoutFields(jur_AbstractLineTerminator),
jur_AbstractLineTerminator$2__init_ = $this => {
    jur_AbstractLineTerminator__init_($this);
},
jur_AbstractLineTerminator$2__init_0 = () => {
    let var_0 = new jur_AbstractLineTerminator$2();
    jur_AbstractLineTerminator$2__init_(var_0);
    return var_0;
},
jur_AbstractLineTerminator$2_isLineTerminator = ($this, $ch) => {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
},
jur_AbstractLineTerminator$2_isAfterLineTerminator = ($this, $ch, $ch2) => {
    let var$3;
    a: {
        b: {
            if ($ch != 10 && $ch != 133 && ($ch | 1) != 8233) {
                if ($ch != 13)
                    break b;
                if ($ch2 == 10)
                    break b;
            }
            var$3 = 1;
            break a;
        }
        var$3 = 0;
    }
    return var$3;
};
function otciu_CharMapping() {
    let a = this; jl_Object.call(a);
    a.$binarySearchTable0 = null;
    a.$fastTable = null;
}
let otciu_CharMapping__init_ = ($this, $binarySearchTable, $fastTable) => {
    jl_Object__init_($this);
    $this.$binarySearchTable0 = $binarySearchTable;
    $this.$fastTable = $fastTable;
},
otciu_CharMapping__init_0 = (var_0, var_1) => {
    let var_2 = new otciu_CharMapping();
    otciu_CharMapping__init_(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractLineTerminator$1 = $rt_classWithoutFields(jur_AbstractLineTerminator),
jur_AbstractLineTerminator$1__init_ = $this => {
    jur_AbstractLineTerminator__init_($this);
},
jur_AbstractLineTerminator$1__init_0 = () => {
    let var_0 = new jur_AbstractLineTerminator$1();
    jur_AbstractLineTerminator$1__init_(var_0);
    return var_0;
},
jur_AbstractLineTerminator$1_isLineTerminator = ($this, $ch) => {
    return $ch != 10 ? 0 : 1;
},
jur_AbstractLineTerminator$1_isAfterLineTerminator = ($this, $ch, $ch2) => {
    return $ch != 10 ? 0 : 1;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
},
otjc_JSWeakRef = $rt_classWithoutFields();
function otci_CharFlow() {
    let a = this; jl_Object.call(a);
    a.$characters = null;
    a.$pointer0 = 0;
}
let otci_CharFlow__init_0 = ($this, $characters) => {
    jl_Object__init_($this);
    $this.$characters = $characters;
},
otci_CharFlow__init_ = var_0 => {
    let var_1 = new otci_CharFlow();
    otci_CharFlow__init_0(var_1, var_0);
    return var_1;
};
function cbgssu_Widget() {
    let a = this; cbgss_Actor.call(a);
    a.$needsLayout0 = 0;
    a.$fillParent0 = 0;
    a.$layoutEnabled = 0;
}
let cbgssu_Widget__init_ = $this => {
    cbgss_Actor__init_($this);
    $this.$needsLayout0 = 1;
    $this.$layoutEnabled = 1;
},
cbgssu_Widget__init_0 = () => {
    let var_0 = new cbgssu_Widget();
    cbgssu_Widget__init_(var_0);
    return var_0;
},
cbgssu_Widget_getMinWidth = $this => {
    return $this.$getPrefWidth();
},
cbgssu_Widget_getMinHeight = $this => {
    return $this.$getPrefHeight();
},
cbgssu_Widget_getMaxWidth = $this => {
    return 0.0;
},
cbgssu_Widget_getMaxHeight = $this => {
    return 0.0;
},
cbgssu_Widget_validate = $this => {
    let $parent, $stage, $parentWidth, $parentHeight;
    if (!$this.$layoutEnabled)
        return;
    $parent = $this.$getParent();
    if ($this.$fillParent0 && $parent !== null) {
        $stage = $this.$getStage();
        if ($stage !== null && $parent === $stage.$getRoot()) {
            $parentWidth = $stage.$getWidth();
            $parentHeight = $stage.$getHeight();
        } else {
            $parentWidth = $parent.$getWidth();
            $parentHeight = $parent.$getHeight();
        }
        $this.$setSize($parentWidth, $parentHeight);
    }
    if (!$this.$needsLayout0)
        return;
    $this.$needsLayout0 = 0;
    $this.$layout();
},
cbgssu_Widget_invalidate = $this => {
    $this.$needsLayout0 = 1;
},
cbgssu_Widget_invalidateHierarchy = $this => {
    let $parent;
    if (!$this.$layoutEnabled)
        return;
    $this.$invalidate();
    $parent = $this.$getParent();
    if ($rt_isInstance($parent, cbgssu_Layout))
        $parent.$invalidateHierarchy();
},
cbgssu_Widget_sizeChanged = $this => {
    $this.$invalidate();
},
cbgssu_Widget_layout = $this => {
    return;
},
cbgssu_Disableable = $rt_classWithoutFields(0),
cbgssu_Styleable = $rt_classWithoutFields(0);
function cbgssu_ProgressBar() {
    let a = this; cbgssu_Widget.call(a);
    a.$style = null;
    a.$min4 = 0.0;
    a.$max4 = 0.0;
    a.$stepSize = 0.0;
    a.$value0 = 0.0;
    a.$animateFromValue = 0.0;
    a.$position11 = 0.0;
    a.$vertical = 0;
    a.$animateDuration = 0.0;
    a.$animateTime = 0.0;
    a.$animateInterpolation = null;
    a.$visualInterpolation = null;
    a.$disabled = 0;
    a.$round1 = 0;
    a.$programmaticChangeEvents = 0;
}
let cbgssu_ProgressBar__init_ = ($this, $min, $max, $stepSize, $vertical, $style) => {
    cbgssu_Widget__init_($this);
    cbgm_Interpolation_$callClinit();
    $this.$animateInterpolation = cbgm_Interpolation_linear;
    $this.$visualInterpolation = cbgm_Interpolation_linear;
    $this.$round1 = 1;
    $this.$programmaticChangeEvents = 1;
    if ($min > $max)
        $rt_throw(jl_IllegalArgumentException__init_((((((jl_StringBuilder__init_()).$append1($rt_s(345))).$append20($min)).$append1($rt_s(27))).$append20($max)).$toString()));
    if ($stepSize <= 0.0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(346))).$append20($stepSize)).$toString()));
    $this.$setStyle($style);
    $this.$min4 = $min;
    $this.$max4 = $max;
    $this.$stepSize = $stepSize;
    $this.$vertical = $vertical;
    $this.$value0 = $min;
    $this.$setSize($this.$getPrefWidth(), $this.$getPrefHeight());
},
cbgssu_ProgressBar__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cbgssu_ProgressBar();
    cbgssu_ProgressBar__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cbgssu_ProgressBar_setStyle = ($this, $style) => {
    if ($style !== null) {
        $this.$style = $style;
        $this.$invalidateHierarchy();
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(347)));
},
cbgssu_ProgressBar_act = ($this, $delta) => {
    let $stage;
    cbgss_Actor_act($this, $delta);
    if ($this.$animateTime > 0.0) {
        $this.$animateTime = $this.$animateTime - $delta;
        $stage = $this.$getStage();
        if ($stage !== null && $stage.$getActionsRequestRendering())
            cbg_Gdx_graphics.$requestRendering();
    }
},
cbgssu_ProgressBar_draw = ($this, $batch, $parentAlpha) => {
    let $style, $knob, $currentKnob, $bg, $knobBefore, $knobAfter, $color, $x, $y, $width, $height, $knobHeight, $knobWidth, $percent, $bgLeftWidth, var$18, $total, $beforeWidth, $knobWidthHalf, var$22, var$23, var$24, $w, $h, $bgBottomHeight, $beforeHeight, $knobHeightHalf;
    $style = $this.$style;
    $knob = $style.$knob;
    $currentKnob = $this.$getKnobDrawable();
    $bg = $this.$getBackgroundDrawable();
    $knobBefore = $this.$getKnobBeforeDrawable();
    $knobAfter = $this.$getKnobAfterDrawable();
    $color = $this.$getColor();
    $x = $this.$getX();
    $y = $this.$getY();
    $width = $this.$getWidth();
    $height = $this.$getHeight();
    $knobHeight = $knob !== null ? $knob.$getMinHeight() : 0.0;
    $knobWidth = $knob !== null ? $knob.$getMinWidth() : 0.0;
    $percent = $this.$getVisualPercent();
    $batch.$setColor0($color.$r, $color.$g, $color.$b, $color.$a * $parentAlpha);
    if (!$this.$vertical) {
        $bgLeftWidth = 0.0;
        if ($bg !== null) {
            cbgssu_ProgressBar_drawRound($this, $batch, $bg, $x, jl_Math_round($y + ($height - $bg.$getMinHeight()) * 0.5), $width, jl_Math_round($bg.$getMinHeight()));
            $bgLeftWidth = $bg.$getLeftWidth();
            var$18 = $bg.$getRightWidth();
            $width = $width - ($bgLeftWidth + var$18);
        }
        $total = $width - $knobWidth;
        $beforeWidth = cbgm_MathUtils_clamp($total * $percent, 0.0, $total);
        $this.$position11 = $bgLeftWidth + $beforeWidth;
        $knobWidthHalf = $knobWidth * 0.5;
        if ($knobBefore !== null) {
            var$18 = $x + $bgLeftWidth;
            var$22 = $y + ($height - $knobBefore.$getMinHeight()) * 0.5;
            var$23 = $beforeWidth + $knobWidthHalf;
            var$24 = $knobBefore.$getMinHeight();
            cbgssu_ProgressBar_drawRound($this, $batch, $knobBefore, var$18, var$22, var$23, var$24);
        }
        if ($knobAfter !== null) {
            var$18 = $x + $this.$position11 + $knobWidthHalf;
            var$22 = $y + ($height - $knobAfter.$getMinHeight()) * 0.5;
            var$23 = $total - (!$this.$round1 ? $beforeWidth - $knobWidthHalf : jl_Math_ceil($beforeWidth - $knobWidthHalf));
            var$24 = $knobAfter.$getMinHeight();
            cbgssu_ProgressBar_drawRound($this, $batch, $knobAfter, var$18, var$22, var$23, var$24);
        }
        if ($currentKnob !== null) {
            $w = $currentKnob.$getMinWidth();
            $h = $currentKnob.$getMinHeight();
            cbgssu_ProgressBar_drawRound($this, $batch, $currentKnob, $x + $this.$position11 + ($knobWidth - $w) * 0.5, $y + ($height - $h) * 0.5, $w, $h);
        }
    } else {
        $bgBottomHeight = 0.0;
        if ($bg !== null) {
            cbgssu_ProgressBar_drawRound($this, $batch, $bg, $x + ($width - $bg.$getMinWidth()) * 0.5, $y, $bg.$getMinWidth(), $height);
            var$18 = $bg.$getTopHeight();
            $bgBottomHeight = $bg.$getBottomHeight();
            $height = $height - (var$18 + $bgBottomHeight);
        }
        $total = $height - $knobHeight;
        $beforeHeight = cbgm_MathUtils_clamp($total * $percent, 0.0, $total);
        $this.$position11 = $bgBottomHeight + $beforeHeight;
        $knobHeightHalf = $knobHeight * 0.5;
        if ($knobBefore !== null) {
            var$18 = $x + ($width - $knobBefore.$getMinWidth()) * 0.5;
            var$22 = $y + $bgBottomHeight;
            var$23 = $knobBefore.$getMinWidth();
            var$24 = $beforeHeight + $knobHeightHalf;
            cbgssu_ProgressBar_drawRound($this, $batch, $knobBefore, var$18, var$22, var$23, var$24);
        }
        if ($knobAfter !== null) {
            var$18 = $x + ($width - $knobAfter.$getMinWidth()) * 0.5;
            var$22 = $y + $this.$position11 + $knobHeightHalf;
            var$23 = $knobAfter.$getMinWidth();
            var$24 = $total - (!$this.$round1 ? $beforeHeight - $knobHeightHalf : jl_Math_ceil($beforeHeight - $knobHeightHalf));
            cbgssu_ProgressBar_drawRound($this, $batch, $knobAfter, var$18, var$22, var$23, var$24);
        }
        if ($currentKnob !== null) {
            $w = $currentKnob.$getMinWidth();
            $h = $currentKnob.$getMinHeight();
            cbgssu_ProgressBar_drawRound($this, $batch, $currentKnob, $x + ($width - $w) * 0.5, $y + $this.$position11 + ($knobHeight - $h) * 0.5, $w, $h);
        }
    }
},
cbgssu_ProgressBar_drawRound = ($this, $batch, $drawable, $x, $y, $w, $h) => {
    if ($this.$round1) {
        $x = jl_Math_floor($x);
        $y = jl_Math_floor($y);
        $w = jl_Math_ceil($w);
        $h = jl_Math_ceil($h);
    }
    $drawable.$draw0($batch, $x, $y, $w, $h);
},
cbgssu_ProgressBar_getVisualValue = $this => {
    if ($this.$animateTime <= 0.0)
        return $this.$value0;
    return $this.$animateInterpolation.$apply3($this.$animateFromValue, $this.$value0, 1.0 - $this.$animateTime / $this.$animateDuration);
},
cbgssu_ProgressBar_getVisualPercent = $this => {
    if ($this.$min4 === $this.$max4)
        return 0.0;
    return $this.$visualInterpolation.$apply(($this.$getVisualValue() - $this.$min4) / ($this.$max4 - $this.$min4));
},
cbgssu_ProgressBar_getBackgroundDrawable = $this => {
    if ($this.$disabled && $this.$style.$disabledBackground !== null)
        return $this.$style.$disabledBackground;
    return $this.$style.$background0;
},
cbgssu_ProgressBar_getKnobDrawable = $this => {
    if ($this.$disabled && $this.$style.$disabledKnob !== null)
        return $this.$style.$disabledKnob;
    return $this.$style.$knob;
},
cbgssu_ProgressBar_getKnobBeforeDrawable = $this => {
    if ($this.$disabled && $this.$style.$disabledKnobBefore !== null)
        return $this.$style.$disabledKnobBefore;
    return $this.$style.$knobBefore;
},
cbgssu_ProgressBar_getKnobAfterDrawable = $this => {
    if ($this.$disabled && $this.$style.$disabledKnobAfter !== null)
        return $this.$style.$disabledKnobAfter;
    return $this.$style.$knobAfter;
},
cbgssu_ProgressBar_setValue = ($this, $value) => {
    let var$2, $oldValue, $oldVisualValue, $changeEvent, $cancelled;
    var$2 = $this.$clamp1($this.$round0($value));
    $oldValue = $this.$value0;
    if (var$2 === $oldValue)
        return 0;
    $oldVisualValue = $this.$getVisualValue();
    $this.$value0 = var$2;
    if ($this.$programmaticChangeEvents) {
        $changeEvent = cbgu_Pools_obtain(cbgssu_ProgressBar$setValue$lambda$_18_0__init_0());
        $cancelled = $this.$fire0($changeEvent);
        cbgu_Pools_free($changeEvent);
        if ($cancelled) {
            $this.$value0 = $oldValue;
            return 0;
        }
    }
    if ($this.$animateDuration > 0.0) {
        $this.$animateFromValue = $oldVisualValue;
        $this.$animateTime = $this.$animateDuration;
    }
    return 1;
},
cbgssu_ProgressBar_round = ($this, $value) => {
    return jl_Math_round($value / $this.$stepSize) * $this.$stepSize;
},
cbgssu_ProgressBar_clamp = ($this, $value) => {
    return cbgm_MathUtils_clamp($value, $this.$min4, $this.$max4);
},
cbgssu_ProgressBar_getPrefWidth = $this => {
    let $knob, $bg;
    if (!$this.$vertical)
        return 140.0;
    $knob = $this.$style.$knob;
    $bg = $this.$getBackgroundDrawable();
    return jl_Math_max0($knob !== null ? $knob.$getMinWidth() : 0.0, $bg !== null ? $bg.$getMinWidth() : 0.0);
},
cbgssu_ProgressBar_getPrefHeight = $this => {
    let $knob, $bg;
    if ($this.$vertical)
        return 140.0;
    $knob = $this.$style.$knob;
    $bg = $this.$getBackgroundDrawable();
    return jl_Math_max0($knob !== null ? $knob.$getMinHeight() : 0.0, $bg !== null ? $bg.$getMinHeight() : 0.0);
};
function jur_RangeSet() {
    let a = this; jur_LeafSet.call(a);
    a.$chars1 = null;
    a.$alt2 = 0;
}
let jur_RangeSet__init_ = ($this, $cc) => {
    jur_LeafSet__init_($this);
    $this.$chars1 = $cc.$getInstance();
    $this.$alt2 = $cc.$alt;
},
jur_RangeSet__init_0 = var_0 => {
    let var_1 = new jur_RangeSet();
    jur_RangeSet__init_(var_1, var_0);
    return var_1;
},
jur_RangeSet_accepts = ($this, $strIndex, $testString) => {
    return !$this.$chars1.$contains($testString.$charAt($strIndex)) ? (-1) : 1;
},
jur_RangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt2 ? $rt_s(48) : $rt_s(49);
    var$2 = $this.$chars1.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(50)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
},
jur_RangeSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return jur_AbstractCharClass_intersects0($this.$chars1, $set.$getChar0());
    if ($set instanceof jur_RangeSet)
        return jur_AbstractCharClass_intersects($this.$chars1, $set.$chars1);
    if ($set instanceof jur_SupplRangeSet)
        return jur_AbstractCharClass_intersects($this.$chars1, $set.$getChars0());
    if (!($set instanceof jur_SupplCharSet))
        return 1;
    return 0;
},
jur_RangeSet_getChars = $this => {
    return $this.$chars1;
};
function cbggg_SpriteBatch() {
    let a = this; jl_Object.call(a);
    a.$currentDataType = null;
    a.$mesh1 = null;
    a.$vertices2 = null;
    a.$idx = 0;
    a.$lastTexture = null;
    a.$invTexWidth = 0.0;
    a.$invTexHeight = 0.0;
    a.$drawing = 0;
    a.$transformMatrix0 = null;
    a.$projectionMatrix = null;
    a.$combinedMatrix0 = null;
    a.$blendingDisabled = 0;
    a.$blendSrcFunc = 0;
    a.$blendDstFunc = 0;
    a.$blendSrcFuncAlpha = 0;
    a.$blendDstFuncAlpha = 0;
    a.$shader = null;
    a.$customShader = null;
    a.$ownsShader0 = 0;
    a.$color9 = null;
    a.$colorPacked = 0.0;
    a.$renderCalls = 0;
    a.$totalRenderCalls = 0;
    a.$maxSpritesInBatch = 0;
}
let cbggg_SpriteBatch_defaultVertexDataType = null,
cbggg_SpriteBatch_overrideVertexType = null,
cbggg_SpriteBatch_$callClinit = () => {
    cbggg_SpriteBatch_$callClinit = $rt_eraseClinit(cbggg_SpriteBatch);
    cbggg_SpriteBatch__clinit_();
},
cbggg_SpriteBatch__init_1 = $this => {
    cbggg_SpriteBatch_$callClinit();
    cbggg_SpriteBatch__init_($this, 1000, null);
},
cbggg_SpriteBatch__init_0 = () => {
    let var_0 = new cbggg_SpriteBatch();
    cbggg_SpriteBatch__init_1(var_0);
    return var_0;
},
cbggg_SpriteBatch__init_ = ($this, $size, $defaultShader) => {
    let $vertexDataType, var$4, var$5, var$6, var$7, var$8, var$9, $indices, $j, $i, var$13, var$14;
    cbggg_SpriteBatch_$callClinit();
    jl_Object__init_($this);
    $this.$idx = 0;
    $this.$lastTexture = null;
    $this.$invTexWidth = 0.0;
    $this.$invTexHeight = 0.0;
    $this.$drawing = 0;
    $this.$transformMatrix0 = cbgm_Matrix4__init_();
    $this.$projectionMatrix = cbgm_Matrix4__init_();
    $this.$combinedMatrix0 = cbgm_Matrix4__init_();
    $this.$blendingDisabled = 0;
    $this.$blendSrcFunc = 770;
    $this.$blendDstFunc = 771;
    $this.$blendSrcFuncAlpha = 770;
    $this.$blendDstFuncAlpha = 771;
    $this.$customShader = null;
    $this.$color9 = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
    $this.$colorPacked = cbgg_Color_WHITE_FLOAT_BITS;
    $this.$renderCalls = 0;
    $this.$totalRenderCalls = 0;
    $this.$maxSpritesInBatch = 0;
    if ($size > 8191)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(348))).$append2($size)).$toString()));
    if (cbg_Gdx_gl30 === null)
        $vertexDataType = cbggg_SpriteBatch_defaultVertexDataType;
    else {
        cbgg_Mesh$VertexDataType_$callClinit();
        $vertexDataType = cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO;
    }
    if (cbggg_SpriteBatch_overrideVertexType !== null)
        $vertexDataType = cbggg_SpriteBatch_overrideVertexType;
    $this.$currentDataType = $vertexDataType;
    var$4 = new cbgg_Mesh;
    var$5 = $this.$currentDataType;
    var$6 = $size * 4 | 0;
    var$7 = $size * 6 | 0;
    var$8 = $rt_createArray(cbgg_VertexAttribute, 3);
    var$9 = var$8.data;
    var$9[0] = cbgg_VertexAttribute__init_(1, 2, $rt_s(349));
    var$9[1] = cbgg_VertexAttribute__init_(4, 4, $rt_s(350));
    var$9[2] = cbgg_VertexAttribute__init_(16, 2, $rt_s(351));
    cbgg_Mesh__init_(var$4, var$5, 0, var$6, var$7, var$8);
    $this.$mesh1 = var$4;
    $this.$projectionMatrix.$setToOrtho2D(0.0, 0.0, cbg_Gdx_graphics.$getWidth0(), cbg_Gdx_graphics.$getHeight0());
    $this.$vertices2 = $rt_createFloatArray($size * 20 | 0);
    $indices = $rt_createShortArray(var$7);
    $j = 0;
    $i = 0;
    while ($i < var$7) {
        var$8 = $indices.data;
        var$8[$i] = $j;
        var$8[$i + 1 | 0] = ($j + 1 | 0) << 16 >> 16;
        var$13 = $i + 2 | 0;
        var$14 = ($j + 2 | 0) << 16 >> 16;
        var$8[var$13] = var$14;
        var$8[$i + 3 | 0] = var$14;
        var$8[$i + 4 | 0] = ($j + 3 | 0) << 16 >> 16;
        var$8[$i + 5 | 0] = $j;
        $i = $i + 6 | 0;
        $j = ($j + 4 | 0) << 16 >> 16;
    }
    $this.$mesh1.$setIndices($indices);
    if ($defaultShader !== null)
        $this.$shader = $defaultShader;
    else {
        $this.$shader = cbggg_SpriteBatch_createDefaultShader();
        $this.$ownsShader0 = 1;
    }
    cbgg_Mesh$VertexDataType_$callClinit();
    if ($vertexDataType !== cbgg_Mesh$VertexDataType_VertexArray) {
        ($this.$mesh1.$getIndexData()).$bind();
        ($this.$mesh1.$getIndexData()).$unbind();
    }
},
cbggg_SpriteBatch__init_2 = (var_0, var_1) => {
    let var_2 = new cbggg_SpriteBatch();
    cbggg_SpriteBatch__init_(var_2, var_0, var_1);
    return var_2;
},
cbggg_SpriteBatch_createDefaultShader = () => {
    let $vertexShader, $fragmentShader, $shader;
    cbggg_SpriteBatch_$callClinit();
    $vertexShader = $rt_s(352);
    $fragmentShader = $rt_s(353);
    $shader = cbggg_ShaderProgram__init_($vertexShader, $fragmentShader);
    if ($shader.$isCompiled())
        return $shader;
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(354))).$append1($shader.$getLog())).$toString()));
},
cbggg_SpriteBatch_begin = $this => {
    if ($this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(355)));
    $this.$renderCalls = 0;
    cbg_Gdx_gl.$glDepthMask(0);
    if ($this.$customShader === null)
        $this.$shader.$bind();
    else
        $this.$customShader.$bind();
    $this.$setupMatrices();
    $this.$drawing = 1;
},
cbggg_SpriteBatch_end = $this => {
    let $gl;
    if (!$this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(356)));
    if ($this.$idx > 0)
        $this.$flush();
    $this.$lastTexture = null;
    $this.$drawing = 0;
    $gl = cbg_Gdx_gl;
    $gl.$glDepthMask(1);
    if ($this.$isBlendingEnabled())
        $gl.$glDisable(3042);
},
cbggg_SpriteBatch_setColor = ($this, $r, $g, $b, $a) => {
    $this.$color9.$set12($r, $g, $b, $a);
    $this.$colorPacked = $this.$color9.$toFloatBits();
},
cbggg_SpriteBatch_draw2 = ($this, $texture, $x, $y, $width, $height) => {
    let $vertices, var$7, $fx2, $fy2, $color, $idx;
    if (!$this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(357)));
    $vertices = $this.$vertices2;
    if ($texture !== $this.$lastTexture)
        $this.$switchTexture($texture);
    else {
        var$7 = $vertices.data;
        if ($this.$idx == var$7.length)
            $this.$flush();
    }
    var$7 = $vertices.data;
    $fx2 = $x + $width;
    $fy2 = $y + $height;
    $color = $this.$colorPacked;
    $idx = $this.$idx;
    var$7[$idx] = $x;
    var$7[$idx + 1 | 0] = $y;
    var$7[$idx + 2 | 0] = $color;
    var$7[$idx + 3 | 0] = 0.0;
    var$7[$idx + 4 | 0] = 1.0;
    var$7[$idx + 5 | 0] = $x;
    var$7[$idx + 6 | 0] = $fy2;
    var$7[$idx + 7 | 0] = $color;
    var$7[$idx + 8 | 0] = 0.0;
    var$7[$idx + 9 | 0] = 0.0;
    var$7[$idx + 10 | 0] = $fx2;
    var$7[$idx + 11 | 0] = $fy2;
    var$7[$idx + 12 | 0] = $color;
    var$7[$idx + 13 | 0] = 1.0;
    var$7[$idx + 14 | 0] = 0.0;
    var$7[$idx + 15 | 0] = $fx2;
    var$7[$idx + 16 | 0] = $y;
    var$7[$idx + 17 | 0] = $color;
    var$7[$idx + 18 | 0] = 1.0;
    var$7[$idx + 19 | 0] = 1.0;
    $this.$idx = $idx + 20 | 0;
},
cbggg_SpriteBatch_draw1 = ($this, $texture, $spriteVertices, $offset, $count) => {
    let $verticesLength, var$6, $copyCount;
    if (!$this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(357)));
    $verticesLength = $this.$vertices2.data.length;
    if ($texture !== $this.$lastTexture) {
        $this.$switchTexture($texture);
        var$6 = $verticesLength;
    } else {
        var$6 = $verticesLength - $this.$idx | 0;
        if (!var$6) {
            $this.$flush();
            var$6 = $verticesLength;
        }
    }
    $copyCount = jl_Math_min(var$6, $count);
    jl_System_fastArraycopy($spriteVertices, $offset, $this.$vertices2, $this.$idx, $copyCount);
    $this.$idx = $this.$idx + $copyCount | 0;
    var$6 = $count - $copyCount | 0;
    while (var$6 > 0) {
        $offset = $offset + $copyCount | 0;
        $this.$flush();
        $copyCount = jl_Math_min($verticesLength, var$6);
        jl_System_fastArraycopy($spriteVertices, $offset, $this.$vertices2, 0, $copyCount);
        $this.$idx = $this.$idx + $copyCount | 0;
        var$6 = var$6 - $copyCount | 0;
    }
},
cbggg_SpriteBatch_draw = ($this, $region, $x, $y, $width, $height) => {
    let $vertices, $texture, var$8, $fx2, $fy2, $u, $v, $u2, $v2, $color, $idx;
    if (!$this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(357)));
    $vertices = $this.$vertices2;
    $texture = $region.$texture0;
    if ($texture !== $this.$lastTexture)
        $this.$switchTexture($texture);
    else {
        var$8 = $vertices.data;
        if ($this.$idx == var$8.length)
            $this.$flush();
    }
    var$8 = $vertices.data;
    $fx2 = $x + $width;
    $fy2 = $y + $height;
    $u = $region.$u;
    $v = $region.$v20;
    $u2 = $region.$u2;
    $v2 = $region.$v;
    $color = $this.$colorPacked;
    $idx = $this.$idx;
    var$8[$idx] = $x;
    var$8[$idx + 1 | 0] = $y;
    var$8[$idx + 2 | 0] = $color;
    var$8[$idx + 3 | 0] = $u;
    var$8[$idx + 4 | 0] = $v;
    var$8[$idx + 5 | 0] = $x;
    var$8[$idx + 6 | 0] = $fy2;
    var$8[$idx + 7 | 0] = $color;
    var$8[$idx + 8 | 0] = $u;
    var$8[$idx + 9 | 0] = $v2;
    var$8[$idx + 10 | 0] = $fx2;
    var$8[$idx + 11 | 0] = $fy2;
    var$8[$idx + 12 | 0] = $color;
    var$8[$idx + 13 | 0] = $u2;
    var$8[$idx + 14 | 0] = $v2;
    var$8[$idx + 15 | 0] = $fx2;
    var$8[$idx + 16 | 0] = $y;
    var$8[$idx + 17 | 0] = $color;
    var$8[$idx + 18 | 0] = $u2;
    var$8[$idx + 19 | 0] = $v;
    $this.$idx = $idx + 20 | 0;
},
cbggg_SpriteBatch_draw0 = ($this, $region, $x, $y, $originX, $originY, $width, $height, $scaleX, $scaleY, $rotation) => {
    let $vertices, $texture, var$13, $worldOriginX, $worldOriginY, $x2, $y4, $x4, $y3, $x1, $y1, $y2, $x3, $cos, $sin, var$26, var$27, var$28, var$29, var$30, var$31, var$32, var$33, $u, $v, $u2, $v2, $color, $idx;
    if (!$this.$drawing)
        $rt_throw(jl_IllegalStateException__init_($rt_s(357)));
    $vertices = $this.$vertices2;
    $texture = $region.$texture0;
    if ($texture !== $this.$lastTexture)
        $this.$switchTexture($texture);
    else {
        var$13 = $vertices.data;
        if ($this.$idx == var$13.length)
            $this.$flush();
    }
    $worldOriginX = $x + $originX;
    $worldOriginY = $y + $originY;
    $x2 =  -$originX;
    $y4 =  -$originY;
    $x4 = $width - $originX;
    $y3 = $height - $originY;
    if (!($scaleX === 1.0 && $scaleY === 1.0)) {
        $x2 = $x2 * $scaleX;
        $y4 = $y4 * $scaleY;
        $x4 = $x4 * $scaleX;
        $y3 = $y3 * $scaleY;
    }
    if ($rotation === 0.0) {
        $x1 = $x2;
        $y1 = $y4;
        $y2 = $y3;
        $x3 = $x4;
    } else {
        $cos = cbgm_MathUtils_cosDeg($rotation);
        $sin = cbgm_MathUtils_sinDeg($rotation);
        var$26 = $cos * $x2;
        $x1 = var$26 - $sin * $y4;
        var$27 = $sin * $x2;
        $y1 = var$27 + $cos * $y4;
        var$28 = $sin * $y3;
        $x2 = var$26 - var$28;
        var$26 = $cos * $y3;
        $y2 = var$27 + var$26;
        $x3 = $cos * $x4 - var$28;
        $y3 = $sin * $x4 + var$26;
        $x4 = $x1 + $x3 - $x2;
        $y4 = $y3 - ($y2 - $y1);
    }
    var$13 = $vertices.data;
    var$26 = $x1 + $worldOriginX;
    var$27 = $y1 + $worldOriginY;
    var$28 = $x2 + $worldOriginX;
    var$29 = $y2 + $worldOriginY;
    var$30 = $x3 + $worldOriginX;
    var$31 = $y3 + $worldOriginY;
    var$32 = $x4 + $worldOriginX;
    var$33 = $y4 + $worldOriginY;
    $u = $region.$u;
    $v = $region.$v20;
    $u2 = $region.$u2;
    $v2 = $region.$v;
    $color = $this.$colorPacked;
    $idx = $this.$idx;
    var$13[$idx] = var$26;
    var$13[$idx + 1 | 0] = var$27;
    var$13[$idx + 2 | 0] = $color;
    var$13[$idx + 3 | 0] = $u;
    var$13[$idx + 4 | 0] = $v;
    var$13[$idx + 5 | 0] = var$28;
    var$13[$idx + 6 | 0] = var$29;
    var$13[$idx + 7 | 0] = $color;
    var$13[$idx + 8 | 0] = $u;
    var$13[$idx + 9 | 0] = $v2;
    var$13[$idx + 10 | 0] = var$30;
    var$13[$idx + 11 | 0] = var$31;
    var$13[$idx + 12 | 0] = $color;
    var$13[$idx + 13 | 0] = $u2;
    var$13[$idx + 14 | 0] = $v2;
    var$13[$idx + 15 | 0] = var$32;
    var$13[$idx + 16 | 0] = var$33;
    var$13[$idx + 17 | 0] = $color;
    var$13[$idx + 18 | 0] = $u2;
    var$13[$idx + 19 | 0] = $v;
    $this.$idx = $idx + 20 | 0;
},
cbggg_SpriteBatch_flush = $this => {
    let $spritesInBatch, $count, $mesh, var$4, $indicesBuffer;
    if (!$this.$idx)
        return;
    $this.$renderCalls = $this.$renderCalls + 1 | 0;
    $this.$totalRenderCalls = $this.$totalRenderCalls + 1 | 0;
    $spritesInBatch = $this.$idx / 20 | 0;
    if ($spritesInBatch > $this.$maxSpritesInBatch)
        $this.$maxSpritesInBatch = $spritesInBatch;
    $count = $spritesInBatch * 6 | 0;
    $this.$lastTexture.$bind();
    $mesh = $this.$mesh1;
    $mesh.$setVertices($this.$vertices2, 0, $this.$idx);
    var$4 = $this.$currentDataType;
    cbgg_Mesh$VertexDataType_$callClinit();
    if (var$4 === cbgg_Mesh$VertexDataType_VertexArray) {
        $indicesBuffer = $mesh.$getIndicesBuffer(1);
        $indicesBuffer.$position(0);
        $indicesBuffer.$limit($count);
    }
    if ($this.$blendingDisabled)
        cbg_Gdx_gl.$glDisable(3042);
    else {
        cbg_Gdx_gl.$glEnable(3042);
        if ($this.$blendSrcFunc != (-1))
            cbg_Gdx_gl.$glBlendFuncSeparate($this.$blendSrcFunc, $this.$blendDstFunc, $this.$blendSrcFuncAlpha, $this.$blendDstFuncAlpha);
    }
    $mesh.$render0($this.$customShader === null ? $this.$shader : $this.$customShader, 4, 0, $count);
    $this.$idx = 0;
},
cbggg_SpriteBatch_dispose = $this => {
    $this.$mesh1.$dispose();
    if ($this.$ownsShader0 && $this.$shader !== null)
        $this.$shader.$dispose();
},
cbggg_SpriteBatch_getTransformMatrix = $this => {
    return $this.$transformMatrix0;
},
cbggg_SpriteBatch_setProjectionMatrix = ($this, $projection) => {
    if ($this.$drawing)
        $this.$flush();
    $this.$projectionMatrix.$set1($projection);
    if ($this.$drawing)
        $this.$setupMatrices();
},
cbggg_SpriteBatch_setTransformMatrix = ($this, $transform) => {
    if ($this.$drawing)
        $this.$flush();
    $this.$transformMatrix0.$set1($transform);
    if ($this.$drawing)
        $this.$setupMatrices();
},
cbggg_SpriteBatch_setupMatrices = $this => {
    ($this.$combinedMatrix0.$set1($this.$projectionMatrix)).$mul1($this.$transformMatrix0);
    if ($this.$customShader === null) {
        $this.$shader.$setUniformMatrix($rt_s(358), $this.$combinedMatrix0);
        $this.$shader.$setUniformi($rt_s(359), 0);
    } else {
        $this.$customShader.$setUniformMatrix($rt_s(358), $this.$combinedMatrix0);
        $this.$customShader.$setUniformi($rt_s(359), 0);
    }
},
cbggg_SpriteBatch_switchTexture = ($this, $texture) => {
    $this.$flush();
    $this.$lastTexture = $texture;
    $this.$invTexWidth = 1.0 / $texture.$getWidth0();
    $this.$invTexHeight = 1.0 / $texture.$getHeight0();
},
cbggg_SpriteBatch_isBlendingEnabled = $this => {
    return $this.$blendingDisabled ? 0 : 1;
},
cbggg_SpriteBatch__clinit_ = () => {
    cbgg_Mesh$VertexDataType_$callClinit();
    cbggg_SpriteBatch_defaultVertexDataType = cbgg_Mesh$VertexDataType_VertexBufferObject;
    cbggg_SpriteBatch_overrideVertexType = null;
},
cbgg_Mesh$1 = $rt_classWithoutFields(),
cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = null,
cbgg_Mesh$1_$callClinit = () => {
    cbgg_Mesh$1_$callClinit = $rt_eraseClinit(cbgg_Mesh$1);
    cbgg_Mesh$1__clinit_();
},
cbgg_Mesh$1__clinit_ = () => {
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType = $rt_createIntArray((cbgg_Mesh$VertexDataType_values()).data.length);
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(cbgg_Mesh$VertexDataType_VertexBufferObject)] = 1;
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(cbgg_Mesh$VertexDataType_VertexBufferObjectSubData)] = 2;
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO)] = 3;
    cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal(cbgg_Mesh$VertexDataType_VertexArray)] = 4;
},
otjt_Float32Array = $rt_classWithoutFields(otjt_TypedArray),
cbggg_RenderableProvider = $rt_classWithoutFields(0);
function cbggg_ModelInstance() {
    let a = this; jl_Object.call(a);
    a.$materials = null;
    a.$nodes = null;
    a.$animations = null;
    a.$model0 = null;
    a.$transform0 = null;
    a.$userData0 = null;
}
let cbggg_ModelInstance_defaultShareKeyframes = 0,
cbggg_ModelInstance_$callClinit = () => {
    cbggg_ModelInstance_$callClinit = $rt_eraseClinit(cbggg_ModelInstance);
    cbggg_ModelInstance__clinit_();
},
cbggg_ModelInstance__init_1 = ($this, $model) => {
    cbggg_ModelInstance_$callClinit();
    cbggg_ModelInstance__init_($this, $model, null);
},
cbggg_ModelInstance__init_2 = var_0 => {
    let var_1 = new cbggg_ModelInstance();
    cbggg_ModelInstance__init_1(var_1, var_0);
    return var_1;
},
cbggg_ModelInstance__init_ = ($this, $model, $rootNodeIds) => {
    cbggg_ModelInstance_$callClinit();
    cbggg_ModelInstance__init_0($this, $model, null, $rootNodeIds);
},
cbggg_ModelInstance__init_3 = (var_0, var_1) => {
    let var_2 = new cbggg_ModelInstance();
    cbggg_ModelInstance__init_(var_2, var_0, var_1);
    return var_2;
},
cbggg_ModelInstance__init_0 = ($this, $model, $transform, $rootNodeIds) => {
    cbggg_ModelInstance_$callClinit();
    jl_Object__init_($this);
    $this.$materials = cbgu_Array__init_();
    $this.$nodes = cbgu_Array__init_();
    $this.$animations = cbgu_Array__init_();
    $this.$model0 = $model;
    if ($transform === null)
        $transform = cbgm_Matrix4__init_();
    $this.$transform0 = $transform;
    if ($rootNodeIds !== null)
        cbggg_ModelInstance_copyNodes($this, $model.$nodes0, $rootNodeIds);
    else
        cbggg_ModelInstance_copyNodes0($this, $model.$nodes0);
    $this.$copyAnimations($model.$animations0, cbggg_ModelInstance_defaultShareKeyframes);
    $this.$calculateTransforms();
},
cbggg_ModelInstance__init_4 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_ModelInstance();
    cbggg_ModelInstance__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_ModelInstance_copyNodes0 = ($this, $nodes) => {
    let $i, $n, $node;
    $i = 0;
    $n = $nodes.$size0;
    while ($i < $n) {
        $node = $nodes.$get($i);
        $this.$nodes.$add1($node.$copy1());
        $i = $i + 1 | 0;
    }
    cbggg_ModelInstance_invalidate($this);
},
cbggg_ModelInstance_copyNodes = ($this, $nodes, $nodeIds) => {
    let $i, $n, var$5, $node, var$7, var$8, $nodeId;
    $i = 0;
    $n = $nodes.$size0;
    while ($i < $n) {
        var$5 = $nodeIds.data;
        $node = $nodes.$get($i);
        var$7 = var$5.length;
        var$8 = 0;
        a: {
            while (true) {
                if (var$8 >= var$7)
                    break a;
                $nodeId = var$5[var$8];
                if ($nodeId.$equals($node.$id))
                    break;
                var$8 = var$8 + 1 | 0;
            }
            $this.$nodes.$add1($node.$copy1());
        }
        $i = $i + 1 | 0;
    }
    cbggg_ModelInstance_invalidate($this);
},
cbggg_ModelInstance_invalidate0 = ($this, $node) => {
    let $i, $n, $part, $bindPose, $j, $midx, var$8, var$9;
    $i = 0;
    $n = $node.$parts.$size0;
    while ($i < $n) {
        a: {
            $part = $node.$parts.$get($i);
            $bindPose = $part.$invBoneBindTransforms;
            if ($bindPose !== null) {
                $j = 0;
                while (true) {
                    if ($j >= $bindPose.$size3)
                        break a;
                    $bindPose.$keys.data[$j] = $this.$getNode($bindPose.$keys.data[$j].$id);
                    $j = $j + 1 | 0;
                }
            }
        }
        if (!$this.$materials.$contains2($part.$material0, 1)) {
            $midx = $this.$materials.$indexOf($part.$material0, 0);
            if ($midx >= 0)
                $part.$material0 = $this.$materials.$get($midx);
            else {
                var$8 = $this.$materials;
                var$9 = $part.$material0.$copy2();
                $part.$material0 = var$9;
                var$8.$add1(var$9);
            }
        }
        $i = $i + 1 | 0;
    }
    $i = 0;
    $n = $node.$getChildCount();
    while ($i < $n) {
        cbggg_ModelInstance_invalidate0($this, $node.$getChild($i));
        $i = $i + 1 | 0;
    }
},
cbggg_ModelInstance_invalidate = $this => {
    let $i, $n;
    $i = 0;
    $n = $this.$nodes.$size0;
    while ($i < $n) {
        cbggg_ModelInstance_invalidate0($this, $this.$nodes.$get($i));
        $i = $i + 1 | 0;
    }
},
cbggg_ModelInstance_copyAnimations = ($this, $source, $shareKeyframes) => {
    let var$3, $anim;
    var$3 = $source.$iterator0();
    while (var$3.$hasNext()) {
        $anim = var$3.$next();
        $this.$copyAnimation($anim, $shareKeyframes);
    }
},
cbggg_ModelInstance_copyAnimation = ($this, $sourceAnim, $shareKeyframes) => {
    let $animation, var$4, $nanim, $node, $nodeAnim, var$8, $kf;
    $animation = cbgggm_Animation__init_0();
    $animation.$id3 = $sourceAnim.$id3;
    $animation.$duration = $sourceAnim.$duration;
    var$4 = $sourceAnim.$nodeAnimations.$iterator();
    while (var$4.$hasNext()) {
        $nanim = var$4.$next();
        $node = $this.$getNode($nanim.$node2.$id);
        if ($node === null)
            continue;
        a: {
            $nodeAnim = cbgggm_NodeAnimation__init_0();
            $nodeAnim.$node2 = $node;
            if ($shareKeyframes) {
                $nodeAnim.$translation = $nanim.$translation;
                $nodeAnim.$rotation = $nanim.$rotation;
                $nodeAnim.$scaling = $nanim.$scaling;
            } else {
                b: {
                    if ($nanim.$translation !== null) {
                        $nodeAnim.$translation = cbgu_Array__init_();
                        var$8 = $nanim.$translation.$iterator();
                        while (true) {
                            if (!var$8.$hasNext())
                                break b;
                            $kf = var$8.$next();
                            $nodeAnim.$translation.$add1(cbgggm_NodeKeyframe__init_($kf.$keytime, $kf.$value3));
                        }
                    }
                }
                c: {
                    if ($nanim.$rotation !== null) {
                        $nodeAnim.$rotation = cbgu_Array__init_();
                        var$8 = $nanim.$rotation.$iterator();
                        while (true) {
                            if (!var$8.$hasNext())
                                break c;
                            $kf = var$8.$next();
                            $nodeAnim.$rotation.$add1(cbgggm_NodeKeyframe__init_($kf.$keytime, $kf.$value3));
                        }
                    }
                }
                if ($nanim.$scaling !== null) {
                    $nodeAnim.$scaling = cbgu_Array__init_();
                    var$8 = $nanim.$scaling.$iterator();
                    while (true) {
                        if (!var$8.$hasNext())
                            break a;
                        $kf = var$8.$next();
                        $nodeAnim.$scaling.$add1(cbgggm_NodeKeyframe__init_($kf.$keytime, $kf.$value3));
                    }
                }
            }
        }
        if (!($nodeAnim.$translation === null && $nodeAnim.$rotation === null && $nodeAnim.$scaling === null))
            $animation.$nodeAnimations.$add1($nodeAnim);
    }
    if ($animation.$nodeAnimations.$size0 > 0)
        $this.$animations.$add1($animation);
},
cbggg_ModelInstance_getRenderables0 = ($this, $renderables, $pool) => {
    let var$3, $node;
    var$3 = $this.$nodes.$iterator();
    while (var$3.$hasNext()) {
        $node = var$3.$next();
        $this.$getRenderables($node, $renderables, $pool);
    }
},
cbggg_ModelInstance_getRenderable = ($this, $out, $node, $nodePart) => {
    $nodePart.$setRenderable($out);
    if ($nodePart.$bones0 === null && $this.$transform0 !== null)
        ($out.$worldTransform.$set1($this.$transform0)).$mul1($node.$globalTransform);
    else if ($this.$transform0 === null)
        $out.$worldTransform.$idt();
    else
        $out.$worldTransform.$set1($this.$transform0);
    $out.$userData = $this.$userData0;
    return $out;
},
cbggg_ModelInstance_getRenderables = ($this, $node, $renderables, $pool) => {
    let var$4, $nodePart, var$6, $child;
    a: {
        if ($node.$parts.$size0 > 0) {
            var$4 = $node.$parts.$iterator();
            while (true) {
                if (!var$4.$hasNext())
                    break a;
                $nodePart = var$4.$next();
                if ($nodePart.$enabled)
                    $renderables.$add1($this.$getRenderable($pool.$obtain0(), $node, $nodePart));
            }
        }
    }
    var$6 = ($node.$getChildren0()).$iterator0();
    while (var$6.$hasNext()) {
        $child = var$6.$next();
        $this.$getRenderables($child, $renderables, $pool);
    }
},
cbggg_ModelInstance_calculateTransforms = $this => {
    let $n, $i;
    $n = $this.$nodes.$size0;
    $i = 0;
    while ($i < $n) {
        ($this.$nodes.$get($i)).$calculateTransforms0(1);
        $i = $i + 1 | 0;
    }
    $i = 0;
    while ($i < $n) {
        ($this.$nodes.$get($i)).$calculateBoneTransforms(1);
        $i = $i + 1 | 0;
    }
},
cbggg_ModelInstance_getNode = ($this, $id) => {
    return $this.$getNode0($id, 1);
},
cbggg_ModelInstance_getNode0 = ($this, $id, $recursive) => {
    return $this.$getNode1($id, $recursive, 0);
},
cbggg_ModelInstance_getNode1 = ($this, $id, $recursive, $ignoreCase) => {
    return cbgggm_Node_getNode($this.$nodes, $id, $recursive, $ignoreCase);
},
cbggg_ModelInstance__clinit_ = () => {
    cbggg_ModelInstance_defaultShareKeyframes = 1;
};
function jur_CharClass() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$ci = 0;
    a.$uci = 0;
    a.$hasUCI0 = 0;
    a.$invertedSurrogates = 0;
    a.$inverted = 0;
    a.$hideBits = 0;
    a.$bits = null;
    a.$nonBitSet = null;
}
let jur_CharClass__init_1 = $this => {
    jur_AbstractCharClass__init_($this);
    $this.$bits = ju_BitSet__init_1();
},
jur_CharClass__init_ = () => {
    let var_0 = new jur_CharClass();
    jur_CharClass__init_1(var_0);
    return var_0;
},
jur_CharClass__init_0 = ($this, $ci, $uci) => {
    jur_AbstractCharClass__init_($this);
    $this.$bits = ju_BitSet__init_1();
    $this.$ci = $ci;
    $this.$uci = $uci;
},
jur_CharClass__init_4 = (var_0, var_1) => {
    let var_2 = new jur_CharClass();
    jur_CharClass__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass__init_2 = ($this, $negative, $ci, $uci) => {
    jur_CharClass__init_0($this, $ci, $uci);
    $this.$setNegative($negative);
},
jur_CharClass__init_3 = (var_0, var_1, var_2) => {
    let var_3 = new jur_CharClass();
    jur_CharClass__init_2(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_CharClass_add = ($this, $ch) => {
    a: {
        if ($this.$ci) {
            b: {
                if (!($ch >= 97 && $ch <= 122)) {
                    if ($ch < 65)
                        break b;
                    if ($ch > 90)
                        break b;
                }
                if ($this.$inverted) {
                    $this.$bits.$clear3(jur_Pattern_getSupplement($ch & 65535));
                    break a;
                }
                $this.$bits.$set17(jur_Pattern_getSupplement($ch & 65535));
                break a;
            }
            if ($this.$uci && $ch > 128) {
                $this.$hasUCI0 = 1;
                $ch = jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch));
            }
        }
    }
    if (!(!jur_Lexer_isHighSurrogate($ch) && !jur_Lexer_isLowSurrogate($ch))) {
        if ($this.$invertedSurrogates)
            $this.$lowHighSurrogates.$clear3($ch - 55296 | 0);
        else
            $this.$lowHighSurrogates.$set17($ch - 55296 | 0);
    }
    if ($this.$inverted)
        $this.$bits.$clear3($ch);
    else
        $this.$bits.$set17($ch);
    if (!$this.$mayContainSupplCodepoints0 && jl_Character_isSupplementaryCodePoint($ch))
        $this.$mayContainSupplCodepoints0 = 1;
    return $this;
},
jur_CharClass_add1 = ($this, $cc) => {
    let $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints0 && $cc.$mayContainSupplCodepoints0)
        $this.$mayContainSupplCodepoints0 = 1;
    if ($this.$invertedSurrogates) {
        if (!$cc.$altSurrogates)
            $this.$lowHighSurrogates.$andNot($cc.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$and($cc.$getLowHighSurrogates());
    } else if (!$cc.$altSurrogates)
        $this.$lowHighSurrogates.$or($cc.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($cc.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($cc.$getLowHighSurrogates());
        $this.$altSurrogates = $this.$altSurrogates ? 0 : 1;
        $this.$invertedSurrogates = 1;
    }
    if (!$this.$hideBits && $cc.$getBits() !== null) {
        if ($this.$inverted) {
            if (!$cc.$isNegative())
                $this.$bits.$andNot($cc.$getBits());
            else
                $this.$bits.$and($cc.$getBits());
        } else if (!$cc.$isNegative())
            $this.$bits.$or($cc.$getBits());
        else {
            $this.$bits.$xor($cc.$getBits());
            $this.$bits.$and($cc.$getBits());
            $this.$alt = $this.$alt ? 0 : 1;
            $this.$inverted = 1;
        }
    } else {
        $curAlt = $this.$alt;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$5__init_0($this, $curAlt, $nb, $cc);
            else
                $this.$nonBitSet = jur_CharClass$4__init_0($this, $curAlt, $nb, $cc);
        } else {
            if ($curAlt && !$this.$inverted && $this.$bits.$isEmpty())
                $this.$nonBitSet = jur_CharClass$1__init_0($this, $cc);
            else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$3__init_0($this, $curAlt, $cc);
            else
                $this.$nonBitSet = jur_CharClass$2__init_0($this, $curAlt, $cc);
            $this.$hideBits = 1;
        }
    }
    return $this;
},
jur_CharClass_add0 = ($this, $i, $end) => {
    if ($i > $end)
        $rt_throw(jl_IllegalArgumentException__init_0());
    a: {
        b: {
            if (!$this.$ci) {
                if ($end < 55296)
                    break b;
                if ($i > 57343)
                    break b;
            }
            while (true) {
                if ($i >= ($end + 1 | 0))
                    break a;
                $this.$add($i);
                $i = $i + 1 | 0;
            }
        }
        if ($this.$inverted)
            $this.$bits.$clear4($i, $end + 1 | 0);
        else
            $this.$bits.$set6($i, $end + 1 | 0);
    }
    return $this;
},
jur_CharClass_union = ($this, $clazz) => {
    let $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints0 && $clazz.$mayContainSupplCodepoints0)
        $this.$mayContainSupplCodepoints0 = 1;
    if ($clazz.$hasUCI())
        $this.$hasUCI0 = 1;
    if (!($this.$altSurrogates ^ $clazz.$altSurrogates)) {
        if (!$this.$altSurrogates)
            $this.$lowHighSurrogates.$or($clazz.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
    } else if ($this.$altSurrogates)
        $this.$lowHighSurrogates.$andNot($clazz.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($clazz.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        $this.$altSurrogates = 1;
    }
    if (!$this.$hideBits && $clazz.$getBits() !== null) {
        if (!($this.$alt ^ $clazz.$isNegative())) {
            if (!$this.$alt)
                $this.$bits.$or($clazz.$getBits());
            else
                $this.$bits.$and($clazz.$getBits());
        } else if ($this.$alt)
            $this.$bits.$andNot($clazz.$getBits());
        else {
            $this.$bits.$xor($clazz.$getBits());
            $this.$bits.$and($clazz.$getBits());
            $this.$alt = 1;
        }
    } else {
        $curAlt = $this.$alt;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$11__init_0($this, $curAlt, $nb, $clazz);
            else
                $this.$nonBitSet = jur_CharClass$10__init_0($this, $curAlt, $nb, $clazz);
        } else {
            if (!$this.$inverted && $this.$bits.$isEmpty()) {
                if (!$curAlt)
                    $this.$nonBitSet = jur_CharClass$7__init_0($this, $clazz);
                else
                    $this.$nonBitSet = jur_CharClass$6__init_0($this, $clazz);
            } else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$9__init_0($this, $clazz, $curAlt);
            else
                $this.$nonBitSet = jur_CharClass$8__init_0($this, $clazz, $curAlt);
            $this.$hideBits = 1;
        }
    }
},
jur_CharClass_intersection = ($this, $clazz) => {
    let $curAlt, $nb;
    if (!$this.$mayContainSupplCodepoints0 && $clazz.$mayContainSupplCodepoints0)
        $this.$mayContainSupplCodepoints0 = 1;
    if ($clazz.$hasUCI())
        $this.$hasUCI0 = 1;
    if (!($this.$altSurrogates ^ $clazz.$altSurrogates)) {
        if (!$this.$altSurrogates)
            $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        else
            $this.$lowHighSurrogates.$or($clazz.$getLowHighSurrogates());
    } else if (!$this.$altSurrogates)
        $this.$lowHighSurrogates.$andNot($clazz.$getLowHighSurrogates());
    else {
        $this.$lowHighSurrogates.$xor($clazz.$getLowHighSurrogates());
        $this.$lowHighSurrogates.$and($clazz.$getLowHighSurrogates());
        $this.$altSurrogates = 0;
    }
    if (!$this.$hideBits && $clazz.$getBits() !== null) {
        if (!($this.$alt ^ $clazz.$isNegative())) {
            if (!$this.$alt)
                $this.$bits.$and($clazz.$getBits());
            else
                $this.$bits.$or($clazz.$getBits());
        } else if (!$this.$alt)
            $this.$bits.$andNot($clazz.$getBits());
        else {
            $this.$bits.$xor($clazz.$getBits());
            $this.$bits.$and($clazz.$getBits());
            $this.$alt = 0;
        }
    } else {
        $curAlt = $this.$alt;
        if ($this.$nonBitSet !== null) {
            $nb = $this.$nonBitSet;
            if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$17__init_0($this, $curAlt, $nb, $clazz);
            else
                $this.$nonBitSet = jur_CharClass$16__init_0($this, $curAlt, $nb, $clazz);
        } else {
            if (!$this.$inverted && $this.$bits.$isEmpty()) {
                if (!$curAlt)
                    $this.$nonBitSet = jur_CharClass$13__init_0($this, $clazz);
                else
                    $this.$nonBitSet = jur_CharClass$12__init_0($this, $clazz);
            } else if (!$curAlt)
                $this.$nonBitSet = jur_CharClass$15__init_0($this, $clazz, $curAlt);
            else
                $this.$nonBitSet = jur_CharClass$14__init_0($this, $clazz, $curAlt);
            $this.$hideBits = 1;
        }
    }
},
jur_CharClass_contains = ($this, $ch) => {
    if ($this.$nonBitSet !== null)
        return $this.$alt ^ $this.$nonBitSet.$contains($ch);
    return $this.$alt ^ $this.$bits.$get16($ch);
},
jur_CharClass_getBits = $this => {
    if (!$this.$hideBits)
        return $this.$bits;
    return null;
},
jur_CharClass_getLowHighSurrogates = $this => {
    return $this.$lowHighSurrogates;
},
jur_CharClass_getInstance = $this => {
    let $bs, $res;
    if ($this.$nonBitSet !== null)
        return $this;
    $bs = $this.$getBits();
    $res = jur_CharClass$18__init_0($this, $bs);
    return $res.$setNegative($this.$isNegative());
},
jur_CharClass_toString = $this => {
    let $temp, $i;
    $temp = jl_StringBuilder__init_();
    $i = $this.$bits.$nextSetBit(0);
    while ($i >= 0) {
        $temp.$append18(jl_Character_toChars($i));
        $temp.$append0(124);
        $i = $this.$bits.$nextSetBit($i + 1 | 0);
    }
    if ($temp.$length() > 0)
        $temp.$deleteCharAt($temp.$length() - 1 | 0);
    return $temp.$toString();
},
jur_CharClass_hasUCI = $this => {
    return $this.$hasUCI0;
},
cgxjl_JParserLibraryLoader$OnInitFunction = $rt_classWithoutFields(0);
function cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_17_0() {
    let a = this; jl_Object.call(a);
    a.$_023 = null;
    a.$_19 = null;
}
let cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_17_0__init_ = (var$0, var$1, var$2) => {
    jl_Object__init_(var$0);
    var$0.$_023 = var$1;
    var$0.$_19 = var$2;
},
cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_17_0__init_0 = (var_0, var_1) => {
    let var_2 = new cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_17_0();
    cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_17_0__init_(var_2, var_0, var_1);
    return var_2;
},
cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_17_0_onInit = var$0 => {
    cgxjl_JParserLibraryLoader_lambda$loadWasm$0(var$0.$_023, var$0.$_19);
},
cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_17_0_onInit$exported$0 = var$1 => {
    var$1.$onInit();
},
jn_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException),
jn_BufferUnderflowException__init_0 = $this => {
    jl_RuntimeException__init_($this);
},
jn_BufferUnderflowException__init_ = () => {
    let var_0 = new jn_BufferUnderflowException();
    jn_BufferUnderflowException__init_0(var_0);
    return var_0;
},
cbgi_GestureDetector$GestureListener = $rt_classWithoutFields(0),
cbgi_GestureDetector$GestureAdapter = $rt_classWithoutFields(),
cbgi_GestureDetector$GestureAdapter__init_ = $this => {
    jl_Object__init_($this);
},
cbgi_GestureDetector$GestureAdapter__init_0 = () => {
    let var_0 = new cbgi_GestureDetector$GestureAdapter();
    cbgi_GestureDetector$GestureAdapter__init_(var_0);
    return var_0;
},
cbgi_GestureDetector$GestureAdapter_panStop = ($this, $x, $y, $pointer, $button) => {
    return 0;
},
cbgi_GestureDetector$GestureAdapter_pinchStop = $this => {
    return;
};
function cbgggu_CameraInputController$CameraGestureListener() {
    let a = this; cbgi_GestureDetector$GestureAdapter.call(a);
    a.$controller = null;
    a.$previousZoom = 0.0;
}
let cbgggu_CameraInputController$CameraGestureListener__init_ = $this => {
    cbgi_GestureDetector$GestureAdapter__init_($this);
},
cbgggu_CameraInputController$CameraGestureListener__init_0 = () => {
    let var_0 = new cbgggu_CameraInputController$CameraGestureListener();
    cbgggu_CameraInputController$CameraGestureListener__init_(var_0);
    return var_0;
},
cbgggu_CameraInputController$CameraGestureListener_touchDown = ($this, $x, $y, $pointer, $button) => {
    $this.$previousZoom = 0.0;
    return 0;
},
cbgggu_CameraInputController$CameraGestureListener_tap = ($this, $x, $y, $count, $button) => {
    return 0;
},
cbgggu_CameraInputController$CameraGestureListener_longPress = ($this, $x, $y) => {
    return 0;
},
cbgggu_CameraInputController$CameraGestureListener_fling = ($this, $velocityX, $velocityY, $button) => {
    return 0;
},
cbgggu_CameraInputController$CameraGestureListener_pan = ($this, $x, $y, $deltaX, $deltaY) => {
    return 0;
},
cbgggu_CameraInputController$CameraGestureListener_zoom = ($this, $initialDistance, $distance) => {
    let $newZoom, $amount, $w, $h, var$7;
    $newZoom = $distance - $initialDistance;
    $amount = $newZoom - $this.$previousZoom;
    $this.$previousZoom = $newZoom;
    $w = cbg_Gdx_graphics.$getWidth0();
    $h = cbg_Gdx_graphics.$getHeight0();
    var$7 = $this.$controller;
    if ($w > $h)
        $w = $h;
    return var$7.$pinchZoom($amount / $w);
},
cbgggu_CameraInputController$CameraGestureListener_pinch = ($this, $initialPointer1, $initialPointer2, $pointer1, $pointer2) => {
    return 0;
},
cbgss_EventListener = $rt_classWithoutFields(0),
bih_IDLArrayBase = $rt_classWithoutFields(bi_IDLBase),
bih_IDLArrayBase_onNativeAddressChanged = $this => {
    $this.$native_void_address = $this.$getPointer();
},
bih_IDLArrayBase__init_ = ($this, $b, $c) => {
    bi_IDLBase__init_($this);
},
bih_IDLArrayBase__init_0 = (var_0, var_1) => {
    let var_2 = new bih_IDLArrayBase();
    bih_IDLArrayBase__init_(var_2, var_0, var_1);
    return var_2;
},
bih_IDLArrayBase_getPointer = $this => {
    return bih_IDLArrayBase_internal_native_getPointer$js_body$_12($this.$native_address);
},
bih_IDLArrayBase_internal_native_getPointer$js_body$_12 = var$1 => {
    var jsObj = bullet.wrapPointer(var$1, bullet.IDLArrayBase);
    var returnedJSObj = jsObj.getPointer();
    return returnedJSObj;
},
bih_IDLFloatArray = $rt_classWithoutFields(bih_IDLArrayBase),
bih_IDLFloatArray_NULL = null,
bih_IDLFloatArray_$callClinit = () => {
    bih_IDLFloatArray_$callClinit = $rt_eraseClinit(bih_IDLFloatArray);
    bih_IDLFloatArray__clinit_();
},
bih_IDLFloatArray_native_new = () => {
    bih_IDLFloatArray_$callClinit();
    return bih_IDLFloatArray__init_1(1, 1);
},
bih_IDLFloatArray__init_ = ($this, $b, $c) => {
    bih_IDLFloatArray_$callClinit();
    bih_IDLArrayBase__init_($this, 1, 1);
},
bih_IDLFloatArray__init_1 = (var_0, var_1) => {
    let var_2 = new bih_IDLFloatArray();
    bih_IDLFloatArray__init_(var_2, var_0, var_1);
    return var_2;
},
bih_IDLFloatArray__init_0 = ($this, $size) => {
    let $addr;
    bih_IDLFloatArray_$callClinit();
    bih_IDLArrayBase__init_($this, 1, 1);
    $addr = bih_IDLFloatArray_internal_native_create_int$js_body$_4($size);
    bi_IDLBase_internal_reset($this, $addr, 1);
},
bih_IDLFloatArray__init_2 = var_0 => {
    let var_1 = new bih_IDLFloatArray();
    bih_IDLFloatArray__init_0(var_1, var_0);
    return var_1;
},
bih_IDLFloatArray_setValue = ($this, $index, $value) => {
    bih_IDLFloatArray_internal_native_setValue$js_body$_10($this.$native_address, $index, $value);
},
bih_IDLFloatArray__clinit_ = () => {
    bih_IDLFloatArray_NULL = bih_IDLFloatArray_native_new();
},
bih_IDLFloatArray_internal_native_create_int$js_body$_4 = var$1 => {
    var jsObj = new bullet.IDLFloatArray(var$1);
    return bullet.getPointer(jsObj);
},
bih_IDLFloatArray_internal_native_setValue$js_body$_10 = (var$1, var$2, var$3) => {
    var jsObj = bullet.wrapPointer(var$1, bullet.IDLFloatArray);
    jsObj.setValue(var$2, var$3);
},
cbggg_Shader = $rt_classWithoutFields(0);
function cbgggs_BaseShader() {
    let a = this; jl_Object.call(a);
    a.$uniforms = null;
    a.$validators = null;
    a.$setters = null;
    a.$locations = null;
    a.$globalUniforms = null;
    a.$localUniforms = null;
    a.$attributes6 = null;
    a.$instancedAttributes = null;
    a.$program = null;
    a.$context = null;
    a.$camera0 = null;
    a.$currentMesh = null;
    a.$tempArray = null;
    a.$tempArray2 = null;
    a.$combinedAttributes = null;
}
let cbgggs_BaseShader__init_ = $this => {
    jl_Object__init_($this);
    $this.$uniforms = cbgu_Array__init_();
    $this.$validators = cbgu_Array__init_();
    $this.$setters = cbgu_Array__init_();
    $this.$globalUniforms = cbgu_IntArray__init_();
    $this.$localUniforms = cbgu_IntArray__init_();
    $this.$attributes6 = cbgu_IntIntMap__init_0();
    $this.$instancedAttributes = cbgu_IntIntMap__init_0();
    $this.$tempArray = cbgu_IntArray__init_();
    $this.$tempArray2 = cbgu_IntArray__init_();
    $this.$combinedAttributes = cbggg_Attributes__init_0();
},
cbgggs_BaseShader_register = ($this, $alias, $validator, $setter) => {
    let $existing;
    if ($this.$locations !== null)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(360)));
    $existing = $this.$getUniformID($alias);
    if ($existing >= 0) {
        $this.$validators.$set13($existing, $validator);
        $this.$setters.$set13($existing, $setter);
        return $existing;
    }
    $this.$uniforms.$add1($alias);
    $this.$validators.$add1($validator);
    $this.$setters.$add1($setter);
    return $this.$uniforms.$size0 - 1 | 0;
},
cbgggs_BaseShader_register1 = ($this, $uniform, $setter) => {
    return $this.$register($uniform.$alias0, $uniform, $setter);
},
cbgggs_BaseShader_register0 = ($this, $uniform) => {
    return $this.$register0($uniform, null);
},
cbgggs_BaseShader_getUniformID = ($this, $alias) => {
    let $n, $i;
    $n = $this.$uniforms.$size0;
    $i = 0;
    while (true) {
        if ($i >= $n)
            return (-1);
        if (($this.$uniforms.$get($i)).$equals($alias))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
cbgggs_BaseShader_init = ($this, $program, $renderable) => {
    let $n, $i, $input, $validator, $setter, $attrs, $c, $attr, $location, $iattrs, $ic;
    if ($this.$locations !== null)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(361)));
    if (!$program.$isCompiled())
        $rt_throw(cbgu_GdxRuntimeException__init_($program.$getLog()));
    $this.$program = $program;
    $n = $this.$uniforms.$size0;
    $this.$locations = $rt_createIntArray($n);
    $i = 0;
    while ($i < $n) {
        $input = $this.$uniforms.$get($i);
        $validator = $this.$validators.$get($i);
        $setter = $this.$setters.$get($i);
        if ($validator !== null && !$validator.$validate0($this, $i, $renderable))
            $this.$locations.data[$i] = (-1);
        else {
            $this.$locations.data[$i] = $program.$fetchUniformLocation($input, 0);
            if ($this.$locations.data[$i] >= 0 && $setter !== null) {
                if (!$setter.$isGlobal($this, $i))
                    $this.$localUniforms.$add2($i);
                else
                    $this.$globalUniforms.$add2($i);
            }
        }
        if ($this.$locations.data[$i] < 0) {
            $this.$validators.$set13($i, null);
            $this.$setters.$set13($i, null);
        }
        $i = $i + 1 | 0;
    }
    a: {
        if ($renderable !== null) {
            $attrs = $renderable.$meshPart.$mesh.$getVertexAttributes();
            $c = cbgg_VertexAttributes_size($attrs);
            $i = 0;
            while ($i < $c) {
                $attr = cbgg_VertexAttributes_get($attrs, $i);
                $location = $program.$getAttributeLocation($attr.$alias);
                if ($location >= 0)
                    $this.$attributes6.$put4(cbgg_VertexAttribute_getKey($attr), $location);
                $i = $i + 1 | 0;
            }
            $iattrs = $renderable.$meshPart.$mesh.$getInstancedAttributes();
            if ($iattrs !== null) {
                $ic = cbgg_VertexAttributes_size($iattrs);
                $i = 0;
                while (true) {
                    if ($i >= $ic)
                        break a;
                    $attr = cbgg_VertexAttributes_get($iattrs, $i);
                    $location = $program.$getAttributeLocation($attr.$alias);
                    if ($location >= 0)
                        $this.$instancedAttributes.$put4(cbgg_VertexAttribute_getKey($attr), $location);
                    $i = $i + 1 | 0;
                }
            }
        }
    }
},
cbgggs_BaseShader_begin = ($this, $camera, $context) => {
    let $i, var$4, var$5;
    $this.$camera0 = $camera;
    $this.$context = $context;
    $this.$program.$bind();
    $this.$currentMesh = null;
    $i = 0;
    while ($i < $this.$globalUniforms.$size1) {
        var$4 = $this.$setters;
        var$5 = $this.$globalUniforms.$get1($i);
        if (var$4.$get(var$5) !== null)
            ($this.$setters.$get(var$5)).$set18($this, var$5, null, null);
        $i = $i + 1 | 0;
    }
},
cbgggs_BaseShader_getAttributeLocations = ($this, $attrs) => {
    let $n, $i;
    $this.$tempArray.$clear();
    $n = cbgg_VertexAttributes_size($attrs);
    $i = 0;
    while ($i < $n) {
        $this.$tempArray.$add2($this.$attributes6.$get17(cbgg_VertexAttribute_getKey(cbgg_VertexAttributes_get($attrs, $i)), (-1)));
        $i = $i + 1 | 0;
    }
    $this.$tempArray.$shrink();
    return $this.$tempArray.$items1;
},
cbgggs_BaseShader_getInstancedAttributeLocations = ($this, $attrs) => {
    let $n, $i;
    if ($attrs === null)
        return null;
    $this.$tempArray2.$clear();
    $n = cbgg_VertexAttributes_size($attrs);
    $i = 0;
    while ($i < $n) {
        $this.$tempArray2.$add2($this.$instancedAttributes.$get17(cbgg_VertexAttribute_getKey(cbgg_VertexAttributes_get($attrs, $i)), (-1)));
        $i = $i + 1 | 0;
    }
    $this.$tempArray2.$shrink();
    return $this.$tempArray2.$items1;
},
cbgggs_BaseShader_render0 = ($this, $renderable) => {
    if ($renderable.$worldTransform.$det3x3() === 0.0)
        return;
    $this.$combinedAttributes.$clear();
    if ($renderable.$environment !== null)
        cbggg_Attributes_set0($this.$combinedAttributes, $renderable.$environment);
    if ($renderable.$material !== null)
        cbggg_Attributes_set0($this.$combinedAttributes, $renderable.$material);
    $this.$render1($renderable, $this.$combinedAttributes);
},
cbgggs_BaseShader_render = ($this, $renderable, $combinedAttributes) => {
    let $i, var$4, var$5, var$6, var$7, var$8, var$9;
    $i = 0;
    while ($i < $this.$localUniforms.$size1) {
        var$4 = $this.$setters;
        var$5 = $this.$localUniforms.$get1($i);
        if (var$4.$get(var$5) !== null)
            ($this.$setters.$get(var$5)).$set18($this, var$5, $renderable, $combinedAttributes);
        $i = $i + 1 | 0;
    }
    if ($this.$currentMesh !== $renderable.$meshPart.$mesh) {
        if ($this.$currentMesh !== null)
            $this.$currentMesh.$unbind0($this.$program, $this.$tempArray.$items1, $this.$tempArray2.$items1);
        $this.$currentMesh = $renderable.$meshPart.$mesh;
        var$4 = $this.$currentMesh;
        var$6 = $this.$program;
        var$7 = cbgggs_BaseShader_getAttributeLocations($this, $renderable.$meshPart.$mesh.$getVertexAttributes());
        var$8 = $renderable.$meshPart.$mesh;
        var$9 = cbgggs_BaseShader_getInstancedAttributeLocations($this, var$8.$getInstancedAttributes());
        var$4.$bind0(var$6, var$7, var$9);
    }
    $renderable.$meshPart.$render2($this.$program, 0);
},
cbgggs_BaseShader_end = $this => {
    if ($this.$currentMesh !== null) {
        $this.$currentMesh.$unbind0($this.$program, $this.$tempArray.$items1, $this.$tempArray2.$items1);
        $this.$currentMesh = null;
    }
},
cbgggs_BaseShader_has = ($this, $inputID) => {
    return $inputID >= 0 && $inputID < $this.$locations.data.length && $this.$locations.data[$inputID] >= 0 ? 1 : 0;
},
cbgggs_BaseShader_loc = ($this, $inputID) => {
    return $inputID >= 0 && $inputID < $this.$locations.data.length ? $this.$locations.data[$inputID] : (-1);
},
cbgggs_BaseShader_set1 = ($this, $uniform, $value) => {
    if ($this.$locations.data[$uniform] < 0)
        return 0;
    $this.$program.$setUniformMatrix0($this.$locations.data[$uniform], $value);
    return 1;
},
cbgggs_BaseShader_set5 = ($this, $uniform, $value) => {
    if ($this.$locations.data[$uniform] < 0)
        return 0;
    $this.$program.$setUniformMatrix1($this.$locations.data[$uniform], $value);
    return 1;
},
cbgggs_BaseShader_set4 = ($this, $uniform, $value) => {
    if ($this.$locations.data[$uniform] < 0)
        return 0;
    $this.$program.$setUniformf($this.$locations.data[$uniform], $value);
    return 1;
},
cbgggs_BaseShader_set3 = ($this, $uniform, $value) => {
    if ($this.$locations.data[$uniform] < 0)
        return 0;
    $this.$program.$setUniformf0($this.$locations.data[$uniform], $value);
    return 1;
},
cbgggs_BaseShader_set2 = ($this, $uniform, $value) => {
    if ($this.$locations.data[$uniform] < 0)
        return 0;
    $this.$program.$setUniformf1($this.$locations.data[$uniform], $value);
    return 1;
},
cbgggs_BaseShader_set6 = ($this, $uniform, $v1, $v2) => {
    if ($this.$locations.data[$uniform] < 0)
        return 0;
    $this.$program.$setUniformf2($this.$locations.data[$uniform], $v1, $v2);
    return 1;
},
cbgggs_BaseShader_set = ($this, $uniform, $v1, $v2, $v3, $v4) => {
    if ($this.$locations.data[$uniform] < 0)
        return 0;
    $this.$program.$setUniformf3($this.$locations.data[$uniform], $v1, $v2, $v3, $v4);
    return 1;
},
cbgggs_BaseShader_set0 = ($this, $uniform, $value) => {
    if ($this.$locations.data[$uniform] < 0)
        return 0;
    $this.$program.$setUniformi0($this.$locations.data[$uniform], $value);
    return 1;
},
cbgggs_BaseShader_set7 = ($this, $uniform, $textureDesc) => {
    if ($this.$locations.data[$uniform] < 0)
        return 0;
    $this.$program.$setUniformi0($this.$locations.data[$uniform], $this.$context.$textureBinder.$bind1($textureDesc));
    return 1;
},
ji_IOException = $rt_classWithoutFields(jl_Exception),
ji_IOException__init_0 = $this => {
    jl_Exception__init_($this);
},
ji_IOException__init_1 = () => {
    let var_0 = new ji_IOException();
    ji_IOException__init_0(var_0);
    return var_0;
},
ji_IOException__init_ = ($this, $message) => {
    jl_Exception__init_0($this, $message);
},
ji_IOException__init_2 = var_0 => {
    let var_1 = new ji_IOException();
    ji_IOException__init_(var_1, var_0);
    return var_1;
},
jnc_CharacterCodingException = $rt_classWithoutFields(ji_IOException),
jnc_CharacterCodingException__init_ = $this => {
    ji_IOException__init_0($this);
},
jnc_CharacterCodingException__init_0 = () => {
    let var_0 = new jnc_CharacterCodingException();
    jnc_CharacterCodingException__init_(var_0);
    return var_0;
};
function jnc_MalformedInputException() {
    jnc_CharacterCodingException.call(this);
    this.$length6 = 0;
}
let jnc_MalformedInputException__init_ = ($this, $length) => {
    jnc_CharacterCodingException__init_($this);
    $this.$length6 = $length;
},
jnc_MalformedInputException__init_0 = var_0 => {
    let var_1 = new jnc_MalformedInputException();
    jnc_MalformedInputException__init_(var_1, var_0);
    return var_1;
},
jnc_MalformedInputException_getMessage = $this => {
    let var$1, var$2;
    var$1 = $this.$length6;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(362)), var$1);
    return jl_StringBuilder_toString(var$2);
},
cbgg_Pixmap$Filter = $rt_classWithoutFields(jl_Enum),
cbgg_Pixmap$Filter_NearestNeighbour = null,
cbgg_Pixmap$Filter_BiLinear = null,
cbgg_Pixmap$Filter_$VALUES = null,
cbgg_Pixmap$Filter_$callClinit = () => {
    cbgg_Pixmap$Filter_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Filter);
    cbgg_Pixmap$Filter__clinit_();
},
cbgg_Pixmap$Filter__init_0 = ($this, var$1, var$2) => {
    cbgg_Pixmap$Filter_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cbgg_Pixmap$Filter__init_ = (var_0, var_1) => {
    let var_2 = new cbgg_Pixmap$Filter();
    cbgg_Pixmap$Filter__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgg_Pixmap$Filter__clinit_ = () => {
    let var$1, var$2;
    cbgg_Pixmap$Filter_NearestNeighbour = cbgg_Pixmap$Filter__init_($rt_s(363), 0);
    cbgg_Pixmap$Filter_BiLinear = cbgg_Pixmap$Filter__init_($rt_s(364), 1);
    var$1 = $rt_createArray(cbgg_Pixmap$Filter, 2);
    var$2 = var$1.data;
    var$2[0] = cbgg_Pixmap$Filter_NearestNeighbour;
    var$2[1] = cbgg_Pixmap$Filter_BiLinear;
    cbgg_Pixmap$Filter_$VALUES = var$1;
};
function cbggg_Attribute() {
    let a = this; jl_Object.call(a);
    a.$type1 = Long_ZERO;
    a.$typeBit = 0;
}
let cbggg_Attribute_types = null,
cbggg_Attribute_$callClinit = () => {
    cbggg_Attribute_$callClinit = $rt_eraseClinit(cbggg_Attribute);
    cbggg_Attribute__clinit_();
},
cbggg_Attribute_getAttributeType = $alias => {
    let $i;
    cbggg_Attribute_$callClinit();
    $i = 0;
    while ($i < cbggg_Attribute_types.$size0) {
        if (!(cbggg_Attribute_types.$get($i)).$compareTo($alias))
            return Long_shl(Long_fromInt(1), $i);
        $i = $i + 1 | 0;
    }
    return Long_ZERO;
},
cbggg_Attribute_getAttributeAlias = $type => {
    let $idx;
    cbggg_Attribute_$callClinit();
    $idx = (-1);
    a: {
        while (Long_ne($type, Long_ZERO)) {
            $idx = $idx + 1 | 0;
            if ($idx >= 63)
                break a;
            if (Long_ne(Long_and(Long_shr($type, $idx), Long_fromInt(1)), Long_ZERO))
                break a;
        }
    }
    return $idx >= 0 && $idx < cbggg_Attribute_types.$size0 ? cbggg_Attribute_types.$get($idx) : null;
},
cbggg_Attribute_register = $alias => {
    let $result;
    cbggg_Attribute_$callClinit();
    $result = cbggg_Attribute_getAttributeType($alias);
    if (Long_gt($result, Long_ZERO))
        return $result;
    if (cbggg_Attribute_types.$size0 < 64) {
        cbggg_Attribute_types.$add1($alias);
        return Long_shl(Long_fromInt(1), cbggg_Attribute_types.$size0 - 1 | 0);
    }
    $rt_throw(cbgu_GdxRuntimeException__init_(((((jl_StringBuilder__init_()).$append1($rt_s(365))).$append1($alias)).$append1($rt_s(366))).$toString()));
},
cbggg_Attribute__init_ = ($this, $type) => {
    cbggg_Attribute_$callClinit();
    jl_Object__init_($this);
    $this.$type1 = $type;
    $this.$typeBit = jl_Long_numberOfTrailingZeros($type);
},
cbggg_Attribute_equals0 = ($this, $other) => {
    return $other.$hashCode0() != $this.$hashCode0() ? 0 : 1;
},
cbggg_Attribute_equals = ($this, $obj) => {
    let $other;
    if ($obj === null)
        return 0;
    if ($obj === $this)
        return 1;
    if (!($obj instanceof cbggg_Attribute))
        return 0;
    $other = $obj;
    if (Long_eq($this.$type1, $other.$type1))
        return $this.$equals1($other);
    return 0;
},
cbggg_Attribute_toString = $this => {
    return cbggg_Attribute_getAttributeAlias($this.$type1);
},
cbggg_Attribute_hashCode = $this => {
    return 7489 * $this.$typeBit | 0;
},
cbggg_Attribute__clinit_ = () => {
    cbggg_Attribute_types = cbgu_Array__init_();
};
function cbggga_FloatAttribute() {
    cbggg_Attribute.call(this);
    this.$value2 = 0.0;
}
let cbggga_FloatAttribute_Shininess = Long_ZERO,
cbggga_FloatAttribute_AlphaTest = Long_ZERO,
cbggga_FloatAttribute_$callClinit = () => {
    cbggga_FloatAttribute_$callClinit = $rt_eraseClinit(cbggga_FloatAttribute);
    cbggga_FloatAttribute__clinit_();
},
cbggga_FloatAttribute_createShininess = $value => {
    cbggga_FloatAttribute_$callClinit();
    return cbggga_FloatAttribute__init_0(cbggga_FloatAttribute_Shininess, $value);
},
cbggga_FloatAttribute__init_ = ($this, $type, $value) => {
    cbggga_FloatAttribute_$callClinit();
    cbggg_Attribute__init_($this, $type);
    $this.$value2 = $value;
},
cbggga_FloatAttribute__init_0 = (var_0, var_1) => {
    let var_2 = new cbggga_FloatAttribute();
    cbggga_FloatAttribute__init_(var_2, var_0, var_1);
    return var_2;
},
cbggga_FloatAttribute_copy = $this => {
    return cbggga_FloatAttribute__init_0($this.$type1, $this.$value2);
},
cbggga_FloatAttribute_hashCode = $this => {
    let $result, var$2;
    $result = cbggg_Attribute_hashCode($this);
    var$2 = (977 * $result | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$value2) | 0;
    return var$2;
},
cbggga_FloatAttribute__clinit_ = () => {
    cbggga_FloatAttribute_Shininess = cbggg_Attribute_register($rt_s(367));
    cbggga_FloatAttribute_AlphaTest = cbggg_Attribute_register($rt_s(368));
},
jl_CloneNotSupportedException = $rt_classWithoutFields(jl_Exception),
jl_CloneNotSupportedException__init_ = $this => {
    jl_Exception__init_($this);
},
jl_CloneNotSupportedException__init_0 = () => {
    let var_0 = new jl_CloneNotSupportedException();
    jl_CloneNotSupportedException__init_(var_0);
    return var_0;
},
cbgm_Interpolation$PowIn = $rt_classWithoutFields(cbgm_Interpolation$Pow),
cbgm_Interpolation$PowIn__init_0 = ($this, $power) => {
    cbgm_Interpolation$Pow__init_0($this, $power);
},
cbgm_Interpolation$PowIn__init_ = var_0 => {
    let var_1 = new cbgm_Interpolation$PowIn();
    cbgm_Interpolation$PowIn__init_0(var_1, var_0);
    return var_1;
},
jur_RandomGenerator = $rt_classWithoutFields(0),
ju_Random = $rt_classWithoutFields(),
ju_Random__init_ = $this => {
    jl_Object__init_($this);
},
ju_Random__init_0 = () => {
    let var_0 = new ju_Random();
    ju_Random__init_(var_0);
    return var_0;
},
ju_Random_nextInt = $this => {
    return 4.294967296E9 * $this.$nextDouble() + (-2.147483648E9) | 0;
},
ju_Random_nextLong = $this => {
    return Long_or(Long_shl(Long_fromInt($this.$nextInt()), 32), Long_fromInt($this.$nextInt()));
},
ju_Random_nextDouble = $this => {
    return jl_Math_random();
};
function cbgm_RandomXS128() {
    let a = this; ju_Random.call(a);
    a.$seed0 = Long_ZERO;
    a.$seed1 = Long_ZERO;
}
let cbgm_RandomXS128__init_ = $this => {
    ju_Random__init_($this);
    $this.$setSeed((ju_Random__init_0()).$nextLong());
},
cbgm_RandomXS128__init_0 = () => {
    let var_0 = new cbgm_RandomXS128();
    cbgm_RandomXS128__init_(var_0);
    return var_0;
},
cbgm_RandomXS128_setSeed = ($this, $seed) => {
    let $seed0;
    if (Long_eq($seed, Long_ZERO))
        $seed = Long_create(0, 2147483648);
    $seed0 = cbgm_RandomXS128_murmurHash3($seed);
    $this.$setState($seed0, cbgm_RandomXS128_murmurHash3($seed0));
},
cbgm_RandomXS128_setState = ($this, $seed0, $seed1) => {
    $this.$seed0 = $seed0;
    $this.$seed1 = $seed1;
},
cbgm_RandomXS128_murmurHash3 = $x => {
    let var$2;
    var$2 = Long_xor($x, Long_shru($x, 33));
    var$2 = Long_mul(var$2, Long_create(3981806797, 4283543511));
    var$2 = Long_xor(var$2, Long_shru(var$2, 33));
    var$2 = Long_mul(var$2, Long_create(444984403, 3301882366));
    var$2 = Long_xor(var$2, Long_shru(var$2, 33));
    return var$2;
},
bbc_btCollisionWorld = $rt_classWithoutFields(bi_IDLBase),
bbc_btCollisionWorld_NULL = null,
bbc_btCollisionWorld_T_01 = null,
bbc_btCollisionWorld_T_02 = null,
bbc_btCollisionWorld_T_03 = null,
bbc_btCollisionWorld_$callClinit = () => {
    bbc_btCollisionWorld_$callClinit = $rt_eraseClinit(bbc_btCollisionWorld);
    bbc_btCollisionWorld__clinit_();
},
bbc_btCollisionWorld__init_ = ($this, $b, $c) => {
    bbc_btCollisionWorld_$callClinit();
    bi_IDLBase__init_($this);
},
bbc_btCollisionWorld__init_0 = (var_0, var_1) => {
    let var_2 = new bbc_btCollisionWorld();
    bbc_btCollisionWorld__init_(var_2, var_0, var_1);
    return var_2;
},
bbc_btCollisionWorld_native_new = () => {
    bbc_btCollisionWorld_$callClinit();
    return bbc_btCollisionWorld__init_0(0, 0);
},
bbc_btCollisionWorld_setDebugDrawer = ($this, $debugDrawer) => {
    let var$2, var$3;
    var$2 = $this.$native_address;
    var$3 = $debugDrawer.$native_address;
    bbc_btCollisionWorld_internal_native_setDebugDrawer$js_body$_25(var$2, var$3);
},
bbc_btCollisionWorld_debugDrawWorld = $this => {
    bbc_btCollisionWorld_internal_native_debugDrawWorld$js_body$_27($this.$native_address);
},
bbc_btCollisionWorld__clinit_ = () => {
    bbc_btCollisionWorld_NULL = bbc_btCollisionWorld_native_new();
    bbc_btCollisionWorld_T_01 = bbc_btCollisionWorld_native_new();
    bbc_btCollisionWorld_T_02 = bbc_btCollisionWorld_native_new();
    bbc_btCollisionWorld_T_03 = bbc_btCollisionWorld_native_new();
},
bbc_btCollisionWorld_internal_native_setDebugDrawer$js_body$_25 = (var$1, var$2) => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btCollisionWorld);
    jsObj.setDebugDrawer(var$2);
},
bbc_btCollisionWorld_internal_native_debugDrawWorld$js_body$_27 = var$1 => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btCollisionWorld);
    jsObj.debugDrawWorld();
},
bbd_btDynamicsWorld = $rt_classWithoutFields(bbc_btCollisionWorld),
bbd_btDynamicsWorld_NULL = null,
bbd_btDynamicsWorld_T_01 = null,
bbd_btDynamicsWorld_T_02 = null,
bbd_btDynamicsWorld_T_03 = null,
bbd_btDynamicsWorld_$callClinit = () => {
    bbd_btDynamicsWorld_$callClinit = $rt_eraseClinit(bbd_btDynamicsWorld);
    bbd_btDynamicsWorld__clinit_();
},
bbd_btDynamicsWorld__init_ = ($this, var$1, var$2) => {
    bbd_btDynamicsWorld_$callClinit();
    bbc_btCollisionWorld__init_($this, 1, 1);
},
bbd_btDynamicsWorld__init_0 = (var_0, var_1) => {
    let var_2 = new bbd_btDynamicsWorld();
    bbd_btDynamicsWorld__init_(var_2, var_0, var_1);
    return var_2;
},
bbd_btDynamicsWorld_native_new = () => {
    bbd_btDynamicsWorld_$callClinit();
    return bbd_btDynamicsWorld__init_0(0, 0);
},
bbd_btDynamicsWorld_stepSimulation = ($this, $timeStep) => {
    return bbd_btDynamicsWorld_internal_native_stepSimulation$js_body$_9($this.$native_address, $timeStep);
},
bbd_btDynamicsWorld_addRigidBody = ($this, $body) => {
    let var$2, var$3;
    var$2 = $this.$native_address;
    var$3 = $body.$native_address;
    bbd_btDynamicsWorld_internal_native_addRigidBody$js_body$_17(var$2, var$3);
},
bbd_btDynamicsWorld_removeRigidBody = ($this, $body) => {
    let var$2, var$3;
    var$2 = $this.$native_address;
    var$3 = $body.$native_address;
    bbd_btDynamicsWorld_internal_native_removeRigidBody$js_body$_21(var$2, var$3);
},
bbd_btDynamicsWorld_setGravity = ($this, $gravity) => {
    let var$2, var$3;
    var$2 = $this.$native_address;
    var$3 = $gravity.$native_address;
    bbd_btDynamicsWorld_internal_native_setGravity$js_body$_23(var$2, var$3);
},
bbd_btDynamicsWorld__clinit_ = () => {
    bbd_btDynamicsWorld_NULL = bbd_btDynamicsWorld_native_new();
    bbd_btDynamicsWorld_T_01 = bbd_btDynamicsWorld_native_new();
    bbd_btDynamicsWorld_T_02 = bbd_btDynamicsWorld_native_new();
    bbd_btDynamicsWorld_T_03 = bbd_btDynamicsWorld_native_new();
},
bbd_btDynamicsWorld_internal_native_stepSimulation$js_body$_9 = (var$1, var$2) => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btDynamicsWorld);
    var returnedJSObj = jsObj.stepSimulation(var$2);
    return returnedJSObj;
},
bbd_btDynamicsWorld_internal_native_addRigidBody$js_body$_17 = (var$1, var$2) => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btDynamicsWorld);
    jsObj.addRigidBody(var$2);
},
bbd_btDynamicsWorld_internal_native_removeRigidBody$js_body$_21 = (var$1, var$2) => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btDynamicsWorld);
    jsObj.removeRigidBody(var$2);
},
bbd_btDynamicsWorld_internal_native_setGravity$js_body$_23 = (var$1, var$2) => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btDynamicsWorld);
    jsObj.setGravity(var$2);
},
bbd_btDiscreteDynamicsWorld = $rt_classWithoutFields(bbd_btDynamicsWorld),
bbd_btDiscreteDynamicsWorld_NULL = null,
bbd_btDiscreteDynamicsWorld_T_01 = null,
bbd_btDiscreteDynamicsWorld_T_02 = null,
bbd_btDiscreteDynamicsWorld_T_03 = null,
bbd_btDiscreteDynamicsWorld_$callClinit = () => {
    bbd_btDiscreteDynamicsWorld_$callClinit = $rt_eraseClinit(bbd_btDiscreteDynamicsWorld);
    bbd_btDiscreteDynamicsWorld__clinit_();
},
bbd_btDiscreteDynamicsWorld__init_0 = ($this, var$1, var$2, $constraintSolver, $collisionConfiguration) => {
    let $addr;
    bbd_btDiscreteDynamicsWorld_$callClinit();
    bbd_btDynamicsWorld__init_($this, 1, 1);
    $addr = bbd_btDiscreteDynamicsWorld_internal_native_create_btDispatcher_btBroadphaseInterface_btConstraintSolver_btCollisionConfiguration$js_body$_1(var$1.$native_address, var$2.$native_address, $constraintSolver.$native_address, $collisionConfiguration.$native_address);
    bi_IDLBase_internal_reset($this, $addr, 1);
},
bbd_btDiscreteDynamicsWorld__init_1 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new bbd_btDiscreteDynamicsWorld();
    bbd_btDiscreteDynamicsWorld__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
bbd_btDiscreteDynamicsWorld__init_ = ($this, $b, $c) => {
    bbd_btDiscreteDynamicsWorld_$callClinit();
    bbd_btDynamicsWorld__init_($this, 1, 1);
},
bbd_btDiscreteDynamicsWorld__init_2 = (var_0, var_1) => {
    let var_2 = new bbd_btDiscreteDynamicsWorld();
    bbd_btDiscreteDynamicsWorld__init_(var_2, var_0, var_1);
    return var_2;
},
bbd_btDiscreteDynamicsWorld_native_new = () => {
    bbd_btDiscreteDynamicsWorld_$callClinit();
    return bbd_btDiscreteDynamicsWorld__init_2(0, 0);
},
bbd_btDiscreteDynamicsWorld__clinit_ = () => {
    bbd_btDiscreteDynamicsWorld_NULL = bbd_btDiscreteDynamicsWorld_native_new();
    bbd_btDiscreteDynamicsWorld_T_01 = bbd_btDiscreteDynamicsWorld_native_new();
    bbd_btDiscreteDynamicsWorld_T_02 = bbd_btDiscreteDynamicsWorld_native_new();
    bbd_btDiscreteDynamicsWorld_T_03 = bbd_btDiscreteDynamicsWorld_native_new();
},
bbd_btDiscreteDynamicsWorld_internal_native_create_btDispatcher_btBroadphaseInterface_btConstraintSolver_btCollisionConfiguration$js_body$_1 = (var$1, var$2, var$3, var$4) => {
    var jsObj = new bullet.btDiscreteDynamicsWorld(var$1, var$2, var$3, var$4);
    return bullet.getPointer(jsObj);
};
let jur_AbstractCharClass$LazyNonDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyDigit),
jur_AbstractCharClass$LazyNonDigit__init_ = $this => {
    jur_AbstractCharClass$LazyDigit__init_($this);
},
jur_AbstractCharClass$LazyNonDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyNonDigit();
    jur_AbstractCharClass$LazyNonDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyNonDigit_computeValue = $this => {
    let $chCl;
    $chCl = (jur_AbstractCharClass$LazyDigit_computeValue($this)).$setNegative(1);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function cbguv_Viewport() {
    let a = this; jl_Object.call(a);
    a.$camera2 = null;
    a.$worldWidth = 0.0;
    a.$worldHeight = 0.0;
    a.$screenX = 0;
    a.$screenY = 0;
    a.$screenWidth = 0;
    a.$screenHeight = 0;
    a.$tmp = null;
}
let cbguv_Viewport__init_ = $this => {
    jl_Object__init_($this);
    $this.$tmp = cbgm_Vector3__init_();
},
cbguv_Viewport_apply = ($this, $centerCamera) => {
    cbggg_HdpiUtils_glViewport($this.$screenX, $this.$screenY, $this.$screenWidth, $this.$screenHeight);
    $this.$camera2.$viewportWidth = $this.$worldWidth;
    $this.$camera2.$viewportHeight = $this.$worldHeight;
    if ($centerCamera)
        $this.$camera2.$position8.$set8($this.$worldWidth / 2.0, $this.$worldHeight / 2.0, 0.0);
    $this.$camera2.$update0();
},
cbguv_Viewport_unproject = ($this, $touchCoords) => {
    $this.$tmp.$set8($touchCoords.$x0, $touchCoords.$y0, 1.0);
    $this.$camera2.$unproject($this.$tmp, $this.$screenX, $this.$screenY, $this.$screenWidth, $this.$screenHeight);
    $touchCoords.$set2($this.$tmp.$x, $this.$tmp.$y);
    return $touchCoords;
},
cbguv_Viewport_calculateScissors = ($this, $batchTransform, $area, $scissor) => {
    cbgssu_ScissorStack_calculateScissors($this.$camera2, $this.$screenX, $this.$screenY, $this.$screenWidth, $this.$screenHeight, $batchTransform, $area, $scissor);
},
cbguv_Viewport_getCamera = $this => {
    return $this.$camera2;
},
cbguv_Viewport_setCamera = ($this, $camera) => {
    $this.$camera2 = $camera;
},
cbguv_Viewport_getWorldWidth = $this => {
    return $this.$worldWidth;
},
cbguv_Viewport_getWorldHeight = $this => {
    return $this.$worldHeight;
},
cbguv_Viewport_setWorldSize = ($this, $worldWidth, $worldHeight) => {
    $this.$worldWidth = $worldWidth;
    $this.$worldHeight = $worldHeight;
},
cbguv_Viewport_setScreenBounds = ($this, $screenX, $screenY, $screenWidth, $screenHeight) => {
    $this.$screenX = $screenX;
    $this.$screenY = $screenY;
    $this.$screenWidth = $screenWidth;
    $this.$screenHeight = $screenHeight;
};
function cbguv_ScreenViewport() {
    cbguv_Viewport.call(this);
    this.$unitsPerPixel = 0.0;
}
let cbguv_ScreenViewport__init_1 = $this => {
    cbguv_ScreenViewport__init_($this, cbgg_OrthographicCamera__init_0());
},
cbguv_ScreenViewport__init_0 = () => {
    let var_0 = new cbguv_ScreenViewport();
    cbguv_ScreenViewport__init_1(var_0);
    return var_0;
},
cbguv_ScreenViewport__init_ = ($this, $camera) => {
    cbguv_Viewport__init_($this);
    $this.$unitsPerPixel = 1.0;
    $this.$setCamera($camera);
},
cbguv_ScreenViewport__init_2 = var_0 => {
    let var_1 = new cbguv_ScreenViewport();
    cbguv_ScreenViewport__init_(var_1, var_0);
    return var_1;
},
cbguv_ScreenViewport_update = ($this, $screenWidth, $screenHeight, $centerCamera) => {
    $this.$setScreenBounds(0, 0, $screenWidth, $screenHeight);
    $this.$setWorldSize($screenWidth * $this.$unitsPerPixel, $screenHeight * $this.$unitsPerPixel);
    $this.$apply4($centerCamera);
};
function cbgu_ArrayMap() {
    let a = this; jl_Object.call(a);
    a.$keys = null;
    a.$values4 = null;
    a.$size3 = 0;
    a.$ordered3 = 0;
}
let cbgu_ArrayMap__init_ = ($this, $ordered, $capacity, $keyArraySupplier, $valueArraySupplier) => {
    jl_Object__init_($this);
    $this.$ordered3 = $ordered;
    $this.$keys = $keyArraySupplier.$get($capacity);
    $this.$values4 = $valueArraySupplier.$get($capacity);
},
cbgu_ArrayMap__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgu_ArrayMap();
    cbgu_ArrayMap__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgu_ArrayMap_putAll = ($this, $map) => {
    $this.$putAll($map, 0, $map.$size3);
},
cbgu_ArrayMap_putAll0 = ($this, $map, $offset, $length) => {
    let $sizeNeeded;
    if (($offset + $length | 0) > $map.$size3)
        $rt_throw(jl_IllegalArgumentException__init_((((((((jl_StringBuilder__init_()).$append1($rt_s(369))).$append2($offset)).$append1($rt_s(15))).$append2($length)).$append1($rt_s(16))).$append2($map.$size3)).$toString()));
    $sizeNeeded = ($this.$size3 + $length | 0) - $offset | 0;
    if ($sizeNeeded >= $this.$keys.data.length)
        $this.$resize0(jl_Math_max(8, $sizeNeeded * 1.75 | 0));
    jl_System_fastArraycopy($map.$keys, $offset, $this.$keys, $this.$size3, $length);
    jl_System_fastArraycopy($map.$values4, $offset, $this.$values4, $this.$size3, $length);
    $this.$size3 = $this.$size3 + $length | 0;
},
cbgu_ArrayMap_clear = $this => {
    ju_Arrays_fill0($this.$keys, 0, $this.$size3, null);
    ju_Arrays_fill0($this.$values4, 0, $this.$size3, null);
    $this.$size3 = 0;
},
cbgu_ArrayMap_resize = ($this, $newSize) => {
    $this.$keys = ju_Arrays_copyOf($this.$keys, $newSize);
    $this.$values4 = ju_Arrays_copyOf($this.$values4, $newSize);
};
function cbggg_BitmapFont() {
    let a = this; jl_Object.call(a);
    a.$data6 = null;
    a.$regions = null;
    a.$cache = null;
    a.$flipped0 = 0;
    a.$integer0 = 0;
    a.$ownsTexture = 0;
}
let cbggg_BitmapFont__init_2 = $this => {
    cbggg_BitmapFont__init_($this, cbg_Gdx_files.$classpath($rt_s(370)), cbg_Gdx_files.$classpath($rt_s(371)), 0, 1);
},
cbggg_BitmapFont__init_3 = () => {
    let var_0 = new cbggg_BitmapFont();
    cbggg_BitmapFont__init_2(var_0);
    return var_0;
},
cbggg_BitmapFont__init_ = ($this, $fontFile, $imageFile, $flip, $integer) => {
    cbggg_BitmapFont__init_0($this, cbggg_BitmapFont$BitmapFontData__init_0($fontFile, $flip), cbggg_TextureRegion__init_(cbgg_Texture__init_2($imageFile, 0)), $integer);
    $this.$ownsTexture = 1;
},
cbggg_BitmapFont__init_5 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbggg_BitmapFont();
    cbggg_BitmapFont__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbggg_BitmapFont__init_0 = ($this, $data, $region, $integer) => {
    let var$4, var$5;
    if ($region === null)
        var$4 = null;
    else {
        var$5 = $rt_createArray(cbggg_TextureRegion, 1);
        var$5.data[0] = $region;
        var$4 = cbgu_Array_with(var$5);
    }
    cbggg_BitmapFont__init_1($this, $data, var$4, $integer);
},
cbggg_BitmapFont__init_4 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_BitmapFont();
    cbggg_BitmapFont__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_BitmapFont__init_1 = ($this, $data, $pageRegions, $integer) => {
    let $n, $i, $file;
    jl_Object__init_($this);
    $this.$flipped0 = $data.$flipped;
    $this.$data6 = $data;
    $this.$integer0 = $integer;
    if ($pageRegions !== null && $pageRegions.$size0) {
        $this.$regions = $pageRegions;
        $this.$ownsTexture = 0;
    } else {
        if ($data.$imagePaths === null)
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(372)));
        $n = $data.$imagePaths.data.length;
        $this.$regions = cbgu_Array__init_0($n);
        $i = 0;
        while ($i < $n) {
            $file = $data.$fontFile === null ? cbg_Gdx_files.$internal($data.$imagePaths.data[$i]) : cbg_Gdx_files.$getFileHandle($data.$imagePaths.data[$i], $data.$fontFile.$type());
            $this.$regions.$add1(cbggg_TextureRegion__init_(cbgg_Texture__init_2($file, 0)));
            $i = $i + 1 | 0;
        }
        $this.$ownsTexture = 1;
    }
    $this.$cache = $this.$newFontCache();
    $this.$load1($data);
},
cbggg_BitmapFont__init_6 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_BitmapFont();
    cbggg_BitmapFont__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_BitmapFont_load = ($this, $data) => {
    let var$2, var$3, var$4, $page, var$6, var$7, var$8, $glyph;
    var$2 = $data.$glyphs0.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        a: {
            $page = var$2[var$4];
            if ($page !== null) {
                var$6 = $page.data;
                var$7 = var$6.length;
                var$8 = 0;
                while (true) {
                    if (var$8 >= var$7)
                        break a;
                    $glyph = var$6[var$8];
                    if ($glyph !== null)
                        $data.$setGlyphRegion($glyph, $this.$regions.$get($glyph.$page));
                    var$8 = var$8 + 1 | 0;
                }
            }
        }
        var$4 = var$4 + 1 | 0;
    }
    if ($data.$missingGlyph !== null)
        $data.$setGlyphRegion($data.$missingGlyph, $this.$regions.$get($data.$missingGlyph.$page));
},
cbggg_BitmapFont_draw = ($this, $batch, $str, $x, $y) => {
    let $layout;
    $this.$cache.$clear();
    $layout = $this.$cache.$addText($str, $x, $y);
    $this.$cache.$draw4($batch);
    return $layout;
},
cbggg_BitmapFont_setColor = ($this, $r, $g, $b, $a) => {
    ($this.$cache.$getColor()).$set12($r, $g, $b, $a);
},
cbggg_BitmapFont_getRegions = $this => {
    return $this.$regions;
},
cbggg_BitmapFont_newFontCache = $this => {
    return cbggg_BitmapFontCache__init_0($this, $this.$integer0);
};
function jur_CIBackReferenceSet() {
    let a = this; jur_JointSet.call(a);
    a.$referencedGroup = 0;
    a.$consCounter1 = 0;
}
let jur_CIBackReferenceSet__init_ = ($this, $groupIndex, $consCounter) => {
    jur_JointSet__init_($this);
    $this.$referencedGroup = $groupIndex;
    $this.$consCounter1 = $consCounter;
},
jur_CIBackReferenceSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CIBackReferenceSet();
    jur_CIBackReferenceSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CIBackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $group, $i, var$6, var$7;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $i = 0;
        while (true) {
            if ($i >= $group.$length()) {
                $matchResult.$setConsumed($this.$consCounter1, $group.$length());
                return $this.$next1.$matches($stringIndex + $group.$length() | 0, $testString, $matchResult);
            }
            var$6 = $group.$charAt($i);
            var$7 = $stringIndex + $i | 0;
            if (var$6 != $testString.$charAt(var$7) && jur_Pattern_getSupplement($group.$charAt($i)) != $testString.$charAt(var$7))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
},
jur_CIBackReferenceSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_CIBackReferenceSet_getString = ($this, $matchResult) => {
    let $res;
    $res = $matchResult.$getGroupNoCheck($this.$referencedGroup);
    return $res;
},
jur_CIBackReferenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$groupIndex;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(373)), var$1);
    return jl_StringBuilder_toString(var$2);
},
jur_CIBackReferenceSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !$matchResult.$getConsumed($this.$consCounter1) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter1, (-1));
    return $res;
};
function jur_AbstractCharClass$1() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS = null;
    a.$this$060 = null;
}
let jur_AbstractCharClass$1__init_ = ($this, $this$0, var$2) => {
    $this.$this$060 = $this$0;
    $this.$val$lHS = var$2;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$1__init_0 = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$1();
    jur_AbstractCharClass$1__init_(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$1_contains = ($this, $ch) => {
    let $index;
    $index = $ch - 55296 | 0;
    return $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ $this.$val$lHS.$get16($index) : 0;
};
function cbgggm_NodePart() {
    let a = this; jl_Object.call(a);
    a.$meshPart0 = null;
    a.$material0 = null;
    a.$invBoneBindTransforms = null;
    a.$bones0 = null;
    a.$enabled = 0;
}
let cbgggm_NodePart__init_ = $this => {
    jl_Object__init_($this);
    $this.$enabled = 1;
},
cbgggm_NodePart__init_1 = () => {
    let var_0 = new cbgggm_NodePart();
    cbgggm_NodePart__init_(var_0);
    return var_0;
},
cbgggm_NodePart__init_0 = ($this, $meshPart, $material) => {
    jl_Object__init_($this);
    $this.$enabled = 1;
    $this.$meshPart0 = $meshPart;
    $this.$material0 = $material;
},
cbgggm_NodePart__init_2 = (var_0, var_1) => {
    let var_2 = new cbgggm_NodePart();
    cbgggm_NodePart__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgggm_NodePart_setRenderable = ($this, $out) => {
    $out.$material = $this.$material0;
    $out.$meshPart.$set16($this.$meshPart0);
    $out.$bones = $this.$bones0;
    return $out;
},
cbgggm_NodePart_copy = $this => {
    return (cbgggm_NodePart__init_1()).$set20($this);
},
cbgggm_NodePart_set = ($this, $other) => {
    let $i;
    a: {
        $this.$meshPart0 = cbgggm_MeshPart__init_2($other.$meshPart0);
        $this.$material0 = $other.$material0;
        $this.$enabled = $other.$enabled;
        if ($other.$invBoneBindTransforms === null) {
            $this.$invBoneBindTransforms = null;
            $this.$bones0 = null;
        } else {
            if ($this.$invBoneBindTransforms !== null)
                $this.$invBoneBindTransforms.$clear();
            else
                $this.$invBoneBindTransforms = cbgu_ArrayMap__init_0(1, $other.$invBoneBindTransforms.$size3, cbgggm_NodePart$set$lambda$_4_0__init_0(), cbgggm_NodePart$set$lambda$_4_1__init_0());
            $this.$invBoneBindTransforms.$putAll0($other.$invBoneBindTransforms);
            if (!($this.$bones0 !== null && $this.$bones0.data.length == $this.$invBoneBindTransforms.$size3))
                $this.$bones0 = $rt_createArray(cbgm_Matrix4, $this.$invBoneBindTransforms.$size3);
            $i = 0;
            while (true) {
                if ($i >= $this.$bones0.data.length)
                    break a;
                if ($this.$bones0.data[$i] === null)
                    $this.$bones0.data[$i] = cbgm_Matrix4__init_();
                $i = $i + 1 | 0;
            }
        }
    }
    return $this;
},
cbgggm_NodePart_lambda$set$1 = $x$0 => {
    return $rt_createArray(cbgm_Matrix4, $x$0);
},
cbgggm_NodePart_lambda$set$0 = $x$0 => {
    return $rt_createArray(cbgggm_Node, $x$0);
};
function jur_AbstractCharClass$2() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$lHS0 = null;
    a.$val$thisClass = null;
    a.$this$042 = null;
}
let jur_AbstractCharClass$2__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$042 = $this$0;
    $this.$val$lHS0 = var$2;
    $this.$val$thisClass = var$3;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$2__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AbstractCharClass$2();
    jur_AbstractCharClass$2__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AbstractCharClass$2_contains = ($this, $ch) => {
    let $index, $containslHS;
    $index = $ch - 55296 | 0;
    $containslHS = $index >= 0 && $index < 2048 ? $this.$altSurrogates ^ $this.$val$lHS0.$get16($index) : 0;
    return $this.$val$thisClass.$contains($ch) && !$containslHS ? 1 : 0;
};
function cbgu_FlushablePool() {
    cbgu_Pool.call(this);
    this.$obtained = null;
}
let cbgu_FlushablePool__init_ = $this => {
    cbgu_Pool__init_0($this);
    $this.$obtained = cbgu_Array__init_();
},
cbgu_FlushablePool_obtain = $this => {
    let $result;
    $result = cbgu_Pool_obtain($this);
    $this.$obtained.$add1($result);
    return $result;
},
cbgu_FlushablePool_flush = $this => {
    cbgu_Pool_freeAll($this, $this.$obtained);
    $this.$obtained.$clear();
},
jur_PossessiveCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet),
jur_PossessiveCompositeQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type) => {
    jur_CompositeQuantifierSet__init_($this, $quant, $innerSet, $next, $type);
},
jur_PossessiveCompositeQuantifierSet__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_PossessiveCompositeQuantifierSet();
    jur_PossessiveCompositeQuantifierSet__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_PossessiveCompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $min, $max, $i, $shift;
    $min = $this.$quantifier0.$min1();
    $max = $this.$quantifier0.$max1();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound())
                        break a;
                    $shift = $this.$leaf.$accepts($stringIndex, $testString);
                    if ($shift < 1)
                        break;
                    $stringIndex = $stringIndex + $shift | 0;
                    $i = $i + 1 | 0;
                }
            }
            return $this.$next1.$matches($stringIndex, $testString, $matchResult);
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        $shift = $this.$leaf.$accepts($stringIndex, $testString);
        if ($shift < 1)
            break;
        $stringIndex = $stringIndex + $shift | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
};
function cgxjc_JMultiplatform() {
    jl_Object.call(this);
    this.$map0 = null;
}
let cgxjc_JMultiplatform_platformMap = null,
cgxjc_JMultiplatform_getInstance = () => {
    if (cgxjc_JMultiplatform_platformMap === null)
        cgxjc_JMultiplatform_platformMap = cgxjc_JMultiplatform__init_();
    return cgxjc_JMultiplatform_platformMap;
},
cgxjc_JMultiplatform__init_0 = $this => {
    jl_Object__init_($this);
    $this.$map0 = cgxjc_JPlatformMap__init_0();
},
cgxjc_JMultiplatform__init_ = () => {
    let var_0 = new cgxjc_JMultiplatform();
    cgxjc_JMultiplatform__init_0(var_0);
    return var_0;
},
cgxjc_JMultiplatform_getMap = $this => {
    return $this.$map0;
};
function cbgu_IntIntMap() {
    let a = this; jl_Object.call(a);
    a.$size10 = 0;
    a.$keyTable2 = null;
    a.$valueTable2 = null;
    a.$zeroValue0 = 0;
    a.$hasZeroValue1 = 0;
    a.$loadFactor = 0.0;
    a.$threshold3 = 0;
    a.$shift1 = 0;
    a.$mask4 = 0;
}
let cbgu_IntIntMap__init_1 = $this => {
    cbgu_IntIntMap__init_($this, 51, 0.800000011920929);
},
cbgu_IntIntMap__init_0 = () => {
    let var_0 = new cbgu_IntIntMap();
    cbgu_IntIntMap__init_1(var_0);
    return var_0;
},
cbgu_IntIntMap__init_ = ($this, $initialCapacity, $loadFactor) => {
    let $tableSize;
    jl_Object__init_($this);
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold3 = $tableSize * $loadFactor | 0;
        $this.$mask4 = $tableSize - 1 | 0;
        $this.$shift1 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask4));
        $this.$keyTable2 = $rt_createIntArray($tableSize);
        $this.$valueTable2 = $rt_createIntArray($tableSize);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(374))).$append20($loadFactor)).$toString()));
},
cbgu_IntIntMap__init_2 = (var_0, var_1) => {
    let var_2 = new cbgu_IntIntMap();
    cbgu_IntIntMap__init_(var_2, var_0, var_1);
    return var_2;
},
cbgu_IntIntMap_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item), Long_create(2135587861, 2654435769)), $this.$shift1));
},
cbgu_IntIntMap_locateKey = ($this, $key) => {
    let $keyTable, $i, $other;
    $keyTable = $this.$keyTable2;
    $i = $this.$place($key);
    while (true) {
        $other = $keyTable.data[$i];
        if (!$other)
            return  -($i + 1 | 0) | 0;
        if ($other == $key)
            break;
        $i = ($i + 1 | 0) & $this.$mask4;
    }
    return $i;
},
cbgu_IntIntMap_put = ($this, $key, $value) => {
    let $i, var$4;
    if (!$key) {
        $this.$zeroValue0 = $value;
        if (!$this.$hasZeroValue1) {
            $this.$hasZeroValue1 = 1;
            $this.$size10 = $this.$size10 + 1 | 0;
        }
        return;
    }
    $i = cbgu_IntIntMap_locateKey($this, $key);
    if ($i >= 0) {
        $this.$valueTable2.data[$i] = $value;
        return;
    }
    var$4 =  -($i + 1 | 0) | 0;
    $this.$keyTable2.data[var$4] = $key;
    $this.$valueTable2.data[var$4] = $value;
    var$4 = $this.$size10 + 1 | 0;
    $this.$size10 = var$4;
    if (var$4 >= $this.$threshold3)
        cbgu_IntIntMap_resize($this, $this.$keyTable2.data.length << 1);
},
cbgu_IntIntMap_putResize = ($this, $key, $value) => {
    let $keyTable, $i, var$5;
    $keyTable = $this.$keyTable2;
    $i = $this.$place($key);
    while (true) {
        var$5 = $keyTable.data;
        if (!var$5[$i])
            break;
        $i = ($i + 1 | 0) & $this.$mask4;
    }
    var$5[$i] = $key;
    $this.$valueTable2.data[$i] = $value;
},
cbgu_IntIntMap_get = ($this, $key, $defaultValue) => {
    let $i;
    if (!$key) {
        if ($this.$hasZeroValue1)
            $defaultValue = $this.$zeroValue0;
        return $defaultValue;
    }
    $i = cbgu_IntIntMap_locateKey($this, $key);
    if ($i >= 0)
        $defaultValue = $this.$valueTable2.data[$i];
    return $defaultValue;
},
cbgu_IntIntMap_resize = ($this, $newSize) => {
    let $oldCapacity, $oldKeyTable, $oldValueTable, $i, $key;
    a: {
        $oldCapacity = $this.$keyTable2.data.length;
        $this.$threshold3 = $newSize * $this.$loadFactor | 0;
        $this.$mask4 = $newSize - 1 | 0;
        $this.$shift1 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask4));
        $oldKeyTable = $this.$keyTable2;
        $oldValueTable = $this.$valueTable2;
        $this.$keyTable2 = $rt_createIntArray($newSize);
        $this.$valueTable2 = $rt_createIntArray($newSize);
        if ($this.$size10 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key)
                    cbgu_IntIntMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
};
function cbgggs_DefaultShader$Setters$ACubemap() {
    let a = this; cbgggs_BaseShader$LocalSetter.call(a);
    a.$cacheAmbientCubemap = null;
    a.$dirLightsOffset = 0;
    a.$pointLightsOffset = 0;
}
let cbgggs_DefaultShader$Setters$ACubemap_ones = null,
cbgggs_DefaultShader$Setters$ACubemap_tmpV1 = null,
cbgggs_DefaultShader$Setters$ACubemap_$callClinit = () => {
    cbgggs_DefaultShader$Setters$ACubemap_$callClinit = $rt_eraseClinit(cbgggs_DefaultShader$Setters$ACubemap);
    cbgggs_DefaultShader$Setters$ACubemap__clinit_();
},
cbgggs_DefaultShader$Setters$ACubemap__init_ = ($this, $dirLightsOffset, $pointLightsOffset) => {
    cbgggs_DefaultShader$Setters$ACubemap_$callClinit();
    cbgggs_BaseShader$LocalSetter__init_($this);
    $this.$cacheAmbientCubemap = cbggge_AmbientCubemap__init_();
    $this.$dirLightsOffset = $dirLightsOffset;
    $this.$pointLightsOffset = $pointLightsOffset;
},
cbgggs_DefaultShader$Setters$ACubemap__init_0 = (var_0, var_1) => {
    let var_2 = new cbgggs_DefaultShader$Setters$ACubemap();
    cbgggs_DefaultShader$Setters$ACubemap__init_(var_2, var_0, var_1);
    return var_2;
},
cbgggs_DefaultShader$Setters$ACubemap_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let var$5, var$6, var$7, var$8, $lights, $i;
    if ($renderable.$environment === null) {
        var$5 = $shader.$program;
        var$6 = cbgggs_BaseShader_loc($shader, $inputID);
        cbgggs_DefaultShader$Setters$ACubemap_$callClinit();
        var$5.$setUniform3fv(var$6, cbgggs_DefaultShader$Setters$ACubemap_ones, 0, cbgggs_DefaultShader$Setters$ACubemap_ones.data.length);
    } else {
        var$7 = $renderable.$worldTransform;
        cbgggs_DefaultShader$Setters$ACubemap_$callClinit();
        var$7.$getTranslation(cbgggs_DefaultShader$Setters$ACubemap_tmpV1);
        cbggga_ColorAttribute_$callClinit();
        if (cbggg_Attributes_has($combinedAttributes, cbggga_ColorAttribute_AmbientLight))
            $this.$cacheAmbientCubemap.$set21((cbggg_Attributes_get($combinedAttributes, cbggga_ColorAttribute_AmbientLight)).$color4);
        a: {
            cbggga_DirectionalLightsAttribute_$callClinit();
            if (cbggg_Attributes_has($combinedAttributes, cbggga_DirectionalLightsAttribute_Type)) {
                var$8 = cbggga_DirectionalLightsAttribute_Type;
                $lights = (cbggg_Attributes_get($combinedAttributes, var$8)).$lights;
                $i = $this.$dirLightsOffset;
                while (true) {
                    if ($i >= $lights.$size0)
                        break a;
                    $this.$cacheAmbientCubemap.$add6(($lights.$get($i)).$color2, ($lights.$get($i)).$direction0);
                    $i = $i + 1 | 0;
                }
            }
        }
        b: {
            cbggga_PointLightsAttribute_$callClinit();
            if (cbggg_Attributes_has($combinedAttributes, cbggga_PointLightsAttribute_Type)) {
                $lights = (cbggg_Attributes_get($combinedAttributes, cbggga_PointLightsAttribute_Type)).$lights0;
                $i = $this.$pointLightsOffset;
                while (true) {
                    if ($i >= $lights.$size0)
                        break b;
                    $this.$cacheAmbientCubemap.$add7(($lights.$get($i)).$color2, ($lights.$get($i)).$position9, cbgggs_DefaultShader$Setters$ACubemap_tmpV1, ($lights.$get($i)).$intensity);
                    $i = $i + 1 | 0;
                }
            }
        }
        $this.$cacheAmbientCubemap.$clamp2();
        $shader.$program.$setUniform3fv(cbgggs_BaseShader_loc($shader, $inputID), $this.$cacheAmbientCubemap.$data1, 0, $this.$cacheAmbientCubemap.$data1.data.length);
    }
},
cbgggs_DefaultShader$Setters$ACubemap__clinit_ = () => {
    cbgggs_DefaultShader$Setters$ACubemap_ones = $rt_createFloatArrayFromData([1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0]);
    cbgggs_DefaultShader$Setters$ACubemap_tmpV1 = cbgm_Vector3__init_();
};
function cbggg_BitmapFontCache() {
    let a = this; jl_Object.call(a);
    a.$font = null;
    a.$integer = 0;
    a.$layouts = null;
    a.$pooledLayouts = null;
    a.$glyphCount0 = 0;
    a.$x5 = 0.0;
    a.$y5 = 0.0;
    a.$color10 = null;
    a.$currentTint = 0.0;
    a.$pageVertices = null;
    a.$idx0 = null;
    a.$pageGlyphIndices = null;
    a.$tempGlyphCount = null;
}
let cbggg_BitmapFontCache_tempColor = null,
cbggg_BitmapFontCache_$callClinit = () => {
    cbggg_BitmapFontCache_$callClinit = $rt_eraseClinit(cbggg_BitmapFontCache);
    cbggg_BitmapFontCache__clinit_();
},
cbggg_BitmapFontCache__init_ = ($this, $font, $integer) => {
    let $pageCount, $i, $n;
    cbggg_BitmapFontCache_$callClinit();
    jl_Object__init_($this);
    $this.$layouts = cbgu_Array__init_0(1);
    $this.$pooledLayouts = cbgu_Array__init_0(0);
    $this.$color10 = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
    $this.$font = $font;
    $this.$integer = $integer;
    $pageCount = $font.$regions.$size0;
    if (!$pageCount)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(375)));
    a: {
        $this.$pageVertices = $rt_createArray($rt_arraycls($rt_floatcls), $pageCount);
        $this.$idx0 = $rt_createIntArray($pageCount);
        if ($pageCount > 1) {
            $this.$pageGlyphIndices = $rt_createArray(cbgu_IntArray, $pageCount);
            $i = 0;
            $n = $this.$pageGlyphIndices.data.length;
            while (true) {
                if ($i >= $n)
                    break a;
                $this.$pageGlyphIndices.data[$i] = cbgu_IntArray__init_();
                $i = $i + 1 | 0;
            }
        }
    }
    $this.$tempGlyphCount = $rt_createIntArray($pageCount);
},
cbggg_BitmapFontCache__init_0 = (var_0, var_1) => {
    let var_2 = new cbggg_BitmapFontCache();
    cbggg_BitmapFontCache__init_(var_2, var_0, var_1);
    return var_2;
},
cbggg_BitmapFontCache_getColor = $this => {
    return $this.$color10;
},
cbggg_BitmapFontCache_draw = ($this, $spriteBatch) => {
    let $regions, $j, $n, $vertices;
    $regions = $this.$font.$getRegions();
    $j = 0;
    $n = $this.$pageVertices.data.length;
    while ($j < $n) {
        if ($this.$idx0.data[$j] > 0) {
            $vertices = $this.$pageVertices.data[$j];
            $spriteBatch.$draw5(($regions.$get($j)).$getTexture(), $vertices, 0, $this.$idx0.data[$j]);
        }
        $j = $j + 1 | 0;
    }
},
cbggg_BitmapFontCache_clear = $this => {
    let $i, $n;
    $this.$x5 = 0.0;
    $this.$y5 = 0.0;
    cbgu_Pools_freeAll($this.$pooledLayouts, 1);
    $this.$pooledLayouts.$clear();
    $this.$layouts.$clear();
    $i = 0;
    $n = $this.$idx0.data.length;
    while ($i < $n) {
        if ($this.$pageGlyphIndices !== null)
            $this.$pageGlyphIndices.data[$i].$clear();
        $this.$idx0.data[$i] = 0;
        $i = $i + 1 | 0;
    }
},
cbggg_BitmapFontCache_requireGlyphs = ($this, $layout) => {
    let $tempGlyphCount, $i, $n, $glyphs, $glyphItems, $ii, $nn, var$9, var$10;
    a: {
        if ($this.$pageVertices.data.length == 1)
            cbggg_BitmapFontCache_requirePageGlyphs($this, 0, $layout.$glyphCount);
        else {
            $tempGlyphCount = $this.$tempGlyphCount;
            ju_Arrays_fill($tempGlyphCount, 0);
            $i = 0;
            $n = $layout.$runs.$size0;
            while ($i < $n) {
                $glyphs = ($layout.$runs.$get($i)).$glyphs;
                $glyphItems = $glyphs.$items;
                $ii = 0;
                $nn = $glyphs.$size0;
                while ($ii < $nn) {
                    var$9 = $tempGlyphCount.data;
                    var$10 = $glyphItems.data[$ii].$page;
                    var$9[var$10] = var$9[var$10] + 1 | 0;
                    $ii = $ii + 1 | 0;
                }
                $i = $i + 1 | 0;
            }
            var$9 = $tempGlyphCount.data;
            $i = 0;
            $n = var$9.length;
            while (true) {
                if ($i >= $n)
                    break a;
                cbggg_BitmapFontCache_requirePageGlyphs($this, $i, var$9[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
},
cbggg_BitmapFontCache_requirePageGlyphs = ($this, $page, $glyphCount) => {
    let $vertexCount, $vertices, $newVertices;
    if ($this.$pageGlyphIndices !== null && $glyphCount > $this.$pageGlyphIndices.data[$page].$items1.data.length)
        $this.$pageGlyphIndices.data[$page].$ensureCapacity0($glyphCount - $this.$pageGlyphIndices.data[$page].$size1 | 0);
    $vertexCount = $this.$idx0.data[$page] + ($glyphCount * 20 | 0) | 0;
    $vertices = $this.$pageVertices.data[$page];
    if ($vertices === null)
        $this.$pageVertices.data[$page] = $rt_createFloatArray($vertexCount);
    else if ($vertices.data.length < $vertexCount) {
        $newVertices = $rt_createFloatArray($vertexCount);
        jl_System_fastArraycopy($vertices, 0, $newVertices, 0, $this.$idx0.data[$page]);
        $this.$pageVertices.data[$page] = $newVertices;
    }
},
cbggg_BitmapFontCache_setPageCount = ($this, $pageCount) => {
    let $newPageVertices, $newIdx, $newPageGlyphIndices, $i;
    $newPageVertices = $rt_createArray($rt_arraycls($rt_floatcls), $pageCount);
    jl_System_fastArraycopy($this.$pageVertices, 0, $newPageVertices, 0, $this.$pageVertices.data.length);
    $this.$pageVertices = $newPageVertices;
    $newIdx = $rt_createIntArray($pageCount);
    jl_System_fastArraycopy($this.$idx0, 0, $newIdx, 0, $this.$idx0.data.length);
    $this.$idx0 = $newIdx;
    $newPageGlyphIndices = $rt_createArray(cbgu_IntArray, $pageCount);
    $i = 0;
    if ($this.$pageGlyphIndices !== null) {
        $i = $this.$pageGlyphIndices.data.length;
        jl_System_fastArraycopy($this.$pageGlyphIndices, 0, $newPageGlyphIndices, 0, $this.$pageGlyphIndices.data.length);
    }
    while ($i < $pageCount) {
        $newPageGlyphIndices.data[$i] = cbgu_IntArray__init_();
        $i = $i + 1 | 0;
    }
    $this.$pageGlyphIndices = $newPageGlyphIndices;
    $this.$tempGlyphCount = $rt_createIntArray($pageCount);
},
cbggg_BitmapFontCache_addToCache = ($this, $layout, $x, $y) => {
    let $runCount, $colors, $colorsIndex, $nextColorGlyphIndex, $glyphIndex, $lastColorFloatBits, $i, $run, $glyphs, $xAdvances, $gx, $gy, $ii, $nn, var$18, var$19, var$20;
    $runCount = $layout.$runs.$size0;
    if (!$runCount)
        return;
    if ($this.$pageVertices.data.length < $this.$font.$regions.$size0)
        cbggg_BitmapFontCache_setPageCount($this, $this.$font.$regions.$size0);
    $this.$layouts.$add1($layout);
    cbggg_BitmapFontCache_requireGlyphs($this, $layout);
    $colors = $layout.$colors;
    $colorsIndex = 0;
    $nextColorGlyphIndex = 0;
    $glyphIndex = 0;
    $lastColorFloatBits = 0.0;
    $i = 0;
    while ($i < $runCount) {
        $run = $layout.$runs.$get($i);
        $glyphs = $run.$glyphs.$items;
        $xAdvances = $run.$xAdvances.$items0;
        $gx = $x + $run.$x4;
        $gy = $y + $run.$y4;
        $ii = 0;
        $nn = $run.$glyphs.$size0;
        while ($ii < $nn) {
            var$18 = $glyphIndex + 1 | 0;
            if ($glyphIndex == $nextColorGlyphIndex) {
                var$19 = $colorsIndex + 1 | 0;
                $lastColorFloatBits = cbgu_NumberUtils_intToFloatColor($colors.$get1(var$19));
                $colorsIndex = var$19 + 1 | 0;
                $nextColorGlyphIndex = $colorsIndex >= $colors.$size1 ? (-1) : $colors.$get1($colorsIndex);
            }
            var$20 = $glyphs.data;
            $gx = $gx + $xAdvances.data[$ii];
            cbggg_BitmapFontCache_addGlyph($this, var$20[$ii], $gx, $gy, $lastColorFloatBits);
            $ii = $ii + 1 | 0;
            $glyphIndex = var$18;
        }
        $i = $i + 1 | 0;
    }
    cbgg_Color_$callClinit();
    $this.$currentTint = cbgg_Color_WHITE_FLOAT_BITS;
},
cbggg_BitmapFontCache_addGlyph = ($this, $glyph, $x, $y, $color) => {
    let $scaleX, $scaleY, var$7, var$8, $width, $height, $u, $u2, $v, $v2, $x2, $y2, $page, $idx, var$19, var$20, var$21, $vertices, var$23, var$24;
    $scaleX = $this.$font.$data6.$scaleX;
    $scaleY = $this.$font.$data6.$scaleY0;
    var$7 = $x + $glyph.$xoffset * $scaleX;
    var$8 = $y + $glyph.$yoffset * $scaleY;
    $width = $glyph.$width2 * $scaleX;
    $height = $glyph.$height2 * $scaleY;
    $u = $glyph.$u0;
    $u2 = $glyph.$u20;
    $v = $glyph.$v0;
    $v2 = $glyph.$v2;
    if ($this.$integer) {
        var$7 = jl_Math_round(var$7);
        var$8 = jl_Math_round(var$8);
        $width = jl_Math_round($width);
        $height = jl_Math_round($height);
    }
    $x2 = var$7 + $width;
    $y2 = var$8 + $height;
    $page = $glyph.$page;
    $idx = $this.$idx0.data[$page];
    var$19 = $this.$idx0.data;
    var$19[$page] = var$19[$page] + 20 | 0;
    if ($this.$pageGlyphIndices !== null) {
        var$20 = $this.$pageGlyphIndices.data[$page];
        var$21 = $this.$glyphCount0;
        $this.$glyphCount0 = var$21 + 1 | 0;
        var$20.$add2(var$21);
    }
    $vertices = $this.$pageVertices.data[$page];
    var$19 = $vertices.data;
    var$23 = $idx + 1 | 0;
    var$19[$idx] = var$7;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = var$8;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $color;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $u;
    var$24 = var$21 + 1 | 0;
    var$19[var$21] = $v;
    var$23 = var$24 + 1 | 0;
    var$19[var$24] = var$7;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $y2;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $color;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $u;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $v2;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $x2;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $y2;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $color;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $u2;
    var$21 = var$23 + 1 | 0;
    var$19[var$23] = $v2;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $x2;
    var$24 = var$23 + 1 | 0;
    var$19[var$23] = var$8;
    var$21 = var$24 + 1 | 0;
    var$19[var$24] = $color;
    var$23 = var$21 + 1 | 0;
    var$19[var$21] = $u2;
    var$19[var$23] = $v;
},
cbggg_BitmapFontCache_addText0 = ($this, $str, $x, $y) => {
    return $this.$addText0($str, $x, $y, 0, $str.$length(), 0.0, 8, 0, null);
},
cbggg_BitmapFontCache_addText1 = ($this, $str, $x, $y, $start, $end, $targetWidth, $halign, $wrap, $truncate) => {
    let $layout;
    $layout = cbgu_Pools_obtain(cbggg_BitmapFontCache$addText$lambda$_31_0__init_0());
    $this.$pooledLayouts.$add1($layout);
    $layout.$setText($this.$font, $str, $start, $end, $this.$color10, $targetWidth, $halign, $wrap, $truncate);
    $this.$addText1($layout, $x, $y);
    return $layout;
},
cbggg_BitmapFontCache_addText = ($this, $layout, $x, $y) => {
    cbggg_BitmapFontCache_addToCache($this, $layout, $x, $y + $this.$font.$data6.$ascent);
},
cbggg_BitmapFontCache__clinit_ = () => {
    cbggg_BitmapFontCache_tempColor = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
},
otci_Base46 = $rt_classWithoutFields(),
otci_Base46_decodeUnsigned = $seq => {
    let $number, $pos, var$4, var$5, $digit, $hasMore;
    $number = 0;
    $pos = 1;
    while (true) {
        var$4 = $seq.$characters.data;
        var$5 = $seq.$pointer0;
        $seq.$pointer0 = var$5 + 1 | 0;
        $digit = otci_Base46_decodeDigit(var$4[var$5]);
        $hasMore = ($digit % 2 | 0) != 1 ? 0 : 1;
        $number = $number + $rt_imul($pos, $digit / 2 | 0) | 0;
        $pos = $pos * 46 | 0;
        if (!$hasMore)
            break;
    }
    return $number;
},
otci_Base46_decode = $seq => {
    let $number, $result;
    $number = otci_Base46_decodeUnsigned($seq);
    $result = $number / 2 | 0;
    if ($number % 2 | 0)
        $result =  -$result | 0;
    return $result;
},
otci_Base46_decodeDigit = $c => {
    if ($c < 34)
        return $c - 32 | 0;
    if ($c >= 92)
        return ($c - 32 | 0) - 2 | 0;
    return ($c - 32 | 0) - 1 | 0;
};
function jur_UCISequenceSet() {
    jur_LeafSet.call(this);
    this.$string3 = null;
}
let jur_UCISequenceSet__init_ = ($this, $substring) => {
    let $res, $i;
    jur_LeafSet__init_($this);
    $res = jl_StringBuilder__init_();
    $i = 0;
    while ($i < $substring.$length()) {
        $res.$append0(jl_Character_toLowerCase(jl_Character_toUpperCase($substring.$charAt($i))));
        $i = $i + 1 | 0;
    }
    $this.$string3 = $res.$toString();
    $this.$charCount0 = $res.$length();
},
jur_UCISequenceSet__init_0 = var_0 => {
    let var_1 = new jur_UCISequenceSet();
    jur_UCISequenceSet__init_(var_1, var_0);
    return var_1;
},
jur_UCISequenceSet_accepts = ($this, $strIndex, $testString) => {
    let $i;
    $i = 0;
    while (true) {
        if ($i >= $this.$string3.$length())
            return $this.$string3.$length();
        if ($this.$string3.$charAt($i) != jl_Character_toLowerCase(jl_Character_toUpperCase($testString.$charAt($strIndex + $i | 0))))
            break;
        $i = $i + 1 | 0;
    }
    return (-1);
},
jur_UCISequenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$string3;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(376)), var$1);
    return jl_StringBuilder_toString(var$2);
};
function jur_AbstractCharClass$LazyJavaDefined$1() {
    jur_AbstractCharClass.call(this);
    this.$this$044 = null;
}
let jur_AbstractCharClass$LazyJavaDefined$1__init_ = ($this, $this$0) => {
    $this.$this$044 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaDefined$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaDefined$1();
    jur_AbstractCharClass$LazyJavaDefined$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaDefined$1_contains = ($this, $ch) => {
    return jl_Character_isDefined($ch);
},
otjt_Int8Array = $rt_classWithoutFields(otjt_TypedArray);
function cbggge_DirectionalLight() {
    cbggge_BaseLight.call(this);
    this.$direction0 = null;
}
let cbggge_DirectionalLight__init_0 = $this => {
    cbggge_BaseLight__init_($this);
    $this.$direction0 = cbgm_Vector3__init_();
},
cbggge_DirectionalLight__init_ = () => {
    let var_0 = new cbggge_DirectionalLight();
    cbggge_DirectionalLight__init_0(var_0);
    return var_0;
},
cbggge_DirectionalLight_set = ($this, $copyFrom) => {
    return $this.$set22($copyFrom.$color2, $copyFrom.$direction0);
},
cbggge_DirectionalLight_set0 = ($this, $color, $direction) => {
    if ($color !== null)
        $this.$color2.$set11($color);
    if ($direction !== null)
        ($this.$direction0.$set7($direction)).$nor0();
    return $this;
},
cbggge_DirectionalLight_set1 = ($this, $r, $g, $b, $dirX, $dirY, $dirZ) => {
    $this.$color2.$set12($r, $g, $b, 1.0);
    ($this.$direction0.$set8($dirX, $dirY, $dirZ)).$nor0();
    return $this;
},
cbggge_DirectionalLight_equals = ($this, $arg0) => {
    return $arg0 instanceof cbggge_DirectionalLight && $this.$equals3($arg0) ? 1 : 0;
},
cbggge_DirectionalLight_equals0 = ($this, $other) => {
    let var$2;
    a: {
        b: {
            if ($other !== null) {
                if ($other === $this)
                    break b;
                if ($this.$color2.$equals($other.$color2) && $this.$direction0.$equals($other.$direction0))
                    break b;
            }
            var$2 = 0;
            break a;
        }
        var$2 = 1;
    }
    return var$2;
},
cbggg_HdpiUtils = $rt_classWithoutFields(),
cbggg_HdpiUtils_mode = null,
cbggg_HdpiUtils_$callClinit = () => {
    cbggg_HdpiUtils_$callClinit = $rt_eraseClinit(cbggg_HdpiUtils);
    cbggg_HdpiUtils__clinit_();
},
cbggg_HdpiUtils_glScissor = ($x, $y, $width, $height) => {
    let var$5;
    cbggg_HdpiUtils_$callClinit();
    a: {
        b: {
            var$5 = cbggg_HdpiUtils_mode;
            cbggg_HdpiMode_$callClinit();
            if (var$5 === cbggg_HdpiMode_Logical) {
                if (cbg_Gdx_graphics.$getWidth0() != cbg_Gdx_graphics.$getBackBufferWidth())
                    break b;
                var$5 = cbg_Gdx_graphics;
                if (var$5.$getHeight0() != cbg_Gdx_graphics.$getBackBufferHeight())
                    break b;
            }
            cbg_Gdx_gl.$glScissor($x, $y, $width, $height);
            break a;
        }
        cbg_Gdx_gl.$glScissor(cbggg_HdpiUtils_toBackBufferX($x), cbggg_HdpiUtils_toBackBufferY($y), cbggg_HdpiUtils_toBackBufferX($width), cbggg_HdpiUtils_toBackBufferY($height));
    }
},
cbggg_HdpiUtils_glViewport = ($x, $y, $width, $height) => {
    let var$5;
    cbggg_HdpiUtils_$callClinit();
    a: {
        b: {
            var$5 = cbggg_HdpiUtils_mode;
            cbggg_HdpiMode_$callClinit();
            if (var$5 === cbggg_HdpiMode_Logical) {
                if (cbg_Gdx_graphics.$getWidth0() != cbg_Gdx_graphics.$getBackBufferWidth())
                    break b;
                var$5 = cbg_Gdx_graphics;
                if (var$5.$getHeight0() != cbg_Gdx_graphics.$getBackBufferHeight())
                    break b;
            }
            cbg_Gdx_gl.$glViewport($x, $y, $width, $height);
            break a;
        }
        cbg_Gdx_gl.$glViewport(cbggg_HdpiUtils_toBackBufferX($x), cbggg_HdpiUtils_toBackBufferY($y), cbggg_HdpiUtils_toBackBufferX($width), cbggg_HdpiUtils_toBackBufferY($height));
    }
},
cbggg_HdpiUtils_toBackBufferX = $logicalX => {
    cbggg_HdpiUtils_$callClinit();
    return $rt_imul($logicalX, cbg_Gdx_graphics.$getBackBufferWidth()) / cbg_Gdx_graphics.$getWidth0() | 0;
},
cbggg_HdpiUtils_toBackBufferY = $logicalY => {
    cbggg_HdpiUtils_$callClinit();
    return $rt_imul($logicalY, cbg_Gdx_graphics.$getBackBufferHeight()) / cbg_Gdx_graphics.$getHeight0() | 0;
},
cbggg_HdpiUtils__clinit_ = () => {
    cbggg_HdpiMode_$callClinit();
    cbggg_HdpiUtils_mode = cbggg_HdpiMode_Logical;
};
function jur_CompositeRangeSet() {
    let a = this; jur_JointSet.call(a);
    a.$withoutSurrogates = null;
    a.$withSurrogates = null;
}
let jur_CompositeRangeSet__init_0 = ($this, $withoutSurrogates, $withSurrogates) => {
    jur_JointSet__init_($this);
    $this.$withoutSurrogates = $withoutSurrogates;
    $this.$withSurrogates = $withSurrogates;
},
jur_CompositeRangeSet__init_ = (var_0, var_1) => {
    let var_2 = new jur_CompositeRangeSet();
    jur_CompositeRangeSet__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_CompositeRangeSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    $shift = $this.$withoutSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$withSurrogates.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return (-1);
},
jur_CompositeRangeSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
    $this.$withSurrogates.$setNext($next);
    $this.$withoutSurrogates.$setNext($next);
},
jur_CompositeRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = jl_String_valueOf($this.$withoutSurrogates);
    var$2 = jl_String_valueOf($this.$withSurrogates);
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(377)), var$1), $rt_s(378)), var$2);
    return jl_StringBuilder_toString(var$3);
},
jur_CompositeRangeSet_hasConsumed = ($this, $matchResult) => {
    return 1;
},
jur_CompositeRangeSet_first = ($this, $set) => {
    return 1;
},
ju_Map$Entry = $rt_classWithoutFields(0);
function ju_MapEntry() {
    let a = this; jl_Object.call(a);
    a.$key = null;
    a.$value = null;
}
let ju_MapEntry__init_ = ($this, $theKey, $theValue) => {
    jl_Object__init_($this);
    $this.$key = $theKey;
    $this.$value = $theValue;
},
ju_MapEntry__init_0 = (var_0, var_1) => {
    let var_2 = new ju_MapEntry();
    ju_MapEntry__init_(var_2, var_0, var_1);
    return var_2;
};
function ju_Hashtable$Entry() {
    let a = this; ju_MapEntry.call(a);
    a.$next3 = null;
    a.$hashcode = 0;
}
let ju_Hashtable$Entry__init_ = ($this, $theKey, $theValue) => {
    ju_MapEntry__init_($this, $theKey, $theValue);
    $this.$hashcode = $theKey.$hashCode0();
},
ju_Hashtable$Entry__init_0 = (var_0, var_1) => {
    let var_2 = new ju_Hashtable$Entry();
    ju_Hashtable$Entry__init_(var_2, var_0, var_1);
    return var_2;
},
ju_Hashtable$Entry_getKeyHash = $this => {
    return $this.$key.$hashCode0();
},
ju_Hashtable$Entry_equalsKey = ($this, $aKey, $hash) => {
    return $this.$hashcode == $aKey.$hashCode0() && $this.$key.$equals($aKey) ? 1 : 0;
},
jur_FinalSet = $rt_classWithoutFields(jur_FSet),
jur_FinalSet__init_ = $this => {
    jur_FSet__init_($this, 0);
},
jur_FinalSet__init_0 = () => {
    let var_0 = new jur_FinalSet();
    jur_FinalSet__init_(var_0);
    return var_0;
},
jur_FinalSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if ($matchResult.$mode() != 1 && $stringIndex != $matchResult.$getRightBound())
        return (-1);
    $matchResult.$setValid();
    $matchResult.$setEnd(0, $stringIndex);
    return $stringIndex;
},
jur_FinalSet_getName = $this => {
    return $rt_s(379);
};
function bl_btMotionState$2() {
    jl_Object.call(this);
    this.$this$027 = null;
}
let bl_btMotionState$2__init_ = ($this, $this$0) => {
    $this.$this$027 = $this$0;
    jl_Object__init_($this);
},
bl_btMotionState$2__init_0 = var_0 => {
    let var_1 = new bl_btMotionState$2();
    bl_btMotionState$2__init_(var_1, var_0);
    return var_1;
},
bl_btMotionState$2_setWorldTransform = ($this, $worldTrans_addr) => {
    bl_btMotionState_internal_setWorldTransform($this.$this$027, $worldTrans_addr);
},
bl_btMotionState$2_setWorldTransform$exported$0 = (var$1, var$2) => {
    let var$3;
    var$3 = var$2;
    var$1.$setWorldTransform0(var$3);
};
function bl_btMotionState$1() {
    jl_Object.call(this);
    this.$this$014 = null;
}
let bl_btMotionState$1__init_ = ($this, $this$0) => {
    $this.$this$014 = $this$0;
    jl_Object__init_($this);
},
bl_btMotionState$1__init_0 = var_0 => {
    let var_1 = new bl_btMotionState$1();
    bl_btMotionState$1__init_(var_1, var_0);
    return var_1;
},
bl_btMotionState$1_getWorldTransform = ($this, $worldTrans_addr) => {
    bl_btMotionState_internal_getWorldTransform($this.$this$014, $worldTrans_addr);
},
bl_btMotionState$1_getWorldTransform$exported$0 = (var$1, var$2) => {
    let var$3;
    var$3 = var$2;
    var$1.$getWorldTransform0(var$3);
},
jur_EmptySet = $rt_classWithoutFields(jur_LeafSet),
jur_EmptySet__init_0 = ($this, $next) => {
    jur_LeafSet__init_0($this, $next);
    $this.$charCount0 = 0;
},
jur_EmptySet__init_ = var_0 => {
    let var_1 = new jur_EmptySet();
    jur_EmptySet__init_0(var_1, var_0);
    return var_1;
},
jur_EmptySet_accepts = ($this, $stringIndex, $testString) => {
    return 0;
},
jur_EmptySet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $startStr, var$6, $low, $high;
    $strLength = $matchResult.$getRightBound();
    $startStr = $matchResult.$getLeftBound();
    while (true) {
        var$6 = $rt_compare($stringIndex, $strLength);
        if (var$6 > 0)
            return (-1);
        if (var$6 < 0) {
            $low = $testString.$charAt($stringIndex);
            if (jl_Character_isLowSurrogate($low) && $stringIndex > $startStr) {
                $high = $testString.$charAt($stringIndex - 1 | 0);
                if (jl_Character_isHighSurrogate($high)) {
                    $stringIndex = $stringIndex + 1 | 0;
                    continue;
                }
            }
        }
        if ($this.$next1.$matches($stringIndex, $testString, $matchResult) >= 0)
            break;
        $stringIndex = $stringIndex + 1 | 0;
    }
    return $stringIndex;
},
jur_EmptySet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    let $strLength, $startStr, $low, $high;
    $strLength = $matchResult.$getRightBound();
    $startStr = $matchResult.$getLeftBound();
    while (true) {
        if ($startSearch < $stringIndex)
            return (-1);
        if ($startSearch < $strLength) {
            $low = $testString.$charAt($startSearch);
            if (jl_Character_isLowSurrogate($low) && $startSearch > $startStr) {
                $high = $testString.$charAt($startSearch - 1 | 0);
                if (jl_Character_isHighSurrogate($high)) {
                    $startSearch = $startSearch + (-1) | 0;
                    continue;
                }
            }
        }
        if ($this.$next1.$matches($startSearch, $testString, $matchResult) >= 0)
            break;
        $startSearch = $startSearch + (-1) | 0;
    }
    return $startSearch;
},
jur_EmptySet_getName = $this => {
    return $rt_s(380);
},
jur_EmptySet_hasConsumed = ($this, $mr) => {
    return 0;
};
function cbggga_IntAttribute() {
    cbggg_Attribute.call(this);
    this.$value8 = 0;
}
let cbggga_IntAttribute_CullFace = Long_ZERO,
cbggga_IntAttribute_$callClinit = () => {
    cbggga_IntAttribute_$callClinit = $rt_eraseClinit(cbggga_IntAttribute);
    cbggga_IntAttribute__clinit_();
},
cbggga_IntAttribute__clinit_ = () => {
    cbggga_IntAttribute_CullFace = cbggg_Attribute_register($rt_s(381));
};
function cgxjl_JParserLibraryLoader$1() {
    jl_Object.call(this);
    this.$val$listener2 = null;
}
let cgxjl_JParserLibraryLoader$1__init_ = ($this, var$1) => {
    $this.$val$listener2 = var$1;
    jl_Object__init_($this);
},
cgxjl_JParserLibraryLoader$1__init_0 = var_0 => {
    let var_1 = new cgxjl_JParserLibraryLoader$1();
    cgxjl_JParserLibraryLoader$1__init_(var_1, var_0);
    return var_1;
},
cgxjl_JParserLibraryLoader$1_onLoad = ($this, $isSuccess, $e) => {
    $this.$val$listener2.$onLoad($isSuccess, $e);
},
ju_Enumeration = $rt_classWithoutFields(0);
function ju_StringTokenizer() {
    let a = this; jl_Object.call(a);
    a.$string0 = null;
    a.$delimiters = null;
    a.$returnDelimiters = 0;
    a.$position7 = 0;
}
let ju_StringTokenizer__init_1 = ($this, $string, $delimiters) => {
    ju_StringTokenizer__init_0($this, $string, $delimiters, 0);
},
ju_StringTokenizer__init_ = (var_0, var_1) => {
    let var_2 = new ju_StringTokenizer();
    ju_StringTokenizer__init_1(var_2, var_0, var_1);
    return var_2;
},
ju_StringTokenizer__init_0 = ($this, $string, $delimiters, $returnDelimiters) => {
    jl_Object__init_($this);
    if ($string === null)
        $rt_throw(jl_NullPointerException__init_());
    $this.$string0 = $string;
    $this.$delimiters = $delimiters;
    $this.$returnDelimiters = $returnDelimiters;
    $this.$position7 = 0;
},
ju_StringTokenizer__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new ju_StringTokenizer();
    ju_StringTokenizer__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
ju_StringTokenizer_hasMoreTokens = $this => {
    let $length, $i;
    if ($this.$delimiters === null)
        $rt_throw(jl_NullPointerException__init_());
    a: {
        $length = $this.$string0.$length();
        if ($this.$position7 < $length) {
            if ($this.$returnDelimiters)
                return 1;
            $i = $this.$position7;
            while (true) {
                if ($i >= $length)
                    break a;
                if ($this.$delimiters.$indexOf0($this.$string0.$charAt($i), 0) == (-1))
                    return 1;
                $i = $i + 1 | 0;
            }
        }
    }
    return 0;
},
ju_StringTokenizer_nextToken = $this => {
    let $i, $length, var$3, var$4, var$5;
    if ($this.$delimiters === null)
        $rt_throw(jl_NullPointerException__init_());
    $i = $this.$position7;
    $length = $this.$string0.$length();
    if ($i < $length) {
        if ($this.$returnDelimiters) {
            if ($this.$delimiters.$indexOf0($this.$string0.$charAt($this.$position7), 0) >= 0) {
                var$3 = $this.$string0;
                var$4 = $this.$position7;
                $this.$position7 = var$4 + 1 | 0;
                return jl_String_valueOf1(var$3.$charAt(var$4));
            }
            $this.$position7 = $this.$position7 + 1 | 0;
            while ($this.$position7 < $length) {
                if ($this.$delimiters.$indexOf0($this.$string0.$charAt($this.$position7), 0) >= 0)
                    return $this.$string0.$substring($i, $this.$position7);
                $this.$position7 = $this.$position7 + 1 | 0;
            }
            return $this.$string0.$substring0($i);
        }
        while (true) {
            var$5 = $rt_compare($i, $length);
            if (var$5 >= 0)
                break;
            if ($this.$delimiters.$indexOf0($this.$string0.$charAt($i), 0) < 0)
                break;
            $i = $i + 1 | 0;
        }
        $this.$position7 = $i;
        if (var$5 < 0) {
            $this.$position7 = $this.$position7 + 1 | 0;
            while ($this.$position7 < $length) {
                if ($this.$delimiters.$indexOf0($this.$string0.$charAt($this.$position7), 0) >= 0)
                    return $this.$string0.$substring($i, $this.$position7);
                $this.$position7 = $this.$position7 + 1 | 0;
            }
            return $this.$string0.$substring0($i);
        }
    }
    $rt_throw(ju_NoSuchElementException__init_1());
};
function cbggg_TextureRegion() {
    let a = this; jl_Object.call(a);
    a.$texture0 = null;
    a.$u = 0.0;
    a.$v = 0.0;
    a.$u2 = 0.0;
    a.$v20 = 0.0;
    a.$regionWidth = 0;
    a.$regionHeight = 0;
}
let cbggg_TextureRegion__init_0 = ($this, $texture) => {
    jl_Object__init_($this);
    if ($texture === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(382)));
    $this.$texture0 = $texture;
    $this.$setRegion0(0, 0, $texture.$getWidth0(), $texture.$getHeight0());
},
cbggg_TextureRegion__init_ = var_0 => {
    let var_1 = new cbggg_TextureRegion();
    cbggg_TextureRegion__init_0(var_1, var_0);
    return var_1;
},
cbggg_TextureRegion_setRegion0 = ($this, $x, $y, $width, $height) => {
    let $invTexWidth, $invTexHeight;
    $invTexWidth = 1.0 / $this.$texture0.$getWidth0();
    $invTexHeight = 1.0 / $this.$texture0.$getHeight0();
    $this.$setRegion1($x * $invTexWidth, $y * $invTexHeight, ($x + $width | 0) * $invTexWidth, ($y + $height | 0) * $invTexHeight);
    $this.$regionWidth = jl_Math_abs0($width);
    $this.$regionHeight = jl_Math_abs0($height);
},
cbggg_TextureRegion_setRegion = ($this, $u, $v, $u2, $v2) => {
    let $texWidth, $texHeight, var$7, var$8, var$9, $adjustX, $adjustY;
    $texWidth = $this.$texture0.$getWidth0();
    $texHeight = $this.$texture0.$getHeight0();
    var$7 = jl_Math_abs($u2 - $u);
    var$8 = $texWidth;
    $this.$regionWidth = jl_Math_round(var$7 * var$8);
    var$7 = jl_Math_abs($v2 - $v);
    var$9 = $texHeight;
    $this.$regionHeight = jl_Math_round(var$7 * var$9);
    if ($this.$regionWidth == 1 && $this.$regionHeight == 1) {
        $adjustX = 0.25 / var$8;
        $u = $u + $adjustX;
        $u2 = $u2 - $adjustX;
        $adjustY = 0.25 / var$9;
        $v = $v + $adjustY;
        $v2 = $v2 - $adjustY;
    }
    $this.$u = $u;
    $this.$v = $v;
    $this.$u2 = $u2;
    $this.$v20 = $v2;
},
cbggg_TextureRegion_getTexture = $this => {
    return $this.$texture0;
},
cbggg_TextureRegion_getRegionWidth = $this => {
    return $this.$regionWidth;
},
cbggg_TextureRegion_getRegionHeight = $this => {
    return $this.$regionHeight;
};
function cbggg_TextureAtlas$AtlasRegion() {
    let a = this; cbggg_TextureRegion.call(a);
    a.$offsetX = 0.0;
    a.$offsetY = 0.0;
    a.$packedHeight = 0;
    a.$originalHeight0 = 0;
}
let cbg_Graphics = $rt_classWithoutFields(0);
function cgxgbt_TeaGraphics() {
    let a = this; jl_Object.call(a);
    a.$context0 = null;
    a.$canvas0 = null;
    a.$config1 = null;
    a.$gl20 = null;
    a.$gl30 = null;
    a.$glVersion = null;
    a.$fps = 0.0;
    a.$lastTimeStamp = Long_ZERO;
    a.$frameId = Long_ZERO;
    a.$deltaTime = 0.0;
    a.$time0 = 0.0;
    a.$frames = 0;
}
let cgxgbt_TeaGraphics__init_ = ($this, $config) => {
    let $window, $document, $elementID, var$5, var$6, $versionString, $vendorString, $rendererString, $currentWindow, $width, $height, var$13, var$14;
    jl_Object__init_($this);
    $this.$fps = 0.0;
    $this.$lastTimeStamp = jl_System_currentTimeMillis();
    $this.$frameId = Long_fromInt(-1);
    $this.$deltaTime = 0.0;
    $this.$time0 = 0.0;
    $this.$config1 = $config;
    $window = cgxgbtdi_TeaWindow__init_0();
    $document = $window.$getDocument();
    $elementID = $document.getElementById($rt_ustr($config.$canvasID));
    $this.$canvas0 = $elementID;
    var$5 = otjw_WebGLContextAttributes_create$js_body$_13();
    var$5.alpha = !!$config.$alpha;
    var$5.antialias = !!$config.$antialiasing;
    var$5.stencil = !!$config.$stencil;
    var$5.premultipliedAlpha = !!$config.$premultipliedAlpha;
    var$5.preserveDrawingBuffer = !!$config.$preserveDrawingBuffer;
    var$5.powerPreference = $rt_ustr($config.$powerPreference);
    if ($config.$useGL30)
        $this.$context0 = $this.$canvas0.getContext("webgl2", var$5);
    if ($config.$useGL30 && $this.$context0 !== null) {
        var$6 = !$config.$useDebugGL ? cgxgbt_TeaGL30__init_0($this.$context0) : cgxgbt_TeaGL30Debug__init_0($this.$context0);
        $this.$gl30 = var$6;
        $this.$gl20 = $this.$gl30;
    } else {
        $this.$context0 = $this.$canvas0.getContext("webgl", var$5);
        $this.$gl20 = !$config.$useDebugGL ? cgxgbt_TeaGL20__init_0($this.$context0) : cgxgbt_TeaGL20Debug__init_0($this.$context0);
    }
    $versionString = $this.$gl20.$glGetString(7938);
    $vendorString = $this.$gl20.$glGetString(7936);
    $rendererString = $this.$gl20.$glGetString(7937);
    var$6 = new cbggg_GLVersion;
    cbg_Application$ApplicationType_$callClinit();
    cbggg_GLVersion__init_(var$6, cbg_Application$ApplicationType_WebGL, $versionString, $vendorString, $rendererString);
    $this.$glVersion = var$6;
    if (!($config.$width5 < 0 && $config.$height4 < 0)) {
        if ($config.$isFixedSizeApplication())
            $this.$setCanvasSize($config.$width5, $config.$height4, 0);
        else {
            $currentWindow = cgxgbtdi_TeaWindow_get();
            $width = $currentWindow.$getClientWidth() - $config.$padHorizontal | 0;
            $height = $currentWindow.$getClientHeight() - $config.$padVertical | 0;
            $this.$setCanvasSize($width, $height, $config.$usePhysicalPixels);
        }
    }
    var$6 = $this.$context0;
    var$13 = $this.$getWidth0();
    var$14 = $this.$getHeight0();
    var$6.viewport(0, 0, var$13, var$14);
    cgxgbt_TeaGraphics_addFullscreenChangeListener$js_body$_64($this.$canvas0, otji_JS_function(otji_JSWrapper_unwrap(cgxgbt_TeaGraphics$1__init_0($this)), "fullscreenChanged"));
},
cgxgbt_TeaGraphics__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaGraphics();
    cgxgbt_TeaGraphics__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaGraphics_render = ($this, $listener) => {
    $listener.$render3();
},
cgxgbt_TeaGraphics_resize = ($this, $appListener, $width, $height) => {
    cbg_Gdx_gl.$glViewport(0, 0, $width, $height);
    $appListener.$resize1($width, $height);
},
cgxgbt_TeaGraphics_update = $this => {
    let $currTimeStamp;
    $currTimeStamp = jl_System_currentTimeMillis();
    $this.$deltaTime = Long_toNumber(Long_sub($currTimeStamp, $this.$lastTimeStamp)) / 1000.0;
    $this.$lastTimeStamp = $currTimeStamp;
    $this.$time0 = $this.$time0 + $this.$deltaTime;
    $this.$frames = $this.$frames + 1 | 0;
    if ($this.$time0 > 1.0) {
        $this.$fps = $this.$frames;
        $this.$time0 = 0.0;
        $this.$frames = 0;
    }
},
cgxgbt_TeaGraphics_getGL20 = $this => {
    return $this.$gl20;
},
cgxgbt_TeaGraphics_getGL30 = $this => {
    return $this.$gl30;
},
cgxgbt_TeaGraphics_getWidth = $this => {
    return $this.$canvas0.width;
},
cgxgbt_TeaGraphics_getHeight = $this => {
    return $this.$canvas0.height;
},
cgxgbt_TeaGraphics_getBackBufferWidth = $this => {
    return $this.$canvas0.width;
},
cgxgbt_TeaGraphics_getBackBufferHeight = $this => {
    return $this.$canvas0.height;
},
cgxgbt_TeaGraphics_getDeltaTime = $this => {
    return $this.$deltaTime;
},
cgxgbt_TeaGraphics_getFramesPerSecond = $this => {
    return $this.$fps | 0;
},
cgxgbt_TeaGraphics_getDisplayMode = $this => {
    let $density;
    $density = !$this.$config1.$usePhysicalPixels ? 1.0 : $this.$getNativeScreenDensity();
    return cgxgbt_TeaGraphics$2__init_0($this, screen.width * $density | 0, screen.height * $density | 0, 60, 8);
},
cgxgbt_TeaGraphics_setFullscreenMode = ($this, $displayMode) => {
    let $supportedMode;
    $supportedMode = $this.$getDisplayMode();
    if ($displayMode.$width7 != $supportedMode.$width7 && $displayMode.$height7 != $supportedMode.$height7)
        return 0;
    return $this.$enterFullscreen($this.$canvas0, $displayMode.$width7, $displayMode.$height7);
},
cgxgbt_TeaGraphics_setWindowedMode = ($this, $width, $height) => {
    if ($this.$isFullscreen())
        $this.$exitFullscreen();
    if (!$this.$config1.$isAutoSizeApplication())
        $this.$setCanvasSize($width, $height, $this.$config1.$usePhysicalPixels);
    return 1;
},
cgxgbt_TeaGraphics_setCanvasSize = ($this, $width, $height, $usePhysicalPixels) => {
    let $density, $w, $h, $style, var$8;
    $density = 1.0;
    if ($usePhysicalPixels)
        $density = $this.$getNativeScreenDensity();
    $w = $width * $density | 0;
    $h = $height * $density | 0;
    $this.$canvas0.width = $w;
    $this.$canvas0.height = $h;
    if ($usePhysicalPixels) {
        $style = $this.$canvas0.style;
        var$8 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append0(var$8, $width), $rt_s(383));
        $style.setProperty("width", $rt_ustr(jl_StringBuilder_toString(var$8)));
        var$8 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append0(var$8, $height), $rt_s(383));
        $style.setProperty("height", $rt_ustr(jl_StringBuilder_toString(var$8)));
    }
},
cgxgbt_TeaGraphics_supportsExtension = ($this, $extensionName) => {
    if ($this.$context0 === null)
        return 0;
    return $this.$context0.getExtension($rt_ustr($extensionName)) === null ? 0 : 1;
},
cgxgbt_TeaGraphics_requestRendering = $this => {
    return;
},
cgxgbt_TeaGraphics_getNativeScreenDensity = $this => {
    return devicePixelRatio || 1;
},
cgxgbt_TeaGraphics_enterFullscreen = ($this, $element, $screenWidth, $screenHeight) => {
    return cgxgbt_TeaGraphics_enterFullscreenNATIVE$js_body$_66($element, $screenWidth, $screenHeight) ? 1 : 0;
},
cgxgbt_TeaGraphics_exitFullscreen = $this => {
    cgxgbt_TeaGraphics_exitFullscreenNATIVE$js_body$_68();
},
cgxgbt_TeaGraphics_isFullscreen = $this => {
    return cgxgbt_TeaGraphics_isFullscreenNATIVE$js_body$_70() ? 1 : 0;
},
cgxgbt_TeaGraphics_addFullscreenChangeListener$js_body$_64 = (var$1, var$2) => {
    if (var$1.requestFullscreen) {
        document.addEventListener("fullscreenchange", var$2, false);
    }
    if (var$1.webkitRequestFullScreen) {
        document.addEventListener("webkitfullscreenchange", var$2, false);
    }
    if (var$1.mozRequestFullScreen) {
        document.addEventListener("mozfullscreenchange", var$2, false);
    }
    if (var$1.msRequestFullscreen) {
        document.addEventListener("msfullscreenchange", var$2, false);
    }
},
cgxgbt_TeaGraphics_enterFullscreenNATIVE$js_body$_66 = (var$1, var$2, var$3) => {
    if (var$1.requestFullscreen) {
        var$1.width = var$2;
        var$1.height = var$3;
        var$1.requestFullscreen();
        return true;
    }
    if (var$1.webkitRequestFullScreen) {
        var$1.width = var$2;
        var$1.height = var$3;
        var$1.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT);
        return true;
    }
    if (var$1.mozRequestFullScreen) {
        var$1.width = var$2;
        var$1.height = var$3;
        var$1.mozRequestFullScreen();
        return true;
    }
    if (var$1.msRequestFullscreen) {
        var$1.width = var$2;
        var$1.height = var$3;
        var$1.msRequestFullscreen();
        return true;
    }
    return false;
},
cgxgbt_TeaGraphics_exitFullscreenNATIVE$js_body$_68 = () => {
    if (document.exitFullscreen) document.exitFullscreen();
    if (document.msExitFullscreen) document.msExitFullscreen();
    if (document.webkitExitFullscreen) document.webkitExitFullscreen();
    if (document.mozExitFullscreen) document.mozExitFullscreen();
    if (document.webkitCancelFullScreen) document.webkitCancelFullScreen();
},
cgxgbt_TeaGraphics_isFullscreenNATIVE$js_body$_70 = () => {
    if ("fullscreenElement" in document) {
        return document.fullscreenElement != null;
    }
    if ("msFullscreenElement" in document) {
        return document.msFullscreenElement != null;
    }
    if ("webkitFullscreenElement" in document) {
        return document.webkitFullscreenElement != null;
    }
    if ("mozFullScreenElement" in document) {
        return document.mozFullScreenElement != null;
    }
    if ("webkitIsFullScreen" in document) {
        return document.webkitIsFullScreen;
    }
    if ("mozFullScreen" in document) {
        return document.mozFullScreen;
    }
    return false;
},
bbc_btCollisionConfiguration = $rt_classWithoutFields(bi_IDLBase),
bbc_btCollisionConfiguration_NULL = null,
bbc_btCollisionConfiguration_T_01 = null,
bbc_btCollisionConfiguration_T_02 = null,
bbc_btCollisionConfiguration_T_03 = null,
bbc_btCollisionConfiguration_$callClinit = () => {
    bbc_btCollisionConfiguration_$callClinit = $rt_eraseClinit(bbc_btCollisionConfiguration);
    bbc_btCollisionConfiguration__clinit_();
},
bbc_btCollisionConfiguration__init_ = ($this, var$1, var$2) => {
    bbc_btCollisionConfiguration_$callClinit();
    bi_IDLBase__init_($this);
},
bbc_btCollisionConfiguration__init_0 = (var_0, var_1) => {
    let var_2 = new bbc_btCollisionConfiguration();
    bbc_btCollisionConfiguration__init_(var_2, var_0, var_1);
    return var_2;
},
bbc_btCollisionConfiguration_native_new = () => {
    bbc_btCollisionConfiguration_$callClinit();
    return bbc_btCollisionConfiguration__init_0(0, 0);
},
bbc_btCollisionConfiguration__clinit_ = () => {
    bbc_btCollisionConfiguration_NULL = bbc_btCollisionConfiguration_native_new();
    bbc_btCollisionConfiguration_T_01 = bbc_btCollisionConfiguration_native_new();
    bbc_btCollisionConfiguration_T_02 = bbc_btCollisionConfiguration_native_new();
    bbc_btCollisionConfiguration_T_03 = bbc_btCollisionConfiguration_native_new();
},
bbc_btDefaultCollisionConfiguration = $rt_classWithoutFields(bbc_btCollisionConfiguration),
bbc_btDefaultCollisionConfiguration_NULL = null,
bbc_btDefaultCollisionConfiguration_T_01 = null,
bbc_btDefaultCollisionConfiguration_T_02 = null,
bbc_btDefaultCollisionConfiguration_T_03 = null,
bbc_btDefaultCollisionConfiguration_$callClinit = () => {
    bbc_btDefaultCollisionConfiguration_$callClinit = $rt_eraseClinit(bbc_btDefaultCollisionConfiguration);
    bbc_btDefaultCollisionConfiguration__clinit_();
},
bbc_btDefaultCollisionConfiguration__init_0 = ($this, $info) => {
    let $addr;
    bbc_btDefaultCollisionConfiguration_$callClinit();
    bbc_btCollisionConfiguration__init_($this, 1, 1);
    $addr = bbc_btDefaultCollisionConfiguration_internal_native_create_btDefaultCollisionConstructionInfo$js_body$_1($info.$native_address);
    bi_IDLBase_internal_reset($this, $addr, 1);
},
bbc_btDefaultCollisionConfiguration__init_1 = var_0 => {
    let var_1 = new bbc_btDefaultCollisionConfiguration();
    bbc_btDefaultCollisionConfiguration__init_0(var_1, var_0);
    return var_1;
},
bbc_btDefaultCollisionConfiguration__init_ = ($this, $b, $c) => {
    bbc_btDefaultCollisionConfiguration_$callClinit();
    bbc_btCollisionConfiguration__init_($this, 1, 1);
},
bbc_btDefaultCollisionConfiguration__init_2 = (var_0, var_1) => {
    let var_2 = new bbc_btDefaultCollisionConfiguration();
    bbc_btDefaultCollisionConfiguration__init_(var_2, var_0, var_1);
    return var_2;
},
bbc_btDefaultCollisionConfiguration_native_new = () => {
    bbc_btDefaultCollisionConfiguration_$callClinit();
    return bbc_btDefaultCollisionConfiguration__init_2(0, 0);
},
bbc_btDefaultCollisionConfiguration__clinit_ = () => {
    bbc_btDefaultCollisionConfiguration_NULL = bbc_btDefaultCollisionConfiguration_native_new();
    bbc_btDefaultCollisionConfiguration_T_01 = bbc_btDefaultCollisionConfiguration_native_new();
    bbc_btDefaultCollisionConfiguration_T_02 = bbc_btDefaultCollisionConfiguration_native_new();
    bbc_btDefaultCollisionConfiguration_T_03 = bbc_btDefaultCollisionConfiguration_native_new();
},
bbc_btDefaultCollisionConfiguration_internal_native_create_btDefaultCollisionConstructionInfo$js_body$_1 = var$1 => {
    var jsObj = new bullet.btDefaultCollisionConfiguration(var$1);
    return bullet.getPointer(jsObj);
};
let cgxgbtf_FileDB = $rt_classWithoutFields(),
cgxgbtf_FileDB__init_ = $this => {
    jl_Object__init_($this);
},
cgxgbtf_FileDB_write = ($this, $file, $append, $bufferSize) => {
    let $buffer;
    $buffer = ji_ByteArrayOutputStream__init_0(jl_Math_max(512, jl_Math_min($bufferSize, 8192)));
    return cgxgbtf_FileDB$1__init_0($this, $buffer, $file, $append, $bufferSize);
};
function cgxgbtf_MemoryFileStorage() {
    let a = this; cgxgbtf_FileDB.call(a);
    a.$debug1 = 0;
    a.$fileMap = null;
    a.$tmpPaths = null;
}
let cgxgbtf_MemoryFileStorage__init_ = $this => {
    cgxgbtf_FileDB__init_($this);
    $this.$debug1 = 0;
    $this.$tmpPaths = cbgu_Array__init_();
    $this.$fileMap = cbgu_OrderedMap__init_0();
},
cgxgbtf_MemoryFileStorage__init_0 = () => {
    let var_0 = new cgxgbtf_MemoryFileStorage();
    cgxgbtf_MemoryFileStorage__init_(var_0);
    return var_0;
},
cgxgbtf_MemoryFileStorage_read = ($this, $file) => {
    let $path, $data, $byteArray, var$5, $e, var$7, var$8, $$je;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$path());
    $data = cgxgbtf_MemoryFileStorage_getInternal($this, $path);
    if ($data === null)
        return null;
    $byteArray = $data.$getBytes0();
    a: {
        try {
            var$5 = ji_ByteArrayInputStream__init_1($byteArray);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jl_RuntimeException) {
                $e = $$je;
                break a;
            } else {
                throw $$e;
            }
        }
        return var$5;
    }
    cgxgbtf_MemoryFileStorage_removeInternal($this, $path);
    var$5 = new cbgu_GdxRuntimeException;
    var$7 = jl_Class_getSimpleName(jl_Object_getClass($this));
    var$8 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$8, var$7), $rt_s(384)), $path);
    cbgu_GdxRuntimeException__init_1(var$5, jl_StringBuilder_toString(var$8), $e);
    $rt_throw(var$5);
},
cgxgbtf_MemoryFileStorage_writeInternal = ($this, $file, $data, $append, $expectedLength) => {
    let $path, $oldData, var$7, $oldBytes, var$9, var$10, var$11, $newSize, $i, $j, $cur, $parentPath;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$path());
    $oldData = $this.$fileMap.$get2($path);
    if ($append && $oldData !== null) {
        var$7 = $data.data;
        $oldBytes = $oldData.$getBytes0();
        var$9 = $oldBytes.data;
        var$10 = var$7.length;
        var$11 = var$9.length;
        $newSize = var$10 + var$11 | 0;
        $data = $rt_createByteArray($newSize);
        $i = 0;
        while ($i < var$11) {
            $data.data[$i] = var$9[$i];
            $i = $i + 1 | 0;
        }
        $j = 0;
        while (var$11 < $newSize) {
            $data.data[var$11] = var$7[$j];
            var$11 = var$11 + 1 | 0;
            $j = $j + 1 | 0;
        }
    }
    cgxgbtf_MemoryFileStorage_putFileInternal0($this, $path, $data);
    $cur = $file.$parent();
    while (!cgxgbtf_MemoryFileStorage_isRootFolder($this, $cur)) {
        $parentPath = cgxgbtf_MemoryFileStorage_fixPath($this, $cur.$path());
        if (!$this.$fileMap.$containsKey($parentPath))
            cgxgbtf_MemoryFileStorage_putFolderInternal($this, $parentPath);
        $cur = $cur.$parent();
    }
},
cgxgbtf_MemoryFileStorage_mkdirs = ($this, $file) => {
    let $path, $cur, $parentPath;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$path());
    cgxgbtf_MemoryFileStorage_putFolderInternal($this, $path);
    $cur = $file.$parent();
    while (!cgxgbtf_MemoryFileStorage_isRootFolder($this, $cur)) {
        $parentPath = cgxgbtf_MemoryFileStorage_fixPath($this, $cur.$path());
        if (!$this.$fileMap.$containsKey($parentPath))
            cgxgbtf_MemoryFileStorage_putFolderInternal($this, $parentPath);
        $cur = $cur.$parent();
    }
},
cgxgbtf_MemoryFileStorage_exists = ($this, $file) => {
    let $path;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$path());
    if (!cgxgbtf_MemoryFileStorage_isRootFolder($this, $file))
        return cgxgbtf_MemoryFileStorage_containsKeyInternal($this, $path);
    return 1;
},
cgxgbtf_MemoryFileStorage_length = ($this, $file) => {
    let $path, $data, $bytes, var$5;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $file.$path());
    $data = cgxgbtf_MemoryFileStorage_getInternal($this, $path);
    if ($data !== null && !$data.$isDirectory()) {
        $bytes = $data.$getBytes0();
        var$5 = $bytes.data;
        return Long_fromInt(var$5.length);
    }
    return Long_ZERO;
},
cgxgbtf_MemoryFileStorage_isRootFolder = ($this, $cur) => {
    let $path;
    $path = cgxgbtf_MemoryFileStorage_fixPath($this, $cur.$path());
    if (!$path.$isEmpty() && !$path.$equals($rt_s(385)) && !$path.$equals($rt_s(32)) && !$path.$equals($rt_s(386)))
        return 0;
    return 1;
},
cgxgbtf_MemoryFileStorage_putFile = ($this, $key, $data) => {
    return;
},
cgxgbtf_MemoryFileStorage_removeFile = ($this, $key) => {
    return;
},
cgxgbtf_MemoryFileStorage_getInternal = ($this, $path) => {
    let $fileData, var$3, var$4, $type, var$6, var$7, var$8, var$9;
    $fileData = $this.$fileMap.$get2($path);
    if ($this.$debug1) {
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(var$3, 34), $path), 34);
        var$4 = jl_StringBuilder_toString(var$3);
        $type = $fileData !== null && $fileData.$isDirectory() ? $rt_s(387) : $rt_s(388);
        var$3 = jl_System_out();
        var$6 = jl_Class_getSimpleName(jl_Object_getClass($this));
        var$7 = $fileData === null ? 0 : 1;
        var$8 = $fileData === null ? 0 : $fileData.$getBytesSize();
        var$9 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append(var$9, var$6), $type), var$7), $rt_s(389)), var$8), $rt_s(390)), var$4);
        var$3.$println1(jl_StringBuilder_toString(var$9));
    }
    return $fileData;
},
cgxgbtf_MemoryFileStorage_putFileInternal0 = ($this, $path, $bytes) => {
    cgxgbtf_MemoryFileStorage_putFileInternal($this, $path, $bytes, 1);
},
cgxgbtf_MemoryFileStorage_putFileInternal = ($this, $path, $bytes, $callMethod) => {
    let var$4, var$5, $pathStr, var$7, var$8, var$9, $fileData;
    if ($this.$debug1) {
        var$4 = $bytes.data;
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(var$5, 34), $path), 34);
        $pathStr = jl_StringBuilder_toString(var$5);
        var$5 = jl_System_out();
        var$7 = jl_Class_getSimpleName(jl_Object_getClass($this));
        var$8 = var$4.length;
        var$9 = jl_StringBuilder__init_();
        jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$9, var$7), $rt_s(391)), $pathStr), $rt_s(392)), var$8);
        var$5.$println1(jl_StringBuilder_toString(var$9));
    }
    if (!$path.$isEmpty() && !$path.$equals($rt_s(385)) && !$path.$equals($rt_s(32)) && !$path.$equals($rt_s(386))) {
        $fileData = cgxgbtf_FileData__init_2($path, $bytes);
        $this.$fileMap.$put($path, $fileData);
        if ($callMethod)
            $this.$putFile($path, $fileData);
        return;
    }
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(393)));
},
cgxgbtf_MemoryFileStorage_putFolderInternal = ($this, $path) => {
    cgxgbtf_MemoryFileStorage_putFolderInternal0($this, $path, 1);
},
cgxgbtf_MemoryFileStorage_putFolderInternal0 = ($this, $path, $callMethod) => {
    let var$3, $pathStr, var$5, var$6, $fileData;
    if ($this.$debug1) {
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(var$3, 34), $path), 34);
        $pathStr = jl_StringBuilder_toString(var$3);
        var$3 = jl_System_out();
        var$5 = jl_Class_getSimpleName(jl_Object_getClass($this));
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$6, var$5), $rt_s(394)), $pathStr);
        var$3.$println1(jl_StringBuilder_toString(var$6));
    }
    if (!$path.$isEmpty() && !$path.$equals($rt_s(385)) && !$path.$equals($rt_s(32)) && !$path.$equals($rt_s(386))) {
        $fileData = cgxgbtf_FileData__init_3($path);
        $this.$fileMap.$put($path, cgxgbtf_FileData__init_3($path));
        if ($callMethod)
            $this.$putFile($path, $fileData);
        return;
    }
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(393)));
},
cgxgbtf_MemoryFileStorage_removeInternal = ($this, $path) => {
    return cgxgbtf_MemoryFileStorage_removeInternal0($this, $path, 1);
},
cgxgbtf_MemoryFileStorage_removeInternal0 = ($this, $path, $callMethod) => {
    let $fileData, var$4, $pathStr, $type, var$7, var$8, var$9;
    $fileData = $this.$fileMap.$remove2($path);
    if ($this.$debug1) {
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(var$4, 34), $path), 34);
        $pathStr = jl_StringBuilder_toString(var$4);
        $type = $fileData !== null && $fileData.$isDirectory() ? $rt_s(395) : $rt_s(396);
        var$4 = jl_System_out();
        var$7 = jl_Class_getSimpleName(jl_Object_getClass($this));
        var$8 = $fileData === null ? 0 : 1;
        var$9 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append(var$9, var$7), $type), var$8), $rt_s(390)), $pathStr);
        var$4.$println1(jl_StringBuilder_toString(var$9));
    }
    if ($fileData !== null && $callMethod)
        $this.$removeFile($path);
    return $fileData;
},
cgxgbtf_MemoryFileStorage_containsKeyInternal = ($this, $path) => {
    let $fileData, $flag, $type, var$5, var$6, var$7;
    $fileData = $this.$fileMap.$get2($path);
    $flag = $fileData === null ? 0 : 1;
    if ($this.$debug1) {
        $type = $fileData !== null && $fileData.$isDirectory() ? $rt_s(397) : $rt_s(398);
        var$5 = jl_System_out();
        var$6 = jl_Class_getSimpleName(jl_Object_getClass($this));
        var$7 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append2(jl_StringBuilder_append(jl_StringBuilder_append(var$7, var$6), $type), $flag), $rt_s(390)), $path);
        var$5.$println1(jl_StringBuilder_toString(var$7));
    }
    return $flag;
},
cgxgbtf_MemoryFileStorage_fixPath = ($this, $path) => {
    let var$2, var$3;
    var$2 = $path.$trim();
    if (var$2.$startsWith($rt_s(386)))
        var$2 = var$2.$replace($rt_s(386), $rt_s(60));
    if (var$2.$startsWith($rt_s(385)))
        var$2 = var$2.$replaceFirst0($rt_s(385), $rt_s(60));
    if (!var$2.$startsWith($rt_s(32))) {
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append1(var$3, 47), var$2);
        var$2 = jl_StringBuilder_toString(var$3);
    }
    if (!var$2.$endsWith($rt_s(32))) {
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append1(jl_StringBuilder_append(var$3, var$2), 47);
        var$2 = jl_StringBuilder_toString(var$3);
    }
    return var$2;
},
jl_IndexOutOfBoundsException = $rt_classWithoutFields(jl_RuntimeException),
jl_IndexOutOfBoundsException__init_2 = $this => {
    jl_RuntimeException__init_($this);
},
jl_IndexOutOfBoundsException__init_ = () => {
    let var_0 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_2(var_0);
    return var_0;
},
jl_IndexOutOfBoundsException__init_1 = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
jl_IndexOutOfBoundsException__init_0 = var_0 => {
    let var_1 = new jl_IndexOutOfBoundsException();
    jl_IndexOutOfBoundsException__init_1(var_1, var_0);
    return var_1;
},
jl_ArrayIndexOutOfBoundsException = $rt_classWithoutFields(jl_IndexOutOfBoundsException),
jl_ArrayIndexOutOfBoundsException__init_ = ($this, $index) => {
    jl_IndexOutOfBoundsException__init_1($this, jl_Integer_toString($index));
},
jl_ArrayIndexOutOfBoundsException__init_0 = var_0 => {
    let var_1 = new jl_ArrayIndexOutOfBoundsException();
    jl_ArrayIndexOutOfBoundsException__init_(var_1, var_0);
    return var_1;
};
function ji_InputStreamReader() {
    let a = this; ji_Reader.call(a);
    a.$stream = null;
    a.$decoder = null;
    a.$inData = null;
    a.$inBuffer = null;
    a.$outData = null;
    a.$outBuffer = null;
    a.$streamEof = 0;
    a.$eof0 = 0;
}
let ji_InputStreamReader__init_1 = ($this, $in, $charsetName) => {
    ji_InputStreamReader__init_($this, $in, ji_InputStreamReader_getCharset($charsetName));
},
ji_InputStreamReader__init_4 = (var_0, var_1) => {
    let var_2 = new ji_InputStreamReader();
    ji_InputStreamReader__init_1(var_2, var_0, var_1);
    return var_2;
},
ji_InputStreamReader__init_ = ($this, $in, $charset) => {
    let var$3, var$4;
    var$3 = $charset.$newDecoder();
    jnc_CodingErrorAction_$callClinit();
    var$4 = jnc_CodingErrorAction_REPLACE;
    var$4 = jnc_CharsetDecoder_onMalformedInput(var$3, var$4);
    var$3 = jnc_CodingErrorAction_REPLACE;
    var$4 = jnc_CharsetDecoder_onUnmappableCharacter(var$4, var$3);
    ji_InputStreamReader__init_2($this, $in, var$4);
},
ji_InputStreamReader__init_5 = (var_0, var_1) => {
    let var_2 = new ji_InputStreamReader();
    ji_InputStreamReader__init_(var_2, var_0, var_1);
    return var_2;
},
ji_InputStreamReader__init_0 = ($this, $in) => {
    jnci_UTF8Charset_$callClinit();
    ji_InputStreamReader__init_($this, $in, jnci_UTF8Charset_INSTANCE);
},
ji_InputStreamReader__init_3 = var_0 => {
    let var_1 = new ji_InputStreamReader();
    ji_InputStreamReader__init_0(var_1, var_0);
    return var_1;
},
ji_InputStreamReader__init_2 = ($this, $in, $decoder) => {
    ji_Reader__init_($this);
    $this.$inData = $rt_createByteArray(8192);
    $this.$inBuffer = jn_ByteBuffer_wrap($this.$inData);
    $this.$outData = $rt_createCharArray(1024);
    $this.$outBuffer = jn_CharBuffer_wrap($this.$outData);
    $this.$stream = $in;
    $this.$decoder = $decoder;
    $this.$outBuffer.$position0(jn_Buffer_limit($this.$outBuffer));
    $this.$inBuffer.$position2(jn_Buffer_limit($this.$inBuffer));
},
ji_InputStreamReader__init_6 = (var_0, var_1) => {
    let var_2 = new ji_InputStreamReader();
    ji_InputStreamReader__init_2(var_2, var_0, var_1);
    return var_2;
},
ji_InputStreamReader_getCharset = $charsetName => {
    let var$2, $$je;
    a: {
        try {
            var$2 = jnc_Charset_forName($charsetName.$toString());
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            if ($$je instanceof jnc_UnsupportedCharsetException) {
                break a;
            } else {
                throw $$e;
            }
        }
        return var$2;
    }
    $rt_throw(ji_UnsupportedEncodingException__init_0($charsetName));
},
ji_InputStreamReader_close = $this => {
    $this.$stream.$close();
},
ji_InputStreamReader_read = ($this, $cbuf, $off, $len) => {
    let $bytesRead, $sz;
    a: {
        if (jn_Buffer_hasRemaining($this.$outBuffer)) {
            if ($len)
                break a;
            return 0;
        }
        if ($this.$eof0)
            return (-1);
        if (!$len)
            return 0;
        ji_InputStreamReader_ensureBufferHasData($this, 1);
    }
    $bytesRead = 0;
    while (true) {
        $sz = jl_Math_min($len, jn_Buffer_remaining($this.$outBuffer));
        $this.$outBuffer.$get7($cbuf, $off + $bytesRead | 0, $sz);
        $len = $len - $sz | 0;
        $bytesRead = $bytesRead + $sz | 0;
        if ($len <= 0)
            break;
        if (!ji_InputStreamReader_ensureBufferHasData($this, 0))
            break;
    }
    return $bytesRead;
},
ji_InputStreamReader_ensureBufferHasData = ($this, $force) => {
    if (!jn_Buffer_hasRemaining($this.$outBuffer))
        return ji_InputStreamReader_fillBuffer($this, $force);
    return 1;
},
ji_InputStreamReader_fillBuffer = ($this, $force) => {
    let $readSomething, $hasAvailable, $decoderCalled, $posBefore, $result;
    if ($this.$eof0)
        return 0;
    $this.$outBuffer.$compact();
    $readSomething = $force ? 0 : 1;
    $hasAvailable = 1;
    $decoderCalled = 0;
    a: {
        while (true) {
            if (jn_Buffer_hasRemaining($this.$inBuffer)) {
                $posBefore = jn_Buffer_position($this.$outBuffer);
                $result = jnc_CharsetDecoder_decode($this.$decoder, $this.$inBuffer, $this.$outBuffer, $this.$streamEof);
                $decoderCalled = 1;
                $readSomething = $readSomething | (jn_Buffer_position($this.$outBuffer) <= $posBefore ? 0 : 1);
                if ($result.$isOverflow())
                    break;
                if (!$result.$isUnderflow())
                    continue;
            }
            if ($this.$stream.$available() <= 0 && $readSomething) {
                $hasAvailable = 0;
                break a;
            }
            if (!ji_InputStreamReader_fillReadBuffer($this)) {
                jnc_CharsetDecoder_decode($this.$decoder, $this.$inBuffer, $this.$outBuffer, 1);
                break a;
            }
        }
    }
    if (!jn_Buffer_hasRemaining($this.$inBuffer) && $this.$streamEof && !($decoderCalled && !(jnc_CharsetDecoder_flush($this.$decoder, $this.$outBuffer)).$isUnderflow()))
        $this.$eof0 = 1;
    jn_CharBuffer_flip($this.$outBuffer);
    return $hasAvailable;
},
ji_InputStreamReader_fillReadBuffer = $this => {
    let $bytesRead;
    if ($this.$streamEof)
        return 0;
    $this.$inBuffer.$compact0();
    a: {
        while (true) {
            if (!jn_Buffer_hasRemaining($this.$inBuffer))
                break a;
            $bytesRead = $this.$stream.$read3(jn_ByteBuffer_array($this.$inBuffer), jn_Buffer_position($this.$inBuffer), jn_Buffer_remaining($this.$inBuffer));
            if ($bytesRead == (-1))
                break;
            if ($bytesRead > 0) {
                $this.$inBuffer.$position2(jn_Buffer_position($this.$inBuffer) + $bytesRead | 0);
                break a;
            }
        }
        $this.$streamEof = 1;
    }
    jn_ByteBuffer_flip($this.$inBuffer);
    return 1;
},
ji_InputStreamReader_ready = $this => {
    return !jn_Buffer_hasRemaining($this.$outBuffer) && !jn_Buffer_hasRemaining($this.$inBuffer) && $this.$stream.$available() <= 0 ? 0 : 1;
},
cbgss_Stage$fireExit$lambda$_9_0 = $rt_classWithoutFields(),
cbgss_Stage$fireExit$lambda$_9_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgss_Stage$fireExit$lambda$_9_0__init_0 = () => {
    let var_0 = new cbgss_Stage$fireExit$lambda$_9_0();
    cbgss_Stage$fireExit$lambda$_9_0__init_(var_0);
    return var_0;
},
cbgss_Stage$fireExit$lambda$_9_0_get0 = var$0 => {
    return cbgss_Stage$fireExit$lambda$_9_0_get(var$0);
},
cbgss_Stage$fireExit$lambda$_9_0_get = var$0 => {
    return cbgss_InputEvent__init_();
},
cbgg_TextureData$Factory = $rt_classWithoutFields(),
cbgg_TextureData$Factory_loadFromFile = ($file, $format, $useMipMaps) => {
    let $fileTextureDataEmu;
    if ($file === null)
        return null;
    $fileTextureDataEmu = cbggg_FileTextureData__init_0($file, cbgg_Pixmap__init_2($file), $format, $useMipMaps);
    return $fileTextureDataEmu;
},
ju_Iterator = $rt_classWithoutFields(0);
function ju_AbstractList$1() {
    let a = this; jl_Object.call(a);
    a.$index6 = 0;
    a.$modCount1 = 0;
    a.$size13 = 0;
    a.$removeIndex0 = 0;
    a.$this$05 = null;
}
let ju_AbstractList$1__init_ = ($this, $this$0) => {
    $this.$this$05 = $this$0;
    jl_Object__init_($this);
    $this.$modCount1 = $this.$this$05.$modCount;
    $this.$size13 = $this.$this$05.$size();
    $this.$removeIndex0 = (-1);
},
ju_AbstractList$1__init_0 = var_0 => {
    let var_1 = new ju_AbstractList$1();
    ju_AbstractList$1__init_(var_1, var_0);
    return var_1;
},
ju_AbstractList$1_hasNext = $this => {
    return $this.$index6 >= $this.$size13 ? 0 : 1;
},
ju_AbstractList$1_next = $this => {
    let var$1, var$2;
    ju_AbstractList$1_checkConcurrentModification($this);
    $this.$removeIndex0 = $this.$index6;
    var$1 = $this.$this$05;
    var$2 = $this.$index6;
    $this.$index6 = var$2 + 1 | 0;
    return var$1.$get(var$2);
},
ju_AbstractList$1_checkConcurrentModification = $this => {
    if ($this.$modCount1 >= $this.$this$05.$modCount)
        return;
    $rt_throw(ju_ConcurrentModificationException__init_0());
};
function jn_IntBufferOverTypedArray() {
    let a = this; jn_IntBufferImpl.call(a);
    a.$readOnly6 = 0;
    a.$data8 = null;
    a.$array6 = null;
}
let jn_IntBufferOverTypedArray__init_ = ($this, $position, $limit, $readOnly, $data, $array) => {
    jn_IntBufferImpl__init_($this, $position, $limit);
    $this.$readOnly6 = $readOnly;
    $this.$data8 = $data;
    $this.$array6 = $array;
},
jn_IntBufferOverTypedArray__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_IntBufferOverTypedArray();
    jn_IntBufferOverTypedArray__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_IntBufferOverTypedArray_readOnly = $this => {
    return $this.$readOnly6;
},
jn_IntBufferOverTypedArray_getElement = ($this, $index) => {
    return $this.$data8[$index];
},
jn_IntBufferOverTypedArray_putElement = ($this, $index, $value) => {
    $this.$data8[$index] = $value;
},
jn_IntBufferOverTypedArray_capacityImpl = $this => {
    return $this.$data8.length;
},
cbgggs_DefaultShader$Setters$20 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$20__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$20__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$20();
    cbgggs_DefaultShader$Setters$20__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$20_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let var$5, var$6, $unit;
    var$5 = $shader.$context.$textureBinder;
    cbggga_TextureAttribute_$callClinit();
    var$6 = cbggga_TextureAttribute_Emissive;
    $unit = var$5.$bind1((cbggg_Attributes_get($combinedAttributes, var$6)).$textureDescription);
    cbgggs_BaseShader_set0($shader, $inputID, $unit);
},
cbgggs_DefaultShader$Setters$21 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$21__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$21__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$21();
    cbgggs_DefaultShader$Setters$21__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$21_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $ta;
    cbggga_TextureAttribute_$callClinit();
    $ta = cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Emissive);
    cbgggs_BaseShader_set($shader, $inputID, $ta.$offsetU, $ta.$offsetV, $ta.$scaleU, $ta.$scaleV);
},
cbgggs_DefaultShader$Setters$24 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$24__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$24__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$24();
    cbgggs_DefaultShader$Setters$24__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$24_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $ta;
    cbggga_TextureAttribute_$callClinit();
    $ta = cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Reflection);
    cbgggs_BaseShader_set($shader, $inputID, $ta.$offsetU, $ta.$offsetV, $ta.$scaleU, $ta.$scaleV);
},
cgxgbt_TeaPreloadApplicationListener$Step = $rt_classWithoutFields(jl_Enum),
cgxgbt_TeaPreloadApplicationListener$Step_PRELOAD_LOADING_ASSETS = null,
cgxgbt_TeaPreloadApplicationListener$Step_PRELOAD_ASSETS = null,
cgxgbt_TeaPreloadApplicationListener$Step_$VALUES = null,
cgxgbt_TeaPreloadApplicationListener$Step_$callClinit = () => {
    cgxgbt_TeaPreloadApplicationListener$Step_$callClinit = $rt_eraseClinit(cgxgbt_TeaPreloadApplicationListener$Step);
    cgxgbt_TeaPreloadApplicationListener$Step__clinit_();
},
cgxgbt_TeaPreloadApplicationListener$Step__init_0 = ($this, var$1, var$2) => {
    cgxgbt_TeaPreloadApplicationListener$Step_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cgxgbt_TeaPreloadApplicationListener$Step__init_ = (var_0, var_1) => {
    let var_2 = new cgxgbt_TeaPreloadApplicationListener$Step();
    cgxgbt_TeaPreloadApplicationListener$Step__init_0(var_2, var_0, var_1);
    return var_2;
},
cgxgbt_TeaPreloadApplicationListener$Step__clinit_ = () => {
    let var$1, var$2;
    cgxgbt_TeaPreloadApplicationListener$Step_PRELOAD_LOADING_ASSETS = cgxgbt_TeaPreloadApplicationListener$Step__init_($rt_s(399), 0);
    cgxgbt_TeaPreloadApplicationListener$Step_PRELOAD_ASSETS = cgxgbt_TeaPreloadApplicationListener$Step__init_($rt_s(400), 1);
    var$1 = $rt_createArray(cgxgbt_TeaPreloadApplicationListener$Step, 2);
    var$2 = var$1.data;
    var$2[0] = cgxgbt_TeaPreloadApplicationListener$Step_PRELOAD_LOADING_ASSETS;
    var$2[1] = cgxgbt_TeaPreloadApplicationListener$Step_PRELOAD_ASSETS;
    cgxgbt_TeaPreloadApplicationListener$Step_$VALUES = var$1;
},
cbgggs_DefaultShader$Setters$25 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$25__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$25__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$25();
    cbgggs_DefaultShader$Setters$25__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$25_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let var$5, var$6, $unit;
    var$5 = $shader.$context.$textureBinder;
    cbggga_TextureAttribute_$callClinit();
    var$6 = cbggga_TextureAttribute_Normal;
    $unit = var$5.$bind1((cbggg_Attributes_get($combinedAttributes, var$6)).$textureDescription);
    cbgggs_BaseShader_set0($shader, $inputID, $unit);
},
cbgggs_DefaultShader$Setters$22 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$22__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$22__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$22();
    cbgggs_DefaultShader$Setters$22__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$22_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbggga_ColorAttribute_$callClinit();
    cbgggs_BaseShader_set3($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, cbggga_ColorAttribute_Reflection)).$color4);
},
cbgu_Scaling = $rt_classWithoutFields(),
cbgu_Scaling_temp = null,
cbgu_Scaling_fit = null,
cbgu_Scaling_contain = null,
cbgu_Scaling_fill = null,
cbgu_Scaling_fillX = null,
cbgu_Scaling_fillY = null,
cbgu_Scaling_stretch = null,
cbgu_Scaling_stretchX = null,
cbgu_Scaling_stretchY = null,
cbgu_Scaling_none = null,
cbgu_Scaling_$callClinit = () => {
    cbgu_Scaling_$callClinit = $rt_eraseClinit(cbgu_Scaling);
    cbgu_Scaling__clinit_();
},
cbgu_Scaling__init_ = $this => {
    cbgu_Scaling_$callClinit();
    jl_Object__init_($this);
},
cbgu_Scaling__clinit_ = () => {
    cbgu_Scaling_temp = cbgm_Vector2__init_();
    cbgu_Scaling_fit = cbgu_Scaling$1__init_0();
    cbgu_Scaling_contain = cbgu_Scaling$2__init_0();
    cbgu_Scaling_fill = cbgu_Scaling$3__init_0();
    cbgu_Scaling_fillX = cbgu_Scaling$4__init_0();
    cbgu_Scaling_fillY = cbgu_Scaling$5__init_0();
    cbgu_Scaling_stretch = cbgu_Scaling$6__init_0();
    cbgu_Scaling_stretchX = cbgu_Scaling$7__init_0();
    cbgu_Scaling_stretchY = cbgu_Scaling$8__init_0();
    cbgu_Scaling_none = cbgu_Scaling$9__init_0();
},
cbgggs_DefaultShader$Setters$23 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$23__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
};
let cbgggs_DefaultShader$Setters$23__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$23();
    cbgggs_DefaultShader$Setters$23__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$23_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let var$5, var$6, $unit;
    var$5 = $shader.$context.$textureBinder;
    cbggga_TextureAttribute_$callClinit();
    var$6 = cbggga_TextureAttribute_Reflection;
    $unit = var$5.$bind1((cbggg_Attributes_get($combinedAttributes, var$6)).$textureDescription);
    cbgggs_BaseShader_set0($shader, $inputID, $unit);
};
function cgxgbtft_LocalDBStorage$putFile$lambda$_2_0() {
    jl_Object.call(this);
    this.$_016 = null;
}
let cgxgbtft_LocalDBStorage$putFile$lambda$_2_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_016 = var$1;
},
cgxgbtft_LocalDBStorage$putFile$lambda$_2_0__init_0 = var_0 => {
    let var_1 = new cgxgbtft_LocalDBStorage$putFile$lambda$_2_0();
    cgxgbtft_LocalDBStorage$putFile$lambda$_2_0__init_(var_1, var_0);
    return var_1;
},
cgxgbtft_LocalDBStorage$putFile$lambda$_2_0_handleEvent = var$0 => {
    cgxgbtft_LocalDBStorage_lambda$putFile$3(var$0.$_016);
},
cgxgbtft_LocalDBStorage$putFile$lambda$_2_0_handleEvent$exported$0 = var$1 => {
    var$1.$handleEvent();
},
jl_Runnable = $rt_classWithoutFields(0);
function jnc_CharsetDecoder() {
    let a = this; jl_Object.call(a);
    a.$charset1 = null;
    a.$averageCharsPerByte = 0.0;
    a.$maxCharsPerByte = 0.0;
    a.$replacement = null;
    a.$malformedAction = null;
    a.$unmappableAction = null;
    a.$state = 0;
}
let jnc_CharsetDecoder__init_ = ($this, $cs, $averageCharsPerByte, $maxCharsPerByte) => {
    let var$4, var$5;
    jl_Object__init_($this);
    $this.$replacement = $rt_s(401);
    jnc_CodingErrorAction_$callClinit();
    $this.$malformedAction = jnc_CodingErrorAction_REPORT;
    $this.$unmappableAction = jnc_CodingErrorAction_REPORT;
    if ($averageCharsPerByte <= 0.0) {
        var$4 = new jl_IllegalArgumentException;
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append3(jl_StringBuilder_append(var$5, $rt_s(402)), $averageCharsPerByte);
        jl_IllegalArgumentException__init_1(var$4, jl_StringBuilder_toString(var$5));
        $rt_throw(var$4);
    }
    if ($maxCharsPerByte > 0.0) {
        $this.$charset1 = $cs;
        $this.$averageCharsPerByte = $averageCharsPerByte;
        $this.$maxCharsPerByte = $maxCharsPerByte;
        return;
    }
    var$4 = new jl_IllegalArgumentException;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append3(jl_StringBuilder_append(var$5, $rt_s(403)), $maxCharsPerByte);
    jl_IllegalArgumentException__init_1(var$4, jl_StringBuilder_toString(var$5));
    $rt_throw(var$4);
},
jnc_CharsetDecoder_onMalformedInput = ($this, $newAction) => {
    if ($newAction !== null) {
        $this.$malformedAction = $newAction;
        $this.$implOnMalformedInput($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(404)));
},
jnc_CharsetDecoder_implOnMalformedInput = ($this, $newAction) => {
    return;
},
jnc_CharsetDecoder_onUnmappableCharacter = ($this, $newAction) => {
    if ($newAction !== null) {
        $this.$unmappableAction = $newAction;
        $this.$implOnUnmappableCharacter($newAction);
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(404)));
},
jnc_CharsetDecoder_implOnUnmappableCharacter = ($this, $newAction) => {
    return;
},
jnc_CharsetDecoder_decode = ($this, $in, $out, $endOfInput) => {
    let $result, $e, var$6, $$je;
    if (!($this.$state == 2 && !$endOfInput) && $this.$state != 3) {
        $this.$state = $endOfInput ? 2 : 1;
        while (true) {
            try {
                $result = $this.$decodeLoop($in, $out);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_RuntimeException) {
                    $e = $$je;
                    $rt_throw(jnc_CoderMalfunctionError__init_0($e));
                } else {
                    throw $$e;
                }
            }
            if ($result.$isOverflow())
                return $result;
            if ($result.$isUnderflow()) {
                if ($endOfInput && jn_Buffer_hasRemaining($in)) {
                    var$6 = $this.$malformedAction;
                    jnc_CodingErrorAction_$callClinit();
                    if (var$6 === jnc_CodingErrorAction_REPORT)
                        return jnc_CoderResult_malformedForLength(jn_Buffer_remaining($in));
                    if (jn_Buffer_remaining($out) <= $this.$replacement.$length())
                        return jnc_CoderResult_OVERFLOW;
                    $in.$position2(jn_Buffer_position($in) + jn_Buffer_remaining($in) | 0);
                    if ($this.$malformedAction === jnc_CodingErrorAction_REPLACE)
                        jn_CharBuffer_put($out, $this.$replacement);
                }
                return $result;
            }
            if ($result.$isMalformed()) {
                var$6 = $this.$malformedAction;
                jnc_CodingErrorAction_$callClinit();
                if (var$6 === jnc_CodingErrorAction_REPORT)
                    return $result;
                if ($this.$malformedAction === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < $this.$replacement.$length())
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put($out, $this.$replacement);
                }
                $in.$position2(jn_Buffer_position($in) + $result.$length() | 0);
            } else if ($result.$isUnmappable()) {
                var$6 = $this.$unmappableAction;
                jnc_CodingErrorAction_$callClinit();
                if (var$6 === jnc_CodingErrorAction_REPORT)
                    break;
                if ($this.$unmappableAction === jnc_CodingErrorAction_REPLACE) {
                    if (jn_Buffer_remaining($out) < $this.$replacement.$length())
                        return jnc_CoderResult_OVERFLOW;
                    jn_CharBuffer_put($out, $this.$replacement);
                }
                $in.$position2(jn_Buffer_position($in) + $result.$length() | 0);
            }
        }
        return $result;
    }
    $rt_throw(jl_IllegalStateException__init_0());
},
jnc_CharsetDecoder_flush = ($this, $out) => {
    if ($this.$state != 3 && $this.$state != 2)
        $rt_throw(jl_IllegalStateException__init_0());
    $this.$state = 3;
    return $this.$implFlush0($out);
},
jnc_CharsetDecoder_reset = $this => {
    $this.$state = 0;
    $this.$implReset();
    return $this;
},
jnc_CharsetDecoder_decode0 = ($this, $in) => {
    let $out, $result, var$4;
    if ($this.$state && $this.$state != 3)
        $rt_throw(jl_IllegalStateException__init_0());
    if (!jn_Buffer_remaining($in))
        return jn_CharBuffer_allocate(0);
    if ($this.$state)
        jnc_CharsetDecoder_reset($this);
    $out = jn_CharBuffer_allocate(jl_Math_max(8, jn_Buffer_remaining($in) * $this.$averageCharsPerByte | 0));
    while (true) {
        $result = jnc_CharsetDecoder_decode($this, $in, $out, 0);
        if ($result.$isUnderflow())
            break;
        if ($result.$isOverflow())
            $out = jnc_CharsetDecoder_expand($this, $out);
        if (!$result.$isError())
            continue;
        $result.$throwException();
    }
    var$4 = jnc_CharsetDecoder_decode($this, $in, $out, 1);
    if (var$4.$isError())
        var$4.$throwException();
    while (true) {
        var$4 = jnc_CharsetDecoder_flush($this, $out);
        if (var$4.$isUnderflow())
            break;
        $out = jnc_CharsetDecoder_expand($this, $out);
    }
    jn_CharBuffer_flip($out);
    return $out;
},
jnc_CharsetDecoder_expand = ($this, $buffer) => {
    let $array, var$3, $result;
    $array = jn_CharBuffer_array($buffer);
    var$3 = $array.data;
    var$3 = ju_Arrays_copyOf1($array, jl_Math_max(8, var$3.length * 2 | 0));
    $result = jn_CharBuffer_wrap(var$3);
    $result.$position0(jn_Buffer_position($buffer));
    return $result;
},
jnc_CharsetDecoder_implFlush = ($this, $out) => {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult_UNDERFLOW;
},
jnc_CharsetDecoder_implReset = $this => {
    return;
};
function jnci_BufferedDecoder() {
    let a = this; jnc_CharsetDecoder.call(a);
    a.$inArray = null;
    a.$outArray0 = null;
}
let jnci_BufferedDecoder__init_ = ($this, $cs, $averageCharsPerByte, $maxCharsPerByte) => {
    jnc_CharsetDecoder__init_($this, $cs, $averageCharsPerByte, $maxCharsPerByte);
    $this.$inArray = $rt_createByteArray(512);
    $this.$outArray0 = $rt_createCharArray(512);
},
jnci_BufferedDecoder_decodeLoop = ($this, $in, $out) => {
    let $inArray, $inPos, $inSize, $outArray, $i, var$8, var$9, $result, $outPos, $outSize, $controller;
    $inArray = $this.$inArray;
    $inPos = 0;
    $inSize = 0;
    $outArray = $this.$outArray0;
    a: {
        while (true) {
            if (($inPos + 32 | 0) > $inSize && jn_Buffer_hasRemaining($in)) {
                $i = $inPos;
                while ($i < $inSize) {
                    var$8 = $inArray.data;
                    var$8[$i - $inPos | 0] = var$8[$i];
                    $i = $i + 1 | 0;
                }
                var$8 = $inArray.data;
                var$9 = $inSize - $inPos | 0;
                $inSize = jl_Math_min(jn_Buffer_remaining($in) + var$9 | 0, var$8.length);
                $in.$get18($inArray, var$9, $inSize - var$9 | 0);
                $inPos = 0;
            }
            if (!jn_Buffer_hasRemaining($out)) {
                if (!jn_Buffer_hasRemaining($in) && $inPos >= $inSize) {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_UNDERFLOW;
                } else {
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                }
                break a;
            }
            var$8 = $outArray.data;
            $outPos = 0;
            $outSize = jl_Math_min(jn_Buffer_remaining($out), var$8.length);
            $controller = jnci_BufferedDecoder$Controller__init_0($in, $out);
            $result = $this.$arrayDecode($inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
            $inPos = $controller.$inPosition0;
            if ($result === null && $outPos == $controller.$outPosition) {
                jnc_CoderResult_$callClinit();
                $result = jnc_CoderResult_UNDERFLOW;
            }
            var$9 = $controller.$outPosition;
            $out.$put6($outArray, 0, var$9);
            if ($result !== null)
                break;
        }
    }
    $in.$position2(jn_Buffer_position($in) - ($inSize - $inPos | 0) | 0);
    return $result;
},
jnci_UTF8Decoder = $rt_classWithoutFields(jnci_BufferedDecoder),
jnci_UTF8Decoder__init_ = ($this, $cs) => {
    jnci_BufferedDecoder__init_($this, $cs, 0.3333333432674408, 0.5);
},
jnci_UTF8Decoder__init_0 = var_0 => {
    let var_1 = new jnci_UTF8Decoder();
    jnci_UTF8Decoder__init_(var_1, var_0);
    return var_1;
},
jnci_UTF8Decoder_arrayDecode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $b, var$12, var$13, $b2, $b3, $c, $b4, $code;
    $result = null;
    a: {
        b: {
            c: {
                while ($inPos < $inSize) {
                    if ($outPos >= $outSize)
                        break a;
                    var$9 = $inArray.data;
                    var$10 = $inPos + 1 | 0;
                    $b = var$9[$inPos] & 255;
                    if (!($b & 128)) {
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = $b & 65535;
                    } else if (($b & 224) == 192) {
                        if (var$10 >= $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput0(2))
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        var$13 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2)) {
                            $inPos = var$13 + (-2) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = (($b & 31) << 6 | $b2 & 63) & 65535;
                        var$10 = var$13;
                    } else if (($b & 240) == 224) {
                        if ((var$10 + 2 | 0) > $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput0(3))
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        var$13 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        var$10 = var$13 + 1 | 0;
                        $b3 = var$9[var$13];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2))
                            break b;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break b;
                        $c = (($b & 15) << 12 | ($b2 & 63) << 6 | $b3 & 63) & 65535;
                        if (jl_Character_isSurrogate($c)) {
                            $inPos = var$10 + (-3) | 0;
                            $result = jnc_CoderResult_malformedForLength(3);
                            break a;
                        }
                        var$9 = $outArray.data;
                        var$12 = $outPos + 1 | 0;
                        var$9[$outPos] = $c;
                    } else {
                        if (($b & 248) != 240) {
                            $inPos = var$10 + (-1) | 0;
                            $result = jnc_CoderResult_malformedForLength(1);
                            break a;
                        }
                        if ((var$10 + 3 | 0) > $inSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreInput0(4))
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_UNDERFLOW;
                            break a;
                        }
                        if (($outPos + 2 | 0) > $outSize) {
                            $inPos = var$10 + (-1) | 0;
                            if ($controller.$hasMoreOutput(2))
                                break a;
                            jnc_CoderResult_$callClinit();
                            $result = jnc_CoderResult_OVERFLOW;
                            break a;
                        }
                        var$13 = var$10 + 1 | 0;
                        $b2 = var$9[var$10];
                        var$12 = var$13 + 1 | 0;
                        $b3 = var$9[var$13];
                        var$10 = var$12 + 1 | 0;
                        $b4 = var$9[var$12];
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b2))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b3))
                            break c;
                        if (!jnci_UTF8Decoder_checkMidByte($this, $b4))
                            break c;
                        var$9 = $outArray.data;
                        $code = ($b & 7) << 18 | ($b2 & 63) << 12 | ($b3 & 63) << 6 | $b4 & 63;
                        var$13 = $outPos + 1 | 0;
                        var$9[$outPos] = jl_Character_highSurrogate($code);
                        var$12 = var$13 + 1 | 0;
                        var$9[var$13] = jl_Character_lowSurrogate($code);
                    }
                    $inPos = var$10;
                    $outPos = var$12;
                }
                break a;
            }
            $inPos = var$10 + (-3) | 0;
            $result = jnc_CoderResult_malformedForLength(1);
            break a;
        }
        $inPos = var$10 + (-3) | 0;
        $result = jnc_CoderResult_malformedForLength(1);
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
},
jnci_UTF8Decoder_checkMidByte = ($this, $b) => {
    return ($b & 192) != 128 ? 0 : 1;
};
function bl_btTransform() {
    let a = this; bi_IDLBase.call(a);
    a.$btVector3_TEMP_GEN_0 = null;
    a.$btMatrix3x3_TEMP_GEN_0 = null;
}
let bl_btTransform_NULL = null,
bl_btTransform_T_01 = null,
bl_btTransform_T_02 = null,
bl_btTransform_T_03 = null,
bl_btTransform_$callClinit = () => {
    bl_btTransform_$callClinit = $rt_eraseClinit(bl_btTransform);
    bl_btTransform__clinit_();
},
bl_btTransform__init_ = ($this, $b, $c) => {
    bl_btTransform_$callClinit();
    bi_IDLBase__init_($this);
},
bl_btTransform__init_0 = (var_0, var_1) => {
    let var_2 = new bl_btTransform();
    bl_btTransform__init_(var_2, var_0, var_1);
    return var_2;
},
bl_btTransform_native_new = () => {
    bl_btTransform_$callClinit();
    return bl_btTransform__init_0(0, 0);
},
bl_btTransform_getOrigin = $this => {
    let $pointer;
    $pointer = bl_btTransform_internal_native_getOrigin$js_body$_15($this.$native_address);
    if (!$pointer) {
        bl_btVector3_$callClinit();
        return bl_btVector3_NULL;
    }
    if ($this.$btVector3_TEMP_GEN_0 === null)
        $this.$btVector3_TEMP_GEN_0 = bl_btVector3_native_new();
    bi_IDLBase_internal_reset($this.$btVector3_TEMP_GEN_0, $pointer, 0);
    return $this.$btVector3_TEMP_GEN_0;
},
bl_btTransform_getBasis = $this => {
    let $pointer;
    $pointer = bl_btTransform_internal_native_getBasis$js_body$_19($this.$native_address);
    if (!$pointer) {
        bl_btMatrix3x3_$callClinit();
        return bl_btMatrix3x3_NULL;
    }
    if ($this.$btMatrix3x3_TEMP_GEN_0 === null)
        $this.$btMatrix3x3_TEMP_GEN_0 = bl_btMatrix3x3_native_new();
    bi_IDLBase_internal_reset($this.$btMatrix3x3_TEMP_GEN_0, $pointer, 0);
    return $this.$btMatrix3x3_TEMP_GEN_0;
},
bl_btTransform_setFromOpenGLMatrix = ($this, $m) => {
    let var$2, var$3;
    var$2 = $this.$native_address;
    var$3 = $m.$native_void_address;
    bl_btTransform_internal_native_setFromOpenGLMatrix$js_body$_21(var$2, var$3);
},
bl_btTransform__clinit_ = () => {
    bl_btTransform_NULL = bl_btTransform_native_new();
    bl_btTransform_T_01 = bl_btTransform_native_new();
    bl_btTransform_T_02 = bl_btTransform_native_new();
    bl_btTransform_T_03 = bl_btTransform_native_new();
},
bl_btTransform_internal_native_getOrigin$js_body$_15 = var$1 => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btTransform);
    var returnedJSObj = jsObj.getOrigin();
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return bullet.getPointer(returnedJSObj);
},
bl_btTransform_internal_native_getBasis$js_body$_19 = var$1 => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btTransform);
    var returnedJSObj = jsObj.getBasis();
    if (!returnedJSObj.hasOwnProperty('ptr')) return 0;
    return bullet.getPointer(returnedJSObj);
},
bl_btTransform_internal_native_setFromOpenGLMatrix$js_body$_21 = (var$1, var$2) => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btTransform);
    jsObj.setFromOpenGLMatrix(var$2);
},
jur_PossessiveQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_PossessiveQuantifierSet__init_ = ($this, var$1, var$2, $type) => {
    jur_LeafQuantifierSet__init_($this, var$1, var$2, $type);
},
jur_PossessiveQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_PossessiveQuantifierSet();
    jur_PossessiveQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_PossessiveQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    a: {
        while (true) {
            if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound())
                break a;
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            if (var$4 < 1)
                break;
            $stringIndex = $stringIndex + var$4 | 0;
        }
    }
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
};
function jnci_BufferedDecoder$Controller() {
    let a = this; jl_Object.call(a);
    a.$in = null;
    a.$out1 = null;
    a.$inPosition0 = 0;
    a.$outPosition = 0;
}
let jnci_BufferedDecoder$Controller__init_ = ($this, $in, $out) => {
    jl_Object__init_($this);
    $this.$in = $in;
    $this.$out1 = $out;
},
jnci_BufferedDecoder$Controller__init_0 = (var_0, var_1) => {
    let var_2 = new jnci_BufferedDecoder$Controller();
    jnci_BufferedDecoder$Controller__init_(var_2, var_0, var_1);
    return var_2;
},
jnci_BufferedDecoder$Controller_hasMoreInput0 = $this => {
    return jn_Buffer_hasRemaining($this.$in);
},
jnci_BufferedDecoder$Controller_hasMoreInput = ($this, $sz) => {
    return jn_Buffer_remaining($this.$in) < $sz ? 0 : 1;
},
jnci_BufferedDecoder$Controller_hasMoreOutput = ($this, $sz) => {
    return jn_Buffer_remaining($this.$out1) < $sz ? 0 : 1;
},
jnci_BufferedDecoder$Controller_setInPosition = ($this, $inPosition) => {
    $this.$inPosition0 = $inPosition;
},
jnci_BufferedDecoder$Controller_setOutPosition = ($this, $outPosition) => {
    $this.$outPosition = $outPosition;
},
jl_Thread$UncaughtExceptionHandler = $rt_classWithoutFields(0),
jl_DefaultUncaughtExceptionHandler = $rt_classWithoutFields(),
jl_DefaultUncaughtExceptionHandler__init_ = $this => {
    jl_Object__init_($this);
},
jl_DefaultUncaughtExceptionHandler__init_0 = () => {
    let var_0 = new jl_DefaultUncaughtExceptionHandler();
    jl_DefaultUncaughtExceptionHandler__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$28 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$28__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$28__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$28();
    cbgggs_DefaultShader$Setters$28__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$28_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $ta;
    cbggga_TextureAttribute_$callClinit();
    $ta = cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Ambient);
    cbgggs_BaseShader_set($shader, $inputID, $ta.$offsetU, $ta.$offsetV, $ta.$scaleU, $ta.$scaleV);
},
cbgggs_DefaultShader$Setters$29 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$29__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$29__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$29();
    cbgggs_DefaultShader$Setters$29__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$29_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let var$5, var$6, var$7;
    cbggga_CubemapAttribute_$callClinit();
    if (cbggg_Attributes_has($combinedAttributes, cbggga_CubemapAttribute_EnvironmentMap)) {
        var$5 = $shader.$context.$textureBinder;
        var$6 = cbggga_CubemapAttribute_EnvironmentMap;
        var$7 = var$5.$bind1((cbggg_Attributes_get($combinedAttributes, var$6)).$textureDescription0);
        cbgggs_BaseShader_set0($shader, $inputID, var$7);
    }
},
cbgggs_DefaultShader$Setters$26 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$26__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$26__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$26();
    cbgggs_DefaultShader$Setters$26__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$26_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $ta;
    cbggga_TextureAttribute_$callClinit();
    $ta = cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Normal);
    cbgggs_BaseShader_set($shader, $inputID, $ta.$offsetU, $ta.$offsetV, $ta.$scaleU, $ta.$scaleV);
},
cbgggs_DefaultShader$Setters$27 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$27__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$27__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$27();
    cbgggs_DefaultShader$Setters$27__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$27_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let var$5, var$6, $unit;
    var$5 = $shader.$context.$textureBinder;
    cbggga_TextureAttribute_$callClinit();
    var$6 = cbggga_TextureAttribute_Ambient;
    $unit = var$5.$bind1((cbggg_Attributes_get($combinedAttributes, var$6)).$textureDescription);
    cbgggs_BaseShader_set0($shader, $inputID, $unit);
};
function jur_AbstractCharClass$LazyJavaLetter$1() {
    jur_AbstractCharClass.call(this);
    this.$this$043 = null;
}
let jur_AbstractCharClass$LazyJavaLetter$1__init_ = ($this, $this$0) => {
    $this.$this$043 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaLetter$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaLetter$1();
    jur_AbstractCharClass$LazyJavaLetter$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaLetter$1_contains = ($this, $ch) => {
    return jl_Character_isLetter($ch);
};
function cgxgbtdi_TeaWindow() {
    let a = this; jl_Object.call(a);
    a.$window0 = null;
    a.$runnable = null;
}
let cgxgbtdi_TeaWindow_TEA_WINDOW = null,
cgxgbtdi_TeaWindow_$callClinit = () => {
    cgxgbtdi_TeaWindow_$callClinit = $rt_eraseClinit(cgxgbtdi_TeaWindow);
    cgxgbtdi_TeaWindow__clinit_();
},
cgxgbtdi_TeaWindow_get = () => {
    cgxgbtdi_TeaWindow_$callClinit();
    return cgxgbtdi_TeaWindow_TEA_WINDOW;
},
cgxgbtdi_TeaWindow__init_ = $this => {
    cgxgbtdi_TeaWindow_$callClinit();
    jl_Object__init_($this);
    $this.$window0 = window;
},
cgxgbtdi_TeaWindow__init_0 = () => {
    let var_0 = new cgxgbtdi_TeaWindow();
    cgxgbtdi_TeaWindow__init_(var_0);
    return var_0;
},
cgxgbtdi_TeaWindow_getDocument = $this => {
    return $this.$window0.document;
},
cgxgbtdi_TeaWindow_requestAnimationFrame = ($this, $runnable) => {
    $this.$runnable = $runnable;
    requestAnimationFrame(otji_JS_function(otji_JSWrapper_unwrap($this), "onAnimationFrame"));
},
cgxgbtdi_TeaWindow_onAnimationFrame = ($this, $arg0) => {
    let $toRun;
    $toRun = $this.$runnable;
    $this.$runnable = null;
    $toRun.$run();
},
cgxgbtdi_TeaWindow_getLocation = $this => {
    let $location;
    $location = $this.$window0.location;
    return $location;
},
cgxgbtdi_TeaWindow_getClientWidth = $this => {
    return $this.$window0.innerWidth;
},
cgxgbtdi_TeaWindow_getClientHeight = $this => {
    return $this.$window0.innerHeight;
},
cgxgbtdi_TeaWindow_addEventListener = ($this, $type, $listener) => {
    $this.$window0.addEventListener($rt_ustr($type), otji_JS_function($listener, "handleEvent"));
},
cgxgbtdi_TeaWindow__clinit_ = () => {
    cgxgbtdi_TeaWindow_TEA_WINDOW = cgxgbtdi_TeaWindow__init_0();
},
cgxgbtdi_TeaWindow_onAnimationFrame$exported$0 = (var$1, var$2) => {
    let var$3;
    cgxgbtdi_TeaWindow_$callClinit();
    var$3 = var$2;
    var$1.$onAnimationFrame(var$3);
},
cbg_Net = $rt_classWithoutFields(0),
jnci_Iso8859Decoder = $rt_classWithoutFields(jnci_BufferedDecoder),
jnci_Iso8859Decoder__init_ = ($this, $cs) => {
    jnci_BufferedDecoder__init_($this, $cs, 1.0, 1.0);
},
jnci_Iso8859Decoder__init_0 = var_0 => {
    let var_1 = new jnci_Iso8859Decoder();
    jnci_Iso8859Decoder__init_(var_1, var_0);
    return var_1;
},
jnci_Iso8859Decoder_arrayDecode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, var$11, $b, var$13;
    $result = null;
    while ($inPos < $inSize && $outPos < $outSize) {
        var$9 = $outArray.data;
        var$10 = $inArray.data;
        var$11 = $inPos + 1 | 0;
        $b = var$10[$inPos] & 255;
        var$13 = $outPos + 1 | 0;
        var$9[$outPos] = $b & 65535;
        $inPos = var$11;
        $outPos = var$13;
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
};
function ju_HashMap$HashEntry() {
    let a = this; ju_MapEntry.call(a);
    a.$origKeyHash = 0;
    a.$next2 = null;
}
let ju_HashMap$HashEntry__init_ = ($this, $theKey, $hash) => {
    ju_MapEntry__init_($this, $theKey, null);
    $this.$origKeyHash = $hash;
},
ju_HashMap$HashEntry__init_0 = (var_0, var_1) => {
    let var_2 = new ju_HashMap$HashEntry();
    ju_HashMap$HashEntry__init_(var_2, var_0, var_1);
    return var_2;
},
cbgm_Shape2D = $rt_classWithoutFields(0),
jur_AbstractCharClass$LazyUpper = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyUpper__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyUpper__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyUpper();
    jur_AbstractCharClass$LazyUpper__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyUpper_computeValue = $this => {
    return (jur_CharClass__init_()).$add0(65, 90);
};
function otji_JSWrapper() {
    jl_Object.call(this);
    this.$js = null;
}
let otji_JSWrapper__init_0 = ($this, $js) => {
    jl_Object__init_($this);
    $this.$js = $js;
},
otji_JSWrapper__init_ = var_0 => {
    let var_1 = new otji_JSWrapper();
    otji_JSWrapper__init_0(var_1, var_0);
    return var_1;
},
otji_JSWrapper_wrap = $o => {
    let $type, $isObject, $wrappers, $existingRef, $existing, $wrapper, $jsString, $stringWrappers, $stringFinalizationRegistry, $wrapperAsJs, $jsNumber, $numberWrappers, $numberFinalizationRegistry;
    if ($o === null)
        return null;
    $type = $rt_str(typeof $o);
    $isObject = !$type.$equals($rt_s(405)) && !$type.$equals($rt_s(406)) ? 0 : 1;
    otji_JSWrapper$Helper_$callClinit();
    $wrappers = otji_JSWrapper$Helper_wrappers;
    if ($wrappers !== null) {
        if ($isObject) {
            $existingRef = $wrappers.get($o);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($o);
            $wrappers.set($o, new WeakRef($wrapper));
            return $wrapper;
        }
        if ($type.$equals($rt_s(407))) {
            $jsString = $o;
            $stringWrappers = otji_JSWrapper$Helper_stringWrappers;
            $stringFinalizationRegistry = otji_JSWrapper$Helper_stringFinalizationRegistry;
            $existingRef = $stringWrappers.get($jsString);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($o);
            $wrapperAsJs = $wrapper;
            $stringWrappers.set($jsString, new WeakRef($wrapperAsJs));
            $stringFinalizationRegistry.register($wrapperAsJs, $jsString);
            return $wrapper;
        }
        if ($type.$equals($rt_s(408))) {
            $jsNumber = $o;
            $numberWrappers = otji_JSWrapper$Helper_numberWrappers;
            $numberFinalizationRegistry = otji_JSWrapper$Helper_numberFinalizationRegistry;
            $existingRef = $numberWrappers.get($jsNumber);
            $existing = (typeof $existingRef == 'undefined' ? 1 : 0) ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($o);
            $wrapperAsJs = $wrapper;
            $numberWrappers.set($jsNumber, new WeakRef($wrapperAsJs));
            $numberFinalizationRegistry.register($wrapperAsJs, $jsNumber);
            return $wrapper;
        }
        if ($type.$equals($rt_s(409))) {
            $existingRef = otji_JSWrapper$Helper_undefinedWrapper;
            $existing = $existingRef === null ? void 0 : $existingRef.deref();
            if (!(typeof $existing == 'undefined' ? 1 : 0))
                return $existing;
            $wrapper = otji_JSWrapper__init_($o);
            $wrapperAsJs = $wrapper;
            otji_JSWrapper$Helper_undefinedWrapper = new WeakRef($wrapperAsJs);
            return $wrapper;
        }
    }
    return otji_JSWrapper__init_($o);
},
otji_JSWrapper_maybeWrap = $o => {
    if ($o !== null && !($o instanceof $rt_objcls()))
        $o = otji_JSWrapper_wrap($o);
    return $o;
},
otji_JSWrapper_unwrap = $o => {
    if ($o === null)
        return null;
    return !($o instanceof otji_JSWrapper) ? $o : $o.$js;
},
otji_JSWrapper_maybeUnwrap = $o => {
    if ($o === null)
        return null;
    return !($o instanceof $rt_objcls()) ? $o : otji_JSWrapper_unwrap($o);
},
otji_JSWrapper_javaToJs = $o => {
    if ($o === null)
        return null;
    return $o instanceof $rt_objcls() && $o instanceof otji_JSWrapper ? otji_JSWrapper_unwrap($o) : $o;
},
otji_JSWrapper_jsToJava = $o => {
    if ($o === null)
        return null;
    return $o instanceof $rt_objcls() ? $o : otji_JSWrapper_wrap($o);
},
cbgss_Touchable = $rt_classWithoutFields(jl_Enum),
cbgss_Touchable_enabled = null,
cbgss_Touchable_disabled = null,
cbgss_Touchable_childrenOnly = null,
cbgss_Touchable_$VALUES = null,
cbgss_Touchable_$callClinit = () => {
    cbgss_Touchable_$callClinit = $rt_eraseClinit(cbgss_Touchable);
    cbgss_Touchable__clinit_();
},
cbgss_Touchable__init_0 = ($this, var$1, var$2) => {
    cbgss_Touchable_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cbgss_Touchable__init_ = (var_0, var_1) => {
    let var_2 = new cbgss_Touchable();
    cbgss_Touchable__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgss_Touchable_$values = () => {
    let var$1, var$2;
    cbgss_Touchable_$callClinit();
    var$1 = $rt_createArray(cbgss_Touchable, 3);
    var$2 = var$1.data;
    var$2[0] = cbgss_Touchable_enabled;
    var$2[1] = cbgss_Touchable_disabled;
    var$2[2] = cbgss_Touchable_childrenOnly;
    return var$1;
},
cbgss_Touchable__clinit_ = () => {
    cbgss_Touchable_enabled = cbgss_Touchable__init_($rt_s(410), 0);
    cbgss_Touchable_disabled = cbgss_Touchable__init_($rt_s(411), 1);
    cbgss_Touchable_childrenOnly = cbgss_Touchable__init_($rt_s(412), 2);
    cbgss_Touchable_$VALUES = cbgss_Touchable_$values();
};
function ju_HashSet() {
    ju_AbstractSet.call(this);
    this.$backingMap = null;
}
let ju_HashSet__init_0 = $this => {
    ju_HashSet__init_($this, ju_HashMap__init_());
},
ju_HashSet__init_1 = () => {
    let var_0 = new ju_HashSet();
    ju_HashSet__init_0(var_0);
    return var_0;
},
ju_HashSet__init_ = ($this, $backingMap) => {
    ju_AbstractSet__init_($this);
    $this.$backingMap = $backingMap;
},
ju_HashSet__init_2 = var_0 => {
    let var_1 = new ju_HashSet();
    ju_HashSet__init_(var_1, var_0);
    return var_1;
},
ju_HashSet_add = ($this, $object) => {
    return $this.$backingMap.$put($object, $this) !== null ? 0 : 1;
},
ju_HashSet_contains = ($this, $object) => {
    return $this.$backingMap.$containsKey($object);
},
ju_HashSet_remove = ($this, $object) => {
    return $this.$backingMap.$remove2($object) === null ? 0 : 1;
},
ju_HashSet_size = $this => {
    return $this.$backingMap.$size();
};
function jur_MultiLineSOLSet() {
    jur_AbstractSet.call(this);
    this.$lt1 = null;
}
let jur_MultiLineSOLSet__init_ = ($this, $lt) => {
    jur_AbstractSet__init_($this);
    $this.$lt1 = $lt;
},
jur_MultiLineSOLSet__init_0 = var_0 => {
    let var_1 = new jur_MultiLineSOLSet();
    jur_MultiLineSOLSet__init_(var_1, var_0);
    return var_1;
},
jur_MultiLineSOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let var$4, var$5;
    a: {
        if ($strIndex != $matchResult.$getRightBound()) {
            if (!$strIndex)
                break a;
            if ($matchResult.$hasAnchoringBounds() && $strIndex == $matchResult.$getLeftBound())
                break a;
            var$4 = $this.$lt1;
            var$5 = $strIndex - 1 | 0;
            if (var$4.$isAfterLineTerminator($testString.$charAt(var$5), $testString.$charAt($strIndex)))
                break a;
        }
        return (-1);
    }
    return $this.$next1.$matches($strIndex, $testString, $matchResult);
},
jur_MultiLineSOLSet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_MultiLineSOLSet_getName = $this => {
    return $rt_s(413);
},
cbgggs_BaseShader$GlobalSetter = $rt_classWithoutFields(),
cbgggs_BaseShader$GlobalSetter__init_ = $this => {
    jl_Object__init_($this);
},
cbgggs_BaseShader$GlobalSetter_isGlobal = ($this, $shader, $inputID) => {
    return 1;
};
function cbgggs_DefaultShader$Setters$10() {
    cbgggs_BaseShader$LocalSetter.call(this);
    this.$temp = null;
}
let cbgggs_DefaultShader$Setters$10__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
    $this.$temp = cbgm_Matrix4__init_();
},
cbgggs_DefaultShader$Setters$10__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$10();
    cbgggs_DefaultShader$Setters$10__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$10_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set1($shader, $inputID, ($this.$temp.$set1($shader.$camera0.$combined)).$mul1($renderable.$worldTransform));
};
function cbggg_VertexBufferObject() {
    let a = this; jl_Object.call(a);
    a.$attributes2 = null;
    a.$byteBuffer3 = null;
    a.$buffer2 = null;
    a.$bufferHandle3 = 0;
    a.$isStatic = 0;
    a.$usage2 = 0;
    a.$isDirty3 = 0;
    a.$isBound0 = 0;
}
let cbggg_VertexBufferObject__init_ = ($this, $isStatic, $numVertices, $attributes) => {
    jl_Object__init_($this);
    $this.$isDirty3 = 0;
    $this.$isBound0 = 0;
    $this.$isStatic = $isStatic;
    $this.$attributes2 = $attributes;
    $this.$byteBuffer3 = cbgu_BufferUtils_newUnsafeByteBuffer($rt_imul($this.$attributes2.$vertexSize, $numVertices));
    $this.$buffer2 = $this.$byteBuffer3.$asFloatBuffer();
    jn_FloatBuffer_flip($this.$buffer2);
    $this.$bufferHandle3 = cbg_Gdx_gl20.$glGenBuffer();
    $this.$usage2 = !$isStatic ? 35048 : 35044;
},
cbggg_VertexBufferObject__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_VertexBufferObject();
    cbggg_VertexBufferObject__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_VertexBufferObject_getAttributes = $this => {
    return $this.$attributes2;
},
cbggg_VertexBufferObject_getNumVertices = $this => {
    return jn_Buffer_limit($this.$buffer2) / ($this.$attributes2.$vertexSize / 4 | 0) | 0;
},
cbggg_VertexBufferObject_getNumMaxVertices = $this => {
    return jn_Buffer_capacity($this.$buffer2) / ($this.$attributes2.$vertexSize / 4 | 0) | 0;
},
cbggg_VertexBufferObject_bufferChanged = $this => {
    if ($this.$isBound0) {
        cbg_Gdx_gl20.$glBufferData(34962, jn_Buffer_limit($this.$buffer2), $this.$buffer2, $this.$usage2);
        $this.$isDirty3 = 0;
    }
},
cbggg_VertexBufferObject_setVertices = ($this, $vertices, $offset, $count) => {
    $this.$isDirty3 = 1;
    cbgu_BufferUtils_copy($vertices, $this.$buffer2, $count, $offset);
    $this.$buffer2.$position4(0);
    $this.$buffer2.$limit2($count);
    cbggg_VertexBufferObject_bufferChanged($this);
},
cbggg_VertexBufferObject_bind = ($this, $shader, $locations) => {
    let $gl, $numAttributes, $i, var$6, $attribute, $location;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, $this.$bufferHandle3);
    if ($this.$isDirty3) {
        $gl.$glBufferData(34962, jn_Buffer_limit($this.$buffer2), $this.$buffer2, $this.$usage2);
        $this.$isDirty3 = 0;
    }
    a: {
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes2);
        if ($locations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                var$6 = $locations.data;
                $attribute = cbgg_VertexAttributes_get($this.$attributes2, $i);
                $location = var$6[$i];
                if ($location >= 0) {
                    $shader.$enableVertexAttribute($location);
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type3, $attribute.$normalized, $this.$attributes2.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
        $i = 0;
        while ($i < $numAttributes) {
            $attribute = cbgg_VertexAttributes_get($this.$attributes2, $i);
            $location = $shader.$getAttributeLocation($attribute.$alias);
            if ($location >= 0) {
                $shader.$enableVertexAttribute($location);
                $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type3, $attribute.$normalized, $this.$attributes2.$vertexSize, $attribute.$offset);
            }
            $i = $i + 1 | 0;
        }
    }
    $this.$isBound0 = 1;
},
cbggg_VertexBufferObject_unbind = ($this, $shader, $locations) => {
    let $gl, $numAttributes, $i, $location;
    a: {
        $gl = cbg_Gdx_gl20;
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes2);
        if ($locations === null) {
            $i = 0;
            while ($i < $numAttributes) {
                $shader.$disableVertexAttribute((cbgg_VertexAttributes_get($this.$attributes2, $i)).$alias);
                $i = $i + 1 | 0;
            }
        } else {
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break a;
                $location = $locations.data[$i];
                if ($location >= 0)
                    $shader.$disableVertexAttribute0($location);
                $i = $i + 1 | 0;
            }
        }
    }
    $gl.$glBindBuffer(34962, 0);
    $this.$isBound0 = 0;
},
cbggg_VertexBufferObject_dispose = $this => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34962, 0);
    $gl.$glDeleteBuffer($this.$bufferHandle3);
    $this.$bufferHandle3 = 0;
    cbgu_BufferUtils_disposeUnsafeByteBuffer($this.$byteBuffer3);
},
cbggg_VertexArray = $rt_classWithoutFields(cbggg_VertexBufferObject),
cbggg_VertexArray__init_ = ($this, $numVertices, $attributes) => {
    cbggg_VertexBufferObject__init_($this, 0, $numVertices, $attributes);
},
cbggg_VertexArray__init_0 = (var_0, var_1) => {
    let var_2 = new cbggg_VertexArray();
    cbggg_VertexArray__init_(var_2, var_0, var_1);
    return var_2;
},
cbgggs_DefaultShader$Setters$13 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$13__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$13__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$13();
    cbgggs_DefaultShader$Setters$13__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$13_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbggga_ColorAttribute_$callClinit();
    cbgggs_BaseShader_set3($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, cbggga_ColorAttribute_Diffuse)).$color4);
},
cbg_ApplicationListener = $rt_classWithoutFields(0);
function cbg_Game() {
    jl_Object.call(this);
    this.$screen = null;
}
let cbg_Game__init_ = $this => {
    jl_Object__init_($this);
},
cbg_Game_dispose = $this => {
    if ($this.$screen !== null)
        $this.$screen.$hide();
},
cbg_Game_pause = $this => {
    if ($this.$screen !== null)
        $this.$screen.$pause();
},
cbg_Game_resume = $this => {
    if ($this.$screen !== null)
        $this.$screen.$resume();
},
cbg_Game_render = $this => {
    if ($this.$screen !== null)
        $this.$screen.$render4(cbg_Gdx_graphics.$getDeltaTime());
},
cbg_Game_resize = ($this, $width, $height) => {
    if ($this.$screen !== null)
        $this.$screen.$resize1($width, $height);
},
cbg_Game_setScreen = ($this, $screen) => {
    if ($this.$screen !== null)
        $this.$screen.$hide();
    $this.$screen = $screen;
    if ($this.$screen !== null) {
        $this.$screen.$show();
        $this.$screen.$resize1(cbg_Gdx_graphics.$getWidth0(), cbg_Gdx_graphics.$getHeight0());
    }
},
cbgggs_DefaultShader$Setters$14 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$14__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$14__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$14();
    cbgggs_DefaultShader$Setters$14__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$14_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let var$5, var$6, $unit;
    var$5 = $shader.$context.$textureBinder;
    cbggga_TextureAttribute_$callClinit();
    var$6 = cbggga_TextureAttribute_Diffuse;
    $unit = var$5.$bind1((cbggg_Attributes_get($combinedAttributes, var$6)).$textureDescription);
    cbgggs_BaseShader_set0($shader, $inputID, $unit);
},
jur_AbstractCharClass$LazyLower = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyLower__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyLower__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyLower();
    jur_AbstractCharClass$LazyLower__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyLower_computeValue = $this => {
    return (jur_CharClass__init_()).$add0(97, 122);
};
function cbgggs_DefaultShader$Setters$11() {
    cbgggs_BaseShader$LocalSetter.call(this);
    this.$tmpM = null;
}
let cbgggs_DefaultShader$Setters$11__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
    $this.$tmpM = cbgm_Matrix3__init_();
},
cbgggs_DefaultShader$Setters$11__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$11();
    cbgggs_DefaultShader$Setters$11__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$11_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set5($shader, $inputID, (($this.$tmpM.$set28($renderable.$worldTransform)).$inv()).$transpose());
},
cbgggs_DefaultShader$Setters$12 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$12__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$12__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$12();
    cbgggs_DefaultShader$Setters$12__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$12_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbggga_FloatAttribute_$callClinit();
    cbgggs_BaseShader_set2($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, cbggga_FloatAttribute_Shininess)).$value2);
},
bl_btIDebugDraw = $rt_classWithoutFields(bi_IDLBase),
bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_0 = null,
bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_1 = null,
bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_2 = null,
bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_3 = null,
bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_4 = null,
bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_5 = null,
bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_6 = null,
bl_btIDebugDraw_NULL = null,
bl_btIDebugDraw_T_01 = null,
bl_btIDebugDraw_T_02 = null,
bl_btIDebugDraw_T_03 = null,
bl_btIDebugDraw_$callClinit = () => {
    bl_btIDebugDraw_$callClinit = $rt_eraseClinit(bl_btIDebugDraw);
    bl_btIDebugDraw__clinit_();
},
bl_btIDebugDraw__init_0 = ($this, $b, $c) => {
    bl_btIDebugDraw_$callClinit();
    bi_IDLBase__init_($this);
},
bl_btIDebugDraw__init_1 = (var_0, var_1) => {
    let var_2 = new bl_btIDebugDraw();
    bl_btIDebugDraw__init_0(var_2, var_0, var_1);
    return var_2;
},
bl_btIDebugDraw_native_new = () => {
    bl_btIDebugDraw_$callClinit();
    return bl_btIDebugDraw__init_1(0, 0);
},
bl_btIDebugDraw__init_ = $this => {
    let $addr;
    bl_btIDebugDraw_$callClinit();
    bi_IDLBase__init_($this);
    $addr = bl_btIDebugDraw_internal_native_create$js_body$_18();
    bi_IDLBase_internal_reset($this, $addr, 1);
    bl_btIDebugDraw_setupCallback($this);
},
bl_btIDebugDraw__init_2 = () => {
    let var_0 = new bl_btIDebugDraw();
    bl_btIDebugDraw__init_(var_0);
    return var_0;
},
bl_btIDebugDraw_setupCallback = $this => {
    let $drawLine, $drawContactPoint, $reportErrorWarning, $draw3dText, $setDebugMode, $getDebugMode;
    $drawLine = bl_btIDebugDraw$1__init_0($this);
    $drawContactPoint = bl_btIDebugDraw$2__init_0($this);
    $reportErrorWarning = bl_btIDebugDraw$3__init_0($this);
    $draw3dText = bl_btIDebugDraw$4__init_0($this);
    $setDebugMode = bl_btIDebugDraw$5__init_0($this);
    $getDebugMode = bl_btIDebugDraw$6__init_0($this);
    bl_btIDebugDraw_internal_native_setupCallback$js_body$_19($this.$native_address, otji_JS_function(otji_JSWrapper_unwrap($drawLine), "drawLine"), otji_JS_function(otji_JSWrapper_unwrap($drawContactPoint), "drawContactPoint"), otji_JS_function(otji_JSWrapper_unwrap($reportErrorWarning), "reportErrorWarning"), otji_JS_function(otji_JSWrapper_unwrap($draw3dText), "draw3dText"), otji_JS_function(otji_JSWrapper_unwrap($setDebugMode), "setDebugMode"), otji_JS_function(otji_JSWrapper_unwrap($getDebugMode), "getDebugMode"));
},
bl_btIDebugDraw_internal_drawLine = ($this, $vecFrom_addr, $vecTo_addr, $color_addr) => {
    bl_btIDebugDraw_$callClinit();
    if (bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_0 === null)
        bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_0 = bl_btVector3_native_new();
    bi_IDLBase_internal_reset(bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_0, $vecFrom_addr, 0);
    if (bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_1 === null)
        bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_1 = bl_btVector3_native_new();
    bi_IDLBase_internal_reset(bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_1, $vecTo_addr, 0);
    if (bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_2 === null)
        bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_2 = bl_btVector3_native_new();
    bi_IDLBase_internal_reset(bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_2, $color_addr, 0);
    $this.$drawLine0(bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_0, bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_1, bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_2);
},
bl_btIDebugDraw_internal_drawContactPoint = ($this, $PointOnB_addr, $normalOnB_addr, $distance, $lifeTime, $color_addr) => {
    bl_btIDebugDraw_$callClinit();
    if (bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_3 === null)
        bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_3 = bl_btVector3_native_new();
    bi_IDLBase_internal_reset(bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_3, $PointOnB_addr, 0);
    if (bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_4 === null)
        bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_4 = bl_btVector3_native_new();
    bi_IDLBase_internal_reset(bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_4, $normalOnB_addr, 0);
    if (bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_5 === null)
        bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_5 = bl_btVector3_native_new();
    bi_IDLBase_internal_reset(bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_5, $color_addr, 0);
    $this.$drawContactPoint0(bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_3, bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_4, $distance, $lifeTime, bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_5);
},
bl_btIDebugDraw_reportErrorWarning = ($this, $warningString) => {
    return;
},
bl_btIDebugDraw_internal_reportErrorWarning = ($this, $warningString_addr) => {
    $this.$reportErrorWarning0($warningString_addr);
},
bl_btIDebugDraw_draw3dText = ($this, $location, $textString) => {
    return;
},
bl_btIDebugDraw_internal_draw3dText = ($this, $location_addr, $textString_addr) => {
    bl_btIDebugDraw_$callClinit();
    if (bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_6 === null)
        bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_6 = bl_btVector3_native_new();
    bi_IDLBase_internal_reset(bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_6, $location_addr, 0);
    $this.$draw3dText0(bl_btIDebugDraw_btVector3_TEMP_STATIC_GEN_6, $textString_addr);
},
bl_btIDebugDraw_internal_setDebugMode = ($this, $debugMode) => {
    $this.$setDebugMode($debugMode);
},
bl_btIDebugDraw_internal_getDebugMode = $this => {
    return $this.$getDebugMode();
},
bl_btIDebugDraw__clinit_ = () => {
    bl_btIDebugDraw_NULL = bl_btIDebugDraw_native_new();
    bl_btIDebugDraw_T_01 = bl_btIDebugDraw_native_new();
    bl_btIDebugDraw_T_02 = bl_btIDebugDraw_native_new();
    bl_btIDebugDraw_T_03 = bl_btIDebugDraw_native_new();
},
bl_btIDebugDraw_internal_native_create$js_body$_18 = () => {
    var jsObj = new bullet.DebugDrawImpl();
    return bullet.getPointer(jsObj);
},
bl_btIDebugDraw_internal_native_setupCallback$js_body$_19 = (var$1, var$2, var$3, var$4, var$5, var$6, var$7) => {
    var DebugDrawImpl = bullet.wrapPointer(var$1, bullet.DebugDrawImpl);
    DebugDrawImpl.drawLine = var$2;
    DebugDrawImpl.drawContactPoint = var$3;
    DebugDrawImpl.reportErrorWarning = var$4;
    DebugDrawImpl.draw3dText = var$5;
    DebugDrawImpl.setDebugMode = var$6;
    DebugDrawImpl.getDebugMode = var$7;
};
function cbgggu_RenderContext() {
    let a = this; jl_Object.call(a);
    a.$textureBinder = null;
    a.$blending = 0;
    a.$blendSFactor = 0;
    a.$blendDFactor = 0;
    a.$depthFunc = 0;
    a.$depthRangeNear = 0.0;
    a.$depthRangeFar = 0.0;
    a.$depthMask = 0;
    a.$cullFace = 0;
}
let cbgggu_RenderContext__init_ = ($this, var$1) => {
    jl_Object__init_($this);
    $this.$textureBinder = var$1;
},
cbgggu_RenderContext__init_0 = var_0 => {
    let var_1 = new cbgggu_RenderContext();
    cbgggu_RenderContext__init_(var_1, var_0);
    return var_1;
},
cbgggu_RenderContext_begin = $this => {
    cbg_Gdx_gl.$glDisable(2929);
    $this.$depthFunc = 0;
    cbg_Gdx_gl.$glDepthMask(1);
    $this.$depthMask = 1;
    cbg_Gdx_gl.$glDisable(3042);
    $this.$blending = 0;
    cbg_Gdx_gl.$glDisable(2884);
    $this.$blendDFactor = 0;
    $this.$blendSFactor = 0;
    $this.$cullFace = 0;
    $this.$textureBinder.$begin();
},
cbgggu_RenderContext_end = $this => {
    if ($this.$depthFunc)
        cbg_Gdx_gl.$glDisable(2929);
    if (!$this.$depthMask)
        cbg_Gdx_gl.$glDepthMask(1);
    if ($this.$blending)
        cbg_Gdx_gl.$glDisable(3042);
    if ($this.$cullFace > 0)
        cbg_Gdx_gl.$glDisable(2884);
    $this.$textureBinder.$end();
},
cbgggu_RenderContext_setDepthMask = ($this, $depthMask) => {
    let var$2;
    if ($this.$depthMask != $depthMask) {
        var$2 = cbg_Gdx_gl;
        $this.$depthMask = $depthMask;
        var$2.$glDepthMask($depthMask);
    }
},
cbgggu_RenderContext_setDepthTest = ($this, $depthFunction, $depthRangeNear, $depthRangeFar) => {
    let $wasEnabled, $enabled, var$6;
    $wasEnabled = !$this.$depthFunc ? 0 : 1;
    $enabled = !$depthFunction ? 0 : 1;
    if ($this.$depthFunc != $depthFunction) {
        $this.$depthFunc = $depthFunction;
        if (!$enabled)
            cbg_Gdx_gl.$glDisable(2929);
        else {
            cbg_Gdx_gl.$glEnable(2929);
            cbg_Gdx_gl.$glDepthFunc($depthFunction);
        }
    }
    if ($enabled) {
        if (!($wasEnabled && $this.$depthFunc == $depthFunction)) {
            var$6 = cbg_Gdx_gl;
            $this.$depthFunc = $depthFunction;
            var$6.$glDepthFunc($depthFunction);
        }
        if (!($wasEnabled && $this.$depthRangeNear === $depthRangeNear && $this.$depthRangeFar === $depthRangeFar)) {
            var$6 = cbg_Gdx_gl;
            $this.$depthRangeNear = $depthRangeNear;
            $this.$depthRangeFar = $depthRangeFar;
            var$6.$glDepthRangef($depthRangeNear, $depthRangeFar);
        }
    }
},
cbgggu_RenderContext_setBlending = ($this, $enabled, $sFactor, $dFactor) => {
    if ($enabled != $this.$blending) {
        $this.$blending = $enabled;
        if (!$enabled)
            cbg_Gdx_gl.$glDisable(3042);
        else
            cbg_Gdx_gl.$glEnable(3042);
    }
    if ($enabled && !($this.$blendSFactor == $sFactor && $this.$blendDFactor == $dFactor)) {
        cbg_Gdx_gl.$glBlendFunc($sFactor, $dFactor);
        $this.$blendSFactor = $sFactor;
        $this.$blendDFactor = $dFactor;
    }
},
cbgggu_RenderContext_setCullFace = ($this, $face) => {
    if ($face != $this.$cullFace) {
        $this.$cullFace = $face;
        if ($face != 1028 && $face != 1029 && $face != 1032)
            cbg_Gdx_gl.$glDisable(2884);
        else {
            cbg_Gdx_gl.$glEnable(2884);
            cbg_Gdx_gl.$glCullFace($face);
        }
    }
},
cbgg_TextureData = $rt_classWithoutFields(0);
function cbggg_PixmapTextureData() {
    let a = this; jl_Object.call(a);
    a.$pixmap0 = null;
    a.$format1 = null;
    a.$useMipMaps0 = 0;
    a.$disposePixmap0 = 0;
    a.$managed = 0;
}
let cbggg_PixmapTextureData__init_0 = ($this, $pixmap, $format, $useMipMaps, $disposePixmap) => {
    cbggg_PixmapTextureData__init_($this, $pixmap, $format, $useMipMaps, $disposePixmap, 0);
},
cbggg_PixmapTextureData__init_1 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbggg_PixmapTextureData();
    cbggg_PixmapTextureData__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbggg_PixmapTextureData__init_ = ($this, $pixmap, $format, $useMipMaps, $disposePixmap, $managed) => {
    jl_Object__init_($this);
    $this.$pixmap0 = $pixmap;
    if ($format === null)
        $format = $pixmap.$getFormat();
    $this.$format1 = $format;
    $this.$useMipMaps0 = $useMipMaps;
    $this.$disposePixmap0 = $disposePixmap;
    $this.$managed = $managed;
},
cbggg_PixmapTextureData__init_2 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cbggg_PixmapTextureData();
    cbggg_PixmapTextureData__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cbggg_PixmapTextureData_disposePixmap = $this => {
    return $this.$disposePixmap0;
},
cbggg_PixmapTextureData_consumePixmap = $this => {
    return $this.$pixmap0;
},
cbggg_PixmapTextureData_getWidth = $this => {
    return $this.$pixmap0.$getWidth0();
},
cbggg_PixmapTextureData_getHeight = $this => {
    return $this.$pixmap0.$getHeight0();
},
cbggg_PixmapTextureData_getFormat = $this => {
    return $this.$format1;
},
cbggg_PixmapTextureData_useMipMaps = $this => {
    return $this.$useMipMaps0;
},
cbggg_PixmapTextureData_isManaged = $this => {
    return $this.$managed;
},
cbggg_PixmapTextureData_getType = $this => {
    cbgg_TextureData$TextureDataType_$callClinit();
    return cbgg_TextureData$TextureDataType_Pixmap;
},
cbggg_PixmapTextureData_consumeCustomData = ($this, $target) => {
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(414)));
},
cbggg_PixmapTextureData_isPrepared = $this => {
    return 1;
},
cbggg_PixmapTextureData_prepare = $this => {
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(415)));
},
cbgg_GL20 = $rt_classWithoutFields(0);
function cgxgbt_TeaGL20() {
    let a = this; jl_Object.call(a);
    a.$gl = null;
    a.$programs = null;
    a.$shaders = null;
    a.$buffers = null;
    a.$frameBuffers = null;
    a.$renderBuffers = null;
    a.$textures0 = null;
    a.$uniforms0 = null;
    a.$currProgram = 0;
}
let cgxgbt_TeaGL20__init_ = ($this, $gl) => {
    jl_Object__init_($this);
    $this.$programs = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$shaders = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$buffers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$frameBuffers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$renderBuffers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$textures0 = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$uniforms0 = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$currProgram = 0;
    $this.$gl = $gl;
    $this.$gl.pixelStorei(37441, 0);
},
cgxgbt_TeaGL20__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaGL20();
    cgxgbt_TeaGL20__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaGL20_getUniformLocation = ($this, $location) => {
    return cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$uniforms0, $this.$currProgram), $location);
},
cgxgbt_TeaGL20_glActiveTexture = ($this, $texture) => {
    $this.$gl.activeTexture($texture);
},
cgxgbt_TeaGL20_glAttachShader = ($this, $program, $shader) => {
    let var$3, var$4;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    $this.$gl.attachShader(var$3, var$4);
},
cgxgbt_TeaGL20_glBindBuffer = ($this, $target, $buffer) => {
    let var$3, var$4;
    var$3 = $this.$gl;
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$buffers, $buffer);
    var$3.bindBuffer($target, var$4);
},
cgxgbt_TeaGL20_glBindTexture = ($this, $target, $texture) => {
    let var$3, var$4;
    var$3 = $this.$gl;
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$textures0, $texture);
    var$3.bindTexture($target, var$4);
},
cgxgbt_TeaGL20_glBlendFunc = ($this, $sfactor, $dfactor) => {
    $this.$gl.blendFunc($sfactor, $dfactor);
},
cgxgbt_TeaGL20_glBlendFuncSeparate = ($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) => {
    $this.$gl.blendFuncSeparate($srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
},
cgxgbt_TeaGL20_glBufferData = ($this, $target, $size, $data, $usage) => {
    let $typedArray;
    if ($data === null)
        $this.$gl.bufferData($target, $size, $usage);
    else {
        $typedArray = cgxgbtdt_TypedArrays_getTypedArray($data);
        $this.$gl.bufferData($target, $typedArray, $usage);
    }
},
cgxgbt_TeaGL20_glBufferSubData = ($this, $target, $offset, $size, $data) => {
    let $typedArray;
    $typedArray = cgxgbtdt_TypedArrays_getTypedArray($data);
    $this.$gl.bufferSubData($target, $offset, $typedArray);
},
cgxgbt_TeaGL20_glClear = ($this, $mask) => {
    $this.$gl.clear($mask);
},
cgxgbt_TeaGL20_glClearColor = ($this, $red, $green, $blue, $alpha) => {
    $this.$gl.clearColor($red, $green, $blue, $alpha);
},
cgxgbt_TeaGL20_glCompileShader = ($this, $shader) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    $this.$gl.compileShader(var$2);
},
cgxgbt_TeaGL20_glCreateProgram = $this => {
    let $program;
    $program = $this.$gl.createProgram();
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$programs, $program);
},
cgxgbt_TeaGL20_glCreateShader = ($this, $type) => {
    let $shader;
    $shader = $this.$gl.createShader($type);
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$shaders, $shader);
},
cgxgbt_TeaGL20_glCullFace = ($this, $mode) => {
    $this.$gl.cullFace($mode);
},
cgxgbt_TeaGL20_glDeleteBuffer = ($this, $id) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$buffers, $id);
    $this.$gl.deleteBuffer(var$2);
},
cgxgbt_TeaGL20_glDeleteProgram = ($this, $program) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$programs, $program);
    cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$uniforms0, $program);
    $this.$gl.deleteProgram(var$2);
},
cgxgbt_TeaGL20_glDeleteShader = ($this, $shader) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$shaders, $shader);
    $this.$gl.deleteShader(var$2);
},
cgxgbt_TeaGL20_glDeleteTexture = ($this, $id) => {
    let var$2;
    var$2 = cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$textures0, $id);
    $this.$gl.deleteTexture(var$2);
},
cgxgbt_TeaGL20_glDepthFunc = ($this, $func) => {
    $this.$gl.depthFunc($func);
},
cgxgbt_TeaGL20_glDepthMask = ($this, $flag) => {
    $this.$gl.depthMask(!!$flag);
},
cgxgbt_TeaGL20_glDepthRangef = ($this, $zNear, $zFar) => {
    $this.$gl.depthRange($zNear, $zFar);
},
cgxgbt_TeaGL20_glDisable = ($this, $cap) => {
    $this.$gl.disable($cap);
},
cgxgbt_TeaGL20_glDisableVertexAttribArray = ($this, $index) => {
    $this.$gl.disableVertexAttribArray($index);
},
cgxgbt_TeaGL20_glDrawArrays = ($this, $mode, $first, $count) => {
    $this.$gl.drawArrays($mode, $first, $count);
},
cgxgbt_TeaGL20_glDrawElements = ($this, $mode, $count, $type, $indices) => {
    let var$5, var$6;
    var$5 = $this.$gl;
    var$6 = jn_Buffer_position($indices);
    var$5.drawElements($mode, $count, $type, var$6);
},
cgxgbt_TeaGL20_glDrawElements0 = ($this, $mode, $count, $type, $indices) => {
    $this.$gl.drawElements($mode, $count, $type, $indices);
},
cgxgbt_TeaGL20_glEnable = ($this, $cap) => {
    $this.$gl.enable($cap);
},
cgxgbt_TeaGL20_glEnableVertexAttribArray = ($this, $index) => {
    $this.$gl.enableVertexAttribArray($index);
},
cgxgbt_TeaGL20_glGenBuffer = $this => {
    let $buffer;
    $buffer = $this.$gl.createBuffer();
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$buffers, $buffer);
},
cgxgbt_TeaGL20_glGenerateMipmap = ($this, $target) => {
    $this.$gl.generateMipmap($target);
},
cgxgbt_TeaGL20_glGenTexture = $this => {
    let $texture;
    $texture = $this.$gl.createTexture();
    return cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$textures0, $texture);
},
cgxgbt_TeaGL20_glGetActiveAttrib = ($this, $program, $index, $size, $type) => {
    let var$5, var$6, $activeUniform;
    var$5 = $this.$gl;
    var$6 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    $activeUniform = var$5.getActiveAttrib(var$6, $index);
    $size.$put7(0, $activeUniform.size);
    $type.$put7(0, $activeUniform.type);
    return $rt_str($activeUniform.name);
},
cgxgbt_TeaGL20_glGetActiveUniform = ($this, $program, $index, $size, $type) => {
    let var$5, var$6, $activeUniform;
    var$5 = $this.$gl;
    var$6 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    $activeUniform = var$5.getActiveUniform(var$6, $index);
    $size.$put7(0, $activeUniform.size);
    $type.$put7(0, $activeUniform.type);
    return $rt_str($activeUniform.name);
},
cgxgbt_TeaGL20_glGetAttribLocation = ($this, $program, $name) => {
    let var$3;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    return $this.$gl.getAttribLocation(var$3, $rt_ustr($name));
},
cgxgbt_TeaGL20_glGetFloatv = ($this, $pname, $params) => {
    if ($pname != 2931 && $pname != 2849 && $pname != 32824 && $pname != 10752 && $pname != 32938)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(416)));
    $params.$put8(0, $this.$gl.getParameter($pname));
},
cgxgbt_TeaGL20_glGetIntegerv = ($this, $pname, $params) => {
    let var$3, var$4;
    a: {
        b: {
            if ($pname == 34016)
                break b;
            if ($pname == 3413)
                break b;
            if ($pname == 32970)
                break b;
            if ($pname == 32968)
                break b;
            if ($pname == 34877)
                break b;
            if ($pname == 32777)
                break b;
            if ($pname == 32971)
                break b;
            if ($pname == 32969)
                break b;
            if ($pname == 3412)
                break b;
            if ($pname == 2885)
                break b;
            if ($pname == 3414)
                break b;
            if ($pname == 2932)
                break b;
            if ($pname == 2886)
                break b;
            if ($pname == 33170)
                break b;
            if ($pname == 3411)
                break b;
            if ($pname == 35739)
                break b;
            if ($pname == 35738)
                break b;
            if ($pname == 35661)
                break b;
            if ($pname == 34076)
                break b;
            if ($pname == 36349)
                break b;
            if ($pname == 34024)
                break b;
            if ($pname == 34930)
                break b;
            if ($pname == 3379)
                break b;
            if ($pname == 36348)
                break b;
            if ($pname == 34921)
                break b;
            if ($pname == 35660)
                break b;
            if ($pname == 36347)
                break b;
            if ($pname == 34466)
                break b;
            if ($pname == 3333)
                break b;
            if ($pname == 3410)
                break b;
            if ($pname == 32936)
                break b;
            if ($pname == 32937)
                break b;
            if ($pname == 34817)
                break b;
            if ($pname == 34816)
                break b;
            if ($pname == 34818)
                break b;
            if ($pname == 34819)
                break b;
            if ($pname == 36003)
                break b;
            if ($pname == 36004)
                break b;
            if ($pname == 36005)
                break b;
            if ($pname == 3415)
                break b;
            if ($pname == 2961)
                break b;
            if ($pname == 2964)
                break b;
            if ($pname == 2962)
                break b;
            if ($pname == 2965)
                break b;
            if ($pname == 2966)
                break b;
            if ($pname == 2967)
                break b;
            if ($pname == 2963)
                break b;
            if ($pname == 2968)
                break b;
            if ($pname == 3408)
                break b;
            if ($pname != 3317) {
                if ($pname != 2978) {
                    if ($pname != 36006)
                        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(417)));
                    var$3 = $this.$gl.getParameter($pname);
                    if (var$3 === null)
                        $params.$put7(0, 0);
                    else
                        $params.$put7(0, cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6($this.$frameBuffers, var$3));
                    break a;
                }
                var$4 = $this.$gl.getParameter($pname);
                $params.$put7(0, var$4[0]);
                $params.$put7(1, var$4[1]);
                $params.$put7(2, var$4[2]);
                $params.$put7(3, var$4[3]);
                break a;
            }
        }
        $params.$put7(0, $this.$gl.getParameter($pname));
    }
},
cgxgbt_TeaGL20_glGetProgramInfoLog = ($this, $program) => {
    return $rt_str($this.$gl.getProgramInfoLog(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program)));
},
cgxgbt_TeaGL20_glGetProgramiv = ($this, $program, $pname, $params) => {
    let $result;
    if ($pname != 35712 && $pname != 35714 && $pname != 35715)
        $params.$put7(0, $this.$gl.getProgramParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program), $pname));
    else {
        $result = $this.$gl.getProgramParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program), $pname) ? 1 : 0;
        $params.$put7(0, !$result ? 0 : 1);
    }
},
cgxgbt_TeaGL20_glGetShaderInfoLog = ($this, $shader) => {
    return $rt_str($this.$gl.getShaderInfoLog(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader)));
},
cgxgbt_TeaGL20_glGetShaderiv = ($this, $shader, $pname, $params) => {
    let $result;
    if ($pname != 35713 && $pname != 35712) {
        $result = $this.$gl.getShaderParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader), $pname);
        $params.$put7(0, $result);
    } else {
        $result = $this.$gl.getShaderParameter(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader), $pname) ? 1 : 0;
        $params.$put7(0, !$result ? 0 : 1);
    }
},
cgxgbt_TeaGL20_glGetString = ($this, $name) => {
    return $rt_str($this.$gl.getParameter($name));
},
cgxgbt_TeaGL20_glGetUniformLocation = ($this, $program, $name) => {
    let $location, var$4, $id;
    $location = $this.$gl.getUniformLocation(cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program), $rt_ustr($name));
    if ($location === null)
        return (-1);
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$uniforms0, $program);
    if (var$4 === null) {
        var$4 = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
        $this.$uniforms0[$program] = var$4;
    }
    $id = cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4(var$4, $location);
    return $id;
},
cgxgbt_TeaGL20_glLinkProgram = ($this, $program) => {
    let var$2, var$3;
    var$2 = $this.$gl;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    var$2.linkProgram(var$3);
},
cgxgbt_TeaGL20_glPixelStorei = ($this, $pname, $param) => {
    $this.$gl.pixelStorei($pname, $param);
},
cgxgbt_TeaGL20_glScissor = ($this, $x, $y, $width, $height) => {
    $this.$gl.scissor($x, $y, $width, $height);
},
cgxgbt_TeaGL20_glShaderSource = ($this, $shader, $source) => {
    let var$3, var$4;
    var$3 = $this.$gl;
    var$4 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$shaders, $shader);
    var$3.shaderSource(var$4, $rt_ustr($source));
},
cgxgbt_TeaGL20_glTexImage2D = ($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) => {
    let $arrayBuffer;
    if ($pixels === null) {
        $this.$gl.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, null);
        return;
    }
    $arrayBuffer = $type == 5121 ? cgxgbtdt_TypedArrays_getUint8Array($pixels) : $type != 5123 && $type != 33635 && $type != 32819 ? ($type != 5126 ? cgxgbtdt_TypedArrays_getTypedArray($pixels) : cgxgbtdt_TypedArrays_getFloat32Array($pixels)) : cgxgbtdt_TypedArrays_getUint16Array($pixels);
    $this.$gl.texImage2D($target, $level, $internalformat, $width, $height, $border, $format, $type, $arrayBuffer);
};
let cgxgbt_TeaGL20_glTexParameterf = ($this, $target, $pname, $param) => {
    $this.$gl.texParameterf($target, $pname, $param);
},
cgxgbt_TeaGL20_glTexParameteri = ($this, $target, $pname, $param) => {
    let var$4, var$5;
    var$4 = $this.$gl;
    var$5 = $param;
    var$4.texParameterf($target, $pname, var$5);
},
cgxgbt_TeaGL20_glUniform1f = ($this, $location, $x) => {
    let $loc;
    $loc = $this.$getUniformLocation($location);
    $this.$gl.uniform1f($loc, $x);
},
cgxgbt_TeaGL20_glUniform1i = ($this, $location, $x) => {
    let $loc;
    $loc = $this.$getUniformLocation($location);
    $this.$gl.uniform1i($loc, $x);
},
cgxgbt_TeaGL20_glUniform2f = ($this, $location, $x, $y) => {
    let $loc;
    $loc = $this.$getUniformLocation($location);
    $this.$gl.uniform2f($loc, $x, $y);
},
cgxgbt_TeaGL20_glUniform3f = ($this, $location, $x, $y, $z) => {
    let $loc;
    $loc = $this.$getUniformLocation($location);
    $this.$gl.uniform3f($loc, $x, $y, $z);
},
cgxgbt_TeaGL20_glUniform3fv = ($this, $location, $count, $v, $offset) => {
    let $loc;
    $loc = $this.$getUniformLocation($location);
    $this.$gl.uniform3fv($loc, $v.data);
},
cgxgbt_TeaGL20_glUniform4f = ($this, $location, $x, $y, $z, $w) => {
    let $loc;
    $loc = $this.$getUniformLocation($location);
    $this.$gl.uniform4f($loc, $x, $y, $z, $w);
},
cgxgbt_TeaGL20_glUniformMatrix3fv = ($this, $location, $count, $transpose, $value, $offset) => {
    let $loc;
    $loc = $this.$getUniformLocation($location);
    $this.$gl.uniformMatrix3fv($loc, !!$transpose, $value.data);
},
cgxgbt_TeaGL20_glUniformMatrix4fv = ($this, $location, $count, $transpose, $value, $offset) => {
    let $loc;
    $loc = $this.$getUniformLocation($location);
    $this.$gl.uniformMatrix4fv($loc, !!$transpose, $value.data);
},
cgxgbt_TeaGL20_glUseProgram = ($this, $program) => {
    let var$2, var$3;
    $this.$currProgram = $program;
    var$2 = $this.$gl;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$programs, $program);
    var$2.useProgram(var$3);
},
cgxgbt_TeaGL20_glVertexAttrib2f = ($this, $indx, $x, $y) => {
    $this.$gl.vertexAttrib2f($indx, $x, $y);
},
cgxgbt_TeaGL20_glVertexAttribPointer = ($this, $indx, $size, $type, $normalized, $stride, $ptr_0) => {
    $this.$gl.vertexAttribPointer($indx, $size, $type, !!$normalized, $stride, $ptr_0);
},
cgxgbt_TeaGL20_glViewport = ($this, $x, $y, $width, $height) => {
    $this.$gl.viewport($x, $y, $width, $height);
},
cbgg_GL30 = $rt_classWithoutFields(0);
function cgxgbt_TeaGL30() {
    let a = this; cgxgbt_TeaGL20.call(a);
    a.$gl0 = null;
    a.$queries = null;
    a.$samplers = null;
    a.$feedbacks = null;
    a.$vertexArrays = null;
}
let cgxgbt_TeaGL30__init_ = ($this, $gl) => {
    cgxgbt_TeaGL20__init_($this, $gl);
    $this.$queries = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$samplers = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$feedbacks = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$vertexArrays = cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1();
    $this.$gl0 = $gl;
},
cgxgbt_TeaGL30__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaGL30();
    cgxgbt_TeaGL30__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaGL30_deallocateVertexArrayId = ($this, $id) => {
    cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5($this.$vertexArrays, $id);
},
cgxgbt_TeaGL30_glBindVertexArray = ($this, $array) => {
    let var$2, var$3;
    var$2 = $this.$gl0;
    var$3 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$vertexArrays, $array);
    var$2.bindVertexArray(var$3);
},
cgxgbt_TeaGL30_glDeleteVertexArrays = ($this, $n, $ids) => {
    let $startPosition, $i, $id, var$6;
    $startPosition = jn_Buffer_position($ids);
    $i = 0;
    while ($i < $n) {
        $id = $ids.$get19();
        var$6 = cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2($this.$vertexArrays, $id);
        cgxgbt_TeaGL30_deallocateVertexArrayId($this, $id);
        $this.$gl0.deleteVertexArray(var$6);
        $i = $i + 1 | 0;
    }
    $ids.$position5($startPosition);
},
cgxgbt_TeaGL30_glDrawArraysInstanced = ($this, $mode, $first, $count, $instanceCount) => {
    $this.$gl0.drawArraysInstanced($mode, $first, $count, $instanceCount);
},
cgxgbt_TeaGL30_glDrawElementsInstanced = ($this, $mode, $count, $type, $indicesOffset, $instanceCount) => {
    $this.$gl0.drawElementsInstanced($mode, $count, $type, $indicesOffset, $instanceCount);
},
cgxgbt_TeaGL30_glGenVertexArrays = ($this, $n, $ids) => {
    let $i, $vArray, $id;
    $i = 0;
    while ($i < $n) {
        $vArray = $this.$gl0.createVertexArray();
        $id = cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4($this.$vertexArrays, $vArray);
        $ids.$put7($i, $id);
        $i = $i + 1 | 0;
    }
},
cgxgbt_TeaGL30_glGetFloatv = ($this, $pname, $params) => {
    if ($pname != 34045)
        cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params);
    else
        $params.$put8(0, $this.$gl0.getParameter($pname));
},
cgxgbt_TeaGL30_glGetIntegerv = ($this, $pname, $params) => {
    let var$3, var$4;
    switch ($pname) {
        case 3074:
        case 3314:
        case 3315:
        case 3316:
        case 3330:
        case 3331:
        case 3332:
        case 32877:
        case 32878:
        case 32883:
        case 33000:
        case 33001:
        case 34852:
        case 34853:
        case 34854:
        case 34855:
        case 34856:
        case 34857:
        case 34858:
        case 34859:
        case 34860:
        case 34861:
        case 34862:
        case 34863:
        case 35071:
        case 35076:
        case 35077:
        case 35371:
        case 35373:
        case 35375:
        case 35657:
        case 35658:
        case 35659:
        case 35723:
        case 35968:
        case 35978:
        case 35979:
        case 36063:
        case 36183:
        case 37154:
        case 37157:
            $params.$put7(0, $this.$gl0.getParameter($pname));
            return;
        case 32874:
        case 35869:
            var$3 = $this.$gl0.getParameter($pname);
            if (var$3 === null)
                $params.$put7(0, 0);
            else
                $params.$put7(0, cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6($this.$textures0, var$3));
            return;
        case 34229:
            var$4 = $this.$gl0.getParameter($pname);
            if (var$4 === null)
                $params.$put7(0, 0);
            else
                $params.$put7(0, cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6($this.$vertexArrays, var$4));
            return;
        case 36006:
        case 36010:
            var$4 = $this.$gl0.getParameter($pname);
            if (var$4 === null)
                $params.$put7(0, 0);
            else
                $params.$put7(0, cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6($this.$frameBuffers, var$4));
            return;
        default:
    }
    cgxgbt_TeaGL20_glGetIntegerv($this, $pname, $params);
},
cgxgbt_TeaGL30Debug = $rt_classWithoutFields(cgxgbt_TeaGL30),
cgxgbt_TeaGL30Debug__init_ = ($this, $gl) => {
    cgxgbt_TeaGL30__init_($this, $gl);
},
cgxgbt_TeaGL30Debug__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaGL30Debug();
    cgxgbt_TeaGL30Debug__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaGL30Debug_checkError = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$gl0.getError();
    if (!var$1)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = jl_Integer_toHexString(var$1);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(418)), var$1), $rt_s(27)), var$3);
    cbgu_GdxRuntimeException__init_0(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
},
cgxgbt_TeaGL30Debug_glBindVertexArray = ($this, $array) => {
    cgxgbt_TeaGL30_glBindVertexArray($this, $array);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDeleteVertexArrays = ($this, $n, $ids) => {
    cgxgbt_TeaGL30_glDeleteVertexArrays($this, $n, $ids);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawArraysInstanced = ($this, $mode, $first, $count, $instanceCount) => {
    cgxgbt_TeaGL30_glDrawArraysInstanced($this, $mode, $first, $count, $instanceCount);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawElementsInstanced = ($this, $mode, $count, $type, $indicesOffset, $instanceCount) => {
    cgxgbt_TeaGL30_glDrawElementsInstanced($this, $mode, $count, $type, $indicesOffset, $instanceCount);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGenVertexArrays = ($this, $n, $ids) => {
    cgxgbt_TeaGL30_glGenVertexArrays($this, $n, $ids);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glActiveTexture = ($this, $texture) => {
    cgxgbt_TeaGL20_glActiveTexture($this, $texture);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBindTexture = ($this, $target, $texture) => {
    cgxgbt_TeaGL20_glBindTexture($this, $target, $texture);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBlendFunc = ($this, $sfactor, $dfactor) => {
    cgxgbt_TeaGL20_glBlendFunc($this, $sfactor, $dfactor);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glClear = ($this, $mask) => {
    cgxgbt_TeaGL20_glClear($this, $mask);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glClearColor = ($this, $red, $green, $blue, $alpha) => {
    cgxgbt_TeaGL20_glClearColor($this, $red, $green, $blue, $alpha);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glCullFace = ($this, $mode) => {
    cgxgbt_TeaGL20_glCullFace($this, $mode);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDepthFunc = ($this, $func) => {
    cgxgbt_TeaGL20_glDepthFunc($this, $func);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDepthMask = ($this, $flag) => {
    cgxgbt_TeaGL20_glDepthMask($this, $flag);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDepthRangef = ($this, $zNear, $zFar) => {
    cgxgbt_TeaGL20_glDepthRangef($this, $zNear, $zFar);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDisable = ($this, $cap) => {
    cgxgbt_TeaGL20_glDisable($this, $cap);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawArrays = ($this, $mode, $first, $count) => {
    cgxgbt_TeaGL20_glDrawArrays($this, $mode, $first, $count);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDrawElements0 = ($this, $mode, $count, $type, $indices) => {
    cgxgbt_TeaGL20_glDrawElements($this, $mode, $count, $type, $indices);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glEnable = ($this, $cap) => {
    cgxgbt_TeaGL20_glEnable($this, $cap);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetIntegerv = ($this, $pname, $params) => {
    cgxgbt_TeaGL30_glGetIntegerv($this, $pname, $params);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetString = ($this, $name) => {
    return cgxgbt_TeaGL20_glGetString($this, $name);
},
cgxgbt_TeaGL30Debug_glPixelStorei = ($this, $pname, $param) => {
    cgxgbt_TeaGL20_glPixelStorei($this, $pname, $param);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glScissor = ($this, $x, $y, $width, $height) => {
    cgxgbt_TeaGL20_glScissor($this, $x, $y, $width, $height);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glTexImage2D = ($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) => {
    cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glTexParameterf = ($this, $target, $pname, $param) => {
    cgxgbt_TeaGL20_glTexParameterf($this, $target, $pname, $param);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glViewport = ($this, $x, $y, $width, $height) => {
    cgxgbt_TeaGL20_glViewport($this, $x, $y, $width, $height);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glAttachShader = ($this, $program, $shader) => {
    cgxgbt_TeaGL20_glAttachShader($this, $program, $shader);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBindBuffer = ($this, $target, $buffer) => {
    cgxgbt_TeaGL20_glBindBuffer($this, $target, $buffer);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBlendFuncSeparate = ($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) => {
    cgxgbt_TeaGL20_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBufferData = ($this, $target, $size, $data, $usage) => {
    cgxgbt_TeaGL20_glBufferData($this, $target, $size, $data, $usage);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glBufferSubData = ($this, $target, $offset, $size, $data) => {
    cgxgbt_TeaGL20_glBufferSubData($this, $target, $offset, $size, $data);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glCompileShader = ($this, $shader) => {
    cgxgbt_TeaGL20_glCompileShader($this, $shader);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glCreateProgram = $this => {
    let $program;
    $program = cgxgbt_TeaGL20_glCreateProgram($this);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $program;
},
cgxgbt_TeaGL30Debug_glCreateShader = ($this, $type) => {
    let $shader;
    $shader = cgxgbt_TeaGL20_glCreateShader($this, $type);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $shader;
},
cgxgbt_TeaGL30Debug_glDeleteProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glDeleteProgram($this, $program);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDeleteShader = ($this, $shader) => {
    cgxgbt_TeaGL20_glDeleteShader($this, $shader);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glDisableVertexAttribArray = ($this, $index) => {
    cgxgbt_TeaGL20_glDisableVertexAttribArray($this, $index);
    cgxgbt_TeaGL30Debug_checkError($this);
};
let cgxgbt_TeaGL30Debug_glDrawElements = ($this, $mode, $count, $type, $indices) => {
    cgxgbt_TeaGL20_glDrawElements0($this, $mode, $count, $type, $indices);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glEnableVertexAttribArray = ($this, $index) => {
    cgxgbt_TeaGL20_glEnableVertexAttribArray($this, $index);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGenerateMipmap = ($this, $target) => {
    cgxgbt_TeaGL20_glGenerateMipmap($this, $target);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetActiveAttrib = ($this, $program, $index, $size, $type) => {
    let $attrib;
    $attrib = cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $attrib;
},
cgxgbt_TeaGL30Debug_glGetActiveUniform = ($this, $program, $index, $size, $type) => {
    let $uniform;
    $uniform = cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $uniform;
},
cgxgbt_TeaGL30Debug_glGetAttribLocation = ($this, $program, $name) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_glGetAttribLocation($this, $program, $name);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $loc;
},
cgxgbt_TeaGL30Debug_glGetFloatv = ($this, $pname, $params) => {
    cgxgbt_TeaGL30_glGetFloatv($this, $pname, $params);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetProgramiv = ($this, $program, $pname, $params) => {
    cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetProgramInfoLog = ($this, $program) => {
    let $info;
    $info = cgxgbt_TeaGL20_glGetProgramInfoLog($this, $program);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $info;
},
cgxgbt_TeaGL30Debug_glGetShaderiv = ($this, $shader, $pname, $params) => {
    cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glGetShaderInfoLog = ($this, $shader) => {
    let $info;
    $info = cgxgbt_TeaGL20_glGetShaderInfoLog($this, $shader);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $info;
},
cgxgbt_TeaGL30Debug_glGetUniformLocation = ($this, $program, $name) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_glGetUniformLocation($this, $program, $name);
    cgxgbt_TeaGL30Debug_checkError($this);
    return $loc;
},
cgxgbt_TeaGL30Debug_glLinkProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glLinkProgram($this, $program);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glShaderSource = ($this, $shader, $source) => {
    cgxgbt_TeaGL20_glShaderSource($this, $shader, $source);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glTexParameteri = ($this, $target, $pname, $param) => {
    cgxgbt_TeaGL20_glTexParameteri($this, $target, $pname, $param);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glUniform1f = ($this, $location, $x) => {
    cgxgbt_TeaGL20_glUniform1f($this, $location, $x);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glUniform1i = ($this, $location, $x) => {
    cgxgbt_TeaGL20_glUniform1i($this, $location, $x);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glUniform2f = ($this, $location, $x, $y) => {
    cgxgbt_TeaGL20_glUniform2f($this, $location, $x, $y);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glUniform3f = ($this, $location, $x, $y, $z) => {
    cgxgbt_TeaGL20_glUniform3f($this, $location, $x, $y, $z);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glUniform4f = ($this, $location, $x, $y, $z, $w) => {
    cgxgbt_TeaGL20_glUniform4f($this, $location, $x, $y, $z, $w);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glUseProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glUseProgram($this, $program);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glVertexAttrib2f = ($this, $indx, $x, $y) => {
    cgxgbt_TeaGL20_glVertexAttrib2f($this, $indx, $x, $y);
    cgxgbt_TeaGL30Debug_checkError($this);
},
cgxgbt_TeaGL30Debug_glVertexAttribPointer = ($this, $indx, $size, $type, $normalized, $stride, $ptr_0) => {
    cgxgbt_TeaGL20_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0);
    cgxgbt_TeaGL30Debug_checkError($this);
},
jur_AbstractCharClass$LazyJavaTitleCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaTitleCase__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaTitleCase__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaTitleCase();
    jur_AbstractCharClass$LazyJavaTitleCase__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaTitleCase_computeValue = $this => {
    return jur_AbstractCharClass$LazyJavaTitleCase$1__init_0($this);
};
function cbggg_IndexBufferObjectSubData() {
    let a = this; jl_Object.call(a);
    a.$buffer4 = null;
    a.$byteBuffer0 = null;
    a.$bufferHandle0 = 0;
    a.$isDirect2 = 0;
    a.$isDirty0 = 0;
    a.$isBound2 = 0;
    a.$usage4 = 0;
}
let cbggg_IndexBufferObjectSubData__init_ = ($this, $isStatic, $maxIndices) => {
    jl_Object__init_($this);
    $this.$isDirty0 = 1;
    $this.$isBound2 = 0;
    $this.$byteBuffer0 = cbgu_BufferUtils_newByteBuffer($maxIndices * 2 | 0);
    $this.$isDirect2 = 1;
    $this.$usage4 = !$isStatic ? 35048 : 35044;
    $this.$buffer4 = $this.$byteBuffer0.$asShortBuffer();
    $this.$buffer4.$flip();
    $this.$byteBuffer0.$flip();
    $this.$bufferHandle0 = cbggg_IndexBufferObjectSubData_createBufferObject($this);
},
cbggg_IndexBufferObjectSubData__init_0 = (var_0, var_1) => {
    let var_2 = new cbggg_IndexBufferObjectSubData();
    cbggg_IndexBufferObjectSubData__init_(var_2, var_0, var_1);
    return var_2;
},
cbggg_IndexBufferObjectSubData_createBufferObject = $this => {
    let $result;
    $result = cbg_Gdx_gl20.$glGenBuffer();
    cbg_Gdx_gl20.$glBindBuffer(34963, $result);
    cbg_Gdx_gl20.$glBufferData(34963, jn_Buffer_capacity($this.$byteBuffer0), null, $this.$usage4);
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    return $result;
},
cbggg_IndexBufferObjectSubData_getNumIndices = $this => {
    return jn_Buffer_limit($this.$buffer4);
},
cbggg_IndexBufferObjectSubData_getNumMaxIndices = $this => {
    return jn_Buffer_capacity($this.$buffer4);
},
cbggg_IndexBufferObjectSubData_setIndices = ($this, $indices, $offset, $count) => {
    $this.$isDirty0 = 1;
    $this.$buffer4.$clear0();
    $this.$buffer4.$put9($indices, $offset, $count);
    $this.$buffer4.$flip();
    $this.$byteBuffer0.$position(0);
    $this.$byteBuffer0.$limit($count << 1);
    if ($this.$isBound2) {
        cbg_Gdx_gl20.$glBufferSubData(34963, 0, jn_Buffer_limit($this.$byteBuffer0), $this.$byteBuffer0);
        $this.$isDirty0 = 0;
    }
},
cbggg_IndexBufferObjectSubData_getBuffer = ($this, $forWriting) => {
    $this.$isDirty0 = $this.$isDirty0 | $forWriting;
    return $this.$buffer4;
},
cbggg_IndexBufferObjectSubData_bind = $this => {
    if (!$this.$bufferHandle0)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(419)));
    cbg_Gdx_gl20.$glBindBuffer(34963, $this.$bufferHandle0);
    if ($this.$isDirty0) {
        $this.$byteBuffer0.$limit(jn_Buffer_limit($this.$buffer4) * 2 | 0);
        cbg_Gdx_gl20.$glBufferSubData(34963, 0, jn_Buffer_limit($this.$byteBuffer0), $this.$byteBuffer0);
        $this.$isDirty0 = 0;
    }
    $this.$isBound2 = 1;
},
cbggg_IndexBufferObjectSubData_unbind = $this => {
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$isBound2 = 0;
},
cbggg_IndexBufferObjectSubData_dispose = $this => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34963, 0);
    $gl.$glDeleteBuffer($this.$bufferHandle0);
    $this.$bufferHandle0 = 0;
},
jur_PreviousMatch = $rt_classWithoutFields(jur_AbstractSet),
jur_PreviousMatch__init_ = $this => {
    jur_AbstractSet__init_($this);
},
jur_PreviousMatch__init_0 = () => {
    let var_0 = new jur_PreviousMatch();
    jur_PreviousMatch__init_(var_0);
    return var_0;
},
jur_PreviousMatch_matches = ($this, $stringIndex, $testString, $matchResult) => {
    if ($stringIndex != $matchResult.$getPreviousMatchEnd())
        return (-1);
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_PreviousMatch_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_PreviousMatch_getName = $this => {
    return $rt_s(420);
},
cbgggs_DefaultShader$Setters$17 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$17__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$17__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$17();
    cbgggs_DefaultShader$Setters$17__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$17_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let var$5, var$6, $unit;
    var$5 = $shader.$context.$textureBinder;
    cbggga_TextureAttribute_$callClinit();
    var$6 = cbggga_TextureAttribute_Specular;
    $unit = var$5.$bind1((cbggg_Attributes_get($combinedAttributes, var$6)).$textureDescription);
    cbgggs_BaseShader_set0($shader, $inputID, $unit);
},
cbgggs_DefaultShader$Setters$18 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$18__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$18__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$18();
    cbgggs_DefaultShader$Setters$18__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$18_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $ta;
    cbggga_TextureAttribute_$callClinit();
    $ta = cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Specular);
    cbgggs_BaseShader_set($shader, $inputID, $ta.$offsetU, $ta.$offsetV, $ta.$scaleU, $ta.$scaleV);
},
cbgggs_DefaultShader$Setters$15 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$15__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$15__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$15();
    cbgggs_DefaultShader$Setters$15__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$15_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    let $ta;
    cbggga_TextureAttribute_$callClinit();
    $ta = cbggg_Attributes_get($combinedAttributes, cbggga_TextureAttribute_Diffuse);
    cbgggs_BaseShader_set($shader, $inputID, $ta.$offsetU, $ta.$offsetV, $ta.$scaleU, $ta.$scaleV);
},
cbgggs_DefaultShader$Setters$16 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$16__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$16__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$16();
    cbgggs_DefaultShader$Setters$16__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$16_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbggga_ColorAttribute_$callClinit();
    cbgggs_BaseShader_set3($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, cbggga_ColorAttribute_Specular)).$color4);
},
jur_NonCapFSet = $rt_classWithoutFields(jur_FSet),
jur_NonCapFSet__init_ = ($this, $groupIndex) => {
    jur_FSet__init_($this, $groupIndex);
},
jur_NonCapFSet__init_0 = var_0 => {
    let var_1 = new jur_NonCapFSet();
    jur_NonCapFSet__init_(var_1, var_0);
    return var_1;
},
jur_NonCapFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $gr;
    $gr = $this.$getGroupIndex();
    $matchResult.$setConsumed($gr, $stringIndex - $matchResult.$getConsumed($gr) | 0);
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_NonCapFSet_getName = $this => {
    return $rt_s(421);
},
jur_NonCapFSet_hasConsumed = ($this, $mr) => {
    return 0;
},
otjc_JSPromise$Executor = $rt_classWithoutFields(0);
function cgxgbta_AssetLoadImpl$getFile$lambda$_2_0() {
    let a = this; jl_Object.call(a);
    a.$_017 = null;
    a.$_16 = null;
    a.$_24 = null;
}
let cgxgbta_AssetLoadImpl$getFile$lambda$_2_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_017 = var$1;
    var$0.$_16 = var$2;
    var$0.$_24 = var$3;
},
cgxgbta_AssetLoadImpl$getFile$lambda$_2_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbta_AssetLoadImpl$getFile$lambda$_2_0();
    cgxgbta_AssetLoadImpl$getFile$lambda$_2_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbta_AssetLoadImpl$getFile$lambda$_2_0_onExecute = (var$0, var$1, var$2) => {
    cgxgbta_AssetLoadImpl_lambda$getFile$0(var$0.$_017, var$0.$_16, var$0.$_24, var$1, var$2);
},
cgxgbta_AssetLoadImpl$getFile$lambda$_2_0_onExecute$exported$0 = (var$1, var$2, var$3) => {
    var$2 = otji_JS_functionAsObject(var$2, "accept");
    var$3 = otji_JS_functionAsObject(var$3, "accept");
    var$1.$onExecute(var$2, var$3);
},
cbgggs_DefaultShader$Setters$19 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$19__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$19__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$19();
    cbgggs_DefaultShader$Setters$19__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$19_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbggga_ColorAttribute_$callClinit();
    cbgggs_BaseShader_set3($shader, $inputID, (cbggg_Attributes_get($combinedAttributes, cbggga_ColorAttribute_Emissive)).$color4);
},
cbgm_MathUtils = $rt_classWithoutFields(),
cbgm_MathUtils_random = null,
cbgm_MathUtils_$callClinit = () => {
    cbgm_MathUtils_$callClinit = $rt_eraseClinit(cbgm_MathUtils);
    cbgm_MathUtils__clinit_();
},
cbgm_MathUtils_sinDeg = $degrees => {
    cbgm_MathUtils_$callClinit();
    cbgm_MathUtils$Sin_$callClinit();
    return cbgm_MathUtils$Sin_table.data[($degrees * 45.511112213134766 | 0) & 16383];
},
cbgm_MathUtils_cosDeg = $degrees => {
    cbgm_MathUtils_$callClinit();
    cbgm_MathUtils$Sin_$callClinit();
    return cbgm_MathUtils$Sin_table.data[(($degrees + 90.0) * 45.511112213134766 | 0) & 16383];
},
cbgm_MathUtils_nextPowerOfTwo = $value => {
    let var$2, var$3;
    cbgm_MathUtils_$callClinit();
    if (!$value)
        return 1;
    var$2 = $value + (-1) | 0;
    var$3 = var$2 | var$2 >> 1;
    var$3 = var$3 | var$3 >> 2;
    var$3 = var$3 | var$3 >> 4;
    var$3 = var$3 | var$3 >> 8;
    var$3 = var$3 | var$3 >> 16;
    return var$3 + 1 | 0;
},
cbgm_MathUtils_isPowerOfTwo = $value => {
    cbgm_MathUtils_$callClinit();
    return $value && !($value & ($value - 1 | 0)) ? 1 : 0;
},
cbgm_MathUtils_clamp = ($value, $min, $max) => {
    cbgm_MathUtils_$callClinit();
    if ($value < $min)
        return $min;
    if ($value <= $max)
        return $value;
    return $max;
},
cbgm_MathUtils_isZero = $value => {
    cbgm_MathUtils_$callClinit();
    return jl_Math_abs($value) > 9.999999974752427E-7 ? 0 : 1;
},
cbgm_MathUtils_isEqual = ($a, $b) => {
    cbgm_MathUtils_$callClinit();
    return jl_Math_abs($a - $b) > 9.999999974752427E-7 ? 0 : 1;
},
cbgm_MathUtils_isEqual0 = ($a, $b, $tolerance) => {
    cbgm_MathUtils_$callClinit();
    return jl_Math_abs($a - $b) > $tolerance ? 0 : 1;
},
cbgm_MathUtils__clinit_ = () => {
    cbgm_MathUtils_random = cbgm_RandomXS128__init_0();
};
function otjde_Registration() {
    let a = this; jl_Object.call(a);
    a.$target1 = null;
    a.$type9 = null;
    a.$listener1 = null;
    a.$useCapture = null;
}
let otjde_Registration__init_ = ($this, $target, $type, $listener, $useCapture) => {
    jl_Object__init_($this);
    $this.$target1 = $target;
    $this.$type9 = $type;
    $this.$listener1 = $listener;
    $this.$useCapture = $useCapture;
},
otjde_Registration__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new otjde_Registration();
    otjde_Registration__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
};
function jur_UCISupplCharSet() {
    jur_LeafSet.call(this);
    this.$ch2 = 0;
}
let jur_UCISupplCharSet__init_ = ($this, $ch) => {
    jur_LeafSet__init_($this);
    $this.$charCount0 = 2;
    $this.$ch2 = jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch));
},
jur_UCISupplCharSet__init_0 = var_0 => {
    let var_1 = new jur_UCISupplCharSet();
    jur_UCISupplCharSet__init_(var_1, var_0);
    return var_1;
},
jur_UCISupplCharSet_accepts = ($this, $strIndex, $testString) => {
    let var$3, $high, $low;
    var$3 = $strIndex + 1 | 0;
    $high = $testString.$charAt($strIndex);
    $low = $testString.$charAt(var$3);
    return $this.$ch2 != jl_Character_toLowerCase0(jl_Character_toUpperCase0(jl_Character_toCodePoint($high, $low))) ? (-1) : 2;
},
jur_UCISupplCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = jl_String__init_0(jl_Character_toChars($this.$ch2));
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(422)), var$1);
    return jl_StringBuilder_toString(var$2);
},
cbgggu_TextureBinder = $rt_classWithoutFields(0),
b_btDefaultCollisionConstructionInfo = $rt_classWithoutFields(bi_IDLBase),
b_btDefaultCollisionConstructionInfo_NULL = null,
b_btDefaultCollisionConstructionInfo_T_01 = null,
b_btDefaultCollisionConstructionInfo_T_02 = null,
b_btDefaultCollisionConstructionInfo_T_03 = null,
b_btDefaultCollisionConstructionInfo_$callClinit = () => {
    b_btDefaultCollisionConstructionInfo_$callClinit = $rt_eraseClinit(b_btDefaultCollisionConstructionInfo);
    b_btDefaultCollisionConstructionInfo__clinit_();
},
b_btDefaultCollisionConstructionInfo__init_ = $this => {
    let $addr;
    b_btDefaultCollisionConstructionInfo_$callClinit();
    bi_IDLBase__init_($this);
    $addr = b_btDefaultCollisionConstructionInfo_internal_native_create$js_body$_1();
    bi_IDLBase_internal_reset($this, $addr, 1);
},
b_btDefaultCollisionConstructionInfo__init_2 = () => {
    let var_0 = new b_btDefaultCollisionConstructionInfo();
    b_btDefaultCollisionConstructionInfo__init_(var_0);
    return var_0;
},
b_btDefaultCollisionConstructionInfo__init_0 = ($this, $b, $c) => {
    b_btDefaultCollisionConstructionInfo_$callClinit();
    bi_IDLBase__init_($this);
},
b_btDefaultCollisionConstructionInfo__init_1 = (var_0, var_1) => {
    let var_2 = new b_btDefaultCollisionConstructionInfo();
    b_btDefaultCollisionConstructionInfo__init_0(var_2, var_0, var_1);
    return var_2;
},
b_btDefaultCollisionConstructionInfo_native_new = () => {
    b_btDefaultCollisionConstructionInfo_$callClinit();
    return b_btDefaultCollisionConstructionInfo__init_1(0, 0);
},
b_btDefaultCollisionConstructionInfo__clinit_ = () => {
    b_btDefaultCollisionConstructionInfo_NULL = b_btDefaultCollisionConstructionInfo_native_new();
    b_btDefaultCollisionConstructionInfo_T_01 = b_btDefaultCollisionConstructionInfo_native_new();
    b_btDefaultCollisionConstructionInfo_T_02 = b_btDefaultCollisionConstructionInfo_native_new();
    b_btDefaultCollisionConstructionInfo_T_03 = b_btDefaultCollisionConstructionInfo_native_new();
},
b_btDefaultCollisionConstructionInfo_internal_native_create$js_body$_1 = () => {
    var jsObj = new bullet.btDefaultCollisionConstructionInfo();
    return bullet.getPointer(jsObj);
};
function cbgggu_TextureDescriptor() {
    let a = this; jl_Object.call(a);
    a.$texture = null;
    a.$minFilter0 = null;
    a.$magFilter0 = null;
    a.$uWrap = null;
    a.$vWrap = null;
}
let cbgggu_TextureDescriptor__init_0 = $this => {
    jl_Object__init_($this);
    $this.$texture = null;
},
cbgggu_TextureDescriptor__init_ = () => {
    let var_0 = new cbgggu_TextureDescriptor();
    cbgggu_TextureDescriptor__init_0(var_0);
    return var_0;
},
cbgggu_TextureDescriptor_set = ($this, $other) => {
    $this.$texture = $other.$texture;
    $this.$minFilter0 = $other.$minFilter0;
    $this.$magFilter0 = $other.$magFilter0;
    $this.$uWrap = $other.$uWrap;
    $this.$vWrap = $other.$vWrap;
},
cbgggu_TextureDescriptor_hashCode = $this => {
    let $result, var$2;
    $result = Long_fromInt($this.$texture === null ? 0 : $this.$texture.$glTarget);
    var$2 = Long_add(Long_mul(Long_fromInt(811), $result), Long_fromInt($this.$texture === null ? 0 : $this.$texture.$getTextureObjectHandle()));
    var$2 = Long_add(Long_mul(Long_fromInt(811), var$2), Long_fromInt($this.$minFilter0 === null ? 0 : cbgg_Texture$TextureFilter_getGLEnum($this.$minFilter0)));
    var$2 = Long_add(Long_mul(Long_fromInt(811), var$2), Long_fromInt($this.$magFilter0 === null ? 0 : cbgg_Texture$TextureFilter_getGLEnum($this.$magFilter0)));
    var$2 = Long_add(Long_mul(Long_fromInt(811), var$2), Long_fromInt($this.$uWrap === null ? 0 : cbgg_Texture$TextureWrap_getGLEnum($this.$uWrap)));
    var$2 = Long_add(Long_mul(Long_fromInt(811), var$2), Long_fromInt($this.$vWrap === null ? 0 : cbgg_Texture$TextureWrap_getGLEnum($this.$vWrap)));
    return Long_lo(Long_xor(var$2, Long_shr(var$2, 32)));
};
function cbggg_BitmapFont$BitmapFontData() {
    let a = this; jl_Object.call(a);
    a.$name7 = null;
    a.$imagePaths = null;
    a.$fontFile = null;
    a.$flipped = 0;
    a.$padTop1 = 0.0;
    a.$padRight1 = 0.0;
    a.$padBottom2 = 0.0;
    a.$padLeft1 = 0.0;
    a.$lineHeight = 0.0;
    a.$capHeight = 0.0;
    a.$ascent = 0.0;
    a.$descent = 0.0;
    a.$down = 0.0;
    a.$blankLineScale = 0.0;
    a.$scaleX = 0.0;
    a.$scaleY0 = 0.0;
    a.$markupEnabled = 0;
    a.$glyphs0 = null;
    a.$missingGlyph = null;
    a.$spaceXadvance = 0.0;
    a.$xHeight = 0.0;
    a.$breakChars = null;
    a.$xChars = null;
    a.$capChars = null;
}
let cbggg_BitmapFont$BitmapFontData__init_ = ($this, $fontFile, $flip) => {
    jl_Object__init_($this);
    $this.$capHeight = 1.0;
    $this.$blankLineScale = 1.0;
    $this.$scaleX = 1.0;
    $this.$scaleY0 = 1.0;
    $this.$glyphs0 = $rt_createArray($rt_arraycls(cbggg_BitmapFont$Glyph), 128);
    $this.$xHeight = 1.0;
    $this.$xChars = $rt_createCharArrayFromData([120, 101, 97, 111, 110, 115, 114, 99, 117, 109, 118, 119, 122]);
    $this.$capChars = $rt_createCharArrayFromData([77, 78, 66, 68, 67, 69, 70, 75, 65, 71, 72, 73, 74, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90]);
    $this.$fontFile = $fontFile;
    $this.$flipped = $flip;
    $this.$load2($fontFile, $flip);
},
cbggg_BitmapFont$BitmapFontData__init_0 = (var_0, var_1) => {
    let var_2 = new cbggg_BitmapFont$BitmapFontData();
    cbggg_BitmapFont$BitmapFontData__init_(var_2, var_0, var_1);
    return var_2;
},
cbggg_BitmapFont$BitmapFontData_load = ($this, $fontFile, $flip) => {
    let $reader, $line, var$5, $padding, var$7, $padY, $common, var$10, $baseLine, $pageCount, var$13, $p, $matcher, $id, $pageID, $ex, $fileName, $glyph, $tokens, $ch, $first, $second, $amount, $hasMetricsOverride, $overrideAscent, $overrideDescent, $overrideDown, $overrideCapHeight, $overrideLineHeight, $overrideSpaceXAdvance, $overrideXHeight, $spaceGlyph, $xadvanceGlyph, $xGlyph, var$37, $xChar, $capGlyph, $capChar, $page, var$42, var$43, $$je;
    if ($this.$imagePaths !== null)
        $rt_throw(jl_IllegalStateException__init_($rt_s(423)));
    $this.$name7 = $fontFile.$nameWithoutExtension();
    $reader = ji_BufferedReader__init_0(ji_InputStreamReader__init_3($fontFile.$read()), 512);
    a: {
        b: {
            try {
                $line = $reader.$readLine();
                if ($line === null)
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(424)));
                var$5 = $line.$substring0($line.$indexOf4($rt_s(425)) + 8 | 0);
                $padding = (var$5.$substring(0, var$5.$indexOf1(32))).$split2($rt_s(426), 4);
                var$7 = $padding.data;
                if (var$7.length != 4)
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(427)));
                $this.$padTop1 = jl_Integer_parseInt(var$7[0]);
                $this.$padRight1 = jl_Integer_parseInt(var$7[1]);
                $this.$padBottom2 = jl_Integer_parseInt(var$7[2]);
                $this.$padLeft1 = jl_Integer_parseInt(var$7[3]);
                $padY = $this.$padTop1 + $this.$padBottom2;
                var$5 = $reader.$readLine();
                if (var$5 === null)
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(428)));
                $common = var$5.$split2($rt_s(48), 9);
                var$7 = $common.data;
                var$10 = var$7.length;
                if (var$10 < 3)
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(429)));
                if (!var$7[1].$startsWith($rt_s(430)))
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(431)));
                $this.$lineHeight = jl_Integer_parseInt(var$7[1].$substring0(11));
                if (!var$7[2].$startsWith($rt_s(432)))
                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(433)));
                c: {
                    $baseLine = jl_Integer_parseInt(var$7[2].$substring0(5));
                    $pageCount = 1;
                    if (var$10 < 6)
                        var$13 = $pageCount;
                    else if (var$7[5] === null)
                        var$13 = $pageCount;
                    else if (!var$7[5].$startsWith($rt_s(434)))
                        var$13 = $pageCount;
                    else {
                        try {
                            var$13 = jl_Math_max(1, jl_Integer_parseInt(var$7[5].$substring0(6)));
                            $pageCount = var$13;
                            break c;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_NumberFormatException) {
                            } else {
                                throw $$e;
                            }
                        }
                        var$13 = $pageCount;
                    }
                }
                $this.$imagePaths = $rt_createArray(jl_String, var$13);
                $p = 0;
                d: {
                    e: {
                        f: {
                            while (true) {
                                if ($p >= var$13)
                                    break d;
                                var$5 = $reader.$readLine();
                                if (var$5 === null)
                                    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(435)));
                                g: {
                                    $matcher = jur_Pattern_matcher(jur_Pattern_compile($rt_s(436)), var$5);
                                    if (jur_Matcher_find($matcher)) {
                                        $id = jur_Matcher_group($matcher, 1);
                                        try {
                                            $pageID = jl_Integer_parseInt($id);
                                            if ($pageID != $p)
                                                break f;
                                            break g;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_NumberFormatException) {
                                                $ex = $$je;
                                                break e;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                }
                                var$5 = jur_Pattern_matcher(jur_Pattern_compile($rt_s(437)), var$5);
                                if (!jur_Matcher_find(var$5))
                                    break;
                                $fileName = jur_Matcher_group(var$5, 1);
                                $this.$imagePaths.data[$p] = ((($fontFile.$parent()).$child($fileName)).$path()).$replaceAll0($rt_s(438), $rt_s(32));
                                $p = $p + 1 | 0;
                            }
                            $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(439)));
                        }
                        try {
                            $rt_throw(cbgu_GdxRuntimeException__init_((((jl_StringBuilder__init_()).$append1($rt_s(440))).$append1($id)).$toString()));
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_NumberFormatException) {
                                $ex = $$je;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    $rt_throw(cbgu_GdxRuntimeException__init_2((((jl_StringBuilder__init_()).$append1($rt_s(441))).$append1($id)).$toString(), $ex));
                }
                $this.$descent = 0.0;
                h: {
                    while (true) {
                        var$5 = $reader.$readLine();
                        if (var$5 === null)
                            break;
                        if (var$5.$startsWith($rt_s(442)))
                            break h;
                        if (var$5.$startsWith($rt_s(443)))
                            break h;
                        if (!var$5.$startsWith($rt_s(444)))
                            continue;
                        $glyph = cbggg_BitmapFont$Glyph__init_();
                        $tokens = ju_StringTokenizer__init_(var$5, $rt_s(445));
                        $tokens.$nextToken();
                        $tokens.$nextToken();
                        $ch = jl_Integer_parseInt($tokens.$nextToken());
                        if ($ch <= 0)
                            $this.$missingGlyph = $glyph;
                        else {
                            if ($ch > 65535)
                                continue;
                            $this.$setGlyph($ch, $glyph);
                        }
                        $glyph.$id0 = $ch;
                        $tokens.$nextToken();
                        $glyph.$srcX = jl_Integer_parseInt($tokens.$nextToken());
                        $tokens.$nextToken();
                        $glyph.$srcY = jl_Integer_parseInt($tokens.$nextToken());
                        $tokens.$nextToken();
                        $glyph.$width2 = jl_Integer_parseInt($tokens.$nextToken());
                        $tokens.$nextToken();
                        $glyph.$height2 = jl_Integer_parseInt($tokens.$nextToken());
                        $tokens.$nextToken();
                        $glyph.$xoffset = jl_Integer_parseInt($tokens.$nextToken());
                        $tokens.$nextToken();
                        if ($flip)
                            $glyph.$yoffset = jl_Integer_parseInt($tokens.$nextToken());
                        else
                            $glyph.$yoffset =  -($glyph.$height2 + jl_Integer_parseInt($tokens.$nextToken()) | 0) | 0;
                        $tokens.$nextToken();
                        $glyph.$xadvance = jl_Integer_parseInt($tokens.$nextToken());
                        if ($tokens.$hasMoreTokens())
                            $tokens.$nextToken();
                        i: {
                            if ($tokens.$hasMoreTokens())
                                try {
                                    $glyph.$page = jl_Integer_parseInt($tokens.$nextToken());
                                    break i;
                                } catch ($$e) {
                                    $$je = $rt_wrapException($$e);
                                    if ($$je instanceof jl_NumberFormatException) {
                                    } else {
                                        throw $$e;
                                    }
                                }
                        }
                        if ($glyph.$width2 > 0 && $glyph.$height2 > 0)
                            $this.$descent = jl_Math_min0($baseLine + $glyph.$yoffset, $this.$descent);
                    }
                }
                $this.$descent = $this.$descent + $this.$padBottom2;
                j: {
                    while (true) {
                        var$5 = $reader.$readLine();
                        if (var$5 === null)
                            break;
                        if (!var$5.$startsWith($rt_s(446)))
                            break j;
                        $tokens = ju_StringTokenizer__init_(var$5, $rt_s(445));
                        $tokens.$nextToken();
                        $tokens.$nextToken();
                        $first = jl_Integer_parseInt($tokens.$nextToken());
                        $tokens.$nextToken();
                        $second = jl_Integer_parseInt($tokens.$nextToken());
                        if ($first < 0)
                            continue;
                        if ($first > 65535)
                            continue;
                        if ($second < 0)
                            continue;
                        if ($second > 65535)
                            continue;
                        $glyph = $this.$getGlyph($first & 65535);
                        $tokens.$nextToken();
                        $amount = jl_Integer_parseInt($tokens.$nextToken());
                        if ($glyph !== null)
                            $glyph.$setKerning($second, $amount);
                    }
                }
                $hasMetricsOverride = 0;
                $overrideAscent = 0.0;
                $overrideDescent = 0.0;
                $overrideDown = 0.0;
                $overrideCapHeight = 0.0;
                $overrideLineHeight = 0.0;
                $overrideSpaceXAdvance = 0.0;
                $overrideXHeight = 0.0;
                if (var$5 !== null && var$5.$startsWith($rt_s(443))) {
                    $hasMetricsOverride = 1;
                    $tokens = ju_StringTokenizer__init_(var$5, $rt_s(445));
                    $tokens.$nextToken();
                    $tokens.$nextToken();
                    $overrideAscent = jl_Float_parseFloat($tokens.$nextToken());
                    $tokens.$nextToken();
                    $overrideDescent = jl_Float_parseFloat($tokens.$nextToken());
                    $tokens.$nextToken();
                    $overrideDown = jl_Float_parseFloat($tokens.$nextToken());
                    $tokens.$nextToken();
                    $overrideCapHeight = jl_Float_parseFloat($tokens.$nextToken());
                    $tokens.$nextToken();
                    $overrideLineHeight = jl_Float_parseFloat($tokens.$nextToken());
                    $tokens.$nextToken();
                    $overrideSpaceXAdvance = jl_Float_parseFloat($tokens.$nextToken());
                    $tokens.$nextToken();
                    $overrideXHeight = jl_Float_parseFloat($tokens.$nextToken());
                }
                $spaceGlyph = $this.$getGlyph(32);
                if ($spaceGlyph === null) {
                    $spaceGlyph = cbggg_BitmapFont$Glyph__init_();
                    $spaceGlyph.$id0 = 32;
                    $xadvanceGlyph = $this.$getGlyph(108);
                    if ($xadvanceGlyph === null)
                        $xadvanceGlyph = $this.$getFirstGlyph();
                    $spaceGlyph.$xadvance = $xadvanceGlyph.$xadvance;
                    $this.$setGlyph(32, $spaceGlyph);
                }
                if (!$spaceGlyph.$width2) {
                    $spaceGlyph.$width2 = $this.$padLeft1 + $spaceGlyph.$xadvance + $this.$padRight1 | 0;
                    $spaceGlyph.$xoffset =  -$this.$padLeft1 | 0;
                }
                $this.$spaceXadvance = $spaceGlyph.$xadvance;
                $xGlyph = null;
                var$7 = $this.$xChars.data;
                var$10 = var$7.length;
                var$37 = 0;
                k: {
                    while (var$37 < var$10) {
                        $xChar = var$7[var$37];
                        $xGlyph = $this.$getGlyph($xChar);
                        if ($xGlyph !== null)
                            break k;
                        var$37 = var$37 + 1 | 0;
                    }
                }
                if ($xGlyph === null)
                    $xGlyph = $this.$getFirstGlyph();
                $this.$xHeight = $xGlyph.$height2 - $padY;
                $capGlyph = null;
                var$7 = $this.$capChars.data;
                var$13 = var$7.length;
                var$10 = 0;
                l: {
                    while (var$10 < var$13) {
                        $capChar = var$7[var$10];
                        $capGlyph = $this.$getGlyph($capChar);
                        if ($capGlyph !== null)
                            break l;
                        var$10 = var$10 + 1 | 0;
                    }
                }
                if ($capGlyph !== null)
                    $this.$capHeight = $capGlyph.$height2;
                else {
                    var$7 = $this.$glyphs0.data;
                    var$13 = var$7.length;
                    var$10 = 0;
                    while (var$10 < var$13) {
                        m: {
                            $page = var$7[var$10];
                            if ($page !== null) {
                                var$42 = $page.data;
                                var$37 = var$42.length;
                                var$43 = 0;
                                while (true) {
                                    if (var$43 >= var$37)
                                        break m;
                                    $glyph = var$42[var$43];
                                    if ($glyph !== null && $glyph.$height2 && $glyph.$width2)
                                        $this.$capHeight = jl_Math_max0($this.$capHeight, $glyph.$height2);
                                    var$43 = var$43 + 1 | 0;
                                }
                            }
                        }
                        var$10 = var$10 + 1 | 0;
                    }
                }
                $this.$capHeight = $this.$capHeight - $padY;
                $this.$ascent = $baseLine - $this.$capHeight;
                $this.$down =  -$this.$lineHeight;
                if ($flip) {
                    $this.$ascent =  -$this.$ascent;
                    $this.$down =  -$this.$down;
                }
                if ($hasMetricsOverride) {
                    $this.$ascent = $overrideAscent;
                    $this.$descent = $overrideDescent;
                    $this.$down = $overrideDown;
                    $this.$capHeight = $overrideCapHeight;
                    $this.$lineHeight = $overrideLineHeight;
                    $this.$spaceXadvance = $overrideSpaceXAdvance;
                    $this.$xHeight = $overrideXHeight;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Exception) {
                    $ex = $$je;
                    break b;
                } else{
                    var$5 = $$je;
                    break a;
                }
            }
            cbgu_StreamUtils_closeQuietly($reader);
            return;
        }
        try {
            $rt_throw(cbgu_GdxRuntimeException__init_2((((jl_StringBuilder__init_()).$append1($rt_s(447))).$append($fontFile)).$toString(), $ex));
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;

        }
    }
    cbgu_StreamUtils_closeQuietly($reader);
    $rt_throw(var$5);
},
cbggg_BitmapFont$BitmapFontData_setGlyphRegion = ($this, $glyph, $region) => {
    let $texture, $invTexWidth, $invTexHeight, $offsetX, $offsetY, $u, $v, $regionWidth, $regionHeight, $atlasRegion, $x, $x2, $y, $y2, var$17, $amount;
    $texture = $region.$getTexture();
    $invTexWidth = 1.0 / $texture.$getWidth0();
    $invTexHeight = 1.0 / $texture.$getHeight0();
    $offsetX = 0.0;
    $offsetY = 0.0;
    $u = $region.$u;
    $v = $region.$v;
    $regionWidth = $region.$getRegionWidth();
    $regionHeight = $region.$getRegionHeight();
    if ($region instanceof cbggg_TextureAtlas$AtlasRegion) {
        $atlasRegion = $region;
        $offsetX = $atlasRegion.$offsetX;
        $offsetY = ($atlasRegion.$originalHeight0 - $atlasRegion.$packedHeight | 0) - $atlasRegion.$offsetY;
    }
    $x = $glyph.$srcX;
    $x2 = $glyph.$srcX + $glyph.$width2 | 0;
    $y = $glyph.$srcY;
    $y2 = $glyph.$srcY + $glyph.$height2 | 0;
    if ($offsetX <= 0.0)
        $regionWidth = $x2;
    else {
        $x = $x - $offsetX;
        if ($x < 0.0) {
            $glyph.$width2 = $glyph.$width2 + $x | 0;
            $glyph.$xoffset = $glyph.$xoffset - $x | 0;
            $x = 0.0;
        }
        var$17 = $x2 - $offsetX;
        if (var$17 <= $regionWidth)
            $regionWidth = var$17;
        else
            $glyph.$width2 = $glyph.$width2 - (var$17 - $regionWidth) | 0;
    }
    if ($offsetY <= 0.0)
        $regionHeight = $y2;
    else {
        $y = $y - $offsetY;
        if ($y < 0.0) {
            $glyph.$height2 = $glyph.$height2 + $y | 0;
            if ($glyph.$height2 < 0)
                $glyph.$height2 = 0;
            $y = 0.0;
        }
        var$17 = $y2 - $offsetY;
        if (var$17 <= $regionHeight)
            $regionHeight = var$17;
        else {
            $amount = var$17 - $regionHeight;
            $glyph.$height2 = $glyph.$height2 - $amount | 0;
            $glyph.$yoffset = $glyph.$yoffset + $amount | 0;
        }
    }
    $glyph.$u0 = $u + $x * $invTexWidth;
    $glyph.$u20 = $u + $regionWidth * $invTexWidth;
    if (!$this.$flipped) {
        $glyph.$v2 = $v + $y * $invTexHeight;
        $glyph.$v0 = $v + $regionHeight * $invTexHeight;
    } else {
        $glyph.$v0 = $v + $y * $invTexHeight;
        $glyph.$v2 = $v + $regionHeight * $invTexHeight;
    }
},
cbggg_BitmapFont$BitmapFontData_setGlyph = ($this, $ch, $glyph) => {
    let var$3, var$4, $page;
    var$3 = $this.$glyphs0.data;
    var$4 = $ch / 512 | 0;
    $page = var$3[var$4];
    if ($page === null) {
        var$3 = $this.$glyphs0.data;
        $page = $rt_createArray(cbggg_BitmapFont$Glyph, 512);
        var$3[var$4] = $page;
    }
    $page.data[$ch & 511] = $glyph;
},
cbggg_BitmapFont$BitmapFontData_getFirstGlyph = $this => {
    let var$1, var$2, var$3, $page, var$5, var$6, var$7, $glyph;
    var$1 = $this.$glyphs0.data;
    var$2 = var$1.length;
    var$3 = 0;
    a: while (true) {
        if (var$3 >= var$2)
            $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(448)));
        b: {
            $page = var$1[var$3];
            if ($page !== null) {
                var$5 = $page.data;
                var$6 = var$5.length;
                var$7 = 0;
                while (true) {
                    if (var$7 >= var$6)
                        break b;
                    $glyph = var$5[var$7];
                    if ($glyph !== null && $glyph.$height2 && $glyph.$width2)
                        break a;
                    var$7 = var$7 + 1 | 0;
                }
            }
        }
        var$3 = var$3 + 1 | 0;
    }
    return $glyph;
},
cbggg_BitmapFont$BitmapFontData_getGlyph = ($this, $ch) => {
    let $page;
    $page = $this.$glyphs0.data[$ch / 512 | 0];
    if ($page === null)
        return null;
    return $page.data[$ch & 511];
},
cbggg_BitmapFont$BitmapFontData_getGlyphs = ($this, $run, $str, $start, $end, $lastGlyph) => {
    let $max, $markupEnabled, $scaleX, $glyphs, $xAdvances, var$11, $ch, $glyph, $lastGlyphWidth;
    $max = $end - $start | 0;
    if (!$max)
        return;
    $markupEnabled = $this.$markupEnabled;
    $scaleX = $this.$scaleX;
    $glyphs = $run.$glyphs;
    $xAdvances = $run.$xAdvances;
    $glyphs.$ensureCapacity1($max);
    $run.$xAdvances.$ensureCapacity2($max + 1 | 0);
    while (true) {
        a: {
            var$11 = $start + 1 | 0;
            $ch = $str.$charAt($start);
            if ($ch != 13) {
                $glyph = $this.$getGlyph($ch);
                if ($glyph === null) {
                    if ($this.$missingGlyph === null)
                        break a;
                    $glyph = $this.$missingGlyph;
                }
                $glyphs.$add1($glyph);
                $xAdvances.$add8($lastGlyph !== null ? ($lastGlyph.$xadvance + $lastGlyph.$getKerning($ch) | 0) * $scaleX : $glyph.$fixedWidth ? 0.0 : ( -$glyph.$xoffset | 0) * $scaleX - $this.$padLeft1);
                if (!$markupEnabled)
                    $lastGlyph = $glyph;
                else if ($ch != 91)
                    $lastGlyph = $glyph;
                else if (var$11 >= $end)
                    $lastGlyph = $glyph;
                else if ($str.$charAt(var$11) != 91)
                    $lastGlyph = $glyph;
                else {
                    var$11 = var$11 + 1 | 0;
                    $lastGlyph = $glyph;
                }
            }
        }
        if (var$11 >= $end)
            break;
        $start = var$11;
    }
    if ($lastGlyph !== null) {
        $lastGlyphWidth = $lastGlyph.$fixedWidth ? $lastGlyph.$xadvance * $scaleX : ($lastGlyph.$width2 + $lastGlyph.$xoffset | 0) * $scaleX - $this.$padRight1;
        $xAdvances.$add8($lastGlyphWidth);
    }
},
cbggg_BitmapFont$BitmapFontData_getWrapIndex = ($this, $glyphs, $start) => {
    let $i, $glyphsItems, var$5, $ch, var$7;
    $i = $start - 1 | 0;
    $glyphsItems = $glyphs.$items;
    var$5 = $glyphsItems.data;
    $ch = var$5[$i].$id0 & 65535;
    if ($this.$isWhitespace($ch))
        return $i;
    if ($this.$isBreakChar($ch))
        $i = $i + (-1) | 0;
    a: {
        while ($i > 0) {
            var$7 = var$5[$i].$id0 & 65535;
            if ($this.$isWhitespace(var$7))
                break a;
            if ($this.$isBreakChar(var$7))
                break a;
            $i = $i + (-1) | 0;
        }
        return 0;
    }
    return $i + 1 | 0;
},
cbggg_BitmapFont$BitmapFontData_isBreakChar = ($this, $c) => {
    let var$2, var$3, var$4, $br;
    if ($this.$breakChars === null)
        return 0;
    var$2 = $this.$breakChars.data;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $br = var$2[var$4];
        if ($c == $br)
            return 1;
        var$4 = var$4 + 1 | 0;
    }
    return 0;
},
cbggg_BitmapFont$BitmapFontData_isWhitespace = ($this, $c) => {
    switch ($c) {
        case 9:
        case 10:
        case 13:
        case 32:
            break;
        default:
            return 0;
    }
    return 1;
};
function jur_AbstractCharClass$LazyRange() {
    let a = this; jur_AbstractCharClass$LazyCharClass.call(a);
    a.$start5 = 0;
    a.$end6 = 0;
}
let jur_AbstractCharClass$LazyRange__init_0 = ($this, $start, $end) => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
    $this.$start5 = $start;
    $this.$end6 = $end;
},
jur_AbstractCharClass$LazyRange__init_ = (var_0, var_1) => {
    let var_2 = new jur_AbstractCharClass$LazyRange();
    jur_AbstractCharClass$LazyRange__init_0(var_2, var_0, var_1);
    return var_2;
},
jur_AbstractCharClass$LazyRange_computeValue = $this => {
    let $chCl;
    $chCl = (jur_CharClass__init_()).$add0($this.$start5, $this.$end6);
    return $chCl;
},
jur_AltQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_AltQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_LeafQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_AltQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AltQuantifierSet();
    jur_AltQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    $shift = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($shift < 0)
        $shift = $this.$next1.$matches($stringIndex, $testString, $matchResult);
    return $shift;
},
jur_AltQuantifierSet_setNext = ($this, $next) => {
    jur_AbstractSet_setNext($this, $next);
    $this.$innerSet.$setNext($next);
};
function cbggg_Gdx2DPixmap() {
    jl_Object.call(this);
    this.$nativePixmap0 = null;
}
let cbggg_Gdx2DPixmap_toGlFormat = $format => {
    let var$2, var$3;
    switch ($format) {
        case 1:
            break;
        case 2:
            return 6410;
        case 3:
        case 5:
            return 6407;
        case 4:
        case 6:
            return 6408;
        default:
            var$2 = new cbgu_GdxRuntimeException;
            var$3 = jl_StringBuilder__init_();
            jl_StringBuilder_append0(jl_StringBuilder_append(var$3, $rt_s(449)), $format);
            cbgu_GdxRuntimeException__init_0(var$2, jl_StringBuilder_toString(var$3));
            $rt_throw(var$2);
    }
    return 6406;
},
cbggg_Gdx2DPixmap_toGlType = $format => {
    let var$2, var$3;
    switch ($format) {
        case 1:
        case 2:
        case 3:
        case 4:
            break;
        case 5:
            return 33635;
        case 6:
            return 32819;
        default:
            var$2 = new cbgu_GdxRuntimeException;
            var$3 = jl_StringBuilder__init_();
            jl_StringBuilder_append0(jl_StringBuilder_append(var$3, $rt_s(449)), $format);
            cbgu_GdxRuntimeException__init_0(var$2, jl_StringBuilder_toString(var$3));
            $rt_throw(var$2);
    }
    return 5121;
},
cbggg_Gdx2DPixmap__init_0 = ($this, $encodedData, $offset, $len, $requestedFormat) => {
    jl_Object__init_($this);
    $this.$nativePixmap0 = cbggg_Gdx2DPixmapNative__init_2($encodedData, $offset, $len, $requestedFormat);
},
cbggg_Gdx2DPixmap__init_2 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbggg_Gdx2DPixmap();
    cbggg_Gdx2DPixmap__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbggg_Gdx2DPixmap__init_ = ($this, $width, $height, $format) => {
    jl_Object__init_($this);
    $this.$nativePixmap0 = cbggg_Gdx2DPixmapNative__init_1($width, $height, $format);
},
cbggg_Gdx2DPixmap__init_1 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_Gdx2DPixmap();
    cbggg_Gdx2DPixmap__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_Gdx2DPixmap_dispose = $this => {
    $this.$nativePixmap0.$dispose();
},
cbggg_Gdx2DPixmap_clear = ($this, $color) => {
    $this.$nativePixmap0.$clear3($color);
},
cbggg_Gdx2DPixmap_drawPixmap = ($this, $src, $srcX, $srcY, $dstX, $dstY, $width, $height) => {
    $this.$nativePixmap0.$drawPixmap1($src.$nativePixmap0.$basePtr, $srcX, $srcY, $dstX, $dstY, $width, $height);
},
cbggg_Gdx2DPixmap_drawPixmap0 = ($this, $src, $srcX, $srcY, $srcWidth, $srcHeight, $dstX, $dstY, $dstWidth, $dstHeight) => {
    $this.$nativePixmap0.$drawPixmap2($src.$nativePixmap0.$basePtr, $srcX, $srcY, $srcWidth, $srcHeight, $dstX, $dstY, $dstWidth, $dstHeight);
},
cbggg_Gdx2DPixmap_setBlend = ($this, $blend) => {
    $this.$nativePixmap0.$setBlend($blend);
},
cbggg_Gdx2DPixmap_getBuffer = $this => {
    return $this.$nativePixmap0.$getBuffer();
},
cbggg_Gdx2DPixmap_getHeight = $this => {
    return $this.$nativePixmap0.$height5;
},
cbggg_Gdx2DPixmap_getWidth = $this => {
    return $this.$nativePixmap0.$width4;
},
cbggg_Gdx2DPixmap_getFormat = $this => {
    return $this.$nativePixmap0.$format;
},
cbggg_Gdx2DPixmap_getGLInternalFormat = $this => {
    return cbggg_Gdx2DPixmap_toGlFormat($this.$nativePixmap0.$format);
},
cbggg_Gdx2DPixmap_getGLFormat = $this => {
    return $this.$getGLInternalFormat();
},
cbggg_Gdx2DPixmap_getGLType = $this => {
    return cbggg_Gdx2DPixmap_toGlType($this.$nativePixmap0.$format);
},
cbgm_Interpolation$ExpIn = $rt_classWithoutFields(cbgm_Interpolation$Exp),
cbgm_Interpolation$ExpIn__init_0 = ($this, $value, $power) => {
    cbgm_Interpolation$Exp__init_($this, $value, $power);
},
cbgm_Interpolation$ExpIn__init_ = (var_0, var_1) => {
    let var_2 = new cbgm_Interpolation$ExpIn();
    cbgm_Interpolation$ExpIn__init_0(var_2, var_0, var_1);
    return var_2;
};
function jur_AbstractCharClass$LazyJavaLowerCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$054 = null;
}
let jur_AbstractCharClass$LazyJavaLowerCase$1__init_ = ($this, $this$0) => {
    $this.$this$054 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaLowerCase$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaLowerCase$1();
    jur_AbstractCharClass$LazyJavaLowerCase$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaLowerCase$1_contains = ($this, $ch) => {
    return jl_Character_isLowerCase($ch);
};
function cbgg_Camera() {
    let a = this; jl_Object.call(a);
    a.$position8 = null;
    a.$direction = null;
    a.$up = null;
    a.$projection = null;
    a.$view = null;
    a.$combined = null;
    a.$invProjectionView = null;
    a.$near = 0.0;
    a.$far = 0.0;
    a.$viewportWidth = 0.0;
    a.$viewportHeight = 0.0;
    a.$frustum = null;
    a.$tmpVec = null;
    a.$ray = null;
}
let cbgg_Camera__init_ = $this => {
    jl_Object__init_($this);
    $this.$position8 = cbgm_Vector3__init_();
    $this.$direction = cbgm_Vector3__init_0(0.0, 0.0, (-1.0));
    $this.$up = cbgm_Vector3__init_0(0.0, 1.0, 0.0);
    $this.$projection = cbgm_Matrix4__init_();
    $this.$view = cbgm_Matrix4__init_();
    $this.$combined = cbgm_Matrix4__init_();
    $this.$invProjectionView = cbgm_Matrix4__init_();
    $this.$near = 1.0;
    $this.$far = 100.0;
    $this.$viewportWidth = 0.0;
    $this.$viewportHeight = 0.0;
    $this.$frustum = cbgm_Frustum__init_0();
    $this.$tmpVec = cbgm_Vector3__init_();
    $this.$ray = cbgmc_Ray__init_0(cbgm_Vector3__init_(), cbgm_Vector3__init_());
},
cbgg_Camera_lookAt = ($this, $x, $y, $z) => {
    let $dot;
    (($this.$tmpVec.$set8($x, $y, $z)).$sub($this.$position8)).$nor0();
    if (!$this.$tmpVec.$isZero()) {
        $dot = $this.$tmpVec.$dot($this.$up);
        if (jl_Math_abs($dot - 1.0) < 9.999999717180685E-10)
            ($this.$up.$set7($this.$direction)).$scl((-1.0));
        else if (jl_Math_abs($dot + 1.0) < 9.999999717180685E-10)
            $this.$up.$set7($this.$direction);
        $this.$direction.$set7($this.$tmpVec);
        $this.$normalizeUp();
    }
},
cbgg_Camera_normalizeUp = $this => {
    ($this.$tmpVec.$set7($this.$direction)).$crs($this.$up);
    (($this.$up.$set7($this.$tmpVec)).$crs($this.$direction)).$nor0();
},
cbgg_Camera_rotate = ($this, $axis, $angle) => {
    $this.$direction.$rotate($axis, $angle);
    $this.$up.$rotate($axis, $angle);
},
cbgg_Camera_rotateAround = ($this, $point, $axis, $angle) => {
    $this.$tmpVec.$set7($point);
    $this.$tmpVec.$sub($this.$position8);
    $this.$translate0($this.$tmpVec);
    $this.$rotate0($axis, $angle);
    $this.$tmpVec.$rotate($axis, $angle);
    $this.$translate1( -$this.$tmpVec.$x,  -$this.$tmpVec.$y,  -$this.$tmpVec.$z);
},
cbgg_Camera_translate = ($this, $x, $y, $z) => {
    $this.$position8.$add9($x, $y, $z);
},
cbgg_Camera_translate0 = ($this, $vec) => {
    $this.$position8.$add5($vec);
},
cbgg_Camera_unproject = ($this, $touchCoords, $viewportX, $viewportY, $viewportWidth, $viewportHeight) => {
    let $x, $y;
    $x = $touchCoords.$x - $viewportX;
    $y = cbg_Gdx_graphics.$getHeight0() - $touchCoords.$y - $viewportY;
    $touchCoords.$x = 2.0 * $x / $viewportWidth - 1.0;
    $touchCoords.$y = 2.0 * $y / $viewportHeight - 1.0;
    $touchCoords.$z = 2.0 * $touchCoords.$z - 1.0;
    $touchCoords.$prj($this.$invProjectionView);
    return $touchCoords;
},
cbgg_Camera_project = ($this, $worldCoords, $viewportX, $viewportY, $viewportWidth, $viewportHeight) => {
    $worldCoords.$prj($this.$combined);
    $worldCoords.$x = $viewportWidth * ($worldCoords.$x + 1.0) / 2.0 + $viewportX;
    $worldCoords.$y = $viewportHeight * ($worldCoords.$y + 1.0) / 2.0 + $viewportY;
    $worldCoords.$z = ($worldCoords.$z + 1.0) / 2.0;
    return $worldCoords;
};
function cbgg_PerspectiveCamera() {
    let a = this; cbgg_Camera.call(a);
    a.$fieldOfView = 0.0;
    a.$tmp1 = null;
}
let cbgg_PerspectiveCamera__init_ = $this => {
    cbgg_Camera__init_($this);
    $this.$fieldOfView = 67.0;
    $this.$tmp1 = cbgm_Vector3__init_();
},
cbgg_PerspectiveCamera__init_0 = () => {
    let var_0 = new cbgg_PerspectiveCamera();
    cbgg_PerspectiveCamera__init_(var_0);
    return var_0;
},
cbgg_PerspectiveCamera_update = $this => {
    $this.$update1(1);
},
cbgg_PerspectiveCamera_update0 = ($this, $updateFrustum) => {
    let $aspect;
    $aspect = $this.$viewportWidth / $this.$viewportHeight;
    $this.$projection.$setToProjection(jl_Math_abs($this.$near), jl_Math_abs($this.$far), $this.$fieldOfView, $aspect);
    $this.$view.$setToLookAt($this.$position8, ($this.$tmp1.$set7($this.$position8)).$add5($this.$direction), $this.$up);
    $this.$combined.$set1($this.$projection);
    cbgm_Matrix4_mul($this.$combined.$val, $this.$view.$val);
    if ($updateFrustum) {
        $this.$invProjectionView.$set1($this.$combined);
        cbgm_Matrix4_inv($this.$invProjectionView.$val);
        $this.$frustum.$update2($this.$invProjectionView);
    }
},
otji_IDBObjectStoreParameters = $rt_classWithoutFields(),
otji_IDBObjectStoreParameters_create$js_body$_1 = () => {
    return {  };
};
function jl_Object$monitorExit$lambda$_8_0() {
    jl_Object.call(this);
    this.$_020 = null;
}
let jl_Object$monitorExit$lambda$_8_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_020 = var$1;
},
jl_Object$monitorExit$lambda$_8_0__init_0 = var_0 => {
    let var_1 = new jl_Object$monitorExit$lambda$_8_0();
    jl_Object$monitorExit$lambda$_8_0__init_(var_1, var_0);
    return var_1;
},
jl_Object$monitorExit$lambda$_8_0_run = var$0 => {
    jl_Object_lambda$monitorExit$2(var$0.$_020);
},
jur_UCISupplRangeSet = $rt_classWithoutFields(jur_SupplRangeSet),
jur_UCISupplRangeSet__init_ = ($this, $cc) => {
    jur_SupplRangeSet__init_($this, $cc);
},
jur_UCISupplRangeSet__init_0 = var_0 => {
    let var_1 = new jur_UCISupplRangeSet();
    jur_UCISupplRangeSet__init_(var_1, var_0);
    return var_1;
},
jur_UCISupplRangeSet_contains = ($this, $ch) => {
    return $this.$chars0.$contains(jl_Character_toLowerCase0(jl_Character_toUpperCase0($ch)));
},
jur_UCISupplRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt0 ? $rt_s(48) : $rt_s(49);
    var$2 = $this.$chars0.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(450)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
},
cbgu_Clipboard = $rt_classWithoutFields(0),
cbgssu_FocusListener$FocusEvent$Type = $rt_classWithoutFields(jl_Enum),
cbgssu_FocusListener$FocusEvent$Type_keyboard = null,
cbgssu_FocusListener$FocusEvent$Type_scroll = null,
cbgssu_FocusListener$FocusEvent$Type_$VALUES = null,
cbgssu_FocusListener$FocusEvent$Type_$callClinit = () => {
    cbgssu_FocusListener$FocusEvent$Type_$callClinit = $rt_eraseClinit(cbgssu_FocusListener$FocusEvent$Type);
    cbgssu_FocusListener$FocusEvent$Type__clinit_();
},
cbgssu_FocusListener$FocusEvent$Type__init_0 = ($this, var$1, var$2) => {
    cbgssu_FocusListener$FocusEvent$Type_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cbgssu_FocusListener$FocusEvent$Type__init_ = (var_0, var_1) => {
    let var_2 = new cbgssu_FocusListener$FocusEvent$Type();
    cbgssu_FocusListener$FocusEvent$Type__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgssu_FocusListener$FocusEvent$Type_$values = () => {
    let var$1, var$2;
    cbgssu_FocusListener$FocusEvent$Type_$callClinit();
    var$1 = $rt_createArray(cbgssu_FocusListener$FocusEvent$Type, 2);
    var$2 = var$1.data;
    var$2[0] = cbgssu_FocusListener$FocusEvent$Type_keyboard;
    var$2[1] = cbgssu_FocusListener$FocusEvent$Type_scroll;
    return var$1;
},
cbgssu_FocusListener$FocusEvent$Type__clinit_ = () => {
    cbgssu_FocusListener$FocusEvent$Type_keyboard = cbgssu_FocusListener$FocusEvent$Type__init_($rt_s(451), 0);
    cbgssu_FocusListener$FocusEvent$Type_scroll = cbgssu_FocusListener$FocusEvent$Type__init_($rt_s(452), 1);
    cbgssu_FocusListener$FocusEvent$Type_$VALUES = cbgssu_FocusListener$FocusEvent$Type_$values();
},
jl_Void = $rt_classWithoutFields(),
jur_AbstractCharClass$LazyPunct = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyPunct__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyPunct__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyPunct();
    jur_AbstractCharClass$LazyPunct__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyPunct_computeValue = $this => {
    return (((jur_CharClass__init_()).$add0(33, 64)).$add0(91, 96)).$add0(123, 126);
};
function cbggg_VertexBufferObjectWithVAO() {
    let a = this; jl_Object.call(a);
    a.$attributes3 = null;
    a.$byteBuffer2 = null;
    a.$buffer1 = null;
    a.$bufferHandle1 = 0;
    a.$isStatic0 = 0;
    a.$usage3 = 0;
    a.$isDirty2 = 0;
    a.$isBound3 = 0;
    a.$vaoHandle = 0;
    a.$cachedLocations = null;
}
let cbggg_VertexBufferObjectWithVAO_tmpHandle = null,
cbggg_VertexBufferObjectWithVAO_$callClinit = () => {
    cbggg_VertexBufferObjectWithVAO_$callClinit = $rt_eraseClinit(cbggg_VertexBufferObjectWithVAO);
    cbggg_VertexBufferObjectWithVAO__clinit_();
},
cbggg_VertexBufferObjectWithVAO__init_ = ($this, $isStatic, $numVertices, $attributes) => {
    cbggg_VertexBufferObjectWithVAO_$callClinit();
    jl_Object__init_($this);
    $this.$isDirty2 = 0;
    $this.$isBound3 = 0;
    $this.$vaoHandle = (-1);
    $this.$cachedLocations = cbgu_IntArray__init_();
    $this.$isStatic0 = $isStatic;
    $this.$attributes3 = $attributes;
    $this.$byteBuffer2 = cbgu_BufferUtils_newUnsafeByteBuffer($rt_imul($this.$attributes3.$vertexSize, $numVertices));
    $this.$buffer1 = $this.$byteBuffer2.$asFloatBuffer();
    jn_FloatBuffer_flip($this.$buffer1);
    $this.$bufferHandle1 = cbg_Gdx_gl20.$glGenBuffer();
    $this.$usage3 = !$isStatic ? 35048 : 35044;
    cbggg_VertexBufferObjectWithVAO_createVAO($this);
},
cbggg_VertexBufferObjectWithVAO__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_VertexBufferObjectWithVAO();
    cbggg_VertexBufferObjectWithVAO__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_VertexBufferObjectWithVAO_getAttributes = $this => {
    return $this.$attributes3;
},
cbggg_VertexBufferObjectWithVAO_getNumVertices = $this => {
    return (jn_Buffer_limit($this.$buffer1) * 4 | 0) / $this.$attributes3.$vertexSize | 0;
},
cbggg_VertexBufferObjectWithVAO_getNumMaxVertices = $this => {
    return (jn_Buffer_capacity($this.$buffer1) * 4 | 0) / $this.$attributes3.$vertexSize | 0;
},
cbggg_VertexBufferObjectWithVAO_bufferChanged = $this => {
    if ($this.$isBound3) {
        cbg_Gdx_gl20.$glBufferData(34962, jn_Buffer_limit($this.$buffer1), $this.$buffer1, $this.$usage3);
        $this.$isDirty2 = 0;
    }
},
cbggg_VertexBufferObjectWithVAO_setVertices = ($this, $vertices, $offset, $count) => {
    $this.$isDirty2 = 1;
    cbgu_BufferUtils_copy($vertices, $this.$buffer1, $count, $offset);
    $this.$buffer1.$position4(0);
    $this.$buffer1.$limit2($count);
    cbggg_VertexBufferObjectWithVAO_bufferChanged($this);
},
cbggg_VertexBufferObjectWithVAO_bind = ($this, $shader, $locations) => {
    let $gl;
    $gl = cbg_Gdx_gl30;
    $gl.$glBindVertexArray($this.$vaoHandle);
    cbggg_VertexBufferObjectWithVAO_bindAttributes($this, $shader, $locations);
    cbggg_VertexBufferObjectWithVAO_bindData($this, $gl);
    $this.$isBound3 = 1;
},
cbggg_VertexBufferObjectWithVAO_bindAttributes = ($this, $shader, $locations) => {
    let $stillValid, $numAttributes, $i, $attribute, $location, var$8;
    $stillValid = !$this.$cachedLocations.$size1 ? 0 : 1;
    a: {
        $numAttributes = cbgg_VertexAttributes_size($this.$attributes3);
        if ($stillValid) {
            if ($locations === null) {
                $i = 0;
                while ($stillValid && $i < $numAttributes) {
                    $attribute = cbgg_VertexAttributes_get($this.$attributes3, $i);
                    $location = $shader.$getAttributeLocation($attribute.$alias);
                    $stillValid = $location != $this.$cachedLocations.$get1($i) ? 0 : 1;
                    $i = $i + 1 | 0;
                }
            } else {
                var$8 = $locations.data;
                $stillValid = var$8.length != $this.$cachedLocations.$size1 ? 0 : 1;
                $i = 0;
                while ($stillValid) {
                    if ($i >= $numAttributes)
                        break a;
                    $stillValid = var$8[$i] != $this.$cachedLocations.$get1($i) ? 0 : 1;
                    $i = $i + 1 | 0;
                }
            }
        }
    }
    b: {
        if (!$stillValid) {
            cbg_Gdx_gl.$glBindBuffer(34962, $this.$bufferHandle1);
            cbggg_VertexBufferObjectWithVAO_unbindAttributes($this, $shader);
            $this.$cachedLocations.$clear();
            $i = 0;
            while (true) {
                if ($i >= $numAttributes)
                    break b;
                $attribute = cbgg_VertexAttributes_get($this.$attributes3, $i);
                if ($locations !== null) {
                    var$8 = $locations.data;
                    $this.$cachedLocations.$add2(var$8[$i]);
                } else
                    $this.$cachedLocations.$add2($shader.$getAttributeLocation($attribute.$alias));
                $location = $this.$cachedLocations.$get1($i);
                if ($location >= 0) {
                    $shader.$enableVertexAttribute($location);
                    $shader.$setVertexAttribute($location, $attribute.$numComponents, $attribute.$type3, $attribute.$normalized, $this.$attributes3.$vertexSize, $attribute.$offset);
                }
                $i = $i + 1 | 0;
            }
        }
    }
},
cbggg_VertexBufferObjectWithVAO_unbindAttributes = ($this, $shaderProgram) => {
    let $numAttributes, $i, $location;
    if (!$this.$cachedLocations.$size1)
        return;
    $numAttributes = cbgg_VertexAttributes_size($this.$attributes3);
    $i = 0;
    while ($i < $numAttributes) {
        $location = $this.$cachedLocations.$get1($i);
        if ($location >= 0)
            $shaderProgram.$disableVertexAttribute0($location);
        $i = $i + 1 | 0;
    }
},
cbggg_VertexBufferObjectWithVAO_bindData = ($this, $gl) => {
    if ($this.$isDirty2) {
        $gl.$glBindBuffer(34962, $this.$bufferHandle1);
        $this.$buffer1.$limit2(jn_Buffer_limit($this.$buffer1));
        $gl.$glBufferData(34962, jn_Buffer_limit($this.$buffer1), $this.$buffer1, $this.$usage3);
        $this.$isDirty2 = 0;
    }
},
cbggg_VertexBufferObjectWithVAO_unbind = ($this, $shader, $locations) => {
    let $gl;
    $gl = cbg_Gdx_gl30;
    $gl.$glBindVertexArray(0);
    $this.$isBound3 = 0;
},
cbggg_VertexBufferObjectWithVAO_dispose = $this => {
    let $gl;
    $gl = cbg_Gdx_gl30;
    $gl.$glBindBuffer(34962, 0);
    $gl.$glDeleteBuffer($this.$bufferHandle1);
    $this.$bufferHandle1 = 0;
    cbggg_VertexBufferObjectWithVAO_deleteVAO($this);
    cbgu_BufferUtils_disposeUnsafeByteBuffer($this.$byteBuffer2);
},
cbggg_VertexBufferObjectWithVAO_createVAO = $this => {
    cbggg_VertexBufferObjectWithVAO_$callClinit();
    jn_IntBuffer_clear(cbggg_VertexBufferObjectWithVAO_tmpHandle);
    cbg_Gdx_gl30.$glGenVertexArrays(1, cbggg_VertexBufferObjectWithVAO_tmpHandle);
    $this.$vaoHandle = cbggg_VertexBufferObjectWithVAO_tmpHandle.$get19();
},
cbggg_VertexBufferObjectWithVAO_deleteVAO = $this => {
    if ($this.$vaoHandle != (-1)) {
        cbggg_VertexBufferObjectWithVAO_$callClinit();
        jn_IntBuffer_clear(cbggg_VertexBufferObjectWithVAO_tmpHandle);
        cbggg_VertexBufferObjectWithVAO_tmpHandle.$put10($this.$vaoHandle);
        jn_IntBuffer_flip(cbggg_VertexBufferObjectWithVAO_tmpHandle);
        cbg_Gdx_gl30.$glDeleteVertexArrays(1, cbggg_VertexBufferObjectWithVAO_tmpHandle);
        $this.$vaoHandle = (-1);
    }
},
cbggg_VertexBufferObjectWithVAO__clinit_ = () => {
    cbggg_VertexBufferObjectWithVAO_tmpHandle = cbgu_BufferUtils_newIntBuffer(1);
};
function cgxgbtu_Timer() {
    let a = this; jl_Object.call(a);
    a.$isRepeating = 0;
    a.$timerId = null;
    a.$cancelCounter = 0;
}
let cgxgbtu_Timer__init_ = $this => {
    jl_Object__init_($this);
    $this.$timerId = null;
    $this.$cancelCounter = 0;
},
cgxgbtu_Timer_isRunning = $this => {
    return $this.$timerId === null ? 0 : 1;
},
cgxgbtu_Timer_cancel = $this => {
    if (!cgxgbtu_Timer_isRunning($this))
        return;
    $this.$cancelCounter = $this.$cancelCounter + 1 | 0;
    if (!$this.$isRepeating)
        cgxgbtu_Timer_clearTimeout($this.$timerId.$intValue());
    else
        cgxgbtu_Timer_clearInterval($this.$timerId.$intValue());
    $this.$timerId = null;
},
cgxgbtu_Timer_schedule = ($this, $delayMillis) => {
    if ($delayMillis < 0)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(453)));
    if (cgxgbtu_Timer_isRunning($this))
        $this.$cancel();
    $this.$isRepeating = 0;
    $this.$timerId = jl_Integer_valueOf(cgxgbtu_Timer_setTimeout(cgxgbtu_Timer_createCallback($this, $this.$cancelCounter), $delayMillis));
},
cgxgbtu_Timer_fire = ($this, $scheduleCancelCounter) => {
    if ($scheduleCancelCounter != $this.$cancelCounter)
        return;
    if (!$this.$isRepeating)
        $this.$timerId = null;
    $this.$run();
},
cgxgbtu_Timer_createCallback = ($timer, $cancelCounter) => {
    return otji_JSWrapper_unwrap(cgxgbtu_Timer$1__init_0($timer, $cancelCounter));
},
cgxgbtu_Timer_setTimeout = ($func, $time) => {
    return setTimeout(otji_JS_function($func, "onTimer"), $time);
},
cgxgbtu_Timer_clearInterval = $timerId => {
    clearInterval($timerId);
},
cgxgbtu_Timer_clearTimeout = $timerId => {
    clearTimeout($timerId);
},
cgxgbta_AssetDownloader = $rt_classWithoutFields(0);
function cgxgbta_AssetDownloadImpl() {
    jl_Object.call(this);
    this.$showLogs = 0;
}
let cgxgbta_AssetDownloadImpl__init_ = ($this, $showDownloadLogs) => {
    jl_Object__init_($this);
    $this.$showLogs = $showDownloadLogs;
},
cgxgbta_AssetDownloadImpl__init_0 = var_0 => {
    let var_1 = new cgxgbta_AssetDownloadImpl();
    cgxgbta_AssetDownloadImpl__init_(var_1, var_0);
    return var_1;
},
cgxgbta_AssetDownloadImpl_load = ($this, $async, $url, $type, $listener) => {
    let $internalListener, var$6, var$7, var$8;
    $internalListener = cgxgbta_AssetDownloadImpl$1__init_0($this, $listener);
    if ($this.$showLogs) {
        var$6 = jl_System_out();
        var$7 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$7, $rt_s(454)), $url);
        var$6.$println1(jl_StringBuilder_toString(var$7));
    }
    a: {
        cgxgbta_AssetDownloadImpl$3_$callClinit();
        switch (cgxgbta_AssetDownloadImpl$3_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$assetloader$AssetType.data[jl_Enum_ordinal($type)]) {
            case 1:
                break;
            case 2:
                $internalListener.$onSuccess($url, null);
                break a;
            default:
                var$6 = new cbgu_GdxRuntimeException;
                var$7 = jl_String_valueOf($type);
                var$8 = jl_StringBuilder__init_();
                jl_StringBuilder_append(jl_StringBuilder_append(var$8, $rt_s(455)), var$7);
                cbgu_GdxRuntimeException__init_0(var$6, jl_StringBuilder_toString(var$8));
                $rt_throw(var$6);
        }
        cgxgbta_AssetDownloadImpl_loadBinary($this, $async, $url, $internalListener, 0);
    }
},
cgxgbta_AssetDownloadImpl_loadScript = ($this, $async, $url, $listener) => {
    let var$4, var$5, $current, $document, var$8;
    if ($this.$showLogs) {
        var$4 = jl_System_out();
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(456)), $url);
        var$4.$println1(jl_StringBuilder_toString(var$5));
    }
    $current = window;
    $document = $current.document;
    var$8 = $document.createElement("script");
    var$5 = cgxgbta_AssetDownloadImpl$2__init_0($this, $url, $listener);
    var$8.addEventListener("load", otji_JS_function(otji_JSWrapper_unwrap(var$5), "handleEvent"));
    var$5 = cgxgbta_AssetDownloadImpl$loadScript$lambda$_2_0__init_0($this, $url, $listener);
    var$8.addEventListener("error", otji_JS_function(otji_JSWrapper_unwrap(var$5), "handleEvent"));
    var$4 = $rt_ustr($url);
    var$8.src = var$4;
    $document.body.appendChild(var$8);
},
cgxgbta_AssetDownloadImpl_loadBinary = ($this, $async, $url, $listener, $count) => {
    let var$5;
    if ($count == 3) {
        if ($listener !== null)
            $listener.$onFailure($url);
        return;
    }
    if (!$async)
        cgxgbta_AssetDownloadImpl_loadBinaryInternally($this, 0, $url, $listener, $count);
    else {
        var$5 = cgxgbta_AssetDownloadImpl$loadBinary$lambda$_3_0__init_0($this, $url, $listener, $count);
        setTimeout(otji_JS_function(otji_JSWrapper_unwrap(var$5), "onTimer"), 0);
    }
},
cgxgbta_AssetDownloadImpl_loadBinaryInternally = ($this, $async, $url, $listener, $count) => {
    let $request;
    $request = new XMLHttpRequest();
    $request.onreadystatechange = otji_JS_function(otji_JSWrapper_unwrap(cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_4_0__init_0($this, $request, $listener, $url, $count, $async)), "handleEvent");
    cgxgbta_AssetDownloadImpl_setOnProgress($this, $request, $url, $listener);
    $request.open("GET", $rt_ustr($url), !!$async);
    if ($async)
        $request.responseType = "arraybuffer";
    $request.send();
},
cgxgbta_AssetDownloadImpl_setOnProgress = ($this, $req, $url, $listener) => {
    otja_XMLHttpRequest_onProgress$static($req, otji_JSWrapper_unwrap(cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0__init_0($listener)));
},
cgxgbta_AssetDownloadImpl_lambda$setOnProgress$4 = ($listener, $evt) => {
    let $loaded, $total;
    $loaded = $evt.loaded;
    $total = $evt.total;
    if ($listener !== null)
        $listener.$onProgress($total, $loaded);
},
cgxgbta_AssetDownloadImpl_lambda$loadBinaryInternally$3 = ($this, $request, $listener, $url, $count, $async, $evt) => {
    let $status, $newCount, var$9, $jsResponse, var$11, $responseStr;
    if ($request.readyState == 4) {
        $status = $request.status;
        if (!$status) {
            if ($listener !== null)
                $listener.$onFailure($url);
        } else if ($status != 200) {
            if ($status != 404 && $status != 403) {
                $newCount = $count + 1 | 0;
                var$9 = cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_10_0__init_0($this, $async, $url, $listener, $newCount);
                setTimeout(otji_JS_function(otji_JSWrapper_unwrap(var$9), "onTimer"), 100);
            } else if ($listener !== null)
                $listener.$onFailure($url);
        } else {
            $jsResponse = $request.response;
            if (!(typeof $jsResponse == 'string' ? 1 : 0))
                var$11 = new Int8Array($jsResponse);
            else {
                $responseStr = $rt_str($jsResponse);
                var$11 = cgxgbtdt_TypedArrays_getInt8Array0($responseStr.$getBytes0());
                $jsResponse = var$11.buffer;
            }
            if ($listener !== null)
                $listener.$onSuccess($url, cgxgbta_TeaBlob__init_0($jsResponse, var$11));
        }
    }
},
cgxgbta_AssetDownloadImpl_lambda$loadBinaryInternally$2 = ($this, $async, $url, $listener, $newCount) => {
    cgxgbta_AssetDownloadImpl_loadBinary($this, $async, $url, $listener, $newCount);
},
cgxgbta_AssetDownloadImpl_lambda$loadBinary$1 = ($this, $url, $listener, $count) => {
    cgxgbta_AssetDownloadImpl_loadBinaryInternally($this, 1, $url, $listener, $count);
},
cgxgbta_AssetDownloadImpl_lambda$loadScript$0 = ($this, $url, $listener, $error) => {
    let var$4, var$5;
    if ($this.$showLogs) {
        var$4 = jl_System_err();
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(457)), $url);
        var$4.$println1(jl_StringBuilder_toString(var$5));
    }
    if ($listener !== null)
        $listener.$onFailure($url);
},
cgxgbt_TeaGL20Debug = $rt_classWithoutFields(cgxgbt_TeaGL20),
cgxgbt_TeaGL20Debug__init_ = ($this, $gl) => {
    cgxgbt_TeaGL20__init_($this, $gl);
},
cgxgbt_TeaGL20Debug__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaGL20Debug();
    cgxgbt_TeaGL20Debug__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaGL20Debug_checkError = $this => {
    let var$1, var$2, var$3, var$4;
    var$1 = $this.$gl.getError();
    if (!var$1)
        return;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = jl_Integer_toHexString(var$1);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(418)), var$1), $rt_s(27)), var$3);
    cbgu_GdxRuntimeException__init_0(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
},
cgxgbt_TeaGL20Debug_glActiveTexture = ($this, $texture) => {
    cgxgbt_TeaGL20_glActiveTexture($this, $texture);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBindTexture = ($this, $target, $texture) => {
    cgxgbt_TeaGL20_glBindTexture($this, $target, $texture);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBlendFunc = ($this, $sfactor, $dfactor) => {
    cgxgbt_TeaGL20_glBlendFunc($this, $sfactor, $dfactor);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glClear = ($this, $mask) => {
    cgxgbt_TeaGL20_glClear($this, $mask);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glClearColor = ($this, $red, $green, $blue, $alpha) => {
    cgxgbt_TeaGL20_glClearColor($this, $red, $green, $blue, $alpha);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glCullFace = ($this, $mode) => {
    cgxgbt_TeaGL20_glCullFace($this, $mode);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDepthFunc = ($this, $func) => {
    cgxgbt_TeaGL20_glDepthFunc($this, $func);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDepthMask = ($this, $flag) => {
    cgxgbt_TeaGL20_glDepthMask($this, $flag);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDepthRangef = ($this, $zNear, $zFar) => {
    cgxgbt_TeaGL20_glDepthRangef($this, $zNear, $zFar);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDisable = ($this, $cap) => {
    cgxgbt_TeaGL20_glDisable($this, $cap);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDrawArrays = ($this, $mode, $first, $count) => {
    cgxgbt_TeaGL20_glDrawArrays($this, $mode, $first, $count);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDrawElements = ($this, $mode, $count, $type, $indices) => {
    cgxgbt_TeaGL20_glDrawElements($this, $mode, $count, $type, $indices);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glEnable = ($this, $cap) => {
    cgxgbt_TeaGL20_glEnable($this, $cap);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetIntegerv = ($this, $pname, $params) => {
    cgxgbt_TeaGL20_glGetIntegerv($this, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetString = ($this, $name) => {
    return cgxgbt_TeaGL20_glGetString($this, $name);
},
cgxgbt_TeaGL20Debug_glPixelStorei = ($this, $pname, $param) => {
    cgxgbt_TeaGL20_glPixelStorei($this, $pname, $param);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glScissor = ($this, $x, $y, $width, $height) => {
    cgxgbt_TeaGL20_glScissor($this, $x, $y, $width, $height);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glTexImage2D = ($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels) => {
    cgxgbt_TeaGL20_glTexImage2D($this, $target, $level, $internalformat, $width, $height, $border, $format, $type, $pixels);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glTexParameterf = ($this, $target, $pname, $param) => {
    cgxgbt_TeaGL20_glTexParameterf($this, $target, $pname, $param);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glViewport = ($this, $x, $y, $width, $height) => {
    cgxgbt_TeaGL20_glViewport($this, $x, $y, $width, $height);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glAttachShader = ($this, $program, $shader) => {
    cgxgbt_TeaGL20_glAttachShader($this, $program, $shader);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBindBuffer = ($this, $target, $buffer) => {
    cgxgbt_TeaGL20_glBindBuffer($this, $target, $buffer);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBlendFuncSeparate = ($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha) => {
    cgxgbt_TeaGL20_glBlendFuncSeparate($this, $srcRGB, $dstRGB, $srcAlpha, $dstAlpha);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBufferData = ($this, $target, $size, $data, $usage) => {
    cgxgbt_TeaGL20_glBufferData($this, $target, $size, $data, $usage);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glBufferSubData = ($this, $target, $offset, $size, $data) => {
    cgxgbt_TeaGL20_glBufferSubData($this, $target, $offset, $size, $data);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glCompileShader = ($this, $shader) => {
    cgxgbt_TeaGL20_glCompileShader($this, $shader);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glCreateProgram = $this => {
    let $program;
    $program = cgxgbt_TeaGL20_glCreateProgram($this);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $program;
},
cgxgbt_TeaGL20Debug_glCreateShader = ($this, $type) => {
    let $shader;
    $shader = cgxgbt_TeaGL20_glCreateShader($this, $type);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $shader;
},
cgxgbt_TeaGL20Debug_glDeleteProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glDeleteProgram($this, $program);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDeleteShader = ($this, $shader) => {
    cgxgbt_TeaGL20_glDeleteShader($this, $shader);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDisableVertexAttribArray = ($this, $index) => {
    cgxgbt_TeaGL20_glDisableVertexAttribArray($this, $index);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glDrawElements0 = ($this, $mode, $count, $type, $indices) => {
    cgxgbt_TeaGL20_glDrawElements0($this, $mode, $count, $type, $indices);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glEnableVertexAttribArray = ($this, $index) => {
    cgxgbt_TeaGL20_glEnableVertexAttribArray($this, $index);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGenerateMipmap = ($this, $target) => {
    cgxgbt_TeaGL20_glGenerateMipmap($this, $target);
    cgxgbt_TeaGL20Debug_checkError($this);
};
let cgxgbt_TeaGL20Debug_glGetActiveAttrib = ($this, $program, $index, $size, $type) => {
    let $attrib;
    $attrib = cgxgbt_TeaGL20_glGetActiveAttrib($this, $program, $index, $size, $type);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $attrib;
},
cgxgbt_TeaGL20Debug_glGetActiveUniform = ($this, $program, $index, $size, $type) => {
    let $uniform;
    $uniform = cgxgbt_TeaGL20_glGetActiveUniform($this, $program, $index, $size, $type);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $uniform;
},
cgxgbt_TeaGL20Debug_glGetAttribLocation = ($this, $program, $name) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_glGetAttribLocation($this, $program, $name);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $loc;
},
cgxgbt_TeaGL20Debug_glGetFloatv = ($this, $pname, $params) => {
    cgxgbt_TeaGL20_glGetFloatv($this, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetProgramiv = ($this, $program, $pname, $params) => {
    cgxgbt_TeaGL20_glGetProgramiv($this, $program, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetProgramInfoLog = ($this, $program) => {
    let $info;
    $info = cgxgbt_TeaGL20_glGetProgramInfoLog($this, $program);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $info;
},
cgxgbt_TeaGL20Debug_glGetShaderiv = ($this, $shader, $pname, $params) => {
    cgxgbt_TeaGL20_glGetShaderiv($this, $shader, $pname, $params);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glGetShaderInfoLog = ($this, $shader) => {
    let $info;
    $info = cgxgbt_TeaGL20_glGetShaderInfoLog($this, $shader);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $info;
},
cgxgbt_TeaGL20Debug_glGetUniformLocation = ($this, $program, $name) => {
    let $loc;
    $loc = cgxgbt_TeaGL20_glGetUniformLocation($this, $program, $name);
    cgxgbt_TeaGL20Debug_checkError($this);
    return $loc;
},
cgxgbt_TeaGL20Debug_glLinkProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glLinkProgram($this, $program);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glShaderSource = ($this, $shader, $source) => {
    cgxgbt_TeaGL20_glShaderSource($this, $shader, $source);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glTexParameteri = ($this, $target, $pname, $param) => {
    cgxgbt_TeaGL20_glTexParameteri($this, $target, $pname, $param);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glUniform1f = ($this, $location, $x) => {
    cgxgbt_TeaGL20_glUniform1f($this, $location, $x);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glUniform1i = ($this, $location, $x) => {
    cgxgbt_TeaGL20_glUniform1i($this, $location, $x);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glUniform2f = ($this, $location, $x, $y) => {
    cgxgbt_TeaGL20_glUniform2f($this, $location, $x, $y);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glUniform3f = ($this, $location, $x, $y, $z) => {
    cgxgbt_TeaGL20_glUniform3f($this, $location, $x, $y, $z);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glUniform4f = ($this, $location, $x, $y, $z, $w) => {
    cgxgbt_TeaGL20_glUniform4f($this, $location, $x, $y, $z, $w);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glUseProgram = ($this, $program) => {
    cgxgbt_TeaGL20_glUseProgram($this, $program);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glVertexAttrib2f = ($this, $indx, $x, $y) => {
    cgxgbt_TeaGL20_glVertexAttrib2f($this, $indx, $x, $y);
    cgxgbt_TeaGL20Debug_checkError($this);
},
cgxgbt_TeaGL20Debug_glVertexAttribPointer = ($this, $indx, $size, $type, $normalized, $stride, $ptr_0) => {
    cgxgbt_TeaGL20_glVertexAttribPointer($this, $indx, $size, $type, $normalized, $stride, $ptr_0);
    cgxgbt_TeaGL20Debug_checkError($this);
};
function cbgggu_MeshBuilder() {
    let a = this; jl_Object.call(a);
    a.$vertTmp1 = null;
    a.$vertTmp2 = null;
    a.$vertTmp3 = null;
    a.$vertTmp4 = null;
    a.$tempC1 = null;
    a.$attributes4 = null;
    a.$vertices = null;
    a.$indices = null;
    a.$stride = 0;
    a.$vindex = 0;
    a.$istart = 0;
    a.$posOffset = 0;
    a.$posSize = 0;
    a.$norOffset = 0;
    a.$biNorOffset = 0;
    a.$tangentOffset = 0;
    a.$colOffset = 0;
    a.$colSize = 0;
    a.$cpOffset = 0;
    a.$uvOffset = 0;
    a.$part4 = null;
    a.$parts0 = null;
    a.$color5 = null;
    a.$hasColor0 = 0;
    a.$primitiveType = 0;
    a.$uOffset = 0.0;
    a.$uScale = 0.0;
    a.$vOffset = 0.0;
    a.$vScale = 0.0;
    a.$hasUVTransform = 0;
    a.$vertex2 = null;
    a.$vertexTransformationEnabled = 0;
    a.$positionTransform = null;
    a.$normalTransform = null;
    a.$bounds = null;
    a.$lastIndex0 = 0;
    a.$tmpNormal = null;
}
let cbgggu_MeshBuilder_tmpIndices = null,
cbgggu_MeshBuilder_tmpVertices = null,
cbgggu_MeshBuilder_vTmp = null,
cbgggu_MeshBuilder_indicesMap = null,
cbgggu_MeshBuilder_$callClinit = () => {
    cbgggu_MeshBuilder_$callClinit = $rt_eraseClinit(cbgggu_MeshBuilder);
    cbgggu_MeshBuilder__clinit_();
},
cbgggu_MeshBuilder__init_ = $this => {
    cbgggu_MeshBuilder_$callClinit();
    jl_Object__init_($this);
    $this.$vertTmp1 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    $this.$vertTmp2 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    $this.$vertTmp3 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    $this.$vertTmp4 = cbgggu_MeshPartBuilder$VertexInfo__init_();
    $this.$tempC1 = cbgg_Color__init_1();
    $this.$vertices = cbgu_FloatArray__init_();
    $this.$indices = cbgu_ShortArray__init_1();
    $this.$parts0 = cbgu_Array__init_();
    $this.$color5 = cbgg_Color__init_6(cbgg_Color_WHITE);
    $this.$hasColor0 = 0;
    $this.$uOffset = 0.0;
    $this.$uScale = 1.0;
    $this.$vOffset = 0.0;
    $this.$vScale = 1.0;
    $this.$hasUVTransform = 0;
    $this.$vertexTransformationEnabled = 0;
    $this.$positionTransform = cbgm_Matrix4__init_();
    $this.$normalTransform = cbgm_Matrix3__init_();
    $this.$bounds = cbgmc_BoundingBox__init_0();
    $this.$lastIndex0 = (-1);
    $this.$tmpNormal = cbgm_Vector3__init_();
},
cbgggu_MeshBuilder__init_0 = () => {
    let var_0 = new cbgggu_MeshBuilder();
    cbgggu_MeshBuilder__init_(var_0);
    return var_0;
},
cbgggu_MeshBuilder_createAttributes = $usage => {
    let $attrs, $attributes, $i, var$5;
    cbgggu_MeshBuilder_$callClinit();
    $attrs = cbgu_Array__init_();
    if (Long_eq(Long_and($usage, Long_fromInt(1)), Long_fromInt(1)))
        $attrs.$add1(cbgg_VertexAttribute__init_(1, 3, $rt_s(349)));
    if (Long_eq(Long_and($usage, Long_fromInt(2)), Long_fromInt(2)))
        $attrs.$add1(cbgg_VertexAttribute__init_(2, 4, $rt_s(350)));
    if (Long_eq(Long_and($usage, Long_fromInt(4)), Long_fromInt(4)))
        $attrs.$add1(cbgg_VertexAttribute__init_(4, 4, $rt_s(350)));
    if (Long_eq(Long_and($usage, Long_fromInt(8)), Long_fromInt(8)))
        $attrs.$add1(cbgg_VertexAttribute__init_(8, 3, $rt_s(458)));
    if (Long_eq(Long_and($usage, Long_fromInt(16)), Long_fromInt(16)))
        $attrs.$add1(cbgg_VertexAttribute__init_(16, 2, $rt_s(351)));
    $attributes = $rt_createArray(cbgg_VertexAttribute, $attrs.$size0);
    $i = 0;
    while (true) {
        var$5 = $attributes.data;
        if ($i >= var$5.length)
            break;
        var$5[$i] = $attrs.$get($i);
        $i = $i + 1 | 0;
    }
    return cbgg_VertexAttributes__init_($attributes);
},
cbgggu_MeshBuilder_begin = ($this, $attributes) => {
    $this.$begin3($attributes, (-1));
},
cbgggu_MeshBuilder_begin0 = ($this, $attributes, $primitiveType) => {
    let $a, var$4;
    if ($this.$attributes4 !== null)
        $rt_throw(jl_RuntimeException__init_1($rt_s(459)));
    $this.$attributes4 = $attributes;
    $this.$vertices.$clear();
    $this.$indices.$clear();
    $this.$parts0.$clear();
    $this.$vindex = 0;
    $this.$lastIndex0 = (-1);
    $this.$istart = 0;
    $this.$part4 = null;
    $this.$stride = $attributes.$vertexSize / 4 | 0;
    if (!($this.$vertex2 !== null && $this.$vertex2.data.length >= $this.$stride))
        $this.$vertex2 = $rt_createFloatArray($this.$stride);
    $a = cbgg_VertexAttributes_findByUsage($attributes, 1);
    if ($a === null)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(460)));
    $this.$posOffset = $a.$offset / 4 | 0;
    $this.$posSize = $a.$numComponents;
    var$4 = cbgg_VertexAttributes_findByUsage($attributes, 8);
    $this.$norOffset = var$4 === null ? (-1) : var$4.$offset / 4 | 0;
    var$4 = cbgg_VertexAttributes_findByUsage($attributes, 256);
    $this.$biNorOffset = var$4 === null ? (-1) : var$4.$offset / 4 | 0;
    var$4 = cbgg_VertexAttributes_findByUsage($attributes, 128);
    $this.$tangentOffset = var$4 === null ? (-1) : var$4.$offset / 4 | 0;
    var$4 = cbgg_VertexAttributes_findByUsage($attributes, 2);
    $this.$colOffset = var$4 === null ? (-1) : var$4.$offset / 4 | 0;
    $this.$colSize = var$4 !== null ? var$4.$numComponents : 0;
    var$4 = cbgg_VertexAttributes_findByUsage($attributes, 4);
    $this.$cpOffset = var$4 === null ? (-1) : var$4.$offset / 4 | 0;
    var$4 = cbgg_VertexAttributes_findByUsage($attributes, 16);
    $this.$uvOffset = var$4 === null ? (-1) : var$4.$offset / 4 | 0;
    $this.$setColor(null);
    $this.$setVertexTransform(null);
    $this.$setUVRange(null);
    $this.$primitiveType = $primitiveType;
    $this.$bounds.$inf();
},
cbgggu_MeshBuilder_endpart = $this => {
    if ($this.$part4 !== null) {
        $this.$bounds.$getCenter($this.$part4.$center);
        ($this.$bounds.$getDimensions($this.$part4.$halfExtents)).$scl(0.5);
        $this.$part4.$radius = $this.$part4.$halfExtents.$len();
        $this.$bounds.$inf();
        $this.$part4.$offset0 = $this.$istart;
        $this.$part4.$size9 = $this.$indices.$size4 - $this.$istart | 0;
        $this.$istart = $this.$indices.$size4;
        $this.$part4 = null;
    }
},
cbgggu_MeshBuilder_part0 = ($this, $id, $primitiveType) => {
    return $this.$part($id, $primitiveType, cbgggm_MeshPart__init_1());
},
cbgggu_MeshBuilder_part = ($this, $id, $primitiveType, $meshPart) => {
    if ($this.$attributes4 === null)
        $rt_throw(jl_RuntimeException__init_1($rt_s(461)));
    cbgggu_MeshBuilder_endpart($this);
    $this.$part4 = $meshPart;
    $this.$part4.$id2 = $id;
    $this.$part4.$primitiveType0 = $primitiveType;
    $this.$primitiveType = $primitiveType;
    $this.$parts0.$add1($this.$part4);
    $this.$setColor(null);
    $this.$setVertexTransform(null);
    $this.$setUVRange(null);
    return $this.$part4;
},
cbgggu_MeshBuilder_end0 = ($this, $mesh) => {
    let var$2, var$3, $p;
    cbgggu_MeshBuilder_endpart($this);
    if ($this.$attributes4 === null)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(461)));
    if (!cbgg_VertexAttributes_equals($this.$attributes4, $mesh.$getVertexAttributes()))
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(462)));
    if ($rt_imul($mesh.$getMaxVertices(), $this.$stride) < $this.$vertices.$size2) {
        var$2 = new cbgu_GdxRuntimeException;
        var$3 = (jl_StringBuilder__init_()).$append1($rt_s(463));
        cbgu_GdxRuntimeException__init_0(var$2, (((((var$3.$append2($mesh.$getMaxVertices())).$append1($rt_s(464))).$append2($this.$stride)).$append1($rt_s(465))).$append2($this.$vertices.$size2)).$toString());
        $rt_throw(var$2);
    }
    if ($mesh.$getMaxIndices() < $this.$indices.$size4)
        $rt_throw(cbgu_GdxRuntimeException__init_((((((jl_StringBuilder__init_()).$append1($rt_s(466))).$append2($mesh.$getMaxIndices())).$append1($rt_s(465))).$append2($this.$indices.$size4)).$toString()));
    $mesh.$setVertices($this.$vertices.$items0, 0, $this.$vertices.$size2);
    $mesh.$setIndices0($this.$indices.$items2, 0, $this.$indices.$size4);
    var$2 = $this.$parts0.$iterator();
    while (var$2.$hasNext()) {
        $p = var$2.$next();
        $p.$mesh = $mesh;
    }
    $this.$parts0.$clear();
    $this.$attributes4 = null;
    $this.$vertices.$clear();
    $this.$indices.$clear();
    return $mesh;
},
cbgggu_MeshBuilder_end = $this => {
    return $this.$end2(cbgg_Mesh__init_4(1, jl_Math_min($this.$vertices.$size2 / $this.$stride | 0, 65536), $this.$indices.$size4, $this.$attributes4));
},
cbgggu_MeshBuilder_getAttributes = $this => {
    return $this.$attributes4;
},
cbgggu_MeshBuilder_getPrimitiveType = $this => {
    return $this.$primitiveType;
},
cbgggu_MeshBuilder_setColor = ($this, $color) => {
    let var$2, var$3;
    var$2 = $this.$color5;
    var$3 = $color === null ? 0 : 1;
    $this.$hasColor0 = var$3;
    if (!var$3) {
        cbgg_Color_$callClinit();
        $color = cbgg_Color_WHITE;
    }
    var$2.$set11($color);
},
cbgggu_MeshBuilder_setUVRange = ($this, $u1, $v1, $u2, $v2) => {
    $this.$uOffset = $u1;
    $this.$vOffset = $v1;
    $this.$uScale = $u2 - $u1;
    $this.$vScale = $v2 - $v1;
    $this.$hasUVTransform = cbgm_MathUtils_isZero($u1) && cbgm_MathUtils_isZero($v1) && cbgm_MathUtils_isEqual($u2, 1.0) && cbgm_MathUtils_isEqual($v2, 1.0) ? 0 : 1;
},
cbgggu_MeshBuilder_setUVRange0 = ($this, $region) => {
    if ($region !== null) {
        $this.$hasUVTransform = 1;
        $this.$setUVRange0($region.$getU(), $region.$getV(), $region.$getU2(), $region.$getV2());
    } else {
        $this.$hasUVTransform = 0;
        $this.$vOffset = 0.0;
        $this.$uOffset = 0.0;
        $this.$vScale = 1.0;
        $this.$uScale = 1.0;
    }
},
cbgggu_MeshBuilder_setVertexTransform = ($this, $transform) => {
    $this.$vertexTransformationEnabled = $transform === null ? 0 : 1;
    if (!$this.$vertexTransformationEnabled) {
        $this.$positionTransform.$idt();
        $this.$normalTransform.$idt0();
    } else {
        $this.$positionTransform.$set1($transform);
        (($this.$normalTransform.$set28($transform)).$inv()).$transpose();
    }
},
cbgggu_MeshBuilder_ensureVertices = ($this, $numVertices) => {
    $this.$vertices.$ensureCapacity2($rt_imul($this.$stride, $numVertices));
},
cbgggu_MeshBuilder_ensureIndices = ($this, $numIndices) => {
    $this.$indices.$ensureCapacity3($numIndices);
},
cbgggu_MeshBuilder_ensureRectangleIndices = ($this, $numRectangles) => {
    if (!$this.$primitiveType)
        $this.$ensureIndices(4 * $numRectangles | 0);
    else if ($this.$primitiveType != 1)
        $this.$ensureIndices(6 * $numRectangles | 0);
    else
        $this.$ensureIndices(8 * $numRectangles | 0);
},
cbgggu_MeshBuilder_lastIndex = $this => {
    return $this.$lastIndex0;
},
cbgggu_MeshBuilder_transformPosition = ($values, $offset, $size, $transform) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    cbgggu_MeshBuilder_$callClinit();
    if ($size > 2) {
        var$5 = $values.data;
        var$6 = cbgggu_MeshBuilder_vTmp;
        var$7 = var$5[$offset];
        var$8 = $offset + 1 | 0;
        var$9 = var$5[var$8];
        var$10 = $offset + 2 | 0;
        (var$6.$set8(var$7, var$9, var$5[var$10])).$mul0($transform);
        var$5[$offset] = cbgggu_MeshBuilder_vTmp.$x;
        var$5[var$8] = cbgggu_MeshBuilder_vTmp.$y;
        var$5[var$10] = cbgggu_MeshBuilder_vTmp.$z;
    } else if ($size <= 1) {
        var$5 = $values.data;
        var$5[$offset] = ((cbgggu_MeshBuilder_vTmp.$set8(var$5[$offset], 0.0, 0.0)).$mul0($transform)).$x;
    } else {
        var$5 = $values.data;
        var$6 = cbgggu_MeshBuilder_vTmp;
        var$11 = var$5[$offset];
        var$10 = $offset + 1 | 0;
        (var$6.$set8(var$11, var$5[var$10], 0.0)).$mul0($transform);
        var$5[$offset] = cbgggu_MeshBuilder_vTmp.$x;
        var$5[var$10] = cbgggu_MeshBuilder_vTmp.$y;
    }
},
cbgggu_MeshBuilder_transformNormal = ($values, $offset, $size, $transform) => {
    let var$5, var$6, var$7, var$8, var$9, var$10;
    cbgggu_MeshBuilder_$callClinit();
    if ($size > 2) {
        var$5 = $values.data;
        var$6 = cbgggu_MeshBuilder_vTmp;
        var$7 = var$5[$offset];
        var$8 = $offset + 1 | 0;
        var$9 = var$5[var$8];
        var$10 = $offset + 2 | 0;
        ((var$6.$set8(var$7, var$9, var$5[var$10])).$mul2($transform)).$nor0();
        var$5[$offset] = cbgggu_MeshBuilder_vTmp.$x;
        var$5[var$8] = cbgggu_MeshBuilder_vTmp.$y;
        var$5[var$10] = cbgggu_MeshBuilder_vTmp.$z;
    } else if ($size <= 1) {
        var$5 = $values.data;
        var$5[$offset] = (((cbgggu_MeshBuilder_vTmp.$set8(var$5[$offset], 0.0, 0.0)).$mul2($transform)).$nor0()).$x;
    } else {
        var$5 = $values.data;
        var$6 = cbgggu_MeshBuilder_vTmp;
        var$9 = var$5[$offset];
        var$8 = $offset + 1 | 0;
        ((var$6.$set8(var$9, var$5[var$8], 0.0)).$mul2($transform)).$nor0();
        var$5[$offset] = cbgggu_MeshBuilder_vTmp.$x;
        var$5[var$8] = cbgggu_MeshBuilder_vTmp.$y;
    }
},
cbgggu_MeshBuilder_addVertex = ($this, $values, $offset) => {
    let $o, var$4, $x, $y, $z, var$8, var$9;
    $o = $this.$vertices.$size2;
    $this.$vertices.$addAll0($values, $offset, $this.$stride);
    var$4 = $this.$vindex;
    $this.$vindex = var$4 + 1 | 0;
    $this.$lastIndex0 = var$4;
    if ($this.$vertexTransformationEnabled) {
        cbgggu_MeshBuilder_transformPosition($this.$vertices.$items0, $o + $this.$posOffset | 0, $this.$posSize, $this.$positionTransform);
        if ($this.$norOffset >= 0)
            cbgggu_MeshBuilder_transformNormal($this.$vertices.$items0, $o + $this.$norOffset | 0, 3, $this.$normalTransform);
        if ($this.$biNorOffset >= 0)
            cbgggu_MeshBuilder_transformNormal($this.$vertices.$items0, $o + $this.$biNorOffset | 0, 3, $this.$normalTransform);
        if ($this.$tangentOffset >= 0)
            cbgggu_MeshBuilder_transformNormal($this.$vertices.$items0, $o + $this.$tangentOffset | 0, 3, $this.$normalTransform);
    }
    $x = $this.$vertices.$items0.data[$o + $this.$posOffset | 0];
    $y = $this.$posSize <= 1 ? 0.0 : $this.$vertices.$items0.data[($o + $this.$posOffset | 0) + 1 | 0];
    $z = $this.$posSize <= 2 ? 0.0 : $this.$vertices.$items0.data[($o + $this.$posOffset | 0) + 2 | 0];
    $this.$bounds.$ext($x, $y, $z);
    if ($this.$hasColor0) {
        if ($this.$colOffset >= 0) {
            var$8 = $this.$vertices.$items0.data;
            var$9 = $o + $this.$colOffset | 0;
            var$8[var$9] = var$8[var$9] * $this.$color5.$r;
            var$8 = $this.$vertices.$items0.data;
            var$9 = ($o + $this.$colOffset | 0) + 1 | 0;
            var$8[var$9] = var$8[var$9] * $this.$color5.$g;
            var$8 = $this.$vertices.$items0.data;
            var$9 = ($o + $this.$colOffset | 0) + 2 | 0;
            var$8[var$9] = var$8[var$9] * $this.$color5.$b;
            if ($this.$colSize > 3) {
                var$8 = $this.$vertices.$items0.data;
                var$9 = ($o + $this.$colOffset | 0) + 3 | 0;
                var$8[var$9] = var$8[var$9] * $this.$color5.$a;
            }
        } else if ($this.$cpOffset >= 0) {
            cbgg_Color_abgr8888ToColor($this.$tempC1, $this.$vertices.$items0.data[$o + $this.$cpOffset | 0]);
            $this.$vertices.$items0.data[$o + $this.$cpOffset | 0] = ($this.$tempC1.$mul3($this.$color5)).$toFloatBits();
        }
    }
    if ($this.$hasUVTransform && $this.$uvOffset >= 0) {
        $this.$vertices.$items0.data[$o + $this.$uvOffset | 0] = $this.$uOffset + $this.$uScale * $this.$vertices.$items0.data[$o + $this.$uvOffset | 0];
        $this.$vertices.$items0.data[($o + $this.$uvOffset | 0) + 1 | 0] = $this.$vOffset + $this.$vScale * $this.$vertices.$items0.data[($o + $this.$uvOffset | 0) + 1 | 0];
    }
},
cbgggu_MeshBuilder_vertex0 = ($this, $pos, $nor, $col, $uv) => {
    if ($this.$vindex > 65535)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(467)));
    $this.$vertex2.data[$this.$posOffset] = $pos.$x;
    if ($this.$posSize > 1)
        $this.$vertex2.data[$this.$posOffset + 1 | 0] = $pos.$y;
    if ($this.$posSize > 2)
        $this.$vertex2.data[$this.$posOffset + 2 | 0] = $pos.$z;
    if ($this.$norOffset >= 0) {
        if ($nor === null)
            $nor = ($this.$tmpNormal.$set7($pos)).$nor0();
        $this.$vertex2.data[$this.$norOffset] = $nor.$x;
        $this.$vertex2.data[$this.$norOffset + 1 | 0] = $nor.$y;
        $this.$vertex2.data[$this.$norOffset + 2 | 0] = $nor.$z;
    }
    if ($this.$colOffset >= 0) {
        if ($col === null) {
            cbgg_Color_$callClinit();
            $col = cbgg_Color_WHITE;
        }
        $this.$vertex2.data[$this.$colOffset] = $col.$r;
        $this.$vertex2.data[$this.$colOffset + 1 | 0] = $col.$g;
        $this.$vertex2.data[$this.$colOffset + 2 | 0] = $col.$b;
        if ($this.$colSize > 3)
            $this.$vertex2.data[$this.$colOffset + 3 | 0] = $col.$a;
    } else if ($this.$cpOffset > 0) {
        if ($col === null) {
            cbgg_Color_$callClinit();
            $col = cbgg_Color_WHITE;
        }
        $this.$vertex2.data[$this.$cpOffset] = $col.$toFloatBits();
    }
    if ($uv !== null && $this.$uvOffset >= 0) {
        $this.$vertex2.data[$this.$uvOffset] = $uv.$x0;
        $this.$vertex2.data[$this.$uvOffset + 1 | 0] = $uv.$y0;
    }
    cbgggu_MeshBuilder_addVertex($this, $this.$vertex2, 0);
    return $this.$lastIndex0 << 16 >> 16;
},
cbgggu_MeshBuilder_vertex = ($this, $info) => {
    let var$2, var$3, var$4, var$5;
    var$2 = !$info.$hasPosition ? null : $info.$position12;
    var$3 = !$info.$hasNormal ? null : $info.$normal0;
    var$4 = !$info.$hasColor ? null : $info.$color7;
    var$5 = !$info.$hasUV ? null : $info.$uv;
    return $this.$vertex0(var$2, var$3, var$4, var$5);
},
cbgggu_MeshBuilder_index0 = ($this, $value1, $value2, $value3, $value4) => {
    $this.$ensureIndices(4);
    $this.$indices.$add10($value1);
    $this.$indices.$add10($value2);
    $this.$indices.$add10($value3);
    $this.$indices.$add10($value4);
},
cbgggu_MeshBuilder_index1 = ($this, $value1, $value2, $value3, $value4, $value5, $value6) => {
    $this.$ensureIndices(6);
    $this.$indices.$add10($value1);
    $this.$indices.$add10($value2);
    $this.$indices.$add10($value3);
    $this.$indices.$add10($value4);
    $this.$indices.$add10($value5);
    $this.$indices.$add10($value6);
},
cbgggu_MeshBuilder_index = ($this, $value1, $value2, $value3, $value4, $value5, $value6, $value7, $value8) => {
    $this.$ensureIndices(8);
    $this.$indices.$add10($value1);
    $this.$indices.$add10($value2);
    $this.$indices.$add10($value3);
    $this.$indices.$add10($value4);
    $this.$indices.$add10($value5);
    $this.$indices.$add10($value6);
    $this.$indices.$add10($value7);
    $this.$indices.$add10($value8);
},
cbgggu_MeshBuilder_rect0 = ($this, $corner00, $corner10, $corner11, $corner01) => {
    if ($this.$primitiveType == 4)
        $this.$index($corner00, $corner10, $corner11, $corner11, $corner01, $corner00);
    else if ($this.$primitiveType == 1)
        $this.$index0($corner00, $corner10, $corner10, $corner11, $corner11, $corner01, $corner01, $corner00);
    else {
        if ($this.$primitiveType)
            $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(468)));
        $this.$index1($corner00, $corner10, $corner11, $corner01);
    }
},
cbgggu_MeshBuilder_rect1 = ($this, $corner00, $corner10, $corner11, $corner01) => {
    $this.$ensureVertices(4);
    $this.$rect2($this.$vertex1($corner00), $this.$vertex1($corner10), $this.$vertex1($corner11), $this.$vertex1($corner01));
},
cbgggu_MeshBuilder_rect = ($this, $corner00, $corner10, $corner11, $corner01, $normal) => {
    let var$6, var$7, var$8, var$9, var$10;
    var$6 = ($this.$vertTmp1.$set30($corner00, $normal, null, null)).$setUV(0.0, 1.0);
    var$7 = ($this.$vertTmp2.$set30($corner10, $normal, null, null)).$setUV(1.0, 1.0);
    var$8 = $this.$vertTmp3;
    var$9 = null;
    var$10 = null;
    var$8 = (var$8.$set30($corner11, $normal, var$9, var$10)).$setUV(1.0, 0.0);
    var$10 = ($this.$vertTmp4.$set30($corner01, $normal, null, null)).$setUV(0.0, 0.0);
    $this.$rect3(var$6, var$7, var$8, var$10);
},
cbgggu_MeshBuilder_box = ($this, $width, $height, $depth) => {
    cbgggus_BoxShapeBuilder_build1($this, $width, $height, $depth);
},
cbgggu_MeshBuilder__clinit_ = () => {
    cbgggu_MeshBuilder_tmpIndices = cbgu_ShortArray__init_1();
    cbgggu_MeshBuilder_tmpVertices = cbgu_FloatArray__init_();
    cbgggu_MeshBuilder_vTmp = cbgm_Vector3__init_();
    cbgggu_MeshBuilder_indicesMap = null;
},
jur_AbstractCharClass$LazySpace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazySpace__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazySpace__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazySpace();
    jur_AbstractCharClass$LazySpace__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazySpace_computeValue = $this => {
    return ((jur_CharClass__init_()).$add0(9, 13)).$add(32);
},
cbgss_Stage$cancelTouchFocusExcept$lambda$_23_0 = $rt_classWithoutFields(),
cbgss_Stage$cancelTouchFocusExcept$lambda$_23_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgss_Stage$cancelTouchFocusExcept$lambda$_23_0__init_0 = () => {
    let var_0 = new cbgss_Stage$cancelTouchFocusExcept$lambda$_23_0();
    cbgss_Stage$cancelTouchFocusExcept$lambda$_23_0__init_(var_0);
    return var_0;
},
cbgss_Stage$cancelTouchFocusExcept$lambda$_23_0_get0 = var$0 => {
    return cbgss_Stage$cancelTouchFocusExcept$lambda$_23_0_get(var$0);
},
cbgss_Stage$cancelTouchFocusExcept$lambda$_23_0_get = var$0 => {
    return cbgss_InputEvent__init_();
},
cgxgbtfi_IndexedDBFileData = $rt_classWithoutFields(),
cgxgbtfi_IndexedDBFileData_create$js_body$_5 = (var$1, var$2) => {
    return { type : var$1, date : var$2 };
},
ju_RandomAccess = $rt_classWithoutFields(0);
function cgxgbtft_LocalDBStorage() {
    cgxgbtf_MemoryFileStorage.call(this);
    this.$dataBase = null;
}
let cgxgbtft_LocalDBStorage__init_ = ($this, var$1) => {
    cgxgbtf_MemoryFileStorage__init_($this);
    $this.$dataBase = null;
    cgxgbtft_LocalDBStorage_setupIndexedDB($this, var$1);
},
cgxgbtft_LocalDBStorage__init_0 = var_0 => {
    let var_1 = new cgxgbtft_LocalDBStorage();
    cgxgbtft_LocalDBStorage__init_(var_1, var_0);
    return var_1;
},
cgxgbtft_LocalDBStorage_setupIndexedDB = ($this, $teaApplication) => {
    let $config, $instance, $databaseName, $request, var$6, var$7;
    if ($teaApplication === null)
        return;
    $config = $teaApplication.$getConfig();
    $teaApplication.$addInitQueue();
    $instance = otji_IDBFactory_getInstance();
    $databaseName = $config.$localStoragePrefix;
    $request = $instance.open($rt_ustr($databaseName), 1);
    var$6 = otji_JS_function(otji_JSWrapper_unwrap(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0__init_0($request)), "handleEvent");
    $request.onupgradeneeded = var$6;
    var$7 = otji_JS_function(otji_JSWrapper_unwrap(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1__init_0($this, $request, $teaApplication)), "handleEvent");
    $request.onsuccess = var$7;
    var$6 = otji_JS_function(otji_JSWrapper_unwrap(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2__init_0($databaseName, $teaApplication)), "handleEvent");
    $request.onerror = var$6;
},
cgxgbtft_LocalDBStorage_putFile = ($this, $key, $fileData) => {
    let $type, var$4, var$5, $transaction, $objectStore, $dbFileData, $request;
    if ($this.$debug1) {
        $type = $fileData !== null && $fileData.$isDirectory() ? $rt_s(469) : $rt_s(470);
        var$4 = jl_System_out();
        var$5 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$5, $type), $key);
        var$4.$println1(jl_StringBuilder_toString(var$5));
    }
    $transaction = $this.$dataBase.transaction("FILE_DATA", "readwrite");
    $objectStore = $transaction.objectStore("FILE_DATA");
    $dbFileData = cgxgbtfi_IndexedDBFileData_create$js_body$_5($fileData.$getType0(), new Date());
    if (!$fileData.$isDirectory())
        $dbFileData.contents = otji_JS_wrap($fileData.$getBytes0());
    var$4 = $rt_ustr($key);
    $request = $objectStore.put($dbFileData, var$4);
    var$4 = otji_JS_function(otji_JSWrapper_unwrap(cgxgbtft_LocalDBStorage$putFile$lambda$_2_0__init_0($key)), "handleEvent");
    $request.onerror = var$4;
},
cgxgbtft_LocalDBStorage_removeFile = ($this, $key) => {
    let var$2, var$3, $transaction, $objectStore, $request;
    if ($this.$debug1) {
        var$2 = jl_System_out();
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(471)), $key);
        var$2.$println1(jl_StringBuilder_toString(var$3));
    }
    $transaction = $this.$dataBase.transaction("FILE_DATA", "readwrite");
    $objectStore = $transaction.objectStore("FILE_DATA");
    var$2 = $rt_ustr($key);
    $request = $objectStore.delete(var$2);
    var$2 = otji_JS_function(otji_JSWrapper_unwrap(cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0__init_0($key)), "handleEvent");
    $request.onerror = var$2;
},
cgxgbtft_LocalDBStorage_readAllFilesAsync = ($this, $teaApplication) => {
    let $transaction, $objectStore, $cursorRequest, var$5;
    $transaction = $this.$dataBase.transaction("FILE_DATA", "readonly");
    $objectStore = $transaction.objectStore("FILE_DATA");
    $cursorRequest = $objectStore.openCursor();
    var$5 = otji_JS_function(otji_JSWrapper_unwrap(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0__init_0($this, $cursorRequest)), "handleEvent");
    $cursorRequest.onsuccess = var$5;
    var$5 = otji_JS_function(otji_JSWrapper_unwrap(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1__init_0($teaApplication)), "handleEvent");
    $transaction.oncomplete = var$5;
    var$5 = otji_JS_function(otji_JSWrapper_unwrap(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2__init_0($teaApplication)), "handleEvent");
    $cursorRequest.onerror = var$5;
},
cgxgbtft_LocalDBStorage_lambda$readAllFilesAsync$7 = $teaApplication => {
    (jl_System_err()).$println1($rt_s(472));
    $teaApplication.$subtractInitQueue();
},
cgxgbtft_LocalDBStorage_lambda$readAllFilesAsync$6 = $teaApplication => {
    $teaApplication.$subtractInitQueue();
},
cgxgbtft_LocalDBStorage_lambda$readAllFilesAsync$5 = ($this, $cursorRequest) => {
    let $cursor, $key, $value, $dbFileData, $type, $contents, $bytes;
    $cursor = $cursorRequest.result;
    if ($cursor !== null) {
        $key = cgxgbtf_MemoryFileStorage_fixPath($this, $rt_str($cursor.key));
        $value = $cursor.value;
        $dbFileData = $value;
        $type = $dbFileData.type;
        if ($type == 1)
            cgxgbtf_MemoryFileStorage_putFolderInternal0($this, $key, 0);
        else {
            $contents = $dbFileData.contents;
            $bytes = cgxgbtdt_TypedArrays_toByteArray($contents);
            cgxgbtf_MemoryFileStorage_putFileInternal($this, $key, $bytes, 0);
        }
        $cursor.continue();
    }
},
cgxgbtft_LocalDBStorage_lambda$removeFile$4 = $key => {
    let var$2, var$3;
    var$2 = jl_System_err();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(473)), $key);
    var$2.$println1(jl_StringBuilder_toString(var$3));
},
cgxgbtft_LocalDBStorage_lambda$putFile$3 = $key => {
    let var$2, var$3;
    var$2 = jl_System_err();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(474)), $key);
    var$2.$println1(jl_StringBuilder_toString(var$3));
},
cgxgbtft_LocalDBStorage_lambda$setupIndexedDB$2 = ($databaseName, $teaApplication) => {
    let var$3, var$4;
    var$3 = jl_System_err();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(475)), $databaseName);
    var$3.$println1(jl_StringBuilder_toString(var$4));
    $teaApplication.$subtractInitQueue();
},
cgxgbtft_LocalDBStorage_lambda$setupIndexedDB$1 = ($this, $request, $teaApplication) => {
    $this.$dataBase = $request.result;
    cgxgbtft_LocalDBStorage_readAllFilesAsync($this, $teaApplication);
},
cgxgbtft_LocalDBStorage_lambda$setupIndexedDB$0 = ($request, $evt) => {
    let $result, $op;
    $result = $request.result;
    $op = otji_IDBObjectStoreParameters_create$js_body$_1();
    $result.createObjectStore("FILE_DATA", $op);
};
function cbgm_Matrix3() {
    let a = this; jl_Object.call(a);
    a.$val0 = null;
    a.$tmp3 = null;
}
let cbgm_Matrix3__init_0 = $this => {
    jl_Object__init_($this);
    $this.$val0 = $rt_createFloatArray(9);
    $this.$tmp3 = $rt_createFloatArray(9);
    $this.$tmp3.data[8] = 1.0;
    $this.$idt0();
},
cbgm_Matrix3__init_ = () => {
    let var_0 = new cbgm_Matrix3();
    cbgm_Matrix3__init_0(var_0);
    return var_0;
},
cbgm_Matrix3_idt = $this => {
    let $val, var$2;
    $val = $this.$val0;
    var$2 = $val.data;
    var$2[0] = 1.0;
    var$2[1] = 0.0;
    var$2[2] = 0.0;
    var$2[3] = 0.0;
    var$2[4] = 1.0;
    var$2[5] = 0.0;
    var$2[6] = 0.0;
    var$2[7] = 0.0;
    var$2[8] = 1.0;
    return $this;
},
cbgm_Matrix3_det = $this => {
    let $val, var$2;
    $val = $this.$val0;
    var$2 = $val.data;
    return var$2[0] * var$2[4] * var$2[8] + var$2[3] * var$2[7] * var$2[2] + var$2[6] * var$2[1] * var$2[5] - var$2[0] * var$2[7] * var$2[5] - var$2[3] * var$2[1] * var$2[8] - var$2[6] * var$2[4] * var$2[2];
},
cbgm_Matrix3_inv = $this => {
    let $det, $inv_det, $val, var$4, $v00, $v10, $v20, $v01, $v11, $v21, $v02, $v12, $v22;
    $det = $this.$det();
    if ($det === 0.0)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(476)));
    $inv_det = 1.0 / $det;
    $val = $this.$val0;
    var$4 = $val.data;
    $v00 = var$4[4] * var$4[8] - var$4[5] * var$4[7];
    $v10 = var$4[2] * var$4[7] - var$4[1] * var$4[8];
    $v20 = var$4[1] * var$4[5] - var$4[2] * var$4[4];
    $v01 = var$4[5] * var$4[6] - var$4[3] * var$4[8];
    $v11 = var$4[0] * var$4[8] - var$4[2] * var$4[6];
    $v21 = var$4[2] * var$4[3] - var$4[0] * var$4[5];
    $v02 = var$4[3] * var$4[7] - var$4[4] * var$4[6];
    $v12 = var$4[1] * var$4[6] - var$4[0] * var$4[7];
    $v22 = var$4[0] * var$4[4] - var$4[1] * var$4[3];
    var$4[0] = $inv_det * $v00;
    var$4[1] = $inv_det * $v10;
    var$4[2] = $inv_det * $v20;
    var$4[3] = $inv_det * $v01;
    var$4[4] = $inv_det * $v11;
    var$4[5] = $inv_det * $v21;
    var$4[6] = $inv_det * $v02;
    var$4[7] = $inv_det * $v12;
    var$4[8] = $inv_det * $v22;
    return $this;
},
cbgm_Matrix3_set = ($this, $mat) => {
    let $val, var$3;
    $val = $this.$val0;
    var$3 = $val.data;
    var$3[0] = $mat.$val.data[0];
    var$3[1] = $mat.$val.data[1];
    var$3[2] = $mat.$val.data[2];
    var$3[3] = $mat.$val.data[4];
    var$3[4] = $mat.$val.data[5];
    var$3[5] = $mat.$val.data[6];
    var$3[6] = $mat.$val.data[8];
    var$3[7] = $mat.$val.data[9];
    var$3[8] = $mat.$val.data[10];
    return $this;
},
cbgm_Matrix3_transpose = $this => {
    let $val, var$2, $v01, $v02, $v10, $v12, $v20, $v21;
    $val = $this.$val0;
    var$2 = $val.data;
    $v01 = var$2[1];
    $v02 = var$2[2];
    $v10 = var$2[3];
    $v12 = var$2[5];
    $v20 = var$2[6];
    $v21 = var$2[7];
    var$2[3] = $v01;
    var$2[6] = $v02;
    var$2[1] = $v10;
    var$2[7] = $v12;
    var$2[2] = $v20;
    var$2[5] = $v21;
    return $this;
};
function cbgm_Matrix4() {
    jl_Object.call(this);
    this.$val = null;
}
let cbgm_Matrix4_tmp = null,
cbgm_Matrix4_quat = null,
cbgm_Matrix4_quat2 = null,
cbgm_Matrix4_l_vez = null,
cbgm_Matrix4_l_vex = null,
cbgm_Matrix4_l_vey = null,
cbgm_Matrix4_tmpVec = null,
cbgm_Matrix4_tmpMat = null,
cbgm_Matrix4_right = null,
cbgm_Matrix4_tmpForward = null,
cbgm_Matrix4_tmpUp = null,
cbgm_Matrix4_$callClinit = () => {
    cbgm_Matrix4_$callClinit = $rt_eraseClinit(cbgm_Matrix4);
    cbgm_Matrix4__clinit_();
},
cbgm_Matrix4__init_0 = $this => {
    cbgm_Matrix4_$callClinit();
    jl_Object__init_($this);
    $this.$val = $rt_createFloatArray(16);
    $this.$val.data[0] = 1.0;
    $this.$val.data[5] = 1.0;
    $this.$val.data[10] = 1.0;
    $this.$val.data[15] = 1.0;
},
cbgm_Matrix4__init_ = () => {
    let var_0 = new cbgm_Matrix4();
    cbgm_Matrix4__init_0(var_0);
    return var_0;
},
cbgm_Matrix4_set6 = ($this, $matrix) => {
    return $this.$set31($matrix.$val);
},
cbgm_Matrix4_set = ($this, $values) => {
    let var$2;
    var$2 = $values.data;
    $this.$val.data[0] = var$2[0];
    $this.$val.data[1] = var$2[1];
    $this.$val.data[2] = var$2[2];
    $this.$val.data[3] = var$2[3];
    $this.$val.data[4] = var$2[4];
    $this.$val.data[5] = var$2[5];
    $this.$val.data[6] = var$2[6];
    $this.$val.data[7] = var$2[7];
    $this.$val.data[8] = var$2[8];
    $this.$val.data[9] = var$2[9];
    $this.$val.data[10] = var$2[10];
    $this.$val.data[11] = var$2[11];
    $this.$val.data[12] = var$2[12];
    $this.$val.data[13] = var$2[13];
    $this.$val.data[14] = var$2[14];
    $this.$val.data[15] = var$2[15];
    return $this;
},
cbgm_Matrix4_set5 = ($this, $quaternion) => {
    return $this.$set32($quaternion.$x3, $quaternion.$y3, $quaternion.$z0, $quaternion.$w);
},
cbgm_Matrix4_set3 = ($this, $quaternionX, $quaternionY, $quaternionZ, $quaternionW) => {
    return $this.$set33(0.0, 0.0, 0.0, $quaternionX, $quaternionY, $quaternionZ, $quaternionW);
},
cbgm_Matrix4_set4 = ($this, $translationX, $translationY, $translationZ, $quaternionX, $quaternionY, $quaternionZ, $quaternionW) => {
    let $xs, $ys, $zs, $wx, $wy, $wz, $xx, $xy, $xz, $yy, $yz, $zz;
    $xs = $quaternionX * 2.0;
    $ys = $quaternionY * 2.0;
    $zs = $quaternionZ * 2.0;
    $wx = $quaternionW * $xs;
    $wy = $quaternionW * $ys;
    $wz = $quaternionW * $zs;
    $xx = $quaternionX * $xs;
    $xy = $quaternionX * $ys;
    $xz = $quaternionX * $zs;
    $yy = $quaternionY * $ys;
    $yz = $quaternionY * $zs;
    $zz = $quaternionZ * $zs;
    $this.$val.data[0] = 1.0 - ($yy + $zz);
    $this.$val.data[4] = $xy - $wz;
    $this.$val.data[8] = $xz + $wy;
    $this.$val.data[12] = $translationX;
    $this.$val.data[1] = $xy + $wz;
    $this.$val.data[5] = 1.0 - ($xx + $zz);
    $this.$val.data[9] = $yz - $wx;
    $this.$val.data[13] = $translationY;
    $this.$val.data[2] = $xz - $wy;
    $this.$val.data[6] = $yz + $wx;
    $this.$val.data[10] = 1.0 - ($xx + $yy);
    $this.$val.data[14] = $translationZ;
    $this.$val.data[3] = 0.0;
    $this.$val.data[7] = 0.0;
    $this.$val.data[11] = 0.0;
    $this.$val.data[15] = 1.0;
    return $this;
},
cbgm_Matrix4_set2 = ($this, $position, $orientation, $scale) => {
    return $this.$set34($position.$x, $position.$y, $position.$z, $orientation.$x3, $orientation.$y3, $orientation.$z0, $orientation.$w, $scale.$x, $scale.$y, $scale.$z);
},
cbgm_Matrix4_set1 = ($this, $translationX, $translationY, $translationZ, $quaternionX, $quaternionY, $quaternionZ, $quaternionW, $scaleX, $scaleY, $scaleZ) => {
    let $xs, $ys, $zs, $wx, $wy, $wz, $xx, $xy, $xz, $yy, $yz, $zz;
    $xs = $quaternionX * 2.0;
    $ys = $quaternionY * 2.0;
    $zs = $quaternionZ * 2.0;
    $wx = $quaternionW * $xs;
    $wy = $quaternionW * $ys;
    $wz = $quaternionW * $zs;
    $xx = $quaternionX * $xs;
    $xy = $quaternionX * $ys;
    $xz = $quaternionX * $zs;
    $yy = $quaternionY * $ys;
    $yz = $quaternionY * $zs;
    $zz = $quaternionZ * $zs;
    $this.$val.data[0] = $scaleX * (1.0 - ($yy + $zz));
    $this.$val.data[4] = $scaleY * ($xy - $wz);
    $this.$val.data[8] = $scaleZ * ($xz + $wy);
    $this.$val.data[12] = $translationX;
    $this.$val.data[1] = $scaleX * ($xy + $wz);
    $this.$val.data[5] = $scaleY * (1.0 - ($xx + $zz));
    $this.$val.data[9] = $scaleZ * ($yz - $wx);
    $this.$val.data[13] = $translationY;
    $this.$val.data[2] = $scaleX * ($xz - $wy);
    $this.$val.data[6] = $scaleY * ($yz + $wx);
    $this.$val.data[10] = $scaleZ * (1.0 - ($xx + $yy));
    $this.$val.data[14] = $translationZ;
    $this.$val.data[3] = 0.0;
    $this.$val.data[7] = 0.0;
    $this.$val.data[11] = 0.0;
    $this.$val.data[15] = 1.0;
    return $this;
},
cbgm_Matrix4_mul0 = ($this, $matrix) => {
    cbgm_Matrix4_$callClinit();
    cbgm_Matrix4_tmp.data[0] = $this.$val.data[0] * $matrix.$val.data[0] + $this.$val.data[4] * $matrix.$val.data[1] + $this.$val.data[8] * $matrix.$val.data[2] + $this.$val.data[12] * $matrix.$val.data[3];
    cbgm_Matrix4_tmp.data[4] = $this.$val.data[0] * $matrix.$val.data[4] + $this.$val.data[4] * $matrix.$val.data[5] + $this.$val.data[8] * $matrix.$val.data[6] + $this.$val.data[12] * $matrix.$val.data[7];
    cbgm_Matrix4_tmp.data[8] = $this.$val.data[0] * $matrix.$val.data[8] + $this.$val.data[4] * $matrix.$val.data[9] + $this.$val.data[8] * $matrix.$val.data[10] + $this.$val.data[12] * $matrix.$val.data[11];
    cbgm_Matrix4_tmp.data[12] = $this.$val.data[0] * $matrix.$val.data[12] + $this.$val.data[4] * $matrix.$val.data[13] + $this.$val.data[8] * $matrix.$val.data[14] + $this.$val.data[12] * $matrix.$val.data[15];
    cbgm_Matrix4_tmp.data[1] = $this.$val.data[1] * $matrix.$val.data[0] + $this.$val.data[5] * $matrix.$val.data[1] + $this.$val.data[9] * $matrix.$val.data[2] + $this.$val.data[13] * $matrix.$val.data[3];
    cbgm_Matrix4_tmp.data[5] = $this.$val.data[1] * $matrix.$val.data[4] + $this.$val.data[5] * $matrix.$val.data[5] + $this.$val.data[9] * $matrix.$val.data[6] + $this.$val.data[13] * $matrix.$val.data[7];
    cbgm_Matrix4_tmp.data[9] = $this.$val.data[1] * $matrix.$val.data[8] + $this.$val.data[5] * $matrix.$val.data[9] + $this.$val.data[9] * $matrix.$val.data[10] + $this.$val.data[13] * $matrix.$val.data[11];
    cbgm_Matrix4_tmp.data[13] = $this.$val.data[1] * $matrix.$val.data[12] + $this.$val.data[5] * $matrix.$val.data[13] + $this.$val.data[9] * $matrix.$val.data[14] + $this.$val.data[13] * $matrix.$val.data[15];
    cbgm_Matrix4_tmp.data[2] = $this.$val.data[2] * $matrix.$val.data[0] + $this.$val.data[6] * $matrix.$val.data[1] + $this.$val.data[10] * $matrix.$val.data[2] + $this.$val.data[14] * $matrix.$val.data[3];
    cbgm_Matrix4_tmp.data[6] = $this.$val.data[2] * $matrix.$val.data[4] + $this.$val.data[6] * $matrix.$val.data[5] + $this.$val.data[10] * $matrix.$val.data[6] + $this.$val.data[14] * $matrix.$val.data[7];
    cbgm_Matrix4_tmp.data[10] = $this.$val.data[2] * $matrix.$val.data[8] + $this.$val.data[6] * $matrix.$val.data[9] + $this.$val.data[10] * $matrix.$val.data[10] + $this.$val.data[14] * $matrix.$val.data[11];
    cbgm_Matrix4_tmp.data[14] = $this.$val.data[2] * $matrix.$val.data[12] + $this.$val.data[6] * $matrix.$val.data[13] + $this.$val.data[10] * $matrix.$val.data[14] + $this.$val.data[14] * $matrix.$val.data[15];
    cbgm_Matrix4_tmp.data[3] = $this.$val.data[3] * $matrix.$val.data[0] + $this.$val.data[7] * $matrix.$val.data[1] + $this.$val.data[11] * $matrix.$val.data[2] + $this.$val.data[15] * $matrix.$val.data[3];
    cbgm_Matrix4_tmp.data[7] = $this.$val.data[3] * $matrix.$val.data[4] + $this.$val.data[7] * $matrix.$val.data[5] + $this.$val.data[11] * $matrix.$val.data[6] + $this.$val.data[15] * $matrix.$val.data[7];
    cbgm_Matrix4_tmp.data[11] = $this.$val.data[3] * $matrix.$val.data[8] + $this.$val.data[7] * $matrix.$val.data[9] + $this.$val.data[11] * $matrix.$val.data[10] + $this.$val.data[15] * $matrix.$val.data[11];
    cbgm_Matrix4_tmp.data[15] = $this.$val.data[3] * $matrix.$val.data[12] + $this.$val.data[7] * $matrix.$val.data[13] + $this.$val.data[11] * $matrix.$val.data[14] + $this.$val.data[15] * $matrix.$val.data[15];
    return $this.$set31(cbgm_Matrix4_tmp);
},
cbgm_Matrix4_idt = $this => {
    $this.$val.data[0] = 1.0;
    $this.$val.data[4] = 0.0;
    $this.$val.data[8] = 0.0;
    $this.$val.data[12] = 0.0;
    $this.$val.data[1] = 0.0;
    $this.$val.data[5] = 1.0;
    $this.$val.data[9] = 0.0;
    $this.$val.data[13] = 0.0;
    $this.$val.data[2] = 0.0;
    $this.$val.data[6] = 0.0;
    $this.$val.data[10] = 1.0;
    $this.$val.data[14] = 0.0;
    $this.$val.data[3] = 0.0;
    $this.$val.data[7] = 0.0;
    $this.$val.data[11] = 0.0;
    $this.$val.data[15] = 1.0;
    return $this;
},
cbgm_Matrix4_det3x3 = $this => {
    return $this.$val.data[0] * $this.$val.data[5] * $this.$val.data[10] + $this.$val.data[4] * $this.$val.data[9] * $this.$val.data[2] + $this.$val.data[8] * $this.$val.data[1] * $this.$val.data[6] - $this.$val.data[0] * $this.$val.data[9] * $this.$val.data[6] - $this.$val.data[4] * $this.$val.data[1] * $this.$val.data[10] - $this.$val.data[8] * $this.$val.data[5] * $this.$val.data[2];
},
cbgm_Matrix4_setToProjection = ($this, $near, $far, $fovy, $aspectRatio) => {
    let $l_fd, var$6, var$7, $l_a1, $l_a2;
    $this.$idt();
    $l_fd = 1.0 / jl_Math_tan($fovy * 0.017453292519943295 / 2.0);
    var$6 = $far + $near;
    var$7 = $near - $far;
    $l_a1 = var$6 / var$7;
    $l_a2 = 2.0 * $far * $near / var$7;
    $this.$val.data[0] = $l_fd / $aspectRatio;
    $this.$val.data[1] = 0.0;
    $this.$val.data[2] = 0.0;
    $this.$val.data[3] = 0.0;
    $this.$val.data[4] = 0.0;
    $this.$val.data[5] = $l_fd;
    $this.$val.data[6] = 0.0;
    $this.$val.data[7] = 0.0;
    $this.$val.data[8] = 0.0;
    $this.$val.data[9] = 0.0;
    $this.$val.data[10] = $l_a1;
    $this.$val.data[11] = (-1.0);
    $this.$val.data[12] = 0.0;
    $this.$val.data[13] = 0.0;
    $this.$val.data[14] = $l_a2;
    $this.$val.data[15] = 0.0;
    return $this;
},
cbgm_Matrix4_setToOrtho2D = ($this, $x, $y, $width, $height) => {
    $this.$setToOrtho($x, $x + $width, $y, $y + $height, 0.0, 1.0);
    return $this;
},
cbgm_Matrix4_setToOrtho = ($this, $left, $right, $bottom, $top, $near, $far) => {
    let var$7, $x_orth, var$9, $y_orth, var$11, $z_orth, $tx, $ty, $tz;
    $this.$idt();
    var$7 = $right - $left;
    $x_orth = 2.0 / var$7;
    var$9 = $top - $bottom;
    $y_orth = 2.0 / var$9;
    var$11 = $far - $near;
    $z_orth = (-2.0) / var$11;
    $tx =  -($right + $left) / var$7;
    $ty =  -($top + $bottom) / var$9;
    $tz =  -($far + $near) / var$11;
    $this.$val.data[0] = $x_orth;
    $this.$val.data[1] = 0.0;
    $this.$val.data[2] = 0.0;
    $this.$val.data[3] = 0.0;
    $this.$val.data[4] = 0.0;
    $this.$val.data[5] = $y_orth;
    $this.$val.data[6] = 0.0;
    $this.$val.data[7] = 0.0;
    $this.$val.data[8] = 0.0;
    $this.$val.data[9] = 0.0;
    $this.$val.data[10] = $z_orth;
    $this.$val.data[11] = 0.0;
    $this.$val.data[12] = $tx;
    $this.$val.data[13] = $ty;
    $this.$val.data[14] = $tz;
    $this.$val.data[15] = 1.0;
    return $this;
},
cbgm_Matrix4_setToTranslation = ($this, $x, $y, $z) => {
    $this.$idt();
    $this.$val.data[12] = $x;
    $this.$val.data[13] = $y;
    $this.$val.data[14] = $z;
    return $this;
},
cbgm_Matrix4_setToRotation = ($this, $axis, $degrees) => {
    if ($degrees === 0.0) {
        $this.$idt();
        return $this;
    }
    cbgm_Matrix4_$callClinit();
    return $this.$set35(cbgm_Matrix4_quat.$set36($axis, $degrees));
},
cbgm_Matrix4_setToLookAt = ($this, $direction, $up) => {
    cbgm_Matrix4_$callClinit();
    (cbgm_Matrix4_l_vez.$set7($direction)).$nor0();
    (cbgm_Matrix4_l_vex.$set7($direction)).$nor0();
    (cbgm_Matrix4_l_vex.$crs($up)).$nor0();
    ((cbgm_Matrix4_l_vey.$set7(cbgm_Matrix4_l_vex)).$crs(cbgm_Matrix4_l_vez)).$nor0();
    $this.$idt();
    $this.$val.data[0] = cbgm_Matrix4_l_vex.$x;
    $this.$val.data[4] = cbgm_Matrix4_l_vex.$y;
    $this.$val.data[8] = cbgm_Matrix4_l_vex.$z;
    $this.$val.data[1] = cbgm_Matrix4_l_vey.$x;
    $this.$val.data[5] = cbgm_Matrix4_l_vey.$y;
    $this.$val.data[9] = cbgm_Matrix4_l_vey.$z;
    $this.$val.data[2] =  -cbgm_Matrix4_l_vez.$x;
    $this.$val.data[6] =  -cbgm_Matrix4_l_vez.$y;
    $this.$val.data[10] =  -cbgm_Matrix4_l_vez.$z;
    return $this;
},
cbgm_Matrix4_setToLookAt0 = ($this, $position, $target, $up) => {
    cbgm_Matrix4_$callClinit();
    (cbgm_Matrix4_tmpVec.$set7($target)).$sub($position);
    $this.$setToLookAt0(cbgm_Matrix4_tmpVec, $up);
    $this.$mul1(cbgm_Matrix4_tmpMat.$setToTranslation( -$position.$x,  -$position.$y,  -$position.$z));
    return $this;
},
cbgm_Matrix4_set0 = ($this, $affine) => {
    $this.$val.data[0] = $affine.$m00;
    $this.$val.data[1] = $affine.$m10;
    $this.$val.data[2] = 0.0;
    $this.$val.data[3] = 0.0;
    $this.$val.data[4] = $affine.$m01;
    $this.$val.data[5] = $affine.$m11;
    $this.$val.data[6] = 0.0;
    $this.$val.data[7] = 0.0;
    $this.$val.data[8] = 0.0;
    $this.$val.data[9] = 0.0;
    $this.$val.data[10] = 1.0;
    $this.$val.data[11] = 0.0;
    $this.$val.data[12] = $affine.$m02;
    $this.$val.data[13] = $affine.$m12;
    $this.$val.data[14] = 0.0;
    $this.$val.data[15] = 1.0;
    return $this;
},
cbgm_Matrix4_getTranslation = ($this, $position) => {
    $position.$x = $this.$val.data[12];
    $position.$y = $this.$val.data[13];
    $position.$z = $this.$val.data[14];
    return $position;
},
cbgm_Matrix4_matrix4_mul = ($mata, $matb) => {
    let var$3, var$4, $tmp_0, var$6;
    cbgm_Matrix4_$callClinit();
    var$3 = $mata.data;
    var$4 = $matb.data;
    $tmp_0 = $rt_createFloatArray(16);
    var$6 = $tmp_0.data;
    var$6[0] = var$3[0] * var$4[0] + var$3[4] * var$4[1] + var$3[8] * var$4[2] + var$3[12] * var$4[3];
    var$6[4] = var$3[0] * var$4[4] + var$3[4] * var$4[5] + var$3[8] * var$4[6] + var$3[12] * var$4[7];
    var$6[8] = var$3[0] * var$4[8] + var$3[4] * var$4[9] + var$3[8] * var$4[10] + var$3[12] * var$4[11];
    var$6[12] = var$3[0] * var$4[12] + var$3[4] * var$4[13] + var$3[8] * var$4[14] + var$3[12] * var$4[15];
    var$6[1] = var$3[1] * var$4[0] + var$3[5] * var$4[1] + var$3[9] * var$4[2] + var$3[13] * var$4[3];
    var$6[5] = var$3[1] * var$4[4] + var$3[5] * var$4[5] + var$3[9] * var$4[6] + var$3[13] * var$4[7];
    var$6[9] = var$3[1] * var$4[8] + var$3[5] * var$4[9] + var$3[9] * var$4[10] + var$3[13] * var$4[11];
    var$6[13] = var$3[1] * var$4[12] + var$3[5] * var$4[13] + var$3[9] * var$4[14] + var$3[13] * var$4[15];
    var$6[2] = var$3[2] * var$4[0] + var$3[6] * var$4[1] + var$3[10] * var$4[2] + var$3[14] * var$4[3];
    var$6[6] = var$3[2] * var$4[4] + var$3[6] * var$4[5] + var$3[10] * var$4[6] + var$3[14] * var$4[7];
    var$6[10] = var$3[2] * var$4[8] + var$3[6] * var$4[9] + var$3[10] * var$4[10] + var$3[14] * var$4[11];
    var$6[14] = var$3[2] * var$4[12] + var$3[6] * var$4[13] + var$3[10] * var$4[14] + var$3[14] * var$4[15];
    var$6[3] = var$3[3] * var$4[0] + var$3[7] * var$4[1] + var$3[11] * var$4[2] + var$3[15] * var$4[3];
    var$6[7] = var$3[3] * var$4[4] + var$3[7] * var$4[5] + var$3[11] * var$4[6] + var$3[15] * var$4[7];
    var$6[11] = var$3[3] * var$4[8] + var$3[7] * var$4[9] + var$3[11] * var$4[10] + var$3[15] * var$4[11];
    var$6[15] = var$3[3] * var$4[12] + var$3[7] * var$4[13] + var$3[11] * var$4[14] + var$3[15] * var$4[15];
    jl_System_fastArraycopy($tmp_0, 0, $mata, 0, 16);
},
cbgm_Matrix4_matrix4_det = $val => {
    let var$2;
    cbgm_Matrix4_$callClinit();
    var$2 = $val.data;
    return var$2[3] * var$2[6] * var$2[9] * var$2[12] - var$2[2] * var$2[7] * var$2[9] * var$2[12] - var$2[3] * var$2[5] * var$2[10] * var$2[12] + var$2[1] * var$2[7] * var$2[10] * var$2[12] + var$2[2] * var$2[5] * var$2[11] * var$2[12] - var$2[1] * var$2[6] * var$2[11] * var$2[12] - var$2[3] * var$2[6] * var$2[8] * var$2[13] + var$2[2] * var$2[7] * var$2[8] * var$2[13] + var$2[3] * var$2[4] * var$2[10] * var$2[13] - var$2[0] * var$2[7] * var$2[10] * var$2[13] - var$2[2] * var$2[4] * var$2[11] * var$2[13] +
    var$2[0] * var$2[6] * var$2[11] * var$2[13] + var$2[3] * var$2[5] * var$2[8] * var$2[14] - var$2[1] * var$2[7] * var$2[8] * var$2[14] - var$2[3] * var$2[4] * var$2[9] * var$2[14] + var$2[0] * var$2[7] * var$2[9] * var$2[14] + var$2[1] * var$2[4] * var$2[11] * var$2[14] - var$2[0] * var$2[5] * var$2[11] * var$2[14] - var$2[2] * var$2[5] * var$2[8] * var$2[15] + var$2[1] * var$2[6] * var$2[8] * var$2[15] + var$2[2] * var$2[4] * var$2[9] * var$2[15] - var$2[0] * var$2[6] * var$2[9] * var$2[15] - var$2[1] *
    var$2[4] * var$2[10] * var$2[15] + var$2[0] * var$2[5] * var$2[10] * var$2[15];
},
cbgm_Matrix4_matrix4_inv = $val => {
    let $tmp_0, $l_det, var$4, var$5, $inv_det;
    cbgm_Matrix4_$callClinit();
    $tmp_0 = $rt_createFloatArray(16);
    $l_det = cbgm_Matrix4_matrix4_det($val);
    if ($l_det === 0.0)
        return 0;
    var$4 = $tmp_0.data;
    var$5 = $val.data;
    var$4[0] = var$5[9] * var$5[14] * var$5[7] - var$5[13] * var$5[10] * var$5[7] + var$5[13] * var$5[6] * var$5[11] - var$5[5] * var$5[14] * var$5[11] - var$5[9] * var$5[6] * var$5[15] + var$5[5] * var$5[10] * var$5[15];
    var$4[4] = var$5[12] * var$5[10] * var$5[7] - var$5[8] * var$5[14] * var$5[7] - var$5[12] * var$5[6] * var$5[11] + var$5[4] * var$5[14] * var$5[11] + var$5[8] * var$5[6] * var$5[15] - var$5[4] * var$5[10] * var$5[15];
    var$4[8] = var$5[8] * var$5[13] * var$5[7] - var$5[12] * var$5[9] * var$5[7] + var$5[12] * var$5[5] * var$5[11] - var$5[4] * var$5[13] * var$5[11] - var$5[8] * var$5[5] * var$5[15] + var$5[4] * var$5[9] * var$5[15];
    var$4[12] = var$5[12] * var$5[9] * var$5[6] - var$5[8] * var$5[13] * var$5[6] - var$5[12] * var$5[5] * var$5[10] + var$5[4] * var$5[13] * var$5[10] + var$5[8] * var$5[5] * var$5[14] - var$5[4] * var$5[9] * var$5[14];
    var$4[1] = var$5[13] * var$5[10] * var$5[3] - var$5[9] * var$5[14] * var$5[3] - var$5[13] * var$5[2] * var$5[11] + var$5[1] * var$5[14] * var$5[11] + var$5[9] * var$5[2] * var$5[15] - var$5[1] * var$5[10] * var$5[15];
    var$4[5] = var$5[8] * var$5[14] * var$5[3] - var$5[12] * var$5[10] * var$5[3] + var$5[12] * var$5[2] * var$5[11] - var$5[0] * var$5[14] * var$5[11] - var$5[8] * var$5[2] * var$5[15] + var$5[0] * var$5[10] * var$5[15];
    var$4[9] = var$5[12] * var$5[9] * var$5[3] - var$5[8] * var$5[13] * var$5[3] - var$5[12] * var$5[1] * var$5[11] + var$5[0] * var$5[13] * var$5[11] + var$5[8] * var$5[1] * var$5[15] - var$5[0] * var$5[9] * var$5[15];
    var$4[13] = var$5[8] * var$5[13] * var$5[2] - var$5[12] * var$5[9] * var$5[2] + var$5[12] * var$5[1] * var$5[10] - var$5[0] * var$5[13] * var$5[10] - var$5[8] * var$5[1] * var$5[14] + var$5[0] * var$5[9] * var$5[14];
    var$4[2] = var$5[5] * var$5[14] * var$5[3] - var$5[13] * var$5[6] * var$5[3] + var$5[13] * var$5[2] * var$5[7] - var$5[1] * var$5[14] * var$5[7] - var$5[5] * var$5[2] * var$5[15] + var$5[1] * var$5[6] * var$5[15];
    var$4[6] = var$5[12] * var$5[6] * var$5[3] - var$5[4] * var$5[14] * var$5[3] - var$5[12] * var$5[2] * var$5[7] + var$5[0] * var$5[14] * var$5[7] + var$5[4] * var$5[2] * var$5[15] - var$5[0] * var$5[6] * var$5[15];
    var$4[10] = var$5[4] * var$5[13] * var$5[3] - var$5[12] * var$5[5] * var$5[3] + var$5[12] * var$5[1] * var$5[7] - var$5[0] * var$5[13] * var$5[7] - var$5[4] * var$5[1] * var$5[15] + var$5[0] * var$5[5] * var$5[15];
    var$4[14] = var$5[12] * var$5[5] * var$5[2] - var$5[4] * var$5[13] * var$5[2] - var$5[12] * var$5[1] * var$5[6] + var$5[0] * var$5[13] * var$5[6] + var$5[4] * var$5[1] * var$5[14] - var$5[0] * var$5[5] * var$5[14];
    var$4[3] = var$5[9] * var$5[6] * var$5[3] - var$5[5] * var$5[10] * var$5[3] - var$5[9] * var$5[2] * var$5[7] + var$5[1] * var$5[10] * var$5[7] + var$5[5] * var$5[2] * var$5[11] - var$5[1] * var$5[6] * var$5[11];
    var$4[7] = var$5[4] * var$5[10] * var$5[3] - var$5[8] * var$5[6] * var$5[3] + var$5[8] * var$5[2] * var$5[7] - var$5[0] * var$5[10] * var$5[7] - var$5[4] * var$5[2] * var$5[11] + var$5[0] * var$5[6] * var$5[11];
    var$4[11] = var$5[8] * var$5[5] * var$5[3] - var$5[4] * var$5[9] * var$5[3] - var$5[8] * var$5[1] * var$5[7] + var$5[0] * var$5[9] * var$5[7] + var$5[4] * var$5[1] * var$5[11] - var$5[0] * var$5[5] * var$5[11];
    var$4[15] = var$5[4] * var$5[9] * var$5[2] - var$5[8] * var$5[5] * var$5[2] + var$5[8] * var$5[1] * var$5[6] - var$5[0] * var$5[9] * var$5[6] - var$5[4] * var$5[1] * var$5[10] + var$5[0] * var$5[5] * var$5[10];
    $inv_det = 1.0 / $l_det;
    var$5[0] = var$4[0] * $inv_det;
    var$5[4] = var$4[4] * $inv_det;
    var$5[8] = var$4[8] * $inv_det;
    var$5[12] = var$4[12] * $inv_det;
    var$5[1] = var$4[1] * $inv_det;
    var$5[5] = var$4[5] * $inv_det;
    var$5[9] = var$4[9] * $inv_det;
    var$5[13] = var$4[13] * $inv_det;
    var$5[2] = var$4[2] * $inv_det;
    var$5[6] = var$4[6] * $inv_det;
    var$5[10] = var$4[10] * $inv_det;
    var$5[14] = var$4[14] * $inv_det;
    var$5[3] = var$4[3] * $inv_det;
    var$5[7] = var$4[7] * $inv_det;
    var$5[11] = var$4[11] * $inv_det;
    var$5[15] = var$4[15] * $inv_det;
    return 1;
},
cbgm_Matrix4_matrix4_proj = ($mat, $vec, $offset) => {
    let var$4, var$5, var$6, var$7, var$8, var$9, var$10, $inv_w, $x, $y, $z;
    cbgm_Matrix4_$callClinit();
    var$4 = $mat.data;
    var$5 = $vec.data;
    var$6 = $offset + 0 | 0;
    var$7 = var$5[var$6] * var$4[3];
    var$8 = $offset + 1 | 0;
    var$9 = var$7 + var$5[var$8] * var$4[7];
    var$10 = $offset + 2 | 0;
    $inv_w = 1.0 / (var$9 + var$5[var$10] * var$4[11] + var$4[15]);
    $x = (var$5[var$6] * var$4[0] + var$5[var$8] * var$4[4] + var$5[var$10] * var$4[8] + var$4[12]) * $inv_w;
    $y = (var$5[var$6] * var$4[1] + var$5[var$8] * var$4[5] + var$5[var$10] * var$4[9] + var$4[13]) * $inv_w;
    $z = (var$5[var$6] * var$4[2] + var$5[var$8] * var$4[6] + var$5[var$10] * var$4[10] + var$4[14]) * $inv_w;
    var$5[var$6] = $x;
    var$5[var$8] = $y;
    var$5[var$10] = $z;
},
cbgm_Matrix4_mul = ($mata, $matb) => {
    cbgm_Matrix4_$callClinit();
    cbgm_Matrix4_matrix4_mul($mata, $matb);
},
cbgm_Matrix4_prj = ($mat, $vecs, $offset, $numVecs, $stride) => {
    let $i;
    cbgm_Matrix4_$callClinit();
    $i = 0;
    while ($i < $numVecs) {
        cbgm_Matrix4_matrix4_proj($mat, $vecs, $offset);
        $offset = $offset + $stride | 0;
        $i = $i + 1 | 0;
    }
},
cbgm_Matrix4_inv = $values => {
    cbgm_Matrix4_$callClinit();
    return cbgm_Matrix4_matrix4_inv($values);
},
cbgm_Matrix4_translate = ($this, $x, $y, $z) => {
    cbgm_Matrix4_$callClinit();
    cbgm_Matrix4_tmp.data[0] = 1.0;
    cbgm_Matrix4_tmp.data[4] = 0.0;
    cbgm_Matrix4_tmp.data[8] = 0.0;
    cbgm_Matrix4_tmp.data[12] = $x;
    cbgm_Matrix4_tmp.data[1] = 0.0;
    cbgm_Matrix4_tmp.data[5] = 1.0;
    cbgm_Matrix4_tmp.data[9] = 0.0;
    cbgm_Matrix4_tmp.data[13] = $y;
    cbgm_Matrix4_tmp.data[2] = 0.0;
    cbgm_Matrix4_tmp.data[6] = 0.0;
    cbgm_Matrix4_tmp.data[10] = 1.0;
    cbgm_Matrix4_tmp.data[14] = $z;
    cbgm_Matrix4_tmp.data[3] = 0.0;
    cbgm_Matrix4_tmp.data[7] = 0.0;
    cbgm_Matrix4_tmp.data[11] = 0.0;
    cbgm_Matrix4_tmp.data[15] = 1.0;
    cbgm_Matrix4_mul($this.$val, cbgm_Matrix4_tmp);
    return $this;
},
cbgm_Matrix4_rotate0 = ($this, $axis, $degrees) => {
    if ($degrees === 0.0)
        return $this;
    cbgm_Matrix4_$callClinit();
    cbgm_Matrix4_quat.$set36($axis, $degrees);
    return $this.$rotate1(cbgm_Matrix4_quat);
},
cbgm_Matrix4_rotate = ($this, $rotation) => {
    cbgm_Matrix4_$callClinit();
    $rotation.$toMatrix(cbgm_Matrix4_tmp);
    cbgm_Matrix4_mul($this.$val, cbgm_Matrix4_tmp);
    return $this;
},
cbgm_Matrix4_hasRotationOrScaling = $this => {
    let var$1, var$2;
    a: {
        b: {
            if (!cbgm_MathUtils_isEqual($this.$val.data[0], 1.0))
                break b;
            if (!cbgm_MathUtils_isEqual($this.$val.data[5], 1.0))
                break b;
            if (!cbgm_MathUtils_isEqual($this.$val.data[10], 1.0))
                break b;
            var$1 = $this.$val.data[4];
            if (!cbgm_MathUtils_isZero(var$1))
                break b;
            if (!cbgm_MathUtils_isZero($this.$val.data[8]))
                break b;
            if (!cbgm_MathUtils_isZero($this.$val.data[1]))
                break b;
            if (!cbgm_MathUtils_isZero($this.$val.data[9]))
                break b;
            var$1 = $this.$val.data[2];
            if (!cbgm_MathUtils_isZero(var$1))
                break b;
            if (cbgm_MathUtils_isZero($this.$val.data[6])) {
                var$2 = 0;
                break a;
            }
        }
        var$2 = 1;
    }
    return var$2;
},
cbgm_Matrix4__clinit_ = () => {
    cbgm_Matrix4_tmp = $rt_createFloatArray(16);
    cbgm_Matrix4_quat = cbgm_Quaternion__init_1();
    cbgm_Matrix4_quat2 = cbgm_Quaternion__init_1();
    cbgm_Matrix4_l_vez = cbgm_Vector3__init_();
    cbgm_Matrix4_l_vex = cbgm_Vector3__init_();
    cbgm_Matrix4_l_vey = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpVec = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpMat = cbgm_Matrix4__init_();
    cbgm_Matrix4_right = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpForward = cbgm_Vector3__init_();
    cbgm_Matrix4_tmpUp = cbgm_Vector3__init_();
},
jn_NativeBuffer = $rt_classWithoutFields(0),
jl_NegativeArraySizeException = $rt_classWithoutFields(jl_RuntimeException),
jl_NegativeArraySizeException__init_0 = $this => {
    jl_RuntimeException__init_($this);
},
jl_NegativeArraySizeException__init_ = () => {
    let var_0 = new jl_NegativeArraySizeException();
    jl_NegativeArraySizeException__init_0(var_0);
    return var_0;
};
function cbgu_Timer() {
    jl_Object.call(this);
    this.$tasks = null;
}
let cbgu_Timer_instances = null,
cbgu_Timer_thread = null,
cbgu_Timer_instance = null,
cbgu_Timer_$callClinit = () => {
    cbgu_Timer_$callClinit = $rt_eraseClinit(cbgu_Timer);
    cbgu_Timer__clinit_();
},
cbgu_Timer_instance0 = () => {
    cbgu_Timer_$callClinit();
    if (cbgu_Timer_instance === null)
        cbgu_Timer_instance = cbgu_Timer__init_0();
    return cbgu_Timer_instance;
},
cbgu_Timer__init_ = $this => {
    cbgu_Timer_$callClinit();
    jl_Object__init_($this);
    $this.$tasks = cbgu_Array__init_6(0, 8);
    $this.$start1();
},
cbgu_Timer__init_0 = () => {
    let var_0 = new cbgu_Timer();
    cbgu_Timer__init_(var_0);
    return var_0;
},
cbgu_Timer_scheduleTask = ($this, $task, $delaySeconds) => {
    return $this.$scheduleTask($task, $delaySeconds, 0.0, 0);
},
cbgu_Timer_scheduleTask0 = ($this, $task, $delaySeconds, $intervalSeconds, $repeatCount) => {
    let var$5, var$6, $$je;
    if ($task.$repeatCount != (-1))
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(477)));
    $task.$executeTimeMillis = Long_add(Long_div(cbgu_TimeUtils_nanoTime(), Long_fromInt(1000000)), Long_fromNumber($delaySeconds * 1000.0));
    $task.$intervalMillis = Long_fromNumber($intervalSeconds * 1000.0);
    $task.$repeatCount = $repeatCount;
    var$5 = $this.$tasks;
    jl_Object_monitorEnterSync(var$5);
    a: {
        try {
            $this.$tasks.$add1($task);
            jl_Object_monitorExitSync(var$5);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$6 = $$je;
            break a;

        }
        cbgu_Timer_wake();
        return $task;
    }
    jl_Object_monitorExitSync(var$5);
    $rt_throw(var$6);
},
cbgu_Timer_start = $this => {
    let var$1, var$2, $$je;
    cbgu_Timer_$callClinit();
    var$1 = cbgu_Timer_instances;
    jl_Object_monitorEnterSync(var$1);
    a: {
        b: {
            try {
                if (!cbgu_Timer_instances.$contains2($this, 1))
                    break b;
                jl_Object_monitorExitSync(var$1);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$2 = $$je;
                break a;

            }
            return;
        }
        c: {
            try {
                cbgu_Timer_instances.$add1($this);
                if (cbgu_Timer_thread !== null)
                    break c;
                cbgu_Timer_thread = cbgu_Timer$TimerThread__init_0();
                break c;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$2 = $$je;
                break a;

            }
        }
        try {
            cbgu_Timer_wake();
            jl_Object_monitorExitSync(var$1);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$2 = $$je;
            break a;

        }
        return;
    }
    jl_Object_monitorExitSync(var$1);
    $rt_throw(var$2);
},
cbgu_Timer_update = ($this, $timeMillis, $waitMillis) => {
    let var$3, $i, $n, $task, var$7, $$je;
    var$3 = $this.$tasks;
    jl_Object_monitorEnterSync(var$3);
    a: {
        try {
            $i = 0;
            $n = $this.$tasks.$size0;
            while ($i < $n) {
                $task = $this.$tasks.$get($i);
                if (Long_gt($task.$executeTimeMillis, $timeMillis))
                    $waitMillis = jl_Math_min1($waitMillis, Long_sub($task.$executeTimeMillis, $timeMillis));
                else {
                    if ($task.$repeatCount != (-1)) {
                        if (!$task.$repeatCount)
                            $task.$repeatCount = (-1);
                        cbg_Gdx_app.$postRunnable($task);
                    }
                    if ($task.$repeatCount == (-1)) {
                        $this.$tasks.$removeIndex($i);
                        $i = $i + (-1) | 0;
                        $n = $n + (-1) | 0;
                    } else {
                        $task.$executeTimeMillis = Long_add($timeMillis, $task.$intervalMillis);
                        $waitMillis = jl_Math_min1($waitMillis, $task.$intervalMillis);
                        if ($task.$repeatCount > 0)
                            $task.$repeatCount = $task.$repeatCount - 1 | 0;
                    }
                }
                $i = $i + 1 | 0;
            }
            jl_Object_monitorExitSync(var$3);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$7 = $$je;
            break a;

        }
        return $waitMillis;
    }
    jl_Object_monitorExitSync(var$3);
    $rt_throw(var$7);
},
cbgu_Timer_delay = ($this, $delayMillis) => {
    let var$2, $i, $n, $task, var$6, $$je;
    var$2 = $this.$tasks;
    jl_Object_monitorEnterSync(var$2);
    a: {
        try {
            $i = 0;
            $n = $this.$tasks.$size0;
            while ($i < $n) {
                $task = $this.$tasks.$get($i);
                $task.$executeTimeMillis = Long_add($task.$executeTimeMillis, $delayMillis);
                $i = $i + 1 | 0;
            }
            jl_Object_monitorExitSync(var$2);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$6 = $$je;
            break a;

        }
        return;
    }
    jl_Object_monitorExitSync(var$2);
    $rt_throw(var$6);
},
cbgu_Timer_wake = () => {
    let var$1, var$2, $$je;
    cbgu_Timer_$callClinit();
    var$1 = cbgu_Timer_instances;
    jl_Object_monitorEnterSync(var$1);
    a: {
        try {
            cbgu_Timer_thread.$schedule0(0);
            jl_Object_monitorExitSync(var$1);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$2 = $$je;
            break a;

        }
        return;
    }
    jl_Object_monitorExitSync(var$1);
    $rt_throw(var$2);
},
cbgu_Timer_schedule = ($task, $delaySeconds) => {
    cbgu_Timer_$callClinit();
    return (cbgu_Timer_instance0()).$scheduleTask0($task, $delaySeconds);
},
cbgu_Timer__clinit_ = () => {
    cbgu_Timer_instances = cbgu_Array__init_0(1);
    cbgu_Timer_instance = cbgu_Timer__init_0();
},
jn_ShortBufferImpl = $rt_classWithoutFields(jn_ShortBuffer),
jn_ShortBufferImpl__init_ = ($this, $position, $limit) => {
    jn_ShortBuffer__init_($this, $position, $limit);
},
jn_ShortBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
},
bbb_btBroadphaseInterface = $rt_classWithoutFields(bi_IDLBase),
bbb_btBroadphaseInterface_NULL = null,
bbb_btBroadphaseInterface_T_01 = null,
bbb_btBroadphaseInterface_T_02 = null,
bbb_btBroadphaseInterface_T_03 = null,
bbb_btBroadphaseInterface_$callClinit = () => {
    bbb_btBroadphaseInterface_$callClinit = $rt_eraseClinit(bbb_btBroadphaseInterface);
    bbb_btBroadphaseInterface__clinit_();
},
bbb_btBroadphaseInterface__init_ = ($this, $b, $c) => {
    bbb_btBroadphaseInterface_$callClinit();
    bi_IDLBase__init_($this);
},
bbb_btBroadphaseInterface__init_0 = (var_0, var_1) => {
    let var_2 = new bbb_btBroadphaseInterface();
    bbb_btBroadphaseInterface__init_(var_2, var_0, var_1);
    return var_2;
},
bbb_btBroadphaseInterface_native_new = () => {
    bbb_btBroadphaseInterface_$callClinit();
    return bbb_btBroadphaseInterface__init_0(0, 0);
},
bbb_btBroadphaseInterface__clinit_ = () => {
    bbb_btBroadphaseInterface_NULL = bbb_btBroadphaseInterface_native_new();
    bbb_btBroadphaseInterface_T_01 = bbb_btBroadphaseInterface_native_new();
    bbb_btBroadphaseInterface_T_02 = bbb_btBroadphaseInterface_native_new();
    bbb_btBroadphaseInterface_T_03 = bbb_btBroadphaseInterface_native_new();
},
bbb_btDbvtBroadphase = $rt_classWithoutFields(bbb_btBroadphaseInterface),
bbb_btDbvtBroadphase_NULL = null,
bbb_btDbvtBroadphase_T_01 = null,
bbb_btDbvtBroadphase_T_02 = null,
bbb_btDbvtBroadphase_T_03 = null,
bbb_btDbvtBroadphase_$callClinit = () => {
    bbb_btDbvtBroadphase_$callClinit = $rt_eraseClinit(bbb_btDbvtBroadphase);
    bbb_btDbvtBroadphase__clinit_();
},
bbb_btDbvtBroadphase__init_ = $this => {
    let $addr;
    bbb_btDbvtBroadphase_$callClinit();
    bbb_btBroadphaseInterface__init_($this, 1, 1);
    $addr = bbb_btDbvtBroadphase_internal_native_create$js_body$_1();
    bi_IDLBase_internal_reset($this, $addr, 1);
},
bbb_btDbvtBroadphase__init_1 = () => {
    let var_0 = new bbb_btDbvtBroadphase();
    bbb_btDbvtBroadphase__init_(var_0);
    return var_0;
},
bbb_btDbvtBroadphase__init_0 = ($this, $b, $c) => {
    bbb_btDbvtBroadphase_$callClinit();
    bbb_btBroadphaseInterface__init_($this, 1, 1);
},
bbb_btDbvtBroadphase__init_2 = (var_0, var_1) => {
    let var_2 = new bbb_btDbvtBroadphase();
    bbb_btDbvtBroadphase__init_0(var_2, var_0, var_1);
    return var_2;
},
bbb_btDbvtBroadphase_native_new = () => {
    bbb_btDbvtBroadphase_$callClinit();
    return bbb_btDbvtBroadphase__init_2(0, 0);
},
bbb_btDbvtBroadphase__clinit_ = () => {
    bbb_btDbvtBroadphase_NULL = bbb_btDbvtBroadphase_native_new();
    bbb_btDbvtBroadphase_T_01 = bbb_btDbvtBroadphase_native_new();
    bbb_btDbvtBroadphase_T_02 = bbb_btDbvtBroadphase_native_new();
    bbb_btDbvtBroadphase_T_03 = bbb_btDbvtBroadphase_native_new();
},
bbb_btDbvtBroadphase_internal_native_create$js_body$_1 = () => {
    var jsObj = new bullet.btDbvtBroadphase();
    return bullet.getPointer(jsObj);
},
cbgm_Interpolation$Bounce = $rt_classWithoutFields(cbgm_Interpolation$BounceOut),
cbgm_Interpolation$Bounce__init_ = ($this, $bounces) => {
    cbgm_Interpolation$BounceOut__init_($this, $bounces);
},
cbgm_Interpolation$Bounce__init_0 = var_0 => {
    let var_1 = new cbgm_Interpolation$Bounce();
    cbgm_Interpolation$Bounce__init_(var_1, var_0);
    return var_1;
},
cbgss_Stage$setScrollFocus$lambda$_37_0 = $rt_classWithoutFields(),
cbgss_Stage$setScrollFocus$lambda$_37_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgss_Stage$setScrollFocus$lambda$_37_0__init_0 = () => {
    let var_0 = new cbgss_Stage$setScrollFocus$lambda$_37_0();
    cbgss_Stage$setScrollFocus$lambda$_37_0__init_(var_0);
    return var_0;
},
cbgss_Stage$setScrollFocus$lambda$_37_0_get0 = var$0 => {
    return cbgss_Stage$setScrollFocus$lambda$_37_0_get(var$0);
},
cbgss_Stage$setScrollFocus$lambda$_37_0_get = var$0 => {
    return cbgssu_FocusListener$FocusEvent__init_0();
};
function cbgm_Interpolation$Swing() {
    cbgm_Interpolation.call(this);
    this.$scale3 = 0.0;
}
let cbgm_Interpolation$Swing__init_ = ($this, $scale) => {
    cbgm_Interpolation__init_($this);
    $this.$scale3 = $scale * 2.0;
},
cbgm_Interpolation$Swing__init_0 = var_0 => {
    let var_1 = new cbgm_Interpolation$Swing();
    cbgm_Interpolation$Swing__init_(var_1, var_0);
    return var_1;
};
function jnci_UTF16Decoder() {
    let a = this; jnci_BufferedDecoder.call(a);
    a.$bom = 0;
    a.$littleEndian0 = 0;
}
let jnci_UTF16Decoder__init_ = ($this, $cs, $bom, $littleEndian) => {
    jnci_BufferedDecoder__init_($this, $cs, 0.5, 0.5);
    $this.$bom = $bom;
    $this.$littleEndian0 = $littleEndian;
},
jnci_UTF16Decoder__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jnci_UTF16Decoder();
    jnci_UTF16Decoder__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jnci_UTF16Decoder_arrayDecode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let var$8, var$9, var$10, $b;
    if ($this.$bom) {
        if (($inPos + 2 | 0) > $inSize) {
            if ($controller.$hasMoreInput())
                var$8 = null;
            else {
                jnc_CoderResult_$callClinit();
                var$8 = jnc_CoderResult_UNDERFLOW;
            }
            return var$8;
        }
        var$9 = $inArray.data;
        $this.$bom = 0;
        var$10 = $inPos + 1 | 0;
        $b = var$9[$inPos];
        if ($b == (-1)) {
            if (var$9[var$10] != (-2))
                $inPos = var$10 + (-1) | 0;
            else {
                $inPos = var$10 + 1 | 0;
                $this.$littleEndian0 = 1;
            }
        } else if ($b != (-2))
            $inPos = var$10 + (-1) | 0;
        else if (var$9[var$10] != (-1))
            $inPos = var$10 + (-1) | 0;
        else {
            $inPos = var$10 + 1 | 0;
            $this.$littleEndian0 = 0;
        }
    }
    return !$this.$littleEndian0 ? jnci_UTF16Decoder_decodeBE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) : jnci_UTF16Decoder_decodeLE($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller);
},
jnci_UTF16Decoder_decodeLE = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $b1, $b2, $c, var$14, $next;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            if (($inPos + 2 | 0) > $inSize) {
                if ($controller.$hasMoreInput0(2))
                    break a;
                jnc_CoderResult_$callClinit();
                $result = jnc_CoderResult_UNDERFLOW;
                break a;
            }
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $b1 = var$9[$inPos] & 255;
            $inPos = var$10 + 1 | 0;
            $b2 = var$9[var$10] & 255;
            $c = ($b1 | $b2 << 8) & 65535;
            if (!jl_Character_isHighSurrogate($c)) {
                if (jl_Character_isLowSurrogate($c)) {
                    $inPos = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(2);
                    break a;
                }
                var$9 = $outArray.data;
                var$10 = $outPos + 1 | 0;
                var$9[$outPos] = $c;
                $outPos = var$10;
            } else {
                if (($inPos + 2 | 0) >= $inSize) {
                    if (!$controller.$hasMoreInput0(4)) {
                        jnc_CoderResult_$callClinit();
                        $result = jnc_CoderResult_UNDERFLOW;
                    }
                    $inPos = $inPos + (-2) | 0;
                    break a;
                }
                var$10 = $inPos + 1 | 0;
                var$14 = var$9[$inPos] & 255;
                $inPos = var$10 + 1 | 0;
                var$10 = var$9[var$10] & 255;
                $next = (var$14 | var$10 << 8) & 65535;
                if (!jl_Character_isLowSurrogate($next)) {
                    $inPos = $inPos + (-4) | 0;
                    $result = jnc_CoderResult_malformedForLength(4);
                    break a;
                }
                if (($outPos + 2 | 0) > $outSize) {
                    if ($controller.$hasMoreOutput(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$10 = $outPos + 1 | 0;
                var$9[$outPos] = $c;
                $outPos = var$10 + 1 | 0;
                var$9[var$10] = $next;
            }
        }
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
},
jnci_UTF16Decoder_decodeBE = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $b1, $b2, $c, var$14, $next;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            if (($inPos + 2 | 0) > $inSize) {
                if ($controller.$hasMoreInput0(2))
                    break a;
                jnc_CoderResult_$callClinit();
                $result = jnc_CoderResult_UNDERFLOW;
                break a;
            }
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $b1 = var$9[$inPos] & 255;
            $inPos = var$10 + 1 | 0;
            $b2 = var$9[var$10] & 255;
            $c = ($b2 | $b1 << 8) & 65535;
            if (!jl_Character_isHighSurrogate($c)) {
                if (jl_Character_isLowSurrogate($c)) {
                    $inPos = $inPos + (-2) | 0;
                    $result = jnc_CoderResult_malformedForLength(2);
                    break a;
                }
                var$9 = $outArray.data;
                var$10 = $outPos + 1 | 0;
                var$9[$outPos] = $c;
                $outPos = var$10;
            } else {
                if (($inPos + 2 | 0) >= $inSize) {
                    if (!$controller.$hasMoreInput0(4)) {
                        jnc_CoderResult_$callClinit();
                        $result = jnc_CoderResult_UNDERFLOW;
                    }
                    $inPos = $inPos + (-2) | 0;
                    break a;
                }
                var$10 = $inPos + 1 | 0;
                var$14 = var$9[$inPos] & 255;
                $inPos = var$10 + 1 | 0;
                var$10 = var$9[var$10] & 255;
                $next = (var$10 | var$14 << 8) & 65535;
                if (!jl_Character_isLowSurrogate($next)) {
                    $inPos = $inPos + (-4) | 0;
                    $result = jnc_CoderResult_malformedForLength(4);
                    break a;
                }
                if (($outPos + 2 | 0) > $outSize) {
                    if ($controller.$hasMoreOutput(2))
                        break a;
                    jnc_CoderResult_$callClinit();
                    $result = jnc_CoderResult_OVERFLOW;
                    break a;
                }
                var$9 = $outArray.data;
                var$10 = $outPos + 1 | 0;
                var$9[$outPos] = $c;
                $outPos = var$10 + 1 | 0;
                var$9[var$10] = $next;
            }
        }
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
};
function cbgu_Array$ArrayIterable() {
    let a = this; jl_Object.call(a);
    a.$array3 = null;
    a.$allowRemove = 0;
    a.$iterator1 = null;
    a.$iterator2 = null;
}
let cbgu_Array$ArrayIterable__init_0 = ($this, $array) => {
    cbgu_Array$ArrayIterable__init_($this, $array, 1);
},
cbgu_Array$ArrayIterable__init_1 = var_0 => {
    let var_1 = new cbgu_Array$ArrayIterable();
    cbgu_Array$ArrayIterable__init_0(var_1, var_0);
    return var_1;
},
cbgu_Array$ArrayIterable__init_ = ($this, $array, $allowRemove) => {
    jl_Object__init_($this);
    $this.$array3 = $array;
    $this.$allowRemove = $allowRemove;
},
cbgu_Array$ArrayIterable__init_2 = (var_0, var_1) => {
    let var_2 = new cbgu_Array$ArrayIterable();
    cbgu_Array$ArrayIterable__init_(var_2, var_0, var_1);
    return var_2;
},
cbgu_Array$ArrayIterable_iterator = $this => {
    if (cbgu_Collections_allocateIterators)
        return cbgu_Array$ArrayIterator__init_($this.$array3, $this.$allowRemove);
    if ($this.$iterator1 === null) {
        $this.$iterator1 = cbgu_Array$ArrayIterator__init_($this.$array3, $this.$allowRemove);
        $this.$iterator2 = cbgu_Array$ArrayIterator__init_($this.$array3, $this.$allowRemove);
    }
    if ($this.$iterator1.$valid) {
        $this.$iterator2.$index4 = 0;
        $this.$iterator2.$valid = 1;
        $this.$iterator1.$valid = 0;
        return $this.$iterator2;
    }
    $this.$iterator1.$index4 = 0;
    $this.$iterator1.$valid = 1;
    $this.$iterator2.$valid = 0;
    return $this.$iterator1;
},
jl_IllegalStateException = $rt_classWithoutFields(jl_RuntimeException),
jl_IllegalStateException__init_2 = $this => {
    jl_RuntimeException__init_($this);
},
jl_IllegalStateException__init_0 = () => {
    let var_0 = new jl_IllegalStateException();
    jl_IllegalStateException__init_2(var_0);
    return var_0;
},
jl_IllegalStateException__init_1 = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
jl_IllegalStateException__init_ = var_0 => {
    let var_1 = new jl_IllegalStateException();
    jl_IllegalStateException__init_1(var_1, var_0);
    return var_1;
},
cgxgbtd_FileReaderWrapper = $rt_classWithoutFields();
function ju_AbstractList() {
    ju_AbstractCollection.call(this);
    this.$modCount = 0;
}
let ju_AbstractList__init_ = $this => {
    ju_AbstractCollection__init_($this);
},
ju_AbstractList_iterator = $this => {
    return ju_AbstractList$1__init_0($this);
},
jur_ReluctantCompositeQuantifierSet = $rt_classWithoutFields(jur_CompositeQuantifierSet),
jur_ReluctantCompositeQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type) => {
    jur_CompositeQuantifierSet__init_($this, $quant, $innerSet, $next, $type);
},
jur_ReluctantCompositeQuantifierSet__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_ReluctantCompositeQuantifierSet();
    jur_ReluctantCompositeQuantifierSet__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_ReluctantCompositeQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $min, $max, $i, var$7, var$8;
    $min = $this.$quantifier0.$min1();
    $max = $this.$quantifier0.$max1();
    $i = 0;
    while (true) {
        if ($i >= $min) {
            a: {
                while (true) {
                    var$7 = $this.$next1.$matches($stringIndex, $testString, $matchResult);
                    if (var$7 >= 0)
                        break;
                    if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
                        var$7 = $this.$leaf.$accepts($stringIndex, $testString);
                        $stringIndex = $stringIndex + var$7 | 0;
                        $i = $i + 1 | 0;
                    }
                    if (var$7 < 1)
                        break a;
                    if ($i > $max)
                        break a;
                }
                return var$7;
            }
            return (-1);
        }
        if (($stringIndex + $this.$leaf.$charCount() | 0) > $matchResult.$getRightBound()) {
            $matchResult.$hitEnd = 1;
            return (-1);
        }
        var$8 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$8 < 1)
            break;
        $stringIndex = $stringIndex + var$8 | 0;
        $i = $i + 1 | 0;
    }
    return (-1);
},
cbgggu_ShaderProvider = $rt_classWithoutFields(0);
function cbgggu_BaseShaderProvider() {
    jl_Object.call(this);
    this.$shaders0 = null;
}
let cbgggu_BaseShaderProvider__init_ = $this => {
    jl_Object__init_($this);
    $this.$shaders0 = cbgu_Array__init_();
},
cbgggu_BaseShaderProvider_getShader = ($this, $renderable) => {
    let $suggestedShader, var$3, $shader;
    $suggestedShader = $renderable.$shader1;
    if ($suggestedShader !== null && $suggestedShader.$canRender($renderable))
        return $suggestedShader;
    var$3 = $this.$shaders0.$iterator();
    while (true) {
        if (!var$3.$hasNext()) {
            $shader = $this.$createShader($renderable);
            if ($shader.$canRender($renderable)) {
                $shader.$init0();
                $this.$shaders0.$add1($shader);
                return $shader;
            }
            $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(478)));
        }
        $shader = var$3.$next();
        if ($shader.$canRender($renderable))
            break;
    }
    return $shader;
};
function jn_ByteBuffer() {
    jn_Buffer.call(this);
    this.$order0 = null;
}
let jn_ByteBuffer__init_ = $this => {
    jn_Buffer__init_($this);
    jn_ByteOrder_$callClinit();
    $this.$order0 = jn_ByteOrder_BIG_ENDIAN;
},
jn_ByteBuffer_allocateDirect = $capacity => {
    let var$2, var$3, $result;
    if ($capacity < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append0(jl_StringBuilder_append(var$3, $rt_s(264)), $capacity);
        jl_IllegalArgumentException__init_1(var$2, jl_StringBuilder_toString(var$3));
        $rt_throw(var$2);
    }
    $result = jn_ByteBufferJsImpl__init_(null, 0, new Int8Array($capacity), 1, 0);
    $result.$limit4 = $capacity;
    return $result;
},
jn_ByteBuffer_allocate = $capacity => {
    let var$2, var$3, $array, $result;
    if ($capacity < 0) {
        var$2 = new jl_IllegalArgumentException;
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append0(jl_StringBuilder_append(var$3, $rt_s(264)), $capacity);
        jl_IllegalArgumentException__init_1(var$2, jl_StringBuilder_toString(var$3));
        $rt_throw(var$2);
    }
    $array = $rt_createByteArray($capacity);
    $result = jn_ByteBufferJsImpl__init_($array, 0, $array.data, 0, 0);
    $result.$limit4 = $capacity;
    return $result;
},
jn_ByteBuffer_wrap0 = ($array, $offset, $length) => {
    let var$4, $data, $result;
    ju_Objects_checkFromIndexSize($offset, $length, $array.data.length);
    var$4 = $array.data;
    $data = var$4;
    $result = jn_ByteBufferJsImpl__init_($array, 0, $data, 0, 0);
    $result.$position6 = $offset;
    $result.$limit4 = $offset + $length | 0;
    return $result;
},
jn_ByteBuffer_wrap = $array => {
    return jn_ByteBuffer_wrap0($array, 0, $array.data.length);
},
jn_ByteBuffer_get0 = ($this, $dst, $offset, $length) => {
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $dst.data.length) {
        if ($length > jn_Buffer_remaining($this))
            $rt_throw(jn_BufferUnderflowException__init_());
        $this.$getImpl0($this.$position6, $dst, $offset, $length);
        $this.$position6 = $this.$position6 + $length | 0;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_ByteBuffer_get = ($this, $dst) => {
    return $this.$get18($dst, 0, $dst.data.length);
},
jn_ByteBuffer_put0 = ($this, $src, $offset, $length) => {
    if (!$length)
        return $this;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $src.data.length) {
        if ($length > jn_Buffer_remaining($this))
            $rt_throw(jn_BufferOverflowException__init_());
        $this.$putImpl2($src, $offset, $this.$position6, $length);
        $this.$position6 = $this.$position6 + $length | 0;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_ByteBuffer_put = ($this, $src) => {
    return $this.$put2($src, 0, $src.data.length);
},
jn_ByteBuffer_hasArray = $this => {
    return $this.$hasArrayImpl();
},
jn_ByteBuffer_array = $this => {
    return $this.$arrayImpl();
},
jn_ByteBuffer_toString = $this => {
    let var$1, var$2, var$3, var$4, var$5, var$6;
    var$1 = $this.$position6;
    var$2 = $this.$limit4;
    var$3 = jn_Buffer_capacity($this);
    if ($this.$mark < 0)
        var$4 = $rt_s(300);
    else {
        var$5 = $this.$mark;
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(479)), var$5);
        var$4 = jl_StringBuilder_toString(var$4);
    }
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$6, $rt_s(480)), var$1), $rt_s(481)), var$2), $rt_s(482)), var$3), $rt_s(483)), var$4), 93);
    var$4 = jl_StringBuilder_toString(var$6);
    return var$4;
},
jn_ByteBuffer_hashCode = $this => {
    let $hashCode, $pos, $i;
    $hashCode = 0;
    $pos = jn_Buffer_position($this);
    $i = jn_Buffer_position($this);
    while ($i < $this.$limit4) {
        $hashCode = (31 * $hashCode | 0) + $this.$get21($pos) | 0;
        $i = $i + 1 | 0;
    }
    return $hashCode;
},
jn_ByteBuffer_equals = ($this, $obj) => {
    let $other, $sz, $a, $b, $i, var$7, var$8, var$9;
    if ($this === $obj)
        return 1;
    if (!($obj instanceof jn_ByteBuffer))
        return 0;
    $other = $obj;
    $sz = jn_Buffer_remaining($this);
    if ($sz != jn_Buffer_remaining($other))
        return 0;
    $a = jn_Buffer_position($this);
    $b = jn_Buffer_position($other);
    $i = 0;
    while ($i < $sz) {
        var$7 = $a + 1 | 0;
        var$8 = $this.$get21($a);
        var$9 = $b + 1 | 0;
        if (var$8 != $other.$get21($b))
            return 0;
        $i = $i + 1 | 0;
        $a = var$7;
        $b = var$9;
    }
    return 1;
},
jn_ByteBuffer_order = ($this, $bo) => {
    $this.$order0 = $bo;
    $this.$onOrderChanged();
    return $this;
},
jn_ByteBuffer_onOrderChanged = $this => {
    return;
},
jn_ByteBuffer_flip = $this => {
    jn_Buffer_flip($this);
    return $this;
},
jn_ByteBuffer_limit0 = ($this, $newLimit) => {
    jn_Buffer_limit0($this, $newLimit);
    return $this;
},
jn_ByteBuffer_position = ($this, $newPosition) => {
    jn_Buffer_position0($this, $newPosition);
    return $this;
},
jn_ByteBuffer_flip0 = $this => {
    return jn_ByteBuffer_flip($this);
},
jn_ByteBuffer_limit = ($this, var$1) => {
    return $this.$limit3(var$1);
},
jn_ByteBuffer_position0 = ($this, var$1) => {
    return $this.$position2(var$1);
},
jur_SOLSet = $rt_classWithoutFields(jur_AbstractSet),
jur_SOLSet__init_ = $this => {
    jur_AbstractSet__init_($this);
},
jur_SOLSet__init_0 = () => {
    let var_0 = new jur_SOLSet();
    jur_SOLSet__init_(var_0);
    return var_0;
},
jur_SOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    if ($strIndex && !($matchResult.$hasAnchoringBounds() && $strIndex == $matchResult.$getLeftBound()))
        return (-1);
    return $this.$next1.$matches($strIndex, $testString, $matchResult);
},
jur_SOLSet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_SOLSet_getName = $this => {
    return $rt_s(484);
};
function cbgm_Vector3() {
    let a = this; jl_Object.call(a);
    a.$x = 0.0;
    a.$y = 0.0;
    a.$z = 0.0;
}
let cbgm_Vector3_X = null,
cbgm_Vector3_Y = null,
cbgm_Vector3_Z = null,
cbgm_Vector3_Zero = null,
cbgm_Vector3_tmpMat = null,
cbgm_Vector3_$callClinit = () => {
    cbgm_Vector3_$callClinit = $rt_eraseClinit(cbgm_Vector3);
    cbgm_Vector3__clinit_();
},
cbgm_Vector3__init_2 = $this => {
    cbgm_Vector3_$callClinit();
    jl_Object__init_($this);
},
cbgm_Vector3__init_ = () => {
    let var_0 = new cbgm_Vector3();
    cbgm_Vector3__init_2(var_0);
    return var_0;
},
cbgm_Vector3__init_1 = ($this, $x, $y, $z) => {
    cbgm_Vector3_$callClinit();
    jl_Object__init_($this);
    $this.$set8($x, $y, $z);
},
cbgm_Vector3__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cbgm_Vector3();
    cbgm_Vector3__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgm_Vector3_set0 = ($this, $x, $y, $z) => {
    $this.$x = $x;
    $this.$y = $y;
    $this.$z = $z;
    return $this;
},
cbgm_Vector3_set = ($this, $vector) => {
    return $this.$set8($vector.$x, $vector.$y, $vector.$z);
},
cbgm_Vector3_add0 = ($this, $vector) => {
    return $this.$add9($vector.$x, $vector.$y, $vector.$z);
},
cbgm_Vector3_add = ($this, $x, $y, $z) => {
    return $this.$set8($this.$x + $x, $this.$y + $y, $this.$z + $z);
},
cbgm_Vector3_sub = ($this, $a_vec) => {
    return $this.$sub0($a_vec.$x, $a_vec.$y, $a_vec.$z);
},
cbgm_Vector3_sub0 = ($this, $x, $y, $z) => {
    return $this.$set8($this.$x - $x, $this.$y - $y, $this.$z - $z);
},
cbgm_Vector3_scl = ($this, $scalar) => {
    return $this.$set8($this.$x * $scalar, $this.$y * $scalar, $this.$z * $scalar);
},
cbgm_Vector3_len = ($x, $y, $z) => {
    cbgm_Vector3_$callClinit();
    return jl_Math_sqrt($x * $x + $y * $y + $z * $z);
},
cbgm_Vector3_len0 = $this => {
    return jl_Math_sqrt($this.$x * $this.$x + $this.$y * $this.$y + $this.$z * $this.$z);
},
cbgm_Vector3_len2 = $this => {
    return $this.$x * $this.$x + $this.$y * $this.$y + $this.$z * $this.$z;
},
cbgm_Vector3_dst = ($this, $vector) => {
    let $a, $b, $c;
    $a = $vector.$x - $this.$x;
    $b = $vector.$y - $this.$y;
    $c = $vector.$z - $this.$z;
    return jl_Math_sqrt($a * $a + $b * $b + $c * $c);
},
cbgm_Vector3_dst2 = ($this, $point) => {
    let $a, $b, $c;
    $a = $point.$x - $this.$x;
    $b = $point.$y - $this.$y;
    $c = $point.$z - $this.$z;
    return $a * $a + $b * $b + $c * $c;
},
cbgm_Vector3_nor = $this => {
    let $len2;
    $len2 = $this.$len2();
    if ($len2 !== 0.0 && $len2 !== 1.0)
        return $this.$scl(1.0 / jl_Math_sqrt($len2));
    return $this;
},
cbgm_Vector3_dot = ($this, $vector) => {
    return $this.$x * $vector.$x + $this.$y * $vector.$y + $this.$z * $vector.$z;
},
cbgm_Vector3_crs = ($this, $vector) => {
    return $this.$set8($this.$y * $vector.$z - $this.$z * $vector.$y, $this.$z * $vector.$x - $this.$x * $vector.$z, $this.$x * $vector.$y - $this.$y * $vector.$x);
},
cbgm_Vector3_crs0 = ($this, $x, $y, $z) => {
    return $this.$set8($this.$y * $z - $this.$z * $y, $this.$z * $x - $this.$x * $z, $this.$x * $y - $this.$y * $x);
},
cbgm_Vector3_mul = ($this, $matrix) => {
    let $l_mat, var$3;
    $l_mat = $matrix.$val;
    var$3 = $l_mat.data;
    return $this.$set8($this.$x * var$3[0] + $this.$y * var$3[4] + $this.$z * var$3[8] + var$3[12], $this.$x * var$3[1] + $this.$y * var$3[5] + $this.$z * var$3[9] + var$3[13], $this.$x * var$3[2] + $this.$y * var$3[6] + $this.$z * var$3[10] + var$3[14]);
},
cbgm_Vector3_mul0 = ($this, $matrix) => {
    let $l_mat, var$3;
    $l_mat = $matrix.$val0;
    var$3 = $l_mat.data;
    return $this.$set8($this.$x * var$3[0] + $this.$y * var$3[3] + $this.$z * var$3[6], $this.$x * var$3[1] + $this.$y * var$3[4] + $this.$z * var$3[7], $this.$x * var$3[2] + $this.$y * var$3[5] + $this.$z * var$3[8]);
},
cbgm_Vector3_prj = ($this, $matrix) => {
    let $l_mat, var$3, $l_w;
    $l_mat = $matrix.$val;
    var$3 = $l_mat.data;
    $l_w = 1.0 / ($this.$x * var$3[3] + $this.$y * var$3[7] + $this.$z * var$3[11] + var$3[15]);
    return $this.$set8(($this.$x * var$3[0] + $this.$y * var$3[4] + $this.$z * var$3[8] + var$3[12]) * $l_w, ($this.$x * var$3[1] + $this.$y * var$3[5] + $this.$z * var$3[9] + var$3[13]) * $l_w, ($this.$x * var$3[2] + $this.$y * var$3[6] + $this.$z * var$3[10] + var$3[14]) * $l_w);
},
cbgm_Vector3_rotate = ($this, $axis, $degrees) => {
    cbgm_Vector3_$callClinit();
    cbgm_Vector3_tmpMat.$setToRotation($axis, $degrees);
    return $this.$mul0(cbgm_Vector3_tmpMat);
},
cbgm_Vector3_isZero = $this => {
    return $this.$x === 0.0 && $this.$y === 0.0 && $this.$z === 0.0 ? 1 : 0;
},
cbgm_Vector3_lerp = ($this, $target, $alpha) => {
    $this.$x = $this.$x + $alpha * ($target.$x - $this.$x);
    $this.$y = $this.$y + $alpha * ($target.$y - $this.$y);
    $this.$z = $this.$z + $alpha * ($target.$z - $this.$z);
    return $this;
},
cbgm_Vector3_toString = $this => {
    return ((((((((jl_StringBuilder__init_()).$append1($rt_s(485))).$append20($this.$x)).$append1($rt_s(426))).$append20($this.$y)).$append1($rt_s(426))).$append20($this.$z)).$append1($rt_s(486))).$toString();
},
cbgm_Vector3_hashCode = $this => {
    let var$1;
    var$1 = 31 + cbgu_NumberUtils_floatToIntBits($this.$x) | 0;
    var$1 = (31 * var$1 | 0) + cbgu_NumberUtils_floatToIntBits($this.$y) | 0;
    var$1 = (31 * var$1 | 0) + cbgu_NumberUtils_floatToIntBits($this.$z) | 0;
    return var$1;
},
cbgm_Vector3_equals = ($this, $obj) => {
    let $other;
    if ($this === $obj)
        return 1;
    if ($obj === null)
        return 0;
    if (jl_Object_getClass($this) !== jl_Object_getClass($obj))
        return 0;
    $other = $obj;
    if (cbgu_NumberUtils_floatToIntBits($this.$x) != cbgu_NumberUtils_floatToIntBits($other.$x))
        return 0;
    if (cbgu_NumberUtils_floatToIntBits($this.$y) != cbgu_NumberUtils_floatToIntBits($other.$y))
        return 0;
    if (cbgu_NumberUtils_floatToIntBits($this.$z) == cbgu_NumberUtils_floatToIntBits($other.$z))
        return 1;
    return 0;
},
cbgm_Vector3__clinit_ = () => {
    cbgm_Vector3_X = cbgm_Vector3__init_0(1.0, 0.0, 0.0);
    cbgm_Vector3_Y = cbgm_Vector3__init_0(0.0, 1.0, 0.0);
    cbgm_Vector3_Z = cbgm_Vector3__init_0(0.0, 0.0, 1.0);
    cbgm_Vector3_Zero = cbgm_Vector3__init_0(0.0, 0.0, 0.0);
    cbgm_Vector3_tmpMat = cbgm_Matrix4__init_();
};
function cbgm_Vector2() {
    let a = this; jl_Object.call(a);
    a.$x0 = 0.0;
    a.$y0 = 0.0;
}
let cbgm_Vector2_X = null,
cbgm_Vector2_Y = null,
cbgm_Vector2_Zero = null,
cbgm_Vector2_$callClinit = () => {
    cbgm_Vector2_$callClinit = $rt_eraseClinit(cbgm_Vector2);
    cbgm_Vector2__clinit_();
},
cbgm_Vector2__init_1 = $this => {
    cbgm_Vector2_$callClinit();
    jl_Object__init_($this);
},
cbgm_Vector2__init_ = () => {
    let var_0 = new cbgm_Vector2();
    cbgm_Vector2__init_1(var_0);
    return var_0;
},
cbgm_Vector2__init_2 = ($this, $x, $y) => {
    cbgm_Vector2_$callClinit();
    jl_Object__init_($this);
    $this.$x0 = $x;
    $this.$y0 = $y;
},
cbgm_Vector2__init_0 = (var_0, var_1) => {
    let var_2 = new cbgm_Vector2();
    cbgm_Vector2__init_2(var_2, var_0, var_1);
    return var_2;
},
cbgm_Vector2_len = $this => {
    return jl_Math_sqrt($this.$x0 * $this.$x0 + $this.$y0 * $this.$y0);
},
cbgm_Vector2_set0 = ($this, $v) => {
    $this.$x0 = $v.$x0;
    $this.$y0 = $v.$y0;
    return $this;
},
cbgm_Vector2_set = ($this, $x, $y) => {
    $this.$x0 = $x;
    $this.$y0 = $y;
    return $this;
},
cbgm_Vector2_nor = $this => {
    let $len;
    $len = $this.$len();
    if ($len !== 0.0) {
        $this.$x0 = $this.$x0 / $len;
        $this.$y0 = $this.$y0 / $len;
    }
    return $this;
},
cbgm_Vector2_dst = ($this, $v) => {
    let $x_d, $y_d;
    $x_d = $v.$x0 - $this.$x0;
    $y_d = $v.$y0 - $this.$y0;
    return jl_Math_sqrt($x_d * $x_d + $y_d * $y_d);
},
cbgm_Vector2__clinit_ = () => {
    cbgm_Vector2_X = cbgm_Vector2__init_0(1.0, 0.0);
    cbgm_Vector2_Y = cbgm_Vector2__init_0(0.0, 1.0);
    cbgm_Vector2_Zero = cbgm_Vector2__init_0(0.0, 0.0);
};
function cbgggs_BaseShader$Uniform() {
    let a = this; jl_Object.call(a);
    a.$alias0 = null;
    a.$materialMask = Long_ZERO;
    a.$environmentMask = Long_ZERO;
    a.$overallMask = Long_ZERO;
}
let cbgggs_BaseShader$Uniform__init_2 = ($this, $alias, $materialMask, $environmentMask, $overallMask) => {
    jl_Object__init_($this);
    $this.$alias0 = $alias;
    $this.$materialMask = $materialMask;
    $this.$environmentMask = $environmentMask;
    $this.$overallMask = $overallMask;
},
cbgggs_BaseShader$Uniform__init_6 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgggs_BaseShader$Uniform();
    cbgggs_BaseShader$Uniform__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgggs_BaseShader$Uniform__init_3 = ($this, $alias, $materialMask, $environmentMask) => {
    cbgggs_BaseShader$Uniform__init_2($this, $alias, $materialMask, $environmentMask, Long_ZERO);
},
cbgggs_BaseShader$Uniform__init_5 = (var_0, var_1, var_2) => {
    let var_3 = new cbgggs_BaseShader$Uniform();
    cbgggs_BaseShader$Uniform__init_3(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgggs_BaseShader$Uniform__init_1 = ($this, $alias, $overallMask) => {
    cbgggs_BaseShader$Uniform__init_2($this, $alias, Long_ZERO, Long_ZERO, $overallMask);
},
cbgggs_BaseShader$Uniform__init_0 = (var_0, var_1) => {
    let var_2 = new cbgggs_BaseShader$Uniform();
    cbgggs_BaseShader$Uniform__init_1(var_2, var_0, var_1);
    return var_2;
},
cbgggs_BaseShader$Uniform__init_4 = ($this, $alias) => {
    cbgggs_BaseShader$Uniform__init_3($this, $alias, Long_ZERO, Long_ZERO);
},
cbgggs_BaseShader$Uniform__init_ = var_0 => {
    let var_1 = new cbgggs_BaseShader$Uniform();
    cbgggs_BaseShader$Uniform__init_4(var_1, var_0);
    return var_1;
},
cbgggs_BaseShader$Uniform_validate = ($this, $shader, $inputID, $renderable) => {
    let $matFlags, $envFlags;
    $matFlags = $renderable !== null && $renderable.$material !== null ? cbggg_Attributes_getMask($renderable.$material) : Long_ZERO;
    $envFlags = $renderable !== null && $renderable.$environment !== null ? cbggg_Attributes_getMask($renderable.$environment) : Long_ZERO;
    return Long_eq(Long_and($matFlags, $this.$materialMask), $this.$materialMask) && Long_eq(Long_and($envFlags, $this.$environmentMask), $this.$environmentMask) && Long_eq(Long_and(Long_or($matFlags, $envFlags), $this.$overallMask), $this.$overallMask) ? 1 : 0;
};
function cbggga_DirectionalLightsAttribute() {
    cbggg_Attribute.call(this);
    this.$lights = null;
}
let cbggga_DirectionalLightsAttribute_Type = Long_ZERO,
cbggga_DirectionalLightsAttribute_$callClinit = () => {
    cbggga_DirectionalLightsAttribute_$callClinit = $rt_eraseClinit(cbggga_DirectionalLightsAttribute);
    cbggga_DirectionalLightsAttribute__clinit_();
},
cbggga_DirectionalLightsAttribute__init_ = $this => {
    cbggga_DirectionalLightsAttribute_$callClinit();
    cbggg_Attribute__init_($this, cbggga_DirectionalLightsAttribute_Type);
    $this.$lights = cbgu_Array__init_0(1);
},
cbggga_DirectionalLightsAttribute__init_1 = () => {
    let var_0 = new cbggga_DirectionalLightsAttribute();
    cbggga_DirectionalLightsAttribute__init_(var_0);
    return var_0;
},
cbggga_DirectionalLightsAttribute__init_0 = ($this, $copyFrom) => {
    cbggga_DirectionalLightsAttribute_$callClinit();
    cbggga_DirectionalLightsAttribute__init_($this);
    $this.$lights.$addAll1($copyFrom.$lights);
},
cbggga_DirectionalLightsAttribute__init_2 = var_0 => {
    let var_1 = new cbggga_DirectionalLightsAttribute();
    cbggga_DirectionalLightsAttribute__init_0(var_1, var_0);
    return var_1;
},
cbggga_DirectionalLightsAttribute_copy = $this => {
    return cbggga_DirectionalLightsAttribute__init_2($this);
},
cbggga_DirectionalLightsAttribute_hashCode = $this => {
    let $result, var$2, $light;
    $result = cbggg_Attribute_hashCode($this);
    var$2 = $this.$lights.$iterator();
    while (var$2.$hasNext()) {
        $light = var$2.$next();
        $result = (1229 * $result | 0) + ($light !== null ? $light.$hashCode0() : 0) | 0;
    }
    return $result;
},
cbggga_DirectionalLightsAttribute_copy0 = $this => {
    return $this.$copy3();
},
cbggga_DirectionalLightsAttribute__clinit_ = () => {
    cbggga_DirectionalLightsAttribute_Type = cbggg_Attribute_register($rt_s(487));
};
function cbgu_SnapshotArray() {
    let a = this; cbgu_Array.call(a);
    a.$snapshot = null;
    a.$recycled = null;
    a.$snapshots = 0;
}
let cbgu_SnapshotArray__init_ = ($this, $ordered, $capacity, $arraySupplier) => {
    cbgu_Array__init_1($this, $ordered, $capacity, $arraySupplier);
},
cbgu_SnapshotArray__init_1 = (var_0, var_1, var_2) => {
    let var_3 = new cbgu_SnapshotArray();
    cbgu_SnapshotArray__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgu_SnapshotArray__init_0 = ($this, $capacity) => {
    cbgu_Array__init_3($this, $capacity);
},
cbgu_SnapshotArray__init_2 = var_0 => {
    let var_1 = new cbgu_SnapshotArray();
    cbgu_SnapshotArray__init_0(var_1, var_0);
    return var_1;
},
cbgu_SnapshotArray_begin = $this => {
    cbgu_SnapshotArray_modified($this);
    $this.$snapshot = $this.$items;
    $this.$snapshots = $this.$snapshots + 1 | 0;
    return $this.$items;
},
cbgu_SnapshotArray_end = $this => {
    let $i, $n;
    $this.$snapshots = jl_Math_max(0, $this.$snapshots - 1 | 0);
    if ($this.$snapshot === null)
        return;
    a: {
        if ($this.$snapshot !== $this.$items && !$this.$snapshots) {
            $this.$recycled = $this.$snapshot;
            $i = 0;
            $n = $this.$recycled.data.length;
            while (true) {
                if ($i >= $n)
                    break a;
                $this.$recycled.data[$i] = null;
                $i = $i + 1 | 0;
            }
        }
    }
    $this.$snapshot = null;
},
cbgu_SnapshotArray_modified = $this => {
    if ($this.$snapshot !== null && $this.$snapshot === $this.$items) {
        if ($this.$recycled !== null && $this.$recycled.data.length >= $this.$size0) {
            jl_System_fastArraycopy($this.$items, 0, $this.$recycled, 0, $this.$size0);
            $this.$items = $this.$recycled;
            $this.$recycled = null;
        } else
            $this.$resize($this.$items.data.length);
        return;
    }
},
cbgu_SnapshotArray_removeValue = ($this, $value, $identity) => {
    cbgu_SnapshotArray_modified($this);
    return cbgu_Array_removeValue($this, $value, $identity);
},
cbgu_SnapshotArray_removeIndex = ($this, $index) => {
    cbgu_SnapshotArray_modified($this);
    return cbgu_Array_removeIndex($this, $index);
},
cbgu_SnapshotArray_clear = $this => {
    cbgu_SnapshotArray_modified($this);
    cbgu_Array_clear($this);
},
bbb_btDispatcher = $rt_classWithoutFields(bi_IDLBase),
bbb_btDispatcher_NULL = null,
bbb_btDispatcher_T_01 = null,
bbb_btDispatcher_T_02 = null,
bbb_btDispatcher_T_03 = null,
bbb_btDispatcher_$callClinit = () => {
    bbb_btDispatcher_$callClinit = $rt_eraseClinit(bbb_btDispatcher);
    bbb_btDispatcher__clinit_();
},
bbb_btDispatcher__init_ = ($this, $b, $c) => {
    bbb_btDispatcher_$callClinit();
    bi_IDLBase__init_($this);
},
bbb_btDispatcher__init_0 = (var_0, var_1) => {
    let var_2 = new bbb_btDispatcher();
    bbb_btDispatcher__init_(var_2, var_0, var_1);
    return var_2;
},
bbb_btDispatcher_native_new = () => {
    bbb_btDispatcher_$callClinit();
    return bbb_btDispatcher__init_0(0, 0);
},
bbb_btDispatcher__clinit_ = () => {
    bbb_btDispatcher_NULL = bbb_btDispatcher_native_new();
    bbb_btDispatcher_T_01 = bbb_btDispatcher_native_new();
    bbb_btDispatcher_T_02 = bbb_btDispatcher_native_new();
    bbb_btDispatcher_T_03 = bbb_btDispatcher_native_new();
},
bbc_btCollisionDispatcher = $rt_classWithoutFields(bbb_btDispatcher),
bbc_btCollisionDispatcher_NULL = null,
bbc_btCollisionDispatcher_T_01 = null,
bbc_btCollisionDispatcher_T_02 = null,
bbc_btCollisionDispatcher_T_03 = null,
bbc_btCollisionDispatcher_$callClinit = () => {
    bbc_btCollisionDispatcher_$callClinit = $rt_eraseClinit(bbc_btCollisionDispatcher);
    bbc_btCollisionDispatcher__clinit_();
},
bbc_btCollisionDispatcher__init_0 = ($this, $conf) => {
    let $addr;
    bbc_btCollisionDispatcher_$callClinit();
    bbb_btDispatcher__init_($this, 1, 1);
    $addr = bbc_btCollisionDispatcher_internal_native_create_btCollisionConfiguration$js_body$_1($conf.$native_address);
    bi_IDLBase_internal_reset($this, $addr, 1);
},
bbc_btCollisionDispatcher__init_2 = var_0 => {
    let var_1 = new bbc_btCollisionDispatcher();
    bbc_btCollisionDispatcher__init_0(var_1, var_0);
    return var_1;
},
bbc_btCollisionDispatcher__init_ = ($this, $b, $c) => {
    bbc_btCollisionDispatcher_$callClinit();
    bbb_btDispatcher__init_($this, 1, 1);
},
bbc_btCollisionDispatcher__init_1 = (var_0, var_1) => {
    let var_2 = new bbc_btCollisionDispatcher();
    bbc_btCollisionDispatcher__init_(var_2, var_0, var_1);
    return var_2;
},
bbc_btCollisionDispatcher_native_new = () => {
    bbc_btCollisionDispatcher_$callClinit();
    return bbc_btCollisionDispatcher__init_1(0, 0);
},
bbc_btCollisionDispatcher__clinit_ = () => {
    bbc_btCollisionDispatcher_NULL = bbc_btCollisionDispatcher_native_new();
    bbc_btCollisionDispatcher_T_01 = bbc_btCollisionDispatcher_native_new();
    bbc_btCollisionDispatcher_T_02 = bbc_btCollisionDispatcher_native_new();
    bbc_btCollisionDispatcher_T_03 = bbc_btCollisionDispatcher_native_new();
},
bbc_btCollisionDispatcher_internal_native_create_btCollisionConfiguration$js_body$_1 = var$1 => {
    var jsObj = new bullet.btCollisionDispatcher(var$1);
    return bullet.getPointer(jsObj);
};
function cgxgbt_TeaClipboard$_init_$lambda$_0_1() {
    jl_Object.call(this);
    this.$_012 = null;
}
let cgxgbt_TeaClipboard$_init_$lambda$_0_1__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_012 = var$1;
},
cgxgbt_TeaClipboard$_init_$lambda$_0_1__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaClipboard$_init_$lambda$_0_1();
    cgxgbt_TeaClipboard$_init_$lambda$_0_1__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaClipboard$_init_$lambda$_0_1_handleEvent = (var$0, var$1) => {
    cgxgbt_TeaClipboard_lambda$new$1(var$0.$_012, var$1);
},
cgxgbt_TeaClipboard$_init_$lambda$_0_1_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
};
function cgxgbt_TeaClipboard$_init_$lambda$_0_2() {
    jl_Object.call(this);
    this.$_05 = null;
}
let cgxgbt_TeaClipboard$_init_$lambda$_0_2__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_05 = var$1;
},
cgxgbt_TeaClipboard$_init_$lambda$_0_2__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaClipboard$_init_$lambda$_0_2();
    cgxgbt_TeaClipboard$_init_$lambda$_0_2__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaClipboard$_init_$lambda$_0_2_handleEvent = (var$0, var$1) => {
    cgxgbt_TeaClipboard_lambda$new$2(var$0.$_05, var$1);
},
cgxgbt_TeaClipboard$_init_$lambda$_0_2_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
},
ju_AbstractMap = $rt_classWithoutFields(),
ju_AbstractMap__init_ = $this => {
    jl_Object__init_($this);
};
function ju_HashMap() {
    let a = this; ju_AbstractMap.call(a);
    a.$elementCount = 0;
    a.$elementData = null;
    a.$modCount0 = 0;
    a.$loadFactor5 = 0.0;
    a.$threshold2 = 0;
}
let ju_HashMap_newElementArray = ($this, $s) => {
    return $rt_createArray(ju_HashMap$HashEntry, $s);
},
ju_HashMap__init_2 = $this => {
    ju_HashMap__init_0($this, 16);
},
ju_HashMap__init_ = () => {
    let var_0 = new ju_HashMap();
    ju_HashMap__init_2(var_0);
    return var_0;
},
ju_HashMap__init_0 = ($this, $capacity) => {
    ju_HashMap__init_1($this, $capacity, 0.75);
},
ju_HashMap__init_3 = var_0 => {
    let var_1 = new ju_HashMap();
    ju_HashMap__init_0(var_1, var_0);
    return var_1;
},
ju_HashMap_calculateCapacity = $x => {
    let var$2, var$3;
    if ($x >= 1073741824)
        return 1073741824;
    if (!$x)
        return 16;
    var$2 = $x - 1 | 0;
    var$3 = var$2 | var$2 >> 1;
    var$3 = var$3 | var$3 >> 2;
    var$3 = var$3 | var$3 >> 4;
    var$3 = var$3 | var$3 >> 8;
    var$3 = var$3 | var$3 >> 16;
    return var$3 + 1 | 0;
},
ju_HashMap__init_1 = ($this, $capacity, $loadFactor) => {
    let var$3;
    ju_AbstractMap__init_($this);
    if ($capacity >= 0 && $loadFactor > 0.0) {
        var$3 = ju_HashMap_calculateCapacity($capacity);
        $this.$elementCount = 0;
        $this.$elementData = $this.$newElementArray0(var$3);
        $this.$loadFactor5 = $loadFactor;
        ju_HashMap_computeThreshold($this);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
},
ju_HashMap__init_4 = (var_0, var_1) => {
    let var_2 = new ju_HashMap();
    ju_HashMap__init_1(var_2, var_0, var_1);
    return var_2;
},
ju_HashMap_computeThreshold = $this => {
    $this.$threshold2 = $this.$elementData.data.length * $this.$loadFactor5 | 0;
},
ju_HashMap_containsKey = ($this, $key) => {
    let $m;
    $m = ju_HashMap_entryByKey($this, $key);
    return $m === null ? 0 : 1;
},
ju_HashMap_get = ($this, $key) => {
    let $m;
    $m = ju_HashMap_entryByKey($this, $key);
    if ($m === null)
        return null;
    return $m.$value;
},
ju_HashMap_entryByKey = ($this, $key) => {
    let $m, $hash, $index;
    if ($key === null)
        $m = ju_HashMap_findNullKeyEntry($this);
    else {
        $hash = $key.$hashCode0();
        $index = $hash & ($this.$elementData.data.length - 1 | 0);
        $m = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
    }
    return $m;
},
ju_HashMap_findNonNullKeyEntry = ($this, $key, $index, $keyHash) => {
    let $m;
    $m = $this.$elementData.data[$index];
    while ($m !== null && !($m.$origKeyHash == $keyHash && ju_HashMap_areEqualKeys($key, $m.$key))) {
        $m = $m.$next2;
    }
    return $m;
},
ju_HashMap_findNullKeyEntry = $this => {
    let $m;
    $m = $this.$elementData.data[0];
    while ($m !== null && $m.$key !== null) {
        $m = $m.$next2;
    }
    return $m;
},
ju_HashMap_put = ($this, $key, $value) => {
    return ju_HashMap_putImpl($this, $key, $value);
},
ju_HashMap_putImpl = ($this, $key, $value) => {
    let $entry, var$4, $hash, $index, $result;
    if ($key === null) {
        $entry = ju_HashMap_findNullKeyEntry($this);
        if ($entry === null) {
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            $entry = ju_HashMap_createHashedEntry($this, null, 0, 0);
            var$4 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$4;
            if (var$4 > $this.$threshold2)
                $this.$rehash();
        }
    } else {
        $hash = $key.$hashCode0();
        $index = $hash & ($this.$elementData.data.length - 1 | 0);
        $entry = ju_HashMap_findNonNullKeyEntry($this, $key, $index, $hash);
        if ($entry === null) {
            $this.$modCount0 = $this.$modCount0 + 1 | 0;
            $entry = ju_HashMap_createHashedEntry($this, $key, $index, $hash);
            var$4 = $this.$elementCount + 1 | 0;
            $this.$elementCount = var$4;
            if (var$4 > $this.$threshold2)
                $this.$rehash();
        }
    }
    $result = $entry.$value;
    $entry.$value = $value;
    return $result;
},
ju_HashMap_createHashedEntry = ($this, $key, $index, $hash) => {
    let $entry;
    $entry = ju_HashMap$HashEntry__init_0($key, $hash);
    $entry.$next2 = $this.$elementData.data[$index];
    $this.$elementData.data[$index] = $entry;
    return $entry;
},
ju_HashMap_rehash = ($this, $capacity) => {
    let $length, $newData, $i, $entry, var$6, $index, $next;
    $length = ju_HashMap_calculateCapacity(!$capacity ? 1 : $capacity << 1);
    $newData = $this.$newElementArray0($length);
    $i = 0;
    while ($i < $this.$elementData.data.length) {
        $entry = $this.$elementData.data[$i];
        $this.$elementData.data[$i] = null;
        while ($entry !== null) {
            var$6 = $newData.data;
            $index = $entry.$origKeyHash & ($length - 1 | 0);
            $next = $entry.$next2;
            $entry.$next2 = var$6[$index];
            var$6[$index] = $entry;
            $entry = $next;
        }
        $i = $i + 1 | 0;
    }
    $this.$elementData = $newData;
    ju_HashMap_computeThreshold($this);
},
ju_HashMap_rehash0 = $this => {
    $this.$rehash0($this.$elementData.data.length);
},
ju_HashMap_remove = ($this, $key) => {
    let $entry;
    $entry = ju_HashMap_removeByKey($this, $key);
    if ($entry === null)
        return null;
    return $entry.$value;
},
ju_HashMap_removeByKey = ($this, $key) => {
    let $index, $last, $entry, $entry_0, $hash;
    a: {
        $index = 0;
        $last = null;
        if ($key === null) {
            $entry = $this.$elementData.data[0];
            while ($entry !== null) {
                if ($entry.$key === null)
                    break a;
                $entry_0 = $entry.$next2;
                $last = $entry;
                $entry = $entry_0;
            }
        } else {
            $hash = $key.$hashCode0();
            $index = $hash & ($this.$elementData.data.length - 1 | 0);
            $entry = $this.$elementData.data[$index];
            while ($entry !== null && !($entry.$origKeyHash == $hash && ju_HashMap_areEqualKeys($key, $entry.$key))) {
                $entry_0 = $entry.$next2;
                $last = $entry;
                $entry = $entry_0;
            }
        }
    }
    if ($entry === null)
        return null;
    if ($last !== null)
        $last.$next2 = $entry.$next2;
    else
        $this.$elementData.data[$index] = $entry.$next2;
    $this.$modCount0 = $this.$modCount0 + 1 | 0;
    $this.$elementCount = $this.$elementCount - 1 | 0;
    return $entry;
},
ju_HashMap_size = $this => {
    return $this.$elementCount;
},
ju_HashMap_areEqualKeys = ($key1, $key2) => {
    return $key1 !== $key2 && !$key1.$equals($key2) ? 0 : 1;
};
function cgxgbt_TeaClipboard$_init_$lambda$_0_0() {
    jl_Object.call(this);
    this.$_018 = null;
}
let cgxgbt_TeaClipboard$_init_$lambda$_0_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_018 = var$1;
},
cgxgbt_TeaClipboard$_init_$lambda$_0_0__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaClipboard$_init_$lambda$_0_0();
    cgxgbt_TeaClipboard$_init_$lambda$_0_0__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaClipboard$_init_$lambda$_0_0_handleEvent = (var$0, var$1) => {
    cgxgbt_TeaClipboard_lambda$new$0(var$0.$_018, var$1);
},
cgxgbt_TeaClipboard$_init_$lambda$_0_0_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
};
function cbgu_FloatArray() {
    let a = this; jl_Object.call(a);
    a.$items0 = null;
    a.$size2 = 0;
    a.$ordered1 = 0;
}
let cbgu_FloatArray__init_1 = $this => {
    cbgu_FloatArray__init_0($this, 1, 16);
},
cbgu_FloatArray__init_ = () => {
    let var_0 = new cbgu_FloatArray();
    cbgu_FloatArray__init_1(var_0);
    return var_0;
},
cbgu_FloatArray__init_0 = ($this, $ordered, $capacity) => {
    jl_Object__init_($this);
    $this.$ordered1 = $ordered;
    $this.$items0 = $rt_createFloatArray($capacity);
},
cbgu_FloatArray__init_2 = (var_0, var_1) => {
    let var_2 = new cbgu_FloatArray();
    cbgu_FloatArray__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgu_FloatArray_add = ($this, $value) => {
    let $items, var$3, var$4;
    $items = $this.$items0;
    var$3 = $items.data;
    if ($this.$size2 == var$3.length)
        $items = $this.$resize2(jl_Math_max(8, $this.$size2 * 1.75 | 0));
    var$3 = $items.data;
    var$4 = $this.$size2;
    $this.$size2 = var$4 + 1 | 0;
    var$3[var$4] = $value;
},
cbgu_FloatArray_addAll0 = ($this, $array) => {
    $this.$addAll0($array.$items0, 0, $array.$size2);
},
cbgu_FloatArray_addAll1 = ($this, $array, $offset, $length) => {
    if (($offset + $length | 0) <= $array.$size2) {
        $this.$addAll0($array.$items0, $offset, $length);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((((((jl_StringBuilder__init_()).$append1($rt_s(369))).$append2($offset)).$append1($rt_s(15))).$append2($length)).$append1($rt_s(16))).$append2($array.$size2)).$toString()));
},
cbgu_FloatArray_addAll = ($this, $array, $offset, $length) => {
    let $items, var$5, $sizeNeeded;
    $items = $this.$items0;
    var$5 = $items.data;
    $sizeNeeded = $this.$size2 + $length | 0;
    if ($sizeNeeded > var$5.length)
        $items = $this.$resize2(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size2 * 1.75 | 0));
    jl_System_fastArraycopy($array, $offset, $items, $this.$size2, $length);
    $this.$size2 = $this.$size2 + $length | 0;
},
cbgu_FloatArray_get = ($this, $index) => {
    if ($index < $this.$size2)
        return $this.$items0.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(17))).$append2($index)).$append1($rt_s(18))).$append2($this.$size2)).$toString()));
},
cbgu_FloatArray_removeRange = ($this, $start, $end) => {
    let $n, $count, $lastIndex, var$6, var$7, $i;
    $n = $this.$size2;
    if ($end >= $n)
        $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(21))).$append2($end)).$append1($rt_s(18))).$append2($this.$size2)).$toString()));
    if ($start > $end)
        $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(22))).$append2($start)).$append1($rt_s(20))).$append2($end)).$toString()));
    $count = ($end - $start | 0) + 1 | 0;
    $lastIndex = $n - $count | 0;
    if ($this.$ordered1) {
        var$6 = $this.$items0;
        var$7 = $start + $count | 0;
        jl_System_fastArraycopy(var$6, var$7, $this.$items0, $start, $n - var$7 | 0);
    } else {
        $i = jl_Math_max($lastIndex, $end + 1 | 0);
        jl_System_fastArraycopy($this.$items0, $i, $this.$items0, $start, $n - $i | 0);
    }
    $this.$size2 = $lastIndex;
},
cbgu_FloatArray_first = $this => {
    if (!$this.$size2)
        $rt_throw(jl_IllegalStateException__init_($rt_s(23)));
    return $this.$items0.data[0];
},
cbgu_FloatArray_notEmpty = $this => {
    return $this.$size2 <= 0 ? 0 : 1;
},
cbgu_FloatArray_clear = $this => {
    $this.$size2 = 0;
},
cbgu_FloatArray_ensureCapacity = ($this, $additionalCapacity) => {
    let $sizeNeeded;
    if ($additionalCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(24))).$append2($additionalCapacity)).$toString()));
    $sizeNeeded = $this.$size2 + $additionalCapacity | 0;
    if ($sizeNeeded > $this.$items0.data.length)
        $this.$resize2(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size2 * 1.75 | 0));
    return $this.$items0;
},
cbgu_FloatArray_resize = ($this, $newSize) => {
    let $newItems, var$3, $items;
    $newItems = $rt_createFloatArray($newSize);
    var$3 = $newItems.data;
    $items = $this.$items0;
    jl_System_fastArraycopy($items, 0, $newItems, 0, jl_Math_min($this.$size2, var$3.length));
    $this.$items0 = $newItems;
    return $newItems;
},
cbgu_FloatArray_truncate = ($this, $newSize) => {
    if ($this.$size2 > $newSize)
        $this.$size2 = $newSize;
},
beb_TeaVMLauncher = $rt_classWithoutFields(),
beb_TeaVMLauncher_$callClinit = () => {
    beb_TeaVMLauncher_$callClinit = $rt_eraseClinit(beb_TeaVMLauncher);
    beb_TeaVMLauncher__clinit_();
},
beb_TeaVMLauncher_main = $args => {
    let $config;
    beb_TeaVMLauncher_$callClinit();
    $config = cgxgbt_TeaApplicationConfiguration__init_0($rt_s(488));
    $config.$width5 = 0;
    $config.$height4 = 0;
    $config.$showDownloadLogs = 1;
    cgxgbt_TeaApplication__init_0(new cgxgbt_TeaApplication, beb_BulletGame__init_0(), $config);
},
beb_TeaVMLauncher__clinit_ = () => {
    return;
};
function jn_ByteBufferJsImpl() {
    let a = this; jn_ByteBuffer.call(a);
    a.$array2 = null;
    a.$arrayOffset = 0;
    a.$data0 = null;
    a.$direct = 0;
    a.$readOnly0 = 0;
}
let jn_ByteBufferJsImpl__init_0 = ($this, $array, $arrayOffset, $data, $direct, $readOnly) => {
    jn_ByteBuffer__init_($this);
    $this.$array2 = $array;
    $this.$arrayOffset = $arrayOffset;
    $this.$data0 = $data;
    $this.$direct = $direct;
    $this.$readOnly0 = $readOnly;
},
jn_ByteBufferJsImpl__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_ByteBufferJsImpl();
    jn_ByteBufferJsImpl__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_ByteBufferJsImpl_arrayImpl = $this => {
    if ($this.$array2 !== null)
        return $this.$array2;
    $rt_throw(jl_UnsupportedOperationException__init_0());
},
jn_ByteBufferJsImpl_hasArrayImpl = $this => {
    return $this.$array2 === null ? 0 : 1;
},
jn_ByteBufferJsImpl_capacityImpl = $this => {
    return $this.$data0.length;
},
jn_ByteBufferJsImpl_getImpl = ($this, $index, $dst, $offset, $length) => {
    let var$5, var$6, $slice;
    var$5 = $this.$data0.buffer;
    var$6 = $this.$data0.byteOffset + $index | 0;
    $slice = new Int8Array(var$5, var$6, $length);
    $dst.data.set($slice, $offset);
},
jn_ByteBufferJsImpl_putImpl = ($this, $src, $srcOffset, $destOffset, $length) => {
    let var$5, $slice;
    var$5 = $src.data.buffer;
    $slice = new Int8Array(var$5, $srcOffset, $length);
    $this.$data0.set($slice, $destOffset);
},
jn_ByteBufferJsImpl_get = ($this, $index) => {
    if ($index >= 0 && $index < $this.$limit4)
        return $this.$data0[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_ByteBufferJsImpl_compact = $this => {
    let $sz;
    if ($this.$readOnly0)
        $rt_throw(jn_ReadOnlyBufferException__init_());
    $sz = jn_Buffer_remaining($this);
    if ($this.$position6 > 0)
        $this.$data0.set(new Int8Array($this.$data0.buffer, $this.$data0.byteOffset + $this.$position6 | 0, $sz), 0);
    $this.$position6 = $sz;
    $this.$limit4 = jn_Buffer_capacity($this);
    $this.$mark = (-1);
    return $this;
},
jn_ByteBufferJsImpl_isDirect = $this => {
    return $this.$direct;
},
jn_ByteBufferJsImpl_isReadOnly = $this => {
    return $this.$readOnly0;
},
jn_ByteBufferJsImpl_asShortBuffer = $this => {
    let $sz, $slice;
    $sz = jn_Buffer_remaining($this) / 2 | 0;
    if ($this.$order0 === jn_ByteOrder_nativeOrder()) {
        $slice = new Int16Array($this.$data0.buffer, $this.$data0.byteOffset + $this.$position6 | 0, $sz);
        return jn_ShortBufferOverTypedArray__init_0(0, $sz, $this.$readOnly0, $slice, null);
    }
    $slice = new DataView($this.$data0.buffer, $this.$data0.byteOffset + $this.$position6 | 0, $sz * 2 | 0);
    return jn_ShortBufferOverDataView__init_0(0, $sz, $this.$readOnly0, $slice, $this.$order0 !== jn_ByteOrder_LITTLE_ENDIAN ? 0 : 1);
},
jn_ByteBufferJsImpl_asIntBuffer = $this => {
    let $sz, $slice;
    $sz = jn_Buffer_remaining($this) / 4 | 0;
    if ($this.$order0 === jn_ByteOrder_nativeOrder()) {
        $slice = new Int32Array($this.$data0.buffer, $this.$data0.byteOffset + $this.$position6 | 0, $sz);
        return jn_IntBufferOverTypedArray__init_0(0, $sz, $this.$readOnly0, $slice, null);
    }
    $slice = new DataView($this.$data0.buffer, $this.$data0.byteOffset + $this.$position6 | 0, $sz * 4 | 0);
    return jn_IntBufferOverDataView__init_0(0, $sz, $this.$readOnly0, $slice, $this.$order0 !== jn_ByteOrder_LITTLE_ENDIAN ? 0 : 1);
},
jn_ByteBufferJsImpl_asFloatBuffer = $this => {
    let $sz, $slice;
    $sz = jn_Buffer_remaining($this) / 4 | 0;
    if ($this.$order0 === jn_ByteOrder_nativeOrder()) {
        $slice = new Float32Array($this.$data0.buffer, $this.$data0.byteOffset + $this.$position6 | 0, $sz);
        return jn_FloatBufferOverTypedArray__init_(0, $sz, $this.$readOnly0, $slice, null);
    }
    $slice = new DataView($this.$data0.buffer, $this.$data0.byteOffset + $this.$position6 | 0, $sz * 4 | 0);
    return jn_FloatBufferOverDataView__init_0(0, $sz, $this.$readOnly0, $slice, $this.$order0 !== jn_ByteOrder_LITTLE_ENDIAN ? 0 : 1);
},
jn_ByteBufferJsImpl_getArrayBufferView = $this => {
    return $this.$data0;
};
function jnc_CoderResult() {
    let a = this; jl_Object.call(a);
    a.$kind = 0;
    a.$length5 = 0;
}
let jnc_CoderResult_UNDERFLOW = null,
jnc_CoderResult_OVERFLOW = null,
jnc_CoderResult_$callClinit = () => {
    jnc_CoderResult_$callClinit = $rt_eraseClinit(jnc_CoderResult);
    jnc_CoderResult__clinit_();
},
jnc_CoderResult__init_0 = ($this, $kind, $length) => {
    jnc_CoderResult_$callClinit();
    jl_Object__init_($this);
    $this.$kind = $kind;
    $this.$length5 = $length;
},
jnc_CoderResult__init_ = (var_0, var_1) => {
    let var_2 = new jnc_CoderResult();
    jnc_CoderResult__init_0(var_2, var_0, var_1);
    return var_2;
},
jnc_CoderResult_isUnderflow = $this => {
    return $this.$kind ? 0 : 1;
},
jnc_CoderResult_isOverflow = $this => {
    return $this.$kind != 1 ? 0 : 1;
},
jnc_CoderResult_isError = $this => {
    return !$this.$isMalformed() && !$this.$isUnmappable() ? 0 : 1;
},
jnc_CoderResult_isMalformed = $this => {
    return $this.$kind != 2 ? 0 : 1;
},
jnc_CoderResult_isUnmappable = $this => {
    return $this.$kind != 3 ? 0 : 1;
},
jnc_CoderResult_length = $this => {
    if ($this.$isError())
        return $this.$length5;
    $rt_throw(jl_UnsupportedOperationException__init_0());
},
jnc_CoderResult_malformedForLength = $length => {
    jnc_CoderResult_$callClinit();
    return jnc_CoderResult__init_(2, $length);
},
jnc_CoderResult_throwException = $this => {
    switch ($this.$kind) {
        case 0:
            $rt_throw(jnc_BufferUnderflowException__init_0());
        case 1:
            $rt_throw(jnc_BufferOverflowException__init_0());
        case 2:
            $rt_throw(jnc_MalformedInputException__init_0($this.$length5));
        case 3:
            $rt_throw(jnc_UnmappableCharacterException__init_0($this.$length5));
        default:
    }
},
jnc_CoderResult__clinit_ = () => {
    jnc_CoderResult_UNDERFLOW = jnc_CoderResult__init_(0, 0);
    jnc_CoderResult_OVERFLOW = jnc_CoderResult__init_(1, 0);
};
function jur_EOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter0 = 0;
}
let jur_EOLSet__init_ = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter0 = $counter;
},
jur_EOLSet__init_0 = var_0 => {
    let var_1 = new jur_EOLSet();
    jur_EOLSet__init_(var_1, var_0);
    return var_1;
},
jur_EOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound, var$5, var$6, $ch;
    $rightBound = !$matchResult.$hasAnchoringBounds() ? $testString.$length() : $matchResult.$getRightBound();
    if ($strIndex >= $rightBound) {
        $matchResult.$setConsumed($this.$consCounter0, 0);
        return $this.$next1.$matches($strIndex, $testString, $matchResult);
    }
    var$5 = $rightBound - $strIndex | 0;
    if (var$5 == 2 && $testString.$charAt($strIndex) == 13) {
        var$6 = $strIndex + 1 | 0;
        if ($testString.$charAt(var$6) == 10) {
            $matchResult.$setConsumed($this.$consCounter0, 0);
            return $this.$next1.$matches($strIndex, $testString, $matchResult);
        }
    }
    a: {
        if (var$5 == 1) {
            $ch = $testString.$charAt($strIndex);
            if ($ch == 10)
                break a;
            if ($ch == 13)
                break a;
            if ($ch == 133)
                break a;
            if (($ch | 1) == 8233)
                break a;
        }
        return (-1);
    }
    $matchResult.$setConsumed($this.$consCounter0, 0);
    return $this.$next1.$matches($strIndex, $testString, $matchResult);
},
jur_EOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !$matchResult.$getConsumed($this.$consCounter0) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter0, (-1));
    return $res;
},
jur_EOLSet_getName = $this => {
    return $rt_s(489);
};
function jur_Lexer() {
    let a = this; jl_Object.call(a);
    a.$pattern0 = null;
    a.$flags0 = 0;
    a.$mode0 = 0;
    a.$savedMode = 0;
    a.$lookBack = 0;
    a.$ch = 0;
    a.$lookAhead0 = 0;
    a.$patternFullLength = 0;
    a.$curST = null;
    a.$lookAheadST = null;
    a.$index2 = 0;
    a.$prevNW = 0;
    a.$curToc = 0;
    a.$lookAheadToc = 0;
    a.$orig = null;
}
let jur_Lexer_decompTable = null,
jur_Lexer_singleDecompTable = null,
jur_Lexer_singleDecompTableSize = 0,
jur_Lexer__init_ = ($this, $pattern, $flags) => {
    jl_Object__init_($this);
    $this.$mode0 = 1;
    $this.$orig = $pattern;
    if (($flags & 16) > 0)
        $pattern = jur_Pattern_quote($pattern);
    else if (($flags & 128) > 0)
        $pattern = jur_Lexer_normalize($pattern);
    $this.$pattern0 = $rt_createCharArray($pattern.$length() + 2 | 0);
    jl_System_fastArraycopy($pattern.$toCharArray(), 0, $this.$pattern0, 0, $pattern.$length());
    $this.$pattern0.data[$this.$pattern0.data.length - 1 | 0] = 0;
    $this.$pattern0.data[$this.$pattern0.data.length - 2 | 0] = 0;
    $this.$patternFullLength = $this.$pattern0.data.length;
    $this.$flags0 = $flags;
    jur_Lexer_movePointer($this);
    jur_Lexer_movePointer($this);
},
jur_Lexer__init_0 = (var_0, var_1) => {
    let var_2 = new jur_Lexer();
    jur_Lexer__init_(var_2, var_0, var_1);
    return var_2;
},
jur_Lexer_peek = $this => {
    return $this.$ch;
},
jur_Lexer_setMode = ($this, $mode) => {
    if ($mode > 0 && $mode < 3)
        $this.$mode0 = $mode;
    if ($mode == 1)
        jur_Lexer_reread($this);
},
jur_Lexer_restoreFlags = ($this, $flags) => {
    $this.$flags0 = $flags;
    $this.$lookAhead0 = $this.$ch;
    $this.$lookAheadST = $this.$curST;
    $this.$index2 = $this.$curToc + 1 | 0;
    $this.$lookAheadToc = $this.$curToc;
    jur_Lexer_movePointer($this);
},
jur_Lexer_peekSpecial = $this => {
    return $this.$curST;
},
jur_Lexer_isSpecial = $this => {
    return $this.$curST === null ? 0 : 1;
},
jur_Lexer_isNextSpecial = $this => {
    return $this.$lookAheadST === null ? 0 : 1;
},
jur_Lexer_next = $this => {
    jur_Lexer_movePointer($this);
    return $this.$lookBack;
},
jur_Lexer_nextSpecial = $this => {
    let $res;
    $res = $this.$curST;
    jur_Lexer_movePointer($this);
    return $res;
},
jur_Lexer_lookAhead = $this => {
    return $this.$lookAhead0;
},
jur_Lexer_back = $this => {
    return $this.$lookBack;
},
jur_Lexer_normalize = $input => {
    return $input;
},
jur_Lexer_reread = $this => {
    $this.$lookAhead0 = $this.$ch;
    $this.$lookAheadST = $this.$curST;
    $this.$index2 = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$curToc;
    jur_Lexer_movePointer($this);
},
jur_Lexer_movePointer = $this => {
    let $reread, $nonCap, $behind, $mod, var$5, $cs, $negative, $$je;
    $this.$lookBack = $this.$ch;
    $this.$ch = $this.$lookAhead0;
    $this.$curST = $this.$lookAheadST;
    $this.$curToc = $this.$lookAheadToc;
    $this.$lookAheadToc = $this.$index2;
    while (true) {
        $reread = 0;
        $this.$lookAhead0 = $this.$index2 >= $this.$pattern0.data.length ? 0 : jur_Lexer_nextCodePoint($this);
        $this.$lookAheadST = null;
        if ($this.$mode0 == 4) {
            if ($this.$lookAhead0 != 92)
                return;
            $this.$lookAhead0 = $this.$index2 >= $this.$pattern0.data.length ? 0 : $this.$pattern0.data[jur_Lexer_nextIndex($this)];
            switch ($this.$lookAhead0) {
                case 69:
                    break;
                default:
                    $this.$lookAhead0 = 92;
                    $this.$index2 = $this.$prevNW;
                    return;
            }
            $this.$mode0 = $this.$savedMode;
            $this.$lookAhead0 = $this.$index2 > ($this.$pattern0.data.length - 2 | 0) ? 0 : jur_Lexer_nextCodePoint($this);
        }
        a: {
            if ($this.$lookAhead0 != 92) {
                if ($this.$mode0 == 1)
                    switch ($this.$lookAhead0) {
                        case 36:
                            $this.$lookAhead0 = (-536870876);
                            break a;
                        case 40:
                            if ($this.$pattern0.data[$this.$index2] != 63) {
                                $this.$lookAhead0 = (-2147483608);
                                break a;
                            }
                            jur_Lexer_nextIndex($this);
                            $nonCap = $this.$pattern0.data[$this.$index2];
                            $behind = 0;
                            while (true) {
                                b: {
                                    if ($behind) {
                                        $behind = 0;
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 61:
                                                $this.$lookAhead0 = (-134217688);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
                                        }
                                        $this.$lookAhead0 = (-67108824);
                                        jur_Lexer_nextIndex($this);
                                    } else {
                                        switch ($nonCap) {
                                            case 33:
                                                break;
                                            case 60:
                                                jur_Lexer_nextIndex($this);
                                                $nonCap = $this.$pattern0.data[$this.$index2];
                                                $behind = 1;
                                                break b;
                                            case 61:
                                                $this.$lookAhead0 = (-536870872);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            case 62:
                                                $this.$lookAhead0 = (-33554392);
                                                jur_Lexer_nextIndex($this);
                                                break b;
                                            default:
                                                $this.$lookAhead0 = jur_Lexer_readFlags($this);
                                                if ($this.$lookAhead0 < 256) {
                                                    $this.$flags0 = $this.$lookAhead0;
                                                    $this.$lookAhead0 = $this.$lookAhead0 << 16;
                                                    $this.$lookAhead0 = (-1073741784) | $this.$lookAhead0;
                                                    break b;
                                                }
                                                $this.$lookAhead0 = $this.$lookAhead0 & 255;
                                                $this.$flags0 = $this.$lookAhead0;
                                                $this.$lookAhead0 = $this.$lookAhead0 << 16;
                                                $this.$lookAhead0 = (-16777176) | $this.$lookAhead0;
                                                break b;
                                        }
                                        $this.$lookAhead0 = (-268435416);
                                        jur_Lexer_nextIndex($this);
                                    }
                                }
                                if (!$behind)
                                    break;
                            }
                            break a;
                        case 41:
                            $this.$lookAhead0 = (-536870871);
                            break a;
                        case 42:
                        case 43:
                        case 63:
                            $mod = $this.$index2 >= $this.$pattern0.data.length ? 42 : $this.$pattern0.data[$this.$index2];
                            switch ($mod) {
                                case 43:
                                    $this.$lookAhead0 = $this.$lookAhead0 | (-2147483648);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                case 63:
                                    $this.$lookAhead0 = $this.$lookAhead0 | (-1073741824);
                                    jur_Lexer_nextIndex($this);
                                    break a;
                                default:
                            }
                            $this.$lookAhead0 = $this.$lookAhead0 | (-536870912);
                            break a;
                        case 46:
                            $this.$lookAhead0 = (-536870866);
                            break a;
                        case 91:
                            $this.$lookAhead0 = (-536870821);
                            $this.$setMode(2);
                            break a;
                        case 93:
                            if ($this.$mode0 != 2)
                                break a;
                            $this.$lookAhead0 = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead0 = (-536870818);
                            break a;
                        case 123:
                            $this.$lookAheadST = jur_Lexer_processQuantifier($this, $this.$lookAhead0);
                            break a;
                        case 124:
                            $this.$lookAhead0 = (-536870788);
                            break a;
                        default:
                    }
                else if ($this.$mode0 == 2)
                    switch ($this.$lookAhead0) {
                        case 38:
                            $this.$lookAhead0 = (-536870874);
                            break a;
                        case 45:
                            $this.$lookAhead0 = (-536870867);
                            break a;
                        case 91:
                            $this.$lookAhead0 = (-536870821);
                            break a;
                        case 93:
                            $this.$lookAhead0 = (-536870819);
                            break a;
                        case 94:
                            $this.$lookAhead0 = (-536870818);
                            break a;
                        default:
                    }
            } else {
                var$5 = $this.$index2 >= ($this.$pattern0.data.length - 2 | 0) ? (-1) : jur_Lexer_nextCodePoint($this);
                c: {
                    $this.$lookAhead0 = var$5;
                    switch ($this.$lookAhead0) {
                        case -1:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
                        case 0:
                        case 1:
                        case 2:
                        case 3:
                        case 4:
                        case 5:
                        case 6:
                        case 7:
                        case 8:
                        case 9:
                        case 10:
                        case 11:
                        case 12:
                        case 13:
                        case 14:
                        case 15:
                        case 16:
                        case 17:
                        case 18:
                        case 19:
                        case 20:
                        case 21:
                        case 22:
                        case 23:
                        case 24:
                        case 25:
                        case 26:
                        case 27:
                        case 28:
                        case 29:
                        case 30:
                        case 31:
                        case 32:
                        case 33:
                        case 34:
                        case 35:
                        case 36:
                        case 37:
                        case 38:
                        case 39:
                        case 40:
                        case 41:
                        case 42:
                        case 43:
                        case 44:
                        case 45:
                        case 46:
                        case 47:
                        case 58:
                        case 59:
                        case 60:
                        case 61:
                        case 62:
                        case 63:
                        case 64:
                        case 91:
                        case 92:
                        case 93:
                        case 94:
                        case 95:
                        case 96:
                        case 118:
                            break;
                        case 48:
                            $this.$lookAhead0 = jur_Lexer_readOctals($this);
                            break a;
                        case 49:
                        case 50:
                        case 51:
                        case 52:
                        case 53:
                        case 54:
                        case 55:
                        case 56:
                        case 57:
                            if ($this.$mode0 != 1)
                                break a;
                            $this.$lookAhead0 = (-2147483648) | $this.$lookAhead0;
                            break a;
                        case 65:
                            $this.$lookAhead0 = (-2147483583);
                            break a;
                        case 66:
                            $this.$lookAhead0 = (-2147483582);
                            break a;
                        case 67:
                        case 69:
                        case 70:
                        case 72:
                        case 73:
                        case 74:
                        case 75:
                        case 76:
                        case 77:
                        case 78:
                        case 79:
                        case 82:
                        case 84:
                        case 85:
                        case 86:
                        case 88:
                        case 89:
                        case 103:
                        case 104:
                        case 105:
                        case 106:
                        case 107:
                        case 108:
                        case 109:
                        case 111:
                        case 113:
                        case 121:
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
                        case 68:
                        case 83:
                        case 87:
                        case 100:
                        case 115:
                        case 119:
                            $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass(jl_String__init_($this.$pattern0, $this.$prevNW, 1), 0);
                            $this.$lookAhead0 = 0;
                            break a;
                        case 71:
                            $this.$lookAhead0 = (-2147483577);
                            break a;
                        case 80:
                        case 112:
                            break c;
                        case 81:
                            $this.$savedMode = $this.$mode0;
                            $this.$mode0 = 4;
                            $reread = 1;
                            break a;
                        case 90:
                            $this.$lookAhead0 = (-2147483558);
                            break a;
                        case 97:
                            $this.$lookAhead0 = 7;
                            break a;
                        case 98:
                            $this.$lookAhead0 = (-2147483550);
                            break a;
                        case 99:
                            if ($this.$index2 >= ($this.$pattern0.data.length - 2 | 0))
                                $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
                            $this.$lookAhead0 = $this.$pattern0.data[jur_Lexer_nextIndex($this)] & 31;
                            break a;
                        case 101:
                            $this.$lookAhead0 = 27;
                            break a;
                        case 102:
                            $this.$lookAhead0 = 12;
                            break a;
                        case 110:
                            $this.$lookAhead0 = 10;
                            break a;
                        case 114:
                            $this.$lookAhead0 = 13;
                            break a;
                        case 116:
                            $this.$lookAhead0 = 9;
                            break a;
                        case 117:
                            $this.$lookAhead0 = jur_Lexer_readHex($this, 4);
                            break a;
                        case 120:
                            $this.$lookAhead0 = jur_Lexer_readHex($this, 2);
                            break a;
                        case 122:
                            $this.$lookAhead0 = (-2147483526);
                            break a;
                        default:
                    }
                    break a;
                }
                $cs = jur_Lexer_parseCharClassName($this);
                $negative = 0;
                if ($this.$lookAhead0 == 80)
                    $negative = 1;
                try {
                    $this.$lookAheadST = jur_AbstractCharClass_getPredefinedClass($cs, $negative);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof ju_MissingResourceException) {
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
                    } else {
                        throw $$e;
                    }
                }
                $this.$lookAhead0 = 0;
            }
        }
        if ($reread)
            continue;
        else
            break;
    }
},
jur_Lexer_parseCharClassName = $this => {
    let $sb, var$2, var$3, $ch, $res;
    $sb = jl_StringBuilder__init_0(10);
    if ($this.$index2 < ($this.$pattern0.data.length - 2 | 0)) {
        if ($this.$pattern0.data[$this.$index2] != 123) {
            var$2 = jl_String__init_($this.$pattern0, jur_Lexer_nextIndex($this), 1);
            var$3 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(490)), var$2);
            return jl_StringBuilder_toString(var$3);
        }
        jur_Lexer_nextIndex($this);
        $ch = 0;
        a: {
            while ($this.$index2 < ($this.$pattern0.data.length - 2 | 0)) {
                $ch = $this.$pattern0.data[jur_Lexer_nextIndex($this)];
                if ($ch == 125)
                    break a;
                $sb.$append0($ch);
            }
        }
        if ($ch != 125)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
    }
    if (!$sb.$length())
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
    $res = $sb.$toString();
    if ($res.$length() == 1) {
        var$2 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(490)), $res);
        return jl_StringBuilder_toString(var$2);
    }
    b: {
        c: {
            if ($res.$length() > 3) {
                if ($res.$startsWith($rt_s(490)))
                    break c;
                if ($res.$startsWith($rt_s(491)))
                    break c;
            }
            break b;
        }
        $res = $res.$substring0(2);
    }
    return $res;
},
jur_Lexer_processQuantifier = ($this, $ch) => {
    let $sb, $min, $max, $mod, $$je;
    $sb = jl_StringBuilder__init_0(4);
    $min = (-1);
    $max = 2147483647;
    a: {
        while (true) {
            if ($this.$index2 >= $this.$pattern0.data.length)
                break a;
            $ch = $this.$pattern0.data[jur_Lexer_nextIndex($this)];
            if ($ch == 125)
                break a;
            if ($ch == 44 && $min < 0)
                try {
                    $min = jl_Integer_parseInt0($sb.$toString(), 10);
                    $sb.$delete0(0, $sb.$length());
                    continue;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    if ($$je instanceof jl_NumberFormatException) {
                        break;
                    } else {
                        throw $$e;
                    }
                }
            $sb.$append0($ch & 65535);
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
    }
    if ($ch != 125)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
    if ($sb.$length() > 0)
        b: {
            try {
                $max = jl_Integer_parseInt0($sb.$toString(), 10);
                if ($min >= 0)
                    break b;
                $min = $max;
                break b;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                } else {
                    throw $$e;
                }
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
        }
    else if ($min < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
    if (($min | $max | ($max - $min | 0)) < 0)
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
    $mod = $this.$index2 >= $this.$pattern0.data.length ? 42 : $this.$pattern0.data[$this.$index2];
    c: {
        switch ($mod) {
            case 43:
                $this.$lookAhead0 = (-2147483525);
                jur_Lexer_nextIndex($this);
                break c;
            case 63:
                $this.$lookAhead0 = (-1073741701);
                jur_Lexer_nextIndex($this);
                break c;
            default:
        }
        $this.$lookAhead0 = (-536870789);
    }
    return jur_Quantifier__init_0($min, $max);
},
jur_Lexer_toString = $this => {
    return $this.$orig;
},
jur_Lexer_isEmpty = $this => {
    return !$this.$ch && !$this.$lookAhead0 && $this.$index2 == $this.$patternFullLength && !$this.$isSpecial() ? 1 : 0;
},
jur_Lexer_isLetter = $ch => {
    return $ch < 0 ? 0 : 1;
},
jur_Lexer_isLetter0 = $this => {
    return !$this.$isEmpty() && !$this.$isSpecial() && jur_Lexer_isLetter($this.$ch) ? 1 : 0;
},
jur_Lexer_isHighSurrogate0 = $this => {
    return $this.$ch <= 56319 && $this.$ch >= 55296 ? 1 : 0;
},
jur_Lexer_isLowSurrogate0 = $this => {
    return $this.$ch <= 57343 && $this.$ch >= 56320 ? 1 : 0;
},
jur_Lexer_isHighSurrogate = $ch => {
    return $ch <= 56319 && $ch >= 55296 ? 1 : 0;
},
jur_Lexer_isLowSurrogate = $ch => {
    return $ch <= 57343 && $ch >= 56320 ? 1 : 0;
},
jur_Lexer_readHex = ($this, $max) => {
    let $st, $length, $i, var$5, $$je;
    $st = jl_StringBuilder__init_0($max);
    $length = $this.$pattern0.data.length - 2 | 0;
    $i = 0;
    while (true) {
        var$5 = $rt_compare($i, $max);
        if (var$5 >= 0)
            break;
        if ($this.$index2 >= $length)
            break;
        $st.$append0($this.$pattern0.data[jur_Lexer_nextIndex($this)]);
        $i = $i + 1 | 0;
    }
    if (!var$5)
        a: {
            try {
                var$5 = jl_Integer_parseInt0($st.$toString(), 16);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_NumberFormatException) {
                    break a;
                } else {
                    throw $$e;
                }
            }
            return var$5;
        }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
},
jur_Lexer_readOctals = $this => {
    let $max, $i, $length, $res, var$5;
    $max = 3;
    $i = 1;
    $length = $this.$pattern0.data.length - 2 | 0;
    $res = jl_Character_digit($this.$pattern0.data[$this.$index2], 8);
    switch ($res) {
        case -1:
            break;
        default:
            if ($res > 3)
                $max = 2;
            jur_Lexer_nextIndex($this);
            a: {
                while (true) {
                    if ($i >= $max)
                        break a;
                    if ($this.$index2 >= $length)
                        break a;
                    var$5 = jl_Character_digit($this.$pattern0.data[$this.$index2], 8);
                    if (var$5 < 0)
                        break;
                    $res = ($res * 8 | 0) + var$5 | 0;
                    jur_Lexer_nextIndex($this);
                    $i = $i + 1 | 0;
                }
            }
            return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
},
jur_Lexer_readFlags = $this => {
    let $pos, $res, $ch;
    $pos = 1;
    $res = $this.$flags0;
    a: while (true) {
        if ($this.$index2 >= $this.$pattern0.data.length)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
        b: {
            c: {
                $ch = $this.$pattern0.data[$this.$index2];
                switch ($ch) {
                    case 41:
                        jur_Lexer_nextIndex($this);
                        return $res | 256;
                    case 45:
                        if (!$pos)
                            $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$toString(), $this.$index2));
                        $pos = 0;
                        break b;
                    case 58:
                        break a;
                    case 100:
                        break c;
                    case 105:
                        $res = $pos ? $res | 2 : ($res ^ 2) & $res;
                        break b;
                    case 109:
                        $res = $pos ? $res | 8 : ($res ^ 8) & $res;
                        break b;
                    case 115:
                        $res = $pos ? $res | 32 : ($res ^ 32) & $res;
                        break b;
                    case 117:
                        $res = $pos ? $res | 64 : ($res ^ 64) & $res;
                        break b;
                    case 120:
                        $res = $pos ? $res | 4 : ($res ^ 4) & $res;
                        break b;
                    default:
                }
                break b;
            }
            $res = $pos ? $res | 1 : ($res ^ 1) & $res;
        }
        jur_Lexer_nextIndex($this);
    }
    jur_Lexer_nextIndex($this);
    return $res;
},
jur_Lexer_nextIndex = $this => {
    $this.$prevNW = $this.$index2;
    if ($this.$flags0 & 4)
        jur_Lexer_skipComments($this);
    else
        $this.$index2 = $this.$index2 + 1 | 0;
    return $this.$prevNW;
},
jur_Lexer_skipComments = $this => {
    let $length;
    $length = $this.$pattern0.data.length - 2 | 0;
    $this.$index2 = $this.$index2 + 1 | 0;
    a: while (true) {
        if ($this.$index2 < $length && jl_Character_isWhitespace0($this.$pattern0.data[$this.$index2])) {
            $this.$index2 = $this.$index2 + 1 | 0;
            continue;
        }
        if ($this.$index2 >= $length)
            break;
        if ($this.$pattern0.data[$this.$index2] != 35)
            break;
        $this.$index2 = $this.$index2 + 1 | 0;
        while (true) {
            if ($this.$index2 >= $length)
                continue a;
            if (jur_Lexer_isLineSeparator($this, $this.$pattern0.data[$this.$index2]))
                continue a;
            $this.$index2 = $this.$index2 + 1 | 0;
        }
    }
    return $this.$index2;
},
jur_Lexer_isLineSeparator = ($this, $ch) => {
    return $ch != 10 && $ch != 13 && $ch != 133 && ($ch | 1) != 8233 ? 0 : 1;
},
jur_Lexer_getDecomposition = $ch => {
    return jur_Lexer_decompTable.$get22($ch);
},
jur_Lexer_getHangulDecomposition = $ch => {
    let $sIndex, $l, $v, $t, $decomp, var$7;
    $sIndex = $ch - 44032 | 0;
    if ($sIndex >= 0 && $sIndex < 11172) {
        $l = 4352 + ($sIndex / 588 | 0) | 0;
        $v = 4449 + (($sIndex % 588 | 0) / 28 | 0) | 0;
        $t = $sIndex % 28 | 0;
        if (!$t)
            $decomp = $rt_createIntArrayFromData([$l, $v]);
        else {
            var$7 = 4519 + $t | 0;
            $decomp = $rt_createIntArrayFromData([$l, $v, var$7]);
        }
        return $decomp;
    }
    return null;
},
jur_Lexer_hasSingleCodepointDecomposition = $ch => {
    let $hasSingleDecomp;
    $hasSingleDecomp = jur_Lexer_singleDecompTable.$get1($ch);
    return $hasSingleDecomp == jur_Lexer_singleDecompTableSize ? 0 : 1;
},
jur_Lexer_hasDecompositionNonNullCanClass = $ch => {
    return ($ch != 832 ? 0 : 1) | ($ch != 833 ? 0 : 1) | ($ch != 835 ? 0 : 1) | ($ch != 836 ? 0 : 1);
},
jur_Lexer_nextCodePoint = $this => {
    let $high, $lowExpectedIndex, $low;
    $high = $this.$pattern0.data[jur_Lexer_nextIndex($this)];
    if (jl_Character_isHighSurrogate($high)) {
        $lowExpectedIndex = $this.$prevNW + 1 | 0;
        if ($lowExpectedIndex < $this.$pattern0.data.length) {
            $low = $this.$pattern0.data[$lowExpectedIndex];
            if (jl_Character_isLowSurrogate($low)) {
                jur_Lexer_nextIndex($this);
                return jl_Character_toCodePoint($high, $low);
            }
        }
    }
    return $high;
},
jur_Lexer_getIndex = $this => {
    return $this.$curToc;
},
jur_AbstractCharClass$LazyNonSpace = $rt_classWithoutFields(jur_AbstractCharClass$LazySpace),
jur_AbstractCharClass$LazyNonSpace__init_ = $this => {
    jur_AbstractCharClass$LazySpace__init_($this);
},
jur_AbstractCharClass$LazyNonSpace__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyNonSpace();
    jur_AbstractCharClass$LazyNonSpace__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyNonSpace_computeValue = $this => {
    let $chCl;
    $chCl = (jur_AbstractCharClass$LazySpace_computeValue($this)).$setNegative(1);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
},
otjt_Int32Array = $rt_classWithoutFields(otjt_TypedArray),
cbgss_Stage$_init_$lambda$_2_0 = $rt_classWithoutFields(),
cbgss_Stage$_init_$lambda$_2_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgss_Stage$_init_$lambda$_2_0__init_0 = () => {
    let var_0 = new cbgss_Stage$_init_$lambda$_2_0();
    cbgss_Stage$_init_$lambda$_2_0__init_(var_0);
    return var_0;
},
cbgss_Stage$_init_$lambda$_2_0_get0 = (var$0, var$1) => {
    return cbgss_Stage$_init_$lambda$_2_0_get(var$0, var$1);
},
cbgss_Stage$_init_$lambda$_2_0_get = (var$0, var$1) => {
    return cbgss_Stage_lambda$new$0(var$1);
};
let bbc_btConvexShape = $rt_classWithoutFields(bbc_btCollisionShape),
bbc_btConvexShape_NULL = null,
bbc_btConvexShape_T_01 = null,
bbc_btConvexShape_T_02 = null,
bbc_btConvexShape_T_03 = null,
bbc_btConvexShape_$callClinit = () => {
    bbc_btConvexShape_$callClinit = $rt_eraseClinit(bbc_btConvexShape);
    bbc_btConvexShape__clinit_();
},
bbc_btConvexShape__init_ = ($this, $b, $c) => {
    bbc_btConvexShape_$callClinit();
    bbc_btCollisionShape__init_($this, 1, 1);
},
bbc_btConvexShape__init_0 = (var_0, var_1) => {
    let var_2 = new bbc_btConvexShape();
    bbc_btConvexShape__init_(var_2, var_0, var_1);
    return var_2;
},
bbc_btConvexShape_native_new = () => {
    bbc_btConvexShape_$callClinit();
    return bbc_btConvexShape__init_0(0, 0);
},
bbc_btConvexShape__clinit_ = () => {
    bbc_btConvexShape_NULL = bbc_btConvexShape_native_new();
    bbc_btConvexShape_T_01 = bbc_btConvexShape_native_new();
    bbc_btConvexShape_T_02 = bbc_btConvexShape_native_new();
    bbc_btConvexShape_T_03 = bbc_btConvexShape_native_new();
},
bbc_btConvexInternalShape = $rt_classWithoutFields(bbc_btConvexShape),
bbc_btConvexInternalShape_NULL = null,
bbc_btConvexInternalShape_T_01 = null,
bbc_btConvexInternalShape_T_02 = null,
bbc_btConvexInternalShape_T_03 = null,
bbc_btConvexInternalShape_$callClinit = () => {
    bbc_btConvexInternalShape_$callClinit = $rt_eraseClinit(bbc_btConvexInternalShape);
    bbc_btConvexInternalShape__clinit_();
},
bbc_btConvexInternalShape__init_ = ($this, $b, $c) => {
    bbc_btConvexInternalShape_$callClinit();
    bbc_btConvexShape__init_($this, 1, 1);
},
bbc_btConvexInternalShape__init_0 = (var_0, var_1) => {
    let var_2 = new bbc_btConvexInternalShape();
    bbc_btConvexInternalShape__init_(var_2, var_0, var_1);
    return var_2;
},
bbc_btConvexInternalShape_native_new = () => {
    bbc_btConvexInternalShape_$callClinit();
    return bbc_btConvexInternalShape__init_0(0, 0);
},
bbc_btConvexInternalShape__clinit_ = () => {
    bbc_btConvexInternalShape_NULL = bbc_btConvexInternalShape_native_new();
    bbc_btConvexInternalShape_T_01 = bbc_btConvexInternalShape_native_new();
    bbc_btConvexInternalShape_T_02 = bbc_btConvexInternalShape_native_new();
    bbc_btConvexInternalShape_T_03 = bbc_btConvexInternalShape_native_new();
},
cbgss_Group$_init_$lambda$_0_0 = $rt_classWithoutFields(),
cbgss_Group$_init_$lambda$_0_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgss_Group$_init_$lambda$_0_0__init_0 = () => {
    let var_0 = new cbgss_Group$_init_$lambda$_0_0();
    cbgss_Group$_init_$lambda$_0_0__init_(var_0);
    return var_0;
},
cbgss_Group$_init_$lambda$_0_0_get0 = (var$0, var$1) => {
    return cbgss_Group$_init_$lambda$_0_0_get(var$0, var$1);
},
cbgss_Group$_init_$lambda$_0_0_get = (var$0, var$1) => {
    return cbgss_Group_lambda$new$0(var$1);
},
cbggg_GLVersion$Type = $rt_classWithoutFields(jl_Enum),
cbggg_GLVersion$Type_OpenGL = null,
cbggg_GLVersion$Type_GLES = null,
cbggg_GLVersion$Type_WebGL = null,
cbggg_GLVersion$Type_NONE = null,
cbggg_GLVersion$Type_$VALUES = null,
cbggg_GLVersion$Type_$callClinit = () => {
    cbggg_GLVersion$Type_$callClinit = $rt_eraseClinit(cbggg_GLVersion$Type);
    cbggg_GLVersion$Type__clinit_();
},
cbggg_GLVersion$Type__init_0 = ($this, var$1, var$2) => {
    cbggg_GLVersion$Type_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cbggg_GLVersion$Type__init_ = (var_0, var_1) => {
    let var_2 = new cbggg_GLVersion$Type();
    cbggg_GLVersion$Type__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggg_GLVersion$Type_$values = () => {
    let var$1, var$2;
    cbggg_GLVersion$Type_$callClinit();
    var$1 = $rt_createArray(cbggg_GLVersion$Type, 4);
    var$2 = var$1.data;
    var$2[0] = cbggg_GLVersion$Type_OpenGL;
    var$2[1] = cbggg_GLVersion$Type_GLES;
    var$2[2] = cbggg_GLVersion$Type_WebGL;
    var$2[3] = cbggg_GLVersion$Type_NONE;
    return var$1;
},
cbggg_GLVersion$Type__clinit_ = () => {
    cbggg_GLVersion$Type_OpenGL = cbggg_GLVersion$Type__init_($rt_s(492), 0);
    cbggg_GLVersion$Type_GLES = cbggg_GLVersion$Type__init_($rt_s(493), 1);
    cbggg_GLVersion$Type_WebGL = cbggg_GLVersion$Type__init_($rt_s(39), 2);
    cbggg_GLVersion$Type_NONE = cbggg_GLVersion$Type__init_($rt_s(494), 3);
    cbggg_GLVersion$Type_$VALUES = cbggg_GLVersion$Type_$values();
};
function cbgu_Timer$Task() {
    let a = this; jl_Object.call(a);
    a.$executeTimeMillis = Long_ZERO;
    a.$intervalMillis = Long_ZERO;
    a.$repeatCount = 0;
}
let cbgu_Timer$Task__init_ = $this => {
    jl_Object__init_($this);
    $this.$repeatCount = (-1);
},
cbgu_Timer$Task_cancel = $this => {
    $this.$executeTimeMillis = Long_ZERO;
    $this.$repeatCount = (-1);
},
cbgu_Timer$Task_isScheduled = $this => {
    return $this.$repeatCount == (-1) ? 0 : 1;
},
cbgu_StreamUtils$OptimizedByteArrayOutputStream = $rt_classWithoutFields(ji_ByteArrayOutputStream),
cbgu_StreamUtils$OptimizedByteArrayOutputStream__init_ = ($this, $initialSize) => {
    ji_ByteArrayOutputStream__init_($this, $initialSize);
},
cbgu_StreamUtils$OptimizedByteArrayOutputStream__init_0 = var_0 => {
    let var_1 = new cbgu_StreamUtils$OptimizedByteArrayOutputStream();
    cbgu_StreamUtils$OptimizedByteArrayOutputStream__init_(var_1, var_0);
    return var_1;
},
cbgu_StreamUtils$OptimizedByteArrayOutputStream_toByteArray = $this => {
    jl_Object_monitorEnterSync($this);
    try {
        if ($this.$count2 != $this.$buf.data.length)
            return ji_ByteArrayOutputStream_toByteArray($this);
        return $this.$buf;
    } finally {
        jl_Object_monitorExitSync($this);
    }
},
jl_AbstractStringBuilder$Constants = $rt_classWithoutFields(),
jl_AbstractStringBuilder$Constants_longLogPowersOfTen = null,
jl_AbstractStringBuilder$Constants_doubleAnalysisResult = null,
jl_AbstractStringBuilder$Constants_floatAnalysisResult = null,
jl_AbstractStringBuilder$Constants_$callClinit = () => {
    jl_AbstractStringBuilder$Constants_$callClinit = $rt_eraseClinit(jl_AbstractStringBuilder$Constants);
    jl_AbstractStringBuilder$Constants__clinit_();
},
jl_AbstractStringBuilder$Constants__clinit_ = () => {
    jl_AbstractStringBuilder$Constants_longLogPowersOfTen = $rt_createLongArrayFromData([Long_fromInt(1), Long_fromInt(10), Long_fromInt(100), Long_fromInt(10000), Long_fromInt(100000000), Long_create(1874919424, 2328306)]);
    jl_AbstractStringBuilder$Constants_doubleAnalysisResult = otcit_DoubleAnalyzer$Result__init_0();
    jl_AbstractStringBuilder$Constants_floatAnalysisResult = otcit_FloatAnalyzer$Result__init_0();
};
function jur_SingleSet() {
    jur_JointSet.call(this);
    this.$kid = null;
}
let jur_SingleSet__init_ = ($this, $child, $fSet) => {
    jur_JointSet__init_($this);
    $this.$kid = $child;
    $this.$fSet = $fSet;
    $this.$groupIndex = $fSet.$getGroupIndex();
},
jur_SingleSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_SingleSet();
    jur_SingleSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_SingleSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $start, $shift;
    $start = $matchResult.$getStart($this.$groupIndex);
    $matchResult.$setStart($this.$groupIndex, $stringIndex);
    $shift = $this.$kid.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    $matchResult.$setStart($this.$groupIndex, $start);
    return (-1);
},
jur_SingleSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $res;
    $res = $this.$kid.$find($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        $matchResult.$setStart($this.$groupIndex, $res);
    return $res;
},
jur_SingleSet_findBack = ($this, $stringIndex, $lastIndex, $testString, $matchResult) => {
    let $res;
    $res = $this.$kid.$findBack($stringIndex, $lastIndex, $testString, $matchResult);
    if ($res >= 0)
        $matchResult.$setStart($this.$groupIndex, $res);
    return $res;
},
jur_SingleSet_first = ($this, $set) => {
    return $this.$kid.$first($set);
},
jur_SingleSet_processBackRefReplacement = $this => {
    let $set;
    $set = jur_BackReferencedSingleSet__init_0($this);
    $this.$next1 = $set;
    return $set;
},
jur_SingleSet_processSecondPass = $this => {
    let $set;
    $this.$isSecondPassVisited = 1;
    if ($this.$fSet !== null && !$this.$fSet.$isSecondPassVisited)
        $this.$fSet.$processSecondPass();
    if ($this.$kid !== null && !$this.$kid.$isSecondPassVisited) {
        $set = $this.$kid.$processBackRefReplacement();
        if ($set !== null) {
            $this.$kid.$isSecondPassVisited = 1;
            $this.$kid = $set;
        }
        $this.$kid.$processSecondPass();
    }
};
function jl_Thread() {
    let a = this; jl_Object.call(a);
    a.$id4 = Long_ZERO;
    a.$timeSliceStart = Long_ZERO;
    a.$finishedLock = null;
    a.$name4 = null;
    a.$alive = 0;
    a.$target2 = null;
}
let jl_Thread_mainThread = null,
jl_Thread_currentThread0 = null,
jl_Thread_nextId = 0,
jl_Thread_activeCount = 0,
jl_Thread_defaultUncaughtExceptionHandler = null,
jl_Thread_$callClinit = () => {
    jl_Thread_$callClinit = $rt_eraseClinit(jl_Thread);
    jl_Thread__clinit_();
},
jl_Thread__init_0 = ($this, $name) => {
    jl_Thread_$callClinit();
    jl_Thread__init_($this, null, $name);
},
jl_Thread__init_1 = var_0 => {
    let var_1 = new jl_Thread();
    jl_Thread__init_0(var_1, var_0);
    return var_1;
},
jl_Thread__init_ = ($this, $target, $name) => {
    let var$3;
    jl_Thread_$callClinit();
    jl_Object__init_($this);
    $this.$finishedLock = jl_Object__init_0();
    $this.$alive = 1;
    $this.$name4 = $name;
    $this.$target2 = $target;
    var$3 = jl_Thread_nextId;
    jl_Thread_nextId = var$3 + 1 | 0;
    $this.$id4 = Long_fromInt(var$3);
},
jl_Thread__init_2 = (var_0, var_1) => {
    let var_2 = new jl_Thread();
    jl_Thread__init_(var_2, var_0, var_1);
    return var_2;
},
jl_Thread_setCurrentThread = $thread_0 => {
    jl_Thread_$callClinit();
    if (jl_Thread_currentThread0 !== $thread_0)
        jl_Thread_currentThread0 = $thread_0;
    jl_Thread_currentThread0.$timeSliceStart = jl_System_currentTimeMillis();
},
jl_Thread_currentThread = () => {
    jl_Thread_$callClinit();
    return jl_Thread_currentThread0;
},
jl_Thread__clinit_ = () => {
    jl_Thread_mainThread = jl_Thread__init_1($rt_s(495));
    jl_Thread_currentThread0 = jl_Thread_mainThread;
    jl_Thread_nextId = 1;
    jl_Thread_activeCount = 1;
    jl_Thread_defaultUncaughtExceptionHandler = jl_DefaultUncaughtExceptionHandler__init_0();
},
jur_BackReferencedSingleSet = $rt_classWithoutFields(jur_SingleSet),
jur_BackReferencedSingleSet__init_ = ($this, $node) => {
    jur_SingleSet__init_($this, $node.$kid, $node.$fSet);
},
jur_BackReferencedSingleSet__init_0 = var_0 => {
    let var_1 = new jur_BackReferencedSingleSet();
    jur_BackReferencedSingleSet__init_(var_1, var_0);
    return var_1;
},
jur_BackReferencedSingleSet_find = ($this, $startSearch, $testString, $matchResult) => {
    let $res, $lastIndex, $saveStart;
    $res = 0;
    $lastIndex = $matchResult.$getRightBound();
    a: {
        while (true) {
            if ($startSearch > $lastIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = $matchResult.$getStart($this.$groupIndex);
            $matchResult.$setStart($this.$groupIndex, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            $matchResult.$setStart($this.$groupIndex, $saveStart);
            $startSearch = $startSearch + 1 | 0;
        }
    }
    return $startSearch;
},
jur_BackReferencedSingleSet_findBack = ($this, $stringIndex, $startSearch, $testString, $matchResult) => {
    let $res, $saveStart;
    $res = 0;
    a: {
        while (true) {
            if ($startSearch < $stringIndex) {
                $startSearch = $res;
                break a;
            }
            $saveStart = $matchResult.$getStart($this.$groupIndex);
            $matchResult.$setStart($this.$groupIndex, $startSearch);
            $res = $this.$kid.$matches($startSearch, $testString, $matchResult);
            if ($res >= 0)
                break;
            $matchResult.$setStart($this.$groupIndex, $saveStart);
            $startSearch = $startSearch + (-1) | 0;
        }
    }
    return $startSearch;
},
jur_BackReferencedSingleSet_processBackRefReplacement = $this => {
    return null;
},
jnc_BufferOverflowException = $rt_classWithoutFields(jl_RuntimeException),
jnc_BufferOverflowException__init_ = $this => {
    jl_RuntimeException__init_($this);
},
jnc_BufferOverflowException__init_0 = () => {
    let var_0 = new jnc_BufferOverflowException();
    jnc_BufferOverflowException__init_(var_0);
    return var_0;
},
otp_PlatformQueue = $rt_classWithoutFields(),
otp_PlatformQueue_wrap = $obj => {
    return $obj;
},
otp_PlatformQueue_isEmpty$static = $this => {
    return $this.length ? 0 : 1;
},
otp_PlatformQueue_add$static = ($this, $e) => {
    let var$3;
    var$3 = otp_PlatformQueue_wrap($e);
    $this.push(var$3);
},
otp_PlatformQueue_remove$static = $this => {
    return otji_JSWrapper_maybeWrap($this.shift());
},
cbg_LifecycleListener = $rt_classWithoutFields(0);
function cbgu_Timer$TimerThread() {
    let a = this; cgxgbtu_Timer.call(a);
    a.$app = null;
    a.$pauseMillis = Long_ZERO;
}
let cbgu_Timer$TimerThread__init_ = $this => {
    cgxgbtu_Timer__init_($this);
    cbg_Gdx_app.$addLifecycleListener($this);
    $this.$resume();
},
cbgu_Timer$TimerThread__init_0 = () => {
    let var_0 = new cbgu_Timer$TimerThread();
    cbgu_Timer$TimerThread__init_(var_0);
    return var_0;
},
cbgu_Timer$TimerThread_run = $this => {
    let var$1, var$2, $timeMillis, $waitMillis, $i, $n, $ex, var$8, var$9, $$je;
    cbgu_Timer_$callClinit();
    var$1 = cbgu_Timer_instances;
    jl_Object_monitorEnterSync(var$1);
    a: {
        b: {
            try {
                if ($this.$app === cbg_Gdx_app)
                    break b;
                jl_Object_monitorExitSync(var$1);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$2 = $$je;
                break a;

            }
            return;
        }
        try {
            $timeMillis = Long_div(cbgu_TimeUtils_nanoTime(), Long_fromInt(1000000));
            $waitMillis = Long_fromInt(5000);
            $i = 0;
            $n = cbgu_Timer_instances.$size0;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$2 = $$je;
            break a;

        }
        c: {
            try {
                while ($i < $n) {
                    try {
                        $waitMillis = (cbgu_Timer_instances.$get($i)).$update3($timeMillis, $waitMillis);
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Throwable) {
                            $ex = $$je;
                            break c;
                        } else {
                            throw $$e;
                        }
                    }
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$2 = $$je;
                break a;

            }
            d: {
                try {
                    if ($this.$app === cbg_Gdx_app)
                        break d;
                    jl_Object_monitorExitSync(var$1);
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$2 = $$je;
                    break a;

                }
                return;
            }
            try {
                $this.$schedule0(Long_lo((jl_Math_max1(Long_ZERO, $waitMillis))));
                jl_Object_monitorExitSync(var$1);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$2 = $$je;
                break a;

            }
            return;
        }
        try {
            var$2 = new cbgu_GdxRuntimeException;
            var$8 = jl_Class_getName(jl_Object_getClass(cbgu_Timer_instances.$get($i)));
            var$9 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append(var$9, $rt_s(496)), var$8);
            cbgu_GdxRuntimeException__init_1(var$2, jl_StringBuilder_toString(var$9), $ex);
            $rt_throw(var$2);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$2 = $$je;

        }
    }
    jl_Object_monitorExitSync(var$1);
    $rt_throw(var$2);
},
cbgu_Timer$TimerThread_resume = $this => {
    let $delayMillis, var$2, $i, $n, var$5, $$je;
    $delayMillis = Long_sub(Long_div(cbgu_TimeUtils_nanoTime(), Long_fromInt(1000000)), $this.$pauseMillis);
    cbgu_Timer_$callClinit();
    var$2 = cbgu_Timer_instances;
    jl_Object_monitorEnterSync(var$2);
    a: {
        try {
            $i = 0;
            $n = cbgu_Timer_instances.$size0;
            while ($i < $n) {
                (cbgu_Timer_instances.$get($i)).$delay($delayMillis);
                $i = $i + 1 | 0;
            }
            jl_Object_monitorExitSync(var$2);
            break a;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;

        }
        jl_Object_monitorExitSync(var$2);
        $rt_throw(var$5);
    }
    $this.$app = cbg_Gdx_app;
    $this.$run();
},
cbgu_Timer$TimerThread_pause = $this => {
    let var$1, var$2, $$je;
    $this.$pauseMillis = Long_div(cbgu_TimeUtils_nanoTime(), Long_fromInt(1000000));
    cbgu_Timer_$callClinit();
    var$1 = cbgu_Timer_instances;
    jl_Object_monitorEnterSync(var$1);
    a: {
        try {
            $this.$app = null;
            cbgu_Timer_wake();
            jl_Object_monitorExitSync(var$1);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$2 = $$je;
            break a;

        }
        return;
    }
    jl_Object_monitorExitSync(var$1);
    $rt_throw(var$2);
};
function cbgu_IntSet() {
    let a = this; jl_Object.call(a);
    a.$size6 = 0;
    a.$keyTable1 = null;
    a.$hasZeroValue0 = 0;
    a.$loadFactor4 = 0.0;
    a.$threshold1 = 0;
    a.$shift = 0;
    a.$mask2 = 0;
}
let cbgu_IntSet__init_0 = $this => {
    cbgu_IntSet__init_($this, 51, 0.800000011920929);
},
cbgu_IntSet__init_1 = () => {
    let var_0 = new cbgu_IntSet();
    cbgu_IntSet__init_0(var_0);
    return var_0;
},
cbgu_IntSet__init_ = ($this, $initialCapacity, $loadFactor) => {
    let $tableSize;
    jl_Object__init_($this);
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor4 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold1 = $tableSize * $loadFactor | 0;
        $this.$mask2 = $tableSize - 1 | 0;
        $this.$shift = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask2));
        $this.$keyTable1 = $rt_createIntArray($tableSize);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(374))).$append20($loadFactor)).$toString()));
},
cbgu_IntSet__init_2 = (var_0, var_1) => {
    let var_2 = new cbgu_IntSet();
    cbgu_IntSet__init_(var_2, var_0, var_1);
    return var_2;
},
cbgu_IntSet_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item), Long_create(2135587861, 2654435769)), $this.$shift));
},
cbgu_IntSet_locateKey = ($this, $key) => {
    let $keyTable, $i, $other;
    $keyTable = $this.$keyTable1;
    $i = $this.$place($key);
    while (true) {
        $other = $keyTable.data[$i];
        if (!$other)
            return  -($i + 1 | 0) | 0;
        if ($other == $key)
            break;
        $i = ($i + 1 | 0) & $this.$mask2;
    }
    return $i;
},
cbgu_IntSet_add = ($this, $key) => {
    let $i, var$3;
    if (!$key) {
        if ($this.$hasZeroValue0)
            return 0;
        $this.$hasZeroValue0 = 1;
        $this.$size6 = $this.$size6 + 1 | 0;
        return 1;
    }
    $i = cbgu_IntSet_locateKey($this, $key);
    if ($i >= 0)
        return 0;
    var$3 =  -($i + 1 | 0) | 0;
    $this.$keyTable1.data[var$3] = $key;
    var$3 = $this.$size6 + 1 | 0;
    $this.$size6 = var$3;
    if (var$3 >= $this.$threshold1)
        cbgu_IntSet_resize($this, $this.$keyTable1.data.length << 1);
    return 1;
},
cbgu_IntSet_addResize = ($this, $key) => {
    let $keyTable, $i, var$4;
    $keyTable = $this.$keyTable1;
    $i = $this.$place($key);
    while (true) {
        var$4 = $keyTable.data;
        if (!var$4[$i])
            break;
        $i = ($i + 1 | 0) & $this.$mask2;
    }
    var$4[$i] = $key;
},
cbgu_IntSet_remove = ($this, $key) => {
    let $i, $keyTable, $mask, $next, var$6, var$7, $placement;
    if (!$key) {
        if (!$this.$hasZeroValue0)
            return 0;
        $this.$hasZeroValue0 = 0;
        $this.$size6 = $this.$size6 - 1 | 0;
        return 1;
    }
    $i = cbgu_IntSet_locateKey($this, $key);
    if ($i < 0)
        return 0;
    $keyTable = $this.$keyTable1;
    $mask = $this.$mask2;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$6 = $keyTable.data;
        var$7 = var$6[$next];
        if (!var$7)
            break;
        $placement = $this.$place(var$7);
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$6[$i] = var$7;
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$6[$i] = 0;
    $this.$size6 = $this.$size6 - 1 | 0;
    return 1;
},
cbgu_IntSet_contains = ($this, $key) => {
    if (!$key)
        return $this.$hasZeroValue0;
    return cbgu_IntSet_locateKey($this, $key) < 0 ? 0 : 1;
},
cbgu_IntSet_resize = ($this, $newSize) => {
    let $oldCapacity, $oldKeyTable, $i, $key;
    a: {
        $oldCapacity = $this.$keyTable1.data.length;
        $this.$threshold1 = $newSize * $this.$loadFactor4 | 0;
        $this.$mask2 = $newSize - 1 | 0;
        $this.$shift = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask2));
        $oldKeyTable = $this.$keyTable1;
        $this.$keyTable1 = $rt_createIntArray($newSize);
        if ($this.$size6 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key)
                    cbgu_IntSet_addResize($this, $key);
                $i = $i + 1 | 0;
            }
        }
    }
};
function ju_MissingResourceException() {
    let a = this; jl_RuntimeException.call(a);
    a.$className = null;
    a.$key0 = null;
}
let ju_MissingResourceException__init_ = ($this, $s, $className, $key) => {
    jl_RuntimeException__init_0($this, $s);
    $this.$className = $className;
    $this.$key0 = $key;
},
ju_MissingResourceException__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new ju_MissingResourceException();
    ju_MissingResourceException__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jl_StringIndexOutOfBoundsException = $rt_classWithoutFields(jl_IndexOutOfBoundsException),
jl_StringIndexOutOfBoundsException__init_0 = $this => {
    jl_IndexOutOfBoundsException__init_2($this);
},
jl_StringIndexOutOfBoundsException__init_ = () => {
    let var_0 = new jl_StringIndexOutOfBoundsException();
    jl_StringIndexOutOfBoundsException__init_0(var_0);
    return var_0;
};
function jur_UCIBackReferenceSet() {
    jur_CIBackReferenceSet.call(this);
    this.$groupIndex1 = 0;
}
let jur_UCIBackReferenceSet__init_ = ($this, $groupIndex, $consCounter) => {
    jur_CIBackReferenceSet__init_($this, $groupIndex, $consCounter);
},
jur_UCIBackReferenceSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_UCIBackReferenceSet();
    jur_UCIBackReferenceSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_UCIBackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $group, $i, var$6, var$7;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $i = 0;
        while (true) {
            if ($i >= $group.$length()) {
                $matchResult.$setConsumed($this.$consCounter1, $group.$length());
                return $this.$next1.$matches($stringIndex + $group.$length() | 0, $testString, $matchResult);
            }
            var$6 = jl_Character_toLowerCase(jl_Character_toUpperCase($group.$charAt($i)));
            var$7 = $stringIndex + $i | 0;
            var$7 = jl_Character_toUpperCase($testString.$charAt(var$7));
            if (var$6 != jl_Character_toLowerCase(var$7))
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    return (-1);
},
jur_UCIBackReferenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$groupIndex1;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(497)), var$1);
    return jl_StringBuilder_toString(var$2);
},
cbgu_StreamUtils = $rt_classWithoutFields(),
cbgu_StreamUtils_EMPTY_BYTES = null,
cbgu_StreamUtils_$callClinit = () => {
    cbgu_StreamUtils_$callClinit = $rt_eraseClinit(cbgu_StreamUtils);
    cbgu_StreamUtils__clinit_();
},
cbgu_StreamUtils_copyStream = ($input, $output) => {
    cbgu_StreamUtils_$callClinit();
    cbgu_StreamUtils_copyStream0($input, $output, $rt_createByteArray(4096));
},
cbgu_StreamUtils_copyStream0 = ($input, $output, $buffer) => {
    let var$4;
    cbgu_StreamUtils_$callClinit();
    while (true) {
        var$4 = $input.$read4($buffer);
        if (var$4 == (-1))
            break;
        $output.$write($buffer, 0, var$4);
    }
},
cbgu_StreamUtils_copyStreamToByteArray = ($input, $estimatedSize) => {
    let $baos;
    cbgu_StreamUtils_$callClinit();
    $baos = cbgu_StreamUtils$OptimizedByteArrayOutputStream__init_0(jl_Math_max(0, $estimatedSize));
    cbgu_StreamUtils_copyStream($input, $baos);
    return $baos.$toByteArray0();
},
cbgu_StreamUtils_closeQuietly = $c => {
    let $$je;
    cbgu_StreamUtils_$callClinit();
    a: {
        if ($c !== null)
            try {
                $c.$close();
                break a;
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof jl_Throwable) {
                } else {
                    throw $$e;
                }
            }
    }
},
cbgu_StreamUtils__clinit_ = () => {
    cbgu_StreamUtils_EMPTY_BYTES = $rt_createByteArray(0);
};
function jn_IntBufferOverDataView() {
    let a = this; jn_IntBufferImpl.call(a);
    a.$readOnly3 = 0;
    a.$data9 = null;
    a.$littleEndian1 = 0;
}
let jn_IntBufferOverDataView__init_ = ($this, $position, $limit, $readOnly, $data, $littleEndian) => {
    jn_IntBufferImpl__init_($this, $position, $limit);
    $this.$readOnly3 = $readOnly;
    $this.$data9 = $data;
    $this.$littleEndian1 = $littleEndian;
},
jn_IntBufferOverDataView__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_IntBufferOverDataView();
    jn_IntBufferOverDataView__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_IntBufferOverDataView_readOnly = $this => {
    return $this.$readOnly3;
},
jn_IntBufferOverDataView_getElement = ($this, $index) => {
    return $this.$data9.getInt32($index * 4 | 0, !!$this.$littleEndian1);
},
jn_IntBufferOverDataView_putElement = ($this, $index, $value) => {
    let var$3, var$4, var$5;
    var$3 = $this.$data9;
    var$4 = $index * 4 | 0;
    var$5 = $this.$littleEndian1;
    var$3.setInt32(var$4, $value, !!var$5);
},
jn_IntBufferOverDataView_capacityImpl = $this => {
    return $this.$data9.byteLength / 4 | 0;
};
function jn_ByteOrder() {
    jl_Object.call(this);
    this.$name5 = null;
}
let jn_ByteOrder_BIG_ENDIAN = null,
jn_ByteOrder_LITTLE_ENDIAN = null,
jn_ByteOrder_nativeOrder0 = null,
jn_ByteOrder_$callClinit = () => {
    jn_ByteOrder_$callClinit = $rt_eraseClinit(jn_ByteOrder);
    jn_ByteOrder__clinit_();
},
jn_ByteOrder__init_0 = ($this, $name) => {
    jn_ByteOrder_$callClinit();
    jl_Object__init_($this);
    $this.$name5 = $name;
},
jn_ByteOrder__init_ = var_0 => {
    let var_1 = new jn_ByteOrder();
    jn_ByteOrder__init_0(var_1, var_0);
    return var_1;
},
jn_ByteOrder_nativeOrder = () => {
    let $buffer, $shortArray, $byteArray;
    jn_ByteOrder_$callClinit();
    if (jn_ByteOrder_nativeOrder0 === null) {
        $buffer = new ArrayBuffer(2);
        $shortArray = new Int16Array($buffer);
        $shortArray[0] = 1;
        $byteArray = new Int8Array($buffer);
        jn_ByteOrder_nativeOrder0 = $byteArray[0] ? jn_ByteOrder_LITTLE_ENDIAN : jn_ByteOrder_BIG_ENDIAN;
    }
    return jn_ByteOrder_nativeOrder0;
},
jn_ByteOrder__clinit_ = () => {
    jn_ByteOrder_BIG_ENDIAN = jn_ByteOrder__init_($rt_s(498));
    jn_ByteOrder_LITTLE_ENDIAN = jn_ByteOrder__init_($rt_s(499));
},
cbgg_TextureData$TextureDataType = $rt_classWithoutFields(jl_Enum),
cbgg_TextureData$TextureDataType_Pixmap = null,
cbgg_TextureData$TextureDataType_Custom = null,
cbgg_TextureData$TextureDataType_$VALUES = null,
cbgg_TextureData$TextureDataType_$callClinit = () => {
    cbgg_TextureData$TextureDataType_$callClinit = $rt_eraseClinit(cbgg_TextureData$TextureDataType);
    cbgg_TextureData$TextureDataType__clinit_();
},
cbgg_TextureData$TextureDataType__init_0 = ($this, var$1, var$2) => {
    cbgg_TextureData$TextureDataType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cbgg_TextureData$TextureDataType__init_ = (var_0, var_1) => {
    let var_2 = new cbgg_TextureData$TextureDataType();
    cbgg_TextureData$TextureDataType__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgg_TextureData$TextureDataType__clinit_ = () => {
    let var$1, var$2;
    cbgg_TextureData$TextureDataType_Pixmap = cbgg_TextureData$TextureDataType__init_($rt_s(500), 0);
    cbgg_TextureData$TextureDataType_Custom = cbgg_TextureData$TextureDataType__init_($rt_s(501), 1);
    var$1 = $rt_createArray(cbgg_TextureData$TextureDataType, 2);
    var$2 = var$1.data;
    var$2[0] = cbgg_TextureData$TextureDataType_Pixmap;
    var$2[1] = cbgg_TextureData$TextureDataType_Custom;
    cbgg_TextureData$TextureDataType_$VALUES = var$1;
},
jur_DotAllQuantifierSet = $rt_classWithoutFields(jur_QuantifierSet),
jur_DotAllQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_DotAllQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_DotAllQuantifierSet();
    jur_DotAllQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_DotAllQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength;
    $strLength = $matchResult.$getRightBound();
    if ($strLength > $stringIndex)
        return $this.$next1.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_DotAllQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength;
    $strLength = $matchResult.$getRightBound();
    if ($this.$next1.$findBack($stringIndex, $strLength, $testString, $matchResult) >= 0)
        return $stringIndex;
    return (-1);
},
jur_DotAllQuantifierSet_getName = $this => {
    return $rt_s(502);
},
jur_ReluctantGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_ReluctantGroupQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_GroupQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_ReluctantGroupQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_ReluctantGroupQuantifierSet();
    jur_ReluctantGroupQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_ReluctantGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $res;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    $res = $this.$next1.$matches($stringIndex, $testString, $matchResult);
    if ($res >= 0)
        return $res;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
},
cbg_Application = $rt_classWithoutFields(0),
jnc_CoderMalfunctionError = $rt_classWithoutFields(jl_Error),
jnc_CoderMalfunctionError__init_ = ($this, $cause) => {
    jl_Error__init_0($this, $cause);
},
jnc_CoderMalfunctionError__init_0 = var_0 => {
    let var_1 = new jnc_CoderMalfunctionError();
    jnc_CoderMalfunctionError__init_(var_1, var_0);
    return var_1;
},
cbgssu_Value = $rt_classWithoutFields(),
cbgssu_Value_zero = null,
cbgssu_Value_minWidth = null,
cbgssu_Value_minHeight = null,
cbgssu_Value_prefWidth = null,
cbgssu_Value_prefHeight = null,
cbgssu_Value_maxWidth = null,
cbgssu_Value_maxHeight = null,
cbgssu_Value_$callClinit = () => {
    cbgssu_Value_$callClinit = $rt_eraseClinit(cbgssu_Value);
    cbgssu_Value__clinit_();
},
cbgssu_Value__init_ = $this => {
    cbgssu_Value_$callClinit();
    jl_Object__init_($this);
},
cbgssu_Value__clinit_ = () => {
    cbgssu_Value_zero = cbgssu_Value$Fixed__init_(0.0);
    cbgssu_Value_minWidth = cbgssu_Value$1__init_0();
    cbgssu_Value_minHeight = cbgssu_Value$2__init_0();
    cbgssu_Value_prefWidth = cbgssu_Value$3__init_0();
    cbgssu_Value_prefHeight = cbgssu_Value$4__init_0();
    cbgssu_Value_maxWidth = cbgssu_Value$5__init_0();
    cbgssu_Value_maxHeight = cbgssu_Value$6__init_0();
};
function cbgssu_Value$Fixed() {
    cbgssu_Value.call(this);
    this.$value7 = 0.0;
}
let cbgssu_Value$Fixed_cache = null,
cbgssu_Value$Fixed_$callClinit = () => {
    cbgssu_Value$Fixed_$callClinit = $rt_eraseClinit(cbgssu_Value$Fixed);
    cbgssu_Value$Fixed__clinit_();
},
cbgssu_Value$Fixed__init_0 = ($this, $value) => {
    cbgssu_Value$Fixed_$callClinit();
    cbgssu_Value__init_($this);
    $this.$value7 = $value;
},
cbgssu_Value$Fixed__init_ = var_0 => {
    let var_1 = new cbgssu_Value$Fixed();
    cbgssu_Value$Fixed__init_0(var_1, var_0);
    return var_1;
},
cbgssu_Value$Fixed_get = ($this, $context) => {
    return $this.$value7;
},
cbgssu_Value$Fixed_valueOf = $value => {
    let var$2, var$3, $fixed;
    cbgssu_Value$Fixed_$callClinit();
    if ($value === 0.0) {
        cbgssu_Value_$callClinit();
        return cbgssu_Value_zero;
    }
    if ($value >= (-10.0) && $value <= 100.0) {
        var$2 = $value | 0;
        if ($value === var$2) {
            var$3 = cbgssu_Value$Fixed_cache.data;
            var$2 = var$2 + 10 | 0;
            $fixed = var$3[var$2];
            if ($fixed === null) {
                var$3 = cbgssu_Value$Fixed_cache.data;
                $fixed = cbgssu_Value$Fixed__init_($value);
                var$3[var$2] = $fixed;
            }
            return $fixed;
        }
    }
    return cbgssu_Value$Fixed__init_($value);
},
cbgssu_Value$Fixed__clinit_ = () => {
    cbgssu_Value$Fixed_cache = $rt_createArray(cbgssu_Value$Fixed, 111);
},
cbgg_Colors = $rt_classWithoutFields(),
cbgg_Colors_map = null,
cbgg_Colors_$callClinit = () => {
    cbgg_Colors_$callClinit = $rt_eraseClinit(cbgg_Colors);
    cbgg_Colors__clinit_();
},
cbgg_Colors_get = $name => {
    cbgg_Colors_$callClinit();
    return cbgg_Colors_map.$get2($name);
},
cbgg_Colors_reset = () => {
    let var$1;
    cbgg_Colors_$callClinit();
    cbgg_Colors_map.$clear();
    var$1 = cbgg_Colors_map;
    cbgg_Color_$callClinit();
    var$1.$put($rt_s(503), cbgg_Color_CLEAR);
    cbgg_Colors_map.$put($rt_s(504), cbgg_Color_CLEAR_WHITE);
    cbgg_Colors_map.$put($rt_s(505), cbgg_Color_BLACK);
    cbgg_Colors_map.$put($rt_s(506), cbgg_Color_WHITE);
    cbgg_Colors_map.$put($rt_s(507), cbgg_Color_LIGHT_GRAY);
    cbgg_Colors_map.$put($rt_s(508), cbgg_Color_GRAY);
    cbgg_Colors_map.$put($rt_s(509), cbgg_Color_DARK_GRAY);
    cbgg_Colors_map.$put($rt_s(510), cbgg_Color_BLUE);
    cbgg_Colors_map.$put($rt_s(511), cbgg_Color_NAVY);
    cbgg_Colors_map.$put($rt_s(512), cbgg_Color_ROYAL);
    cbgg_Colors_map.$put($rt_s(513), cbgg_Color_SLATE);
    cbgg_Colors_map.$put($rt_s(514), cbgg_Color_SKY);
    cbgg_Colors_map.$put($rt_s(515), cbgg_Color_CYAN);
    cbgg_Colors_map.$put($rt_s(516), cbgg_Color_TEAL);
    cbgg_Colors_map.$put($rt_s(517), cbgg_Color_GREEN);
    cbgg_Colors_map.$put($rt_s(518), cbgg_Color_CHARTREUSE);
    cbgg_Colors_map.$put($rt_s(519), cbgg_Color_LIME);
    cbgg_Colors_map.$put($rt_s(520), cbgg_Color_FOREST);
    cbgg_Colors_map.$put($rt_s(521), cbgg_Color_OLIVE);
    cbgg_Colors_map.$put($rt_s(522), cbgg_Color_YELLOW);
    cbgg_Colors_map.$put($rt_s(523), cbgg_Color_GOLD);
    cbgg_Colors_map.$put($rt_s(524), cbgg_Color_GOLDENROD);
    cbgg_Colors_map.$put($rt_s(525), cbgg_Color_ORANGE);
    cbgg_Colors_map.$put($rt_s(526), cbgg_Color_BROWN);
    cbgg_Colors_map.$put($rt_s(527), cbgg_Color_TAN);
    cbgg_Colors_map.$put($rt_s(528), cbgg_Color_FIREBRICK);
    cbgg_Colors_map.$put($rt_s(529), cbgg_Color_RED);
    cbgg_Colors_map.$put($rt_s(530), cbgg_Color_SCARLET);
    cbgg_Colors_map.$put($rt_s(531), cbgg_Color_CORAL);
    cbgg_Colors_map.$put($rt_s(532), cbgg_Color_SALMON);
    cbgg_Colors_map.$put($rt_s(533), cbgg_Color_PINK);
    cbgg_Colors_map.$put($rt_s(534), cbgg_Color_MAGENTA);
    cbgg_Colors_map.$put($rt_s(535), cbgg_Color_PURPLE);
    cbgg_Colors_map.$put($rt_s(536), cbgg_Color_VIOLET);
    cbgg_Colors_map.$put($rt_s(537), cbgg_Color_MAROON);
},
cbgg_Colors__clinit_ = () => {
    cbgg_Colors_map = cbgu_ObjectMap__init_();
    cbgg_Colors_reset();
},
jur_CIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet),
jur_CIDecomposedCharSet__init_ = ($this, $decomp, $decomposedCharLength) => {
    jur_DecomposedCharSet__init_($this, $decomp, $decomposedCharLength);
},
jur_CIDecomposedCharSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CIDecomposedCharSet();
    jur_CIDecomposedCharSet__init_(var_2, var_0, var_1);
    return var_2;
},
otjw_WebGLContextAttributes = $rt_classWithoutFields(),
otjw_WebGLContextAttributes_create$js_body$_13 = () => {
    return {  };
},
jnci_AsciiDecoder = $rt_classWithoutFields(jnci_BufferedDecoder),
jnci_AsciiDecoder__init_ = ($this, $cs) => {
    jnci_BufferedDecoder__init_($this, $cs, 1.0, 1.0);
},
jnci_AsciiDecoder__init_0 = var_0 => {
    let var_1 = new jnci_AsciiDecoder();
    jnci_AsciiDecoder__init_(var_1, var_0);
    return var_1;
},
jnci_AsciiDecoder_arrayDecode = ($this, $inArray, $inPos, $inSize, $outArray, $outPos, $outSize, $controller) => {
    let $result, var$9, var$10, $b, var$12;
    $result = null;
    a: {
        while ($inPos < $inSize) {
            if ($outPos >= $outSize)
                break a;
            var$9 = $inArray.data;
            var$10 = $inPos + 1 | 0;
            $b = var$9[$inPos] & 255;
            if ($b & 128) {
                $result = jnc_CoderResult_malformedForLength(1);
                $inPos = var$10 + (-1) | 0;
                break a;
            }
            var$9 = $outArray.data;
            var$12 = $outPos + 1 | 0;
            var$9[$outPos] = $b & 65535;
            $inPos = var$10;
            $outPos = var$12;
        }
    }
    $controller.$setInPosition($inPos);
    $controller.$setOutPosition($outPos);
    return $result;
};
function cbgm_Affine2() {
    let a = this; jl_Object.call(a);
    a.$m00 = 0.0;
    a.$m01 = 0.0;
    a.$m02 = 0.0;
    a.$m10 = 0.0;
    a.$m11 = 0.0;
    a.$m12 = 0.0;
}
let cbgm_Affine2__init_ = $this => {
    jl_Object__init_($this);
    $this.$m00 = 1.0;
    $this.$m01 = 0.0;
    $this.$m02 = 0.0;
    $this.$m10 = 0.0;
    $this.$m11 = 1.0;
    $this.$m12 = 0.0;
},
cbgm_Affine2__init_0 = () => {
    let var_0 = new cbgm_Affine2();
    cbgm_Affine2__init_(var_0);
    return var_0;
},
cbgm_Affine2_setToTrnRotScl = ($this, $x, $y, $degrees, $scaleX, $scaleY) => {
    let $sin, $cos;
    $this.$m02 = $x;
    $this.$m12 = $y;
    if ($degrees === 0.0) {
        $this.$m00 = $scaleX;
        $this.$m01 = 0.0;
        $this.$m10 = 0.0;
        $this.$m11 = $scaleY;
    } else {
        $sin = cbgm_MathUtils_sinDeg($degrees);
        $cos = cbgm_MathUtils_cosDeg($degrees);
        $this.$m00 = $cos * $scaleX;
        $this.$m01 =  -$sin * $scaleY;
        $this.$m10 = $sin * $scaleX;
        $this.$m11 = $cos * $scaleY;
    }
    return $this;
},
cbgm_Affine2_preMul = ($this, $other) => {
    let $tmp00, $tmp01, $tmp02, $tmp10, $tmp11, $tmp12;
    $tmp00 = $other.$m00 * $this.$m00 + $other.$m01 * $this.$m10;
    $tmp01 = $other.$m00 * $this.$m01 + $other.$m01 * $this.$m11;
    $tmp02 = $other.$m00 * $this.$m02 + $other.$m01 * $this.$m12 + $other.$m02;
    $tmp10 = $other.$m10 * $this.$m00 + $other.$m11 * $this.$m10;
    $tmp11 = $other.$m10 * $this.$m01 + $other.$m11 * $this.$m11;
    $tmp12 = $other.$m10 * $this.$m02 + $other.$m11 * $this.$m12 + $other.$m12;
    $this.$m00 = $tmp00;
    $this.$m01 = $tmp01;
    $this.$m02 = $tmp02;
    $this.$m10 = $tmp10;
    $this.$m11 = $tmp11;
    $this.$m12 = $tmp12;
    return $this;
},
cbgm_Affine2_translate = ($this, $x, $y) => {
    $this.$m02 = $this.$m02 + $this.$m00 * $x + $this.$m01 * $y;
    $this.$m12 = $this.$m12 + $this.$m10 * $x + $this.$m11 * $y;
    return $this;
};
function cbgg_Pixmap() {
    let a = this; jl_Object.call(a);
    a.$blending0 = null;
    a.$filter = null;
    a.$color6 = 0;
    a.$nativePixmap = null;
    a.$disposed = 0;
}
let cbgg_Pixmap__init_1 = ($this, $file) => {
    let $path, var$3, var$4, $bytes, var$6;
    jl_Object__init_($this);
    cbgg_Pixmap$Blending_$callClinit();
    $this.$blending0 = cbgg_Pixmap$Blending_SourceOver;
    cbgg_Pixmap$Filter_$callClinit();
    $this.$filter = cbgg_Pixmap$Filter_BiLinear;
    $this.$color6 = 0;
    $path = $file.$path();
    cbg_Gdx_app.$getConfig();
    if (!$file.$exists()) {
        var$3 = new cbgu_GdxRuntimeException;
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(538)), $path);
        cbgu_GdxRuntimeException__init_0(var$3, jl_StringBuilder_toString(var$4));
        $rt_throw(var$3);
    }
    $bytes = $file.$readBytes();
    var$6 = $bytes.data;
    $this.$nativePixmap = cbggg_Gdx2DPixmap__init_2($bytes, 0, var$6.length, 0);
},
cbgg_Pixmap__init_2 = var_0 => {
    let var_1 = new cbgg_Pixmap();
    cbgg_Pixmap__init_1(var_1, var_0);
    return var_1;
},
cbgg_Pixmap__init_0 = ($this, $width, $height, $format) => {
    jl_Object__init_($this);
    cbgg_Pixmap$Blending_$callClinit();
    $this.$blending0 = cbgg_Pixmap$Blending_SourceOver;
    cbgg_Pixmap$Filter_$callClinit();
    $this.$filter = cbgg_Pixmap$Filter_BiLinear;
    $this.$color6 = 0;
    $this.$nativePixmap = cbggg_Gdx2DPixmap__init_1($width, $height, cbgg_Pixmap$Format_toGdx2DPixmapFormat($format));
    $this.$setColor0(0.0, 0.0, 0.0, 0.0);
    $this.$fill3();
},
cbgg_Pixmap__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_Pixmap();
    cbgg_Pixmap__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_Pixmap_setColor = ($this, $r, $g, $b, $a) => {
    $this.$color6 = cbgg_Color_rgba8888($r, $g, $b, $a);
},
cbgg_Pixmap_setColor0 = ($this, $color) => {
    $this.$setColor0($color.$r, $color.$g, $color.$b, $color.$a);
},
cbgg_Pixmap_fill = $this => {
    $this.$nativePixmap.$clear3($this.$color6);
},
cbgg_Pixmap_drawPixmap0 = ($this, $pixmap, $x, $y, $srcx, $srcy, $srcWidth, $srcHeight) => {
    $this.$nativePixmap.$drawPixmap3($pixmap.$nativePixmap, $srcx, $srcy, $x, $y, $srcWidth, $srcHeight);
},
cbgg_Pixmap_drawPixmap = ($this, $pixmap, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight) => {
    $this.$nativePixmap.$drawPixmap4($pixmap.$nativePixmap, $srcx, $srcy, $srcWidth, $srcHeight, $dstx, $dsty, $dstWidth, $dstHeight);
},
cbgg_Pixmap_getWidth = $this => {
    return $this.$nativePixmap.$getWidth0();
},
cbgg_Pixmap_getHeight = $this => {
    return $this.$nativePixmap.$getHeight0();
},
cbgg_Pixmap_dispose = $this => {
    if ($this.$disposed)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(539)));
    $this.$nativePixmap.$dispose();
    $this.$disposed = 1;
},
cbgg_Pixmap_getGLFormat = $this => {
    return $this.$nativePixmap.$getGLFormat();
},
cbgg_Pixmap_getGLInternalFormat = $this => {
    return $this.$nativePixmap.$getGLInternalFormat();
},
cbgg_Pixmap_getGLType = $this => {
    return $this.$nativePixmap.$getGLType();
},
cbgg_Pixmap_getPixels = $this => {
    return $this.$nativePixmap.$getBuffer();
},
cbgg_Pixmap_getFormat = $this => {
    return cbgg_Pixmap$Format_fromGdx2DPixmapFormat($this.$nativePixmap.$getFormat0());
},
cbgg_Pixmap_setBlending = ($this, $blending) => {
    let var$2;
    $this.$blending0 = $blending;
    var$2 = $this.$nativePixmap;
    cbgg_Pixmap$Blending_$callClinit();
    var$2.$setBlend($blending !== cbgg_Pixmap$Blending_None ? 1 : 0);
};
function cbggga_CubemapAttribute() {
    cbggg_Attribute.call(this);
    this.$textureDescription0 = null;
}
let cbggga_CubemapAttribute_EnvironmentMap = Long_ZERO,
cbggga_CubemapAttribute_Mask = Long_ZERO,
cbggga_CubemapAttribute_$callClinit = () => {
    cbggga_CubemapAttribute_$callClinit = $rt_eraseClinit(cbggga_CubemapAttribute);
    cbggga_CubemapAttribute__clinit_();
},
cbggga_CubemapAttribute__clinit_ = () => {
    cbggga_CubemapAttribute_EnvironmentMap = cbggg_Attribute_register($rt_s(540));
    cbggga_CubemapAttribute_Mask = cbggga_CubemapAttribute_EnvironmentMap;
};
function cgxjl_JParserLibraryLoader$loadJS$lambda$_11_0() {
    jl_Object.call(this);
    this.$_013 = null;
}
let cgxjl_JParserLibraryLoader$loadJS$lambda$_11_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_013 = var$1;
},
cgxjl_JParserLibraryLoader$loadJS$lambda$_11_0__init_0 = var_0 => {
    let var_1 = new cgxjl_JParserLibraryLoader$loadJS$lambda$_11_0();
    cgxjl_JParserLibraryLoader$loadJS$lambda$_11_0__init_(var_1, var_0);
    return var_1;
},
cgxjl_JParserLibraryLoader$loadJS$lambda$_11_0_onLoad = (var$0, var$1, var$2) => {
    cgxjl_JParserLibraryLoader_lambda$loadJS$2(var$0.$_013, var$1, var$2);
};
function cbgggu_DefaultShaderProvider() {
    cbgggu_BaseShaderProvider.call(this);
    this.$config2 = null;
}
let cbgggu_DefaultShaderProvider__init_ = ($this, $config) => {
    cbgggu_BaseShaderProvider__init_($this);
    if ($config === null)
        $config = cbgggs_DefaultShader$Config__init_0();
    $this.$config2 = $config;
},
cbgggu_DefaultShaderProvider__init_2 = var_0 => {
    let var_1 = new cbgggu_DefaultShaderProvider();
    cbgggu_DefaultShaderProvider__init_(var_1, var_0);
    return var_1;
},
cbgggu_DefaultShaderProvider__init_0 = $this => {
    cbgggu_DefaultShaderProvider__init_($this, null);
},
cbgggu_DefaultShaderProvider__init_1 = () => {
    let var_0 = new cbgggu_DefaultShaderProvider();
    cbgggu_DefaultShaderProvider__init_0(var_0);
    return var_0;
},
cbgggu_DefaultShaderProvider_createShader = ($this, $renderable) => {
    return cbgggs_DefaultShader__init_3($renderable, $this.$config2);
};
function cbggg_FileTextureData() {
    let a = this; jl_Object.call(a);
    a.$file0 = null;
    a.$width8 = 0;
    a.$height8 = 0;
    a.$format0 = null;
    a.$pixmap = null;
    a.$useMipMaps1 = 0;
    a.$isPrepared0 = 0;
}
let cbggg_FileTextureData_copyToPOT = 0,
cbggg_FileTextureData__init_ = ($this, $file, $preloadedPixmap, $format, $useMipMaps) => {
    jl_Object__init_($this);
    $this.$width8 = 0;
    $this.$height8 = 0;
    $this.$isPrepared0 = 0;
    $this.$file0 = $file;
    $this.$pixmap = $preloadedPixmap;
    $this.$format0 = $format;
    $this.$useMipMaps1 = $useMipMaps;
    if ($this.$pixmap !== null) {
        $this.$pixmap = cbggg_FileTextureData_ensurePot($this, $this.$pixmap);
        $this.$width8 = $this.$pixmap.$getWidth0();
        $this.$height8 = $this.$pixmap.$getHeight0();
        if ($format === null)
            $this.$format0 = $this.$pixmap.$getFormat();
    }
},
cbggg_FileTextureData__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbggg_FileTextureData();
    cbggg_FileTextureData__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbggg_FileTextureData_isPrepared = $this => {
    return $this.$isPrepared0;
},
cbggg_FileTextureData_prepare = $this => {
    if ($this.$isPrepared0)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(541)));
    if ($this.$pixmap === null) {
        $this.$pixmap = cbggg_FileTextureData_ensurePot($this, cbgg_Pixmap__init_2($this.$file0));
        $this.$width8 = $this.$pixmap.$getWidth0();
        $this.$height8 = $this.$pixmap.$getHeight0();
        if ($this.$format0 === null)
            $this.$format0 = $this.$pixmap.$getFormat();
    }
    $this.$isPrepared0 = 1;
},
cbggg_FileTextureData_ensurePot = ($this, $pixmap) => {
    let $pixmapWidth, $pixmapHeight, $potWidth, $potHeight, $tmp_0;
    a: {
        if (cbg_Gdx_gl20 === null && cbggg_FileTextureData_copyToPOT) {
            $pixmapWidth = $pixmap.$getWidth0();
            $pixmapHeight = $pixmap.$getHeight0();
            $potWidth = cbgm_MathUtils_nextPowerOfTwo($pixmapWidth);
            $potHeight = cbgm_MathUtils_nextPowerOfTwo($pixmapHeight);
            if ($pixmapWidth != $potWidth)
                break a;
            if ($pixmapHeight != $potHeight)
                break a;
        }
        return $pixmap;
    }
    $tmp_0 = cbgg_Pixmap__init_($potWidth, $potHeight, $pixmap.$getFormat());
    $tmp_0.$drawPixmap($pixmap, 0, 0, 0, 0, $pixmapWidth, $pixmapHeight);
    $pixmap.$dispose();
    return $tmp_0;
},
cbggg_FileTextureData_consumePixmap = $this => {
    let $pixmap;
    if (!$this.$isPrepared0)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(542)));
    $this.$isPrepared0 = 0;
    $pixmap = $this.$pixmap;
    $this.$pixmap = null;
    return $pixmap;
},
cbggg_FileTextureData_disposePixmap = $this => {
    return 1;
},
cbggg_FileTextureData_getWidth = $this => {
    return $this.$width8;
},
cbggg_FileTextureData_getHeight = $this => {
    return $this.$height8;
},
cbggg_FileTextureData_getFormat = $this => {
    return $this.$format0;
},
cbggg_FileTextureData_useMipMaps = $this => {
    return $this.$useMipMaps1;
},
cbggg_FileTextureData_isManaged = $this => {
    return 1;
},
cbggg_FileTextureData_getType = $this => {
    cbgg_TextureData$TextureDataType_$callClinit();
    return cbgg_TextureData$TextureDataType_Pixmap;
},
cbggg_FileTextureData_consumeCustomData = ($this, $target) => {
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(414)));
},
cbgm_Interpolation$PowOut = $rt_classWithoutFields(cbgm_Interpolation$Pow),
cbgm_Interpolation$PowOut__init_0 = ($this, $power) => {
    cbgm_Interpolation$Pow__init_0($this, $power);
},
cbgm_Interpolation$PowOut__init_ = var_0 => {
    let var_1 = new cbgm_Interpolation$PowOut();
    cbgm_Interpolation$PowOut__init_0(var_1, var_0);
    return var_1;
};
function cbggga_BlendingAttribute() {
    let a = this; cbggg_Attribute.call(a);
    a.$blended = 0;
    a.$sourceFunction = 0;
    a.$destFunction = 0;
    a.$opacity = 0.0;
}
let cbggga_BlendingAttribute_Type = Long_ZERO,
cbggga_BlendingAttribute_$callClinit = () => {
    cbggga_BlendingAttribute_$callClinit = $rt_eraseClinit(cbggga_BlendingAttribute);
    cbggga_BlendingAttribute__clinit_();
},
cbggga_BlendingAttribute_is = $mask => {
    cbggga_BlendingAttribute_$callClinit();
    return Long_ne(Long_and($mask, cbggga_BlendingAttribute_Type), $mask) ? 0 : 1;
},
cbggga_BlendingAttribute__clinit_ = () => {
    cbggga_BlendingAttribute_Type = cbggg_Attribute_register($rt_s(543));
},
otcit_DoubleAnalyzer$Result = $rt_classWithoutFields(),
otcit_DoubleAnalyzer$Result__init_ = $this => {
    jl_Object__init_($this);
},
otcit_DoubleAnalyzer$Result__init_0 = () => {
    let var_0 = new otcit_DoubleAnalyzer$Result();
    otcit_DoubleAnalyzer$Result__init_(var_0);
    return var_0;
};
function cbg_InputMultiplexer() {
    jl_Object.call(this);
    this.$processors = null;
}
let cbg_InputMultiplexer__init_ = ($this, $processors) => {
    jl_Object__init_($this);
    $this.$processors = cbgu_SnapshotArray__init_2(4);
    $this.$processors.$addAll2($processors);
},
cbg_InputMultiplexer__init_0 = var_0 => {
    let var_1 = new cbg_InputMultiplexer();
    cbg_InputMultiplexer__init_(var_1, var_0);
    return var_1;
},
cbg_InputMultiplexer_keyDown = ($this, $keycode) => {
    let $items, $i, $n, var$5, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size0;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$keyDown($keycode))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$5 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$5);
},
cbg_InputMultiplexer_keyUp = ($this, $keycode) => {
    let $items, $i, $n, var$5, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size0;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$keyUp($keycode))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$5 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$5);
},
cbg_InputMultiplexer_keyTyped = ($this, $character) => {
    let $items, $i, $n, var$5, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size0;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$keyTyped($character))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$5 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$5 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$5);
},
cbg_InputMultiplexer_touchDown = ($this, $screenX, $screenY, $pointer, $button) => {
    let $items, $i, $n, var$8, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size0;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$8 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$touchDown0($screenX, $screenY, $pointer, $button))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$8 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$8 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$8);
},
cbg_InputMultiplexer_touchUp = ($this, $screenX, $screenY, $pointer, $button) => {
    let $items, $i, $n, var$8, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size0;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$8 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$touchUp0($screenX, $screenY, $pointer, $button))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$8 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$8 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$8);
},
cbg_InputMultiplexer_touchDragged = ($this, $screenX, $screenY, $pointer) => {
    let $items, $i, $n, var$7, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size0;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$7 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$touchDragged0($screenX, $screenY, $pointer))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$7 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$7 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$7);
},
cbg_InputMultiplexer_mouseMoved = ($this, $screenX, $screenY) => {
    let $items, $i, $n, var$6, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size0;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$6 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$mouseMoved($screenX, $screenY))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$6 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$6 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$6);
},
cbg_InputMultiplexer_scrolled = ($this, $amountX, $amountY) => {
    let $items, $i, $n, var$6, $$je;
    $items = $this.$processors.$begin0();
    a: {
        try {
            $i = 0;
            $n = $this.$processors.$size0;
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$6 = $$je;
            break a;

        }
        b: {
            try {
                while ($i < $n) {
                    if ($items.data[$i].$scrolled($amountX, $amountY))
                        break b;
                    $i = $i + 1 | 0;
                }
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                var$6 = $$je;
                break a;

            }
            $this.$processors.$end();
            return 0;
        }
        try {
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$6 = $$je;
            break a;

        }
        $this.$processors.$end();
        return 1;
    }
    $this.$processors.$end();
    $rt_throw(var$6);
},
cbggg_ImmediateModeRenderer = $rt_classWithoutFields(0);
function cbggg_ImmediateModeRenderer20() {
    let a = this; jl_Object.call(a);
    a.$primitiveType1 = 0;
    a.$vertexIdx = 0;
    a.$numSetTexCoords = 0;
    a.$maxVertices = 0;
    a.$numVertices = 0;
    a.$mesh0 = null;
    a.$shader0 = null;
    a.$ownsShader = 0;
    a.$numTexCoords = 0;
    a.$vertexSize0 = 0;
    a.$normalOffset = 0;
    a.$colorOffset = 0;
    a.$texCoordOffset = 0;
    a.$projModelView = null;
    a.$vertices1 = null;
    a.$shaderUniformNames = null;
}
let cbggg_ImmediateModeRenderer20__init_0 = ($this, $maxVertices, $hasNormals, $hasColors, $numTexCoords) => {
    cbggg_ImmediateModeRenderer20__init_($this, $maxVertices, $hasNormals, $hasColors, $numTexCoords, cbggg_ImmediateModeRenderer20_createDefaultShader($hasNormals, $hasColors, $numTexCoords));
    $this.$ownsShader = 1;
},
cbggg_ImmediateModeRenderer20__init_1 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbggg_ImmediateModeRenderer20();
    cbggg_ImmediateModeRenderer20__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbggg_ImmediateModeRenderer20__init_ = ($this, $maxVertices, $hasNormals, $hasColors, $numTexCoords, $shader) => {
    let $attribs, var$7, $i;
    jl_Object__init_($this);
    $this.$projModelView = cbgm_Matrix4__init_();
    $this.$maxVertices = $maxVertices;
    $this.$numTexCoords = $numTexCoords;
    $this.$shader0 = $shader;
    $attribs = cbggg_ImmediateModeRenderer20_buildVertexAttributes($this, $hasNormals, $hasColors, $numTexCoords);
    $this.$mesh0 = cbgg_Mesh__init_3(0, $maxVertices, 0, $attribs);
    $this.$vertices1 = $rt_createFloatArray($rt_imul($maxVertices, ($this.$mesh0.$getVertexAttributes()).$vertexSize / 4 | 0));
    $this.$vertexSize0 = ($this.$mesh0.$getVertexAttributes()).$vertexSize / 4 | 0;
    $this.$normalOffset = $this.$mesh0.$getVertexAttribute(8) === null ? 0 : ($this.$mesh0.$getVertexAttribute(8)).$offset / 4 | 0;
    var$7 = $this.$mesh0.$getVertexAttribute(4) === null ? 0 : ($this.$mesh0.$getVertexAttribute(4)).$offset / 4 | 0;
    $this.$colorOffset = var$7;
    var$7 = $this.$mesh0.$getVertexAttribute(16) === null ? 0 : ($this.$mesh0.$getVertexAttribute(16)).$offset / 4 | 0;
    $this.$texCoordOffset = var$7;
    $this.$shaderUniformNames = $rt_createArray(jl_String, $numTexCoords);
    $i = 0;
    while ($i < $numTexCoords) {
        $this.$shaderUniformNames.data[$i] = (((jl_StringBuilder__init_()).$append1($rt_s(544))).$append2($i)).$toString();
        $i = $i + 1 | 0;
    }
},
cbggg_ImmediateModeRenderer20__init_2 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cbggg_ImmediateModeRenderer20();
    cbggg_ImmediateModeRenderer20__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cbggg_ImmediateModeRenderer20_buildVertexAttributes = ($this, $hasNormals, $hasColor, $numTexCoords) => {
    let $attribs, $i, $array;
    $attribs = cbgu_Array__init_();
    $attribs.$add1(cbgg_VertexAttribute__init_(1, 3, $rt_s(349)));
    if ($hasNormals)
        $attribs.$add1(cbgg_VertexAttribute__init_(8, 3, $rt_s(458)));
    if ($hasColor)
        $attribs.$add1(cbgg_VertexAttribute__init_(4, 4, $rt_s(350)));
    $i = 0;
    while ($i < $numTexCoords) {
        $attribs.$add1(cbgg_VertexAttribute__init_(16, 2, (((jl_StringBuilder__init_()).$append1($rt_s(545))).$append2($i)).$toString()));
        $i = $i + 1 | 0;
    }
    $array = $rt_createArray(cbgg_VertexAttribute, $attribs.$size0);
    $i = 0;
    while ($i < $attribs.$size0) {
        $array.data[$i] = $attribs.$get($i);
        $i = $i + 1 | 0;
    }
    return $array;
},
cbggg_ImmediateModeRenderer20_begin = ($this, $projModelView, $primitiveType) => {
    $this.$projModelView.$set1($projModelView);
    $this.$primitiveType1 = $primitiveType;
},
cbggg_ImmediateModeRenderer20_color1 = ($this, $color) => {
    $this.$vertices1.data[$this.$vertexIdx + $this.$colorOffset | 0] = $color.$toFloatBits();
},
cbggg_ImmediateModeRenderer20_color = ($this, $r, $g, $b, $a) => {
    $this.$vertices1.data[$this.$vertexIdx + $this.$colorOffset | 0] = cbgg_Color_toFloatBits($r, $g, $b, $a);
},
cbggg_ImmediateModeRenderer20_color0 = ($this, $colorBits) => {
    $this.$vertices1.data[$this.$vertexIdx + $this.$colorOffset | 0] = $colorBits;
},
cbggg_ImmediateModeRenderer20_vertex = ($this, $x, $y, $z) => {
    let $idx;
    $idx = $this.$vertexIdx;
    $this.$vertices1.data[$idx] = $x;
    $this.$vertices1.data[$idx + 1 | 0] = $y;
    $this.$vertices1.data[$idx + 2 | 0] = $z;
    $this.$numSetTexCoords = 0;
    $this.$vertexIdx = $this.$vertexIdx + $this.$vertexSize0 | 0;
    $this.$numVertices = $this.$numVertices + 1 | 0;
},
cbggg_ImmediateModeRenderer20_flush = $this => {
    let $i;
    if (!$this.$numVertices)
        return;
    $this.$shader0.$bind();
    $this.$shader0.$setUniformMatrix($rt_s(546), $this.$projModelView);
    $i = 0;
    while ($i < $this.$numTexCoords) {
        $this.$shader0.$setUniformi($this.$shaderUniformNames.data[$i], $i);
        $i = $i + 1 | 0;
    }
    $this.$mesh0.$setVertices($this.$vertices1, 0, $this.$vertexIdx);
    $this.$mesh0.$render5($this.$shader0, $this.$primitiveType1);
    $this.$numSetTexCoords = 0;
    $this.$vertexIdx = 0;
    $this.$numVertices = 0;
},
cbggg_ImmediateModeRenderer20_end = $this => {
    $this.$flush();
},
cbggg_ImmediateModeRenderer20_getNumVertices = $this => {
    return $this.$numVertices;
},
cbggg_ImmediateModeRenderer20_getMaxVertices = $this => {
    return $this.$maxVertices;
},
cbggg_ImmediateModeRenderer20_dispose = $this => {
    if ($this.$ownsShader && $this.$shader0 !== null)
        $this.$shader0.$dispose();
    $this.$mesh0.$dispose();
},
cbggg_ImmediateModeRenderer20_createVertexShader = ($hasNormals, $hasColors, $numTexCoords) => {
    let var$4, $shader, $i;
    var$4 = (jl_StringBuilder__init_()).$append1($rt_s(547));
    var$4 = var$4.$append1(!$hasNormals ? $rt_s(60) : $rt_s(548));
    $shader = (var$4.$append1(!$hasColors ? $rt_s(60) : $rt_s(549))).$toString();
    $i = 0;
    while ($i < $numTexCoords) {
        $shader = (((((jl_StringBuilder__init_()).$append1($shader)).$append1($rt_s(550))).$append2($i)).$append1($rt_s(551))).$toString();
        $i = $i + 1 | 0;
    }
    var$4 = ((jl_StringBuilder__init_()).$append1($shader)).$append1($rt_s(552));
    var$4 = (var$4.$append1(!$hasColors ? $rt_s(60) : $rt_s(553))).$toString();
    $i = 0;
    while ($i < $numTexCoords) {
        var$4 = (((((jl_StringBuilder__init_()).$append1(var$4)).$append1($rt_s(554))).$append2($i)).$append1($rt_s(551))).$toString();
        $i = $i + 1 | 0;
    }
    var$4 = (((jl_StringBuilder__init_()).$append1(var$4)).$append1($rt_s(555))).$toString();
    if ($hasColors)
        var$4 = (((jl_StringBuilder__init_()).$append1(var$4)).$append1($rt_s(556))).$toString();
    $i = 0;
    while ($i < $numTexCoords) {
        var$4 = ((((((((jl_StringBuilder__init_()).$append1(var$4)).$append1($rt_s(557))).$append2($i)).$append1($rt_s(558))).$append1($rt_s(545))).$append2($i)).$append1($rt_s(551))).$toString();
        $i = $i + 1 | 0;
    }
    var$4 = (((jl_StringBuilder__init_()).$append1(var$4)).$append1($rt_s(559))).$toString();
    return var$4;
},
cbggg_ImmediateModeRenderer20_createFragmentShader = ($hasNormals, $hasColors, $numTexCoords) => {
    let $shader, $i, var$6, var$7;
    $shader = $rt_s(560);
    if ($hasColors)
        $shader = (((jl_StringBuilder__init_()).$append1($shader)).$append1($rt_s(553))).$toString();
    $i = 0;
    while ($i < $numTexCoords) {
        var$6 = (((((jl_StringBuilder__init_()).$append1($shader)).$append1($rt_s(554))).$append2($i)).$append1($rt_s(551))).$toString();
        $shader = (((((jl_StringBuilder__init_()).$append1(var$6)).$append1($rt_s(561))).$append2($i)).$append1($rt_s(551))).$toString();
        $i = $i + 1 | 0;
    }
    var$6 = ((jl_StringBuilder__init_()).$append1($shader)).$append1($rt_s(562));
    var$7 = !$hasColors ? $rt_s(563) : $rt_s(564);
    var$6 = (var$6.$append1(var$7)).$toString();
    if ($numTexCoords > 0)
        var$6 = (((jl_StringBuilder__init_()).$append1(var$6)).$append1($rt_s(464))).$toString();
    $i = 0;
    while ($i < $numTexCoords) {
        var$6 = $i != ($numTexCoords - 1 | 0) ? (((((((jl_StringBuilder__init_()).$append1(var$6)).$append1($rt_s(565))).$append2($i)).$append1($rt_s(566))).$append2($i)).$append1($rt_s(567))).$toString() : (((((((jl_StringBuilder__init_()).$append1(var$6)).$append1($rt_s(565))).$append2($i)).$append1($rt_s(566))).$append2($i)).$append1($rt_s(486))).$toString();
        $i = $i + 1 | 0;
    }
    var$6 = (((jl_StringBuilder__init_()).$append1(var$6)).$append1($rt_s(568))).$toString();
    return var$6;
},
cbggg_ImmediateModeRenderer20_createDefaultShader = ($hasNormals, $hasColors, $numTexCoords) => {
    let $vertexShader, $fragmentShader, $program;
    $vertexShader = cbggg_ImmediateModeRenderer20_createVertexShader($hasNormals, $hasColors, $numTexCoords);
    $fragmentShader = cbggg_ImmediateModeRenderer20_createFragmentShader($hasNormals, $hasColors, $numTexCoords);
    $program = cbggg_ShaderProgram__init_($vertexShader, $fragmentShader);
    if ($program.$isCompiled())
        return $program;
    $rt_throw(cbgu_GdxRuntimeException__init_((((jl_StringBuilder__init_()).$append1($rt_s(354))).$append1($program.$getLog())).$toString()));
},
cbgssu_ProgressBar$setValue$lambda$_18_0 = $rt_classWithoutFields(),
cbgssu_ProgressBar$setValue$lambda$_18_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgssu_ProgressBar$setValue$lambda$_18_0__init_0 = () => {
    let var_0 = new cbgssu_ProgressBar$setValue$lambda$_18_0();
    cbgssu_ProgressBar$setValue$lambda$_18_0__init_(var_0);
    return var_0;
},
cbgssu_ProgressBar$setValue$lambda$_18_0_get0 = var$0 => {
    return cbgssu_ProgressBar$setValue$lambda$_18_0_get(var$0);
},
cbgssu_ProgressBar$setValue$lambda$_18_0_get = var$0 => {
    return cbgssu_ChangeListener$ChangeEvent__init_0();
},
ji_InputStream = $rt_classWithoutFields(),
ji_InputStream__init_ = $this => {
    jl_Object__init_($this);
},
ji_InputStream_read = ($this, $b) => {
    return $this.$read3($b, 0, $b.data.length);
};
function ji_ByteArrayInputStream() {
    let a = this; ji_InputStream.call(a);
    a.$buf0 = null;
    a.$pos = 0;
    a.$mark1 = 0;
    a.$count3 = 0;
}
let ji_ByteArrayInputStream__init_ = ($this, $buf, $offset, $length) => {
    ji_InputStream__init_($this);
    $this.$buf0 = $buf;
    $this.$pos = $offset;
    $this.$mark1 = $offset;
    $this.$count3 = $offset + $length | 0;
},
ji_ByteArrayInputStream__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
ji_ByteArrayInputStream__init_0 = ($this, $buf) => {
    ji_ByteArrayInputStream__init_($this, $buf, 0, $buf.data.length);
},
ji_ByteArrayInputStream__init_1 = var_0 => {
    let var_1 = new ji_ByteArrayInputStream();
    ji_ByteArrayInputStream__init_0(var_1, var_0);
    return var_1;
},
ji_ByteArrayInputStream_read = ($this, $b, $off, $len) => {
    let $bytesToRead, $i, var$6, var$7, var$8, var$9;
    $bytesToRead = jl_Math_min($len, $this.$count3 - $this.$pos | 0);
    $i = 0;
    while ($i < $bytesToRead) {
        var$6 = $b.data;
        var$7 = $off + 1 | 0;
        var$8 = $this.$buf0.data;
        var$9 = $this.$pos;
        $this.$pos = var$9 + 1 | 0;
        var$6[$off] = var$8[var$9];
        $i = $i + 1 | 0;
        $off = var$7;
    }
    if ($bytesToRead <= 0)
        $bytesToRead = (-1);
    return $bytesToRead;
},
ji_ByteArrayInputStream_available = $this => {
    return $this.$count3 - $this.$pos | 0;
},
ji_ByteArrayInputStream_close = $this => {
    return;
},
otci_IntegerUtil = $rt_classWithoutFields(),
otci_IntegerUtil_toUnsignedLogRadixString = ($value, $radixLog2) => {
    let $radix, $mask, $sz, $chars, $pos, $target, var$9, $target_0;
    if (!$value)
        return $rt_s(287);
    $radix = 1 << $radixLog2;
    $mask = $radix - 1 | 0;
    $sz = (((32 - jl_Integer_numberOfLeadingZeros($value) | 0) + $radixLog2 | 0) - 1 | 0) / $radixLog2 | 0;
    $chars = $rt_createCharArray($sz);
    $pos = $rt_imul($sz - 1 | 0, $radixLog2);
    $target = 0;
    while ($pos >= 0) {
        var$9 = $chars.data;
        $target_0 = $target + 1 | 0;
        var$9[$target] = jl_Character_forDigit(($value >>> $pos | 0) & $mask, $radix);
        $pos = $pos - $radixLog2 | 0;
        $target = $target_0;
    }
    return jl_String__init_0($chars);
},
jur_PossessiveAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet),
jur_PossessiveAltQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_AltQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_PossessiveAltQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_PossessiveAltQuantifierSet();
    jur_PossessiveAltQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_PossessiveAltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
        var$4 = $this.$leaf.$accepts($stringIndex, $testString);
        if (var$4 >= 1)
            $stringIndex = $stringIndex + var$4 | 0;
    }
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
};
function cbgu_TimSort() {
    let a = this; jl_Object.call(a);
    a.$a0 = null;
    a.$c = null;
    a.$minGallop = 0;
    a.$tmp0 = null;
    a.$tmpCount = 0;
    a.$stackSize = 0;
    a.$runBase = null;
    a.$runLen = null;
}
let cbgu_TimSort__init_ = $this => {
    jl_Object__init_($this);
    $this.$minGallop = 7;
    $this.$stackSize = 0;
    $this.$tmp0 = $rt_createArray(jl_Object, 256);
    $this.$runBase = $rt_createIntArray(40);
    $this.$runLen = $rt_createIntArray(40);
},
cbgu_TimSort__init_0 = () => {
    let var_0 = new cbgu_TimSort();
    cbgu_TimSort__init_(var_0);
    return var_0;
},
cbgu_TimSort_doSort = ($this, $a, $c, $lo, $hi) => {
    let var$5, $nRemaining, $initRunLen, $minRun, $runLen, $force, $tmp_0, $i, $n;
    var$5 = $a.data;
    $this.$stackSize = 0;
    cbgu_TimSort_rangeCheck(var$5.length, $lo, $hi);
    $nRemaining = $hi - $lo | 0;
    if ($nRemaining < 2)
        return;
    if ($nRemaining < 32) {
        $initRunLen = cbgu_TimSort_countRunAndMakeAscending($a, $lo, $hi, $c);
        cbgu_TimSort_binarySort($a, $lo, $hi, $lo + $initRunLen | 0, $c);
        return;
    }
    $this.$a0 = $a;
    $this.$c = $c;
    $this.$tmpCount = 0;
    $minRun = cbgu_TimSort_minRunLength($nRemaining);
    while (true) {
        $runLen = cbgu_TimSort_countRunAndMakeAscending($a, $lo, $hi, $c);
        if ($runLen >= $minRun)
            $force = $runLen;
        else {
            $force = $nRemaining > $minRun ? $minRun : $nRemaining;
            cbgu_TimSort_binarySort($a, $lo, $lo + $force | 0, $lo + $runLen | 0, $c);
        }
        cbgu_TimSort_pushRun($this, $lo, $force);
        cbgu_TimSort_mergeCollapse($this);
        $lo = $lo + $force | 0;
        $nRemaining = $nRemaining - $force | 0;
        if (!$nRemaining)
            break;
    }
    cbgu_TimSort_mergeForceCollapse($this);
    $this.$a0 = null;
    $this.$c = null;
    $tmp_0 = $this.$tmp0;
    $i = 0;
    $n = $this.$tmpCount;
    while ($i < $n) {
        $tmp_0.data[$i] = null;
        $i = $i + 1 | 0;
    }
},
cbgu_TimSort_binarySort = ($a, $lo, $hi, $start, $c) => {
    let var$6, $pivot, $right, var$9, $mid, $n;
    if ($start == $lo)
        $start = $start + 1 | 0;
    while ($start < $hi) {
        var$6 = $a.data;
        $pivot = var$6[$start];
        $right = $start;
        var$9 = $lo;
        while (var$9 < $right) {
            $mid = (var$9 + $right | 0) >>> 1 | 0;
            if ($c.$compare0($pivot, var$6[$mid]) < 0)
                $right = $mid;
            else
                var$9 = $mid + 1 | 0;
        }
        a: {
            b: {
                $n = $start - var$9 | 0;
                switch ($n) {
                    case 1:
                        break b;
                    case 2:
                        var$6[var$9 + 2 | 0] = var$6[var$9 + 1 | 0];
                        break b;
                    default:
                }
                jl_System_fastArraycopy($a, var$9, $a, var$9 + 1 | 0, $n);
                break a;
            }
            var$6[var$9 + 1 | 0] = var$6[var$9];
        }
        var$6[var$9] = $pivot;
        $start = $start + 1 | 0;
    }
},
cbgu_TimSort_countRunAndMakeAscending = ($a, $lo, $hi, $c) => {
    let $runHi, var$6, var$7;
    $runHi = $lo + 1 | 0;
    if ($runHi == $hi)
        return 1;
    a: {
        var$6 = $a.data;
        var$7 = $runHi + 1 | 0;
        if ($c.$compare0(var$6[$runHi], var$6[$lo]) >= 0)
            while (var$7 < $hi) {
                if ($c.$compare0(var$6[var$7], var$6[var$7 - 1 | 0]) < 0)
                    break a;
                var$7 = var$7 + 1 | 0;
            }
        else {
            while (var$7 < $hi && $c.$compare0(var$6[var$7], var$6[var$7 - 1 | 0]) < 0) {
                var$7 = var$7 + 1 | 0;
            }
            cbgu_TimSort_reverseRange($a, $lo, var$7);
        }
    }
    return var$7 - $lo | 0;
},
cbgu_TimSort_reverseRange = ($a, $lo, $hi) => {
    let var$4, var$5, $t, var$7, var$8;
    var$4 = $hi + (-1) | 0;
    while ($lo < var$4) {
        var$5 = $a.data;
        $t = var$5[$lo];
        var$7 = $lo + 1 | 0;
        var$5[$lo] = var$5[var$4];
        var$8 = var$4 + (-1) | 0;
        var$5[var$4] = $t;
        $lo = var$7;
        var$4 = var$8;
    }
},
cbgu_TimSort_minRunLength = $n => {
    let $r;
    $r = 0;
    while ($n >= 32) {
        $r = $r | $n & 1;
        $n = $n >> 1;
    }
    return $n + $r | 0;
},
cbgu_TimSort_pushRun = ($this, $runBase, $runLen) => {
    $this.$runBase.data[$this.$stackSize] = $runBase;
    $this.$runLen.data[$this.$stackSize] = $runLen;
    $this.$stackSize = $this.$stackSize + 1 | 0;
},
cbgu_TimSort_mergeCollapse = $this => {
    let $n;
    a: {
        while (true) {
            if ($this.$stackSize <= 1)
                break a;
            $n = $this.$stackSize - 2 | 0;
            if (!($n >= 1 && $this.$runLen.data[$n - 1 | 0] <= ($this.$runLen.data[$n] + $this.$runLen.data[$n + 1 | 0] | 0)) && !($n >= 2 && $this.$runLen.data[$n - 2 | 0] <= ($this.$runLen.data[$n] + $this.$runLen.data[$n - 1 | 0] | 0))) {
                if ($this.$runLen.data[$n] > $this.$runLen.data[$n + 1 | 0])
                    break;
            } else if ($this.$runLen.data[$n - 1 | 0] < $this.$runLen.data[$n + 1 | 0])
                $n = $n + (-1) | 0;
            cbgu_TimSort_mergeAt($this, $n);
        }
    }
},
cbgu_TimSort_mergeForceCollapse = $this => {
    let $n;
    while ($this.$stackSize > 1) {
        $n = $this.$stackSize - 2 | 0;
        if ($n > 0 && $this.$runLen.data[$n - 1 | 0] < $this.$runLen.data[$n + 1 | 0])
            $n = $n + (-1) | 0;
        cbgu_TimSort_mergeAt($this, $n);
    }
},
cbgu_TimSort_mergeAt = ($this, $i) => {
    let $base1, $len1, var$4, var$5, $base2, $len2, var$8, var$9, $k, var$11, var$12;
    $base1 = $this.$runBase.data[$i];
    $len1 = $this.$runLen.data[$i];
    var$4 = $this.$runBase.data;
    var$5 = $i + 1 | 0;
    $base2 = var$4[var$5];
    $len2 = $this.$runLen.data[var$5];
    $this.$runLen.data[$i] = $len1 + $len2 | 0;
    if ($i == ($this.$stackSize - 3 | 0)) {
        var$8 = $this.$runBase.data;
        var$4 = $this.$runBase.data;
        var$9 = $i + 2 | 0;
        var$8[var$5] = var$4[var$9];
        $this.$runLen.data[var$5] = $this.$runLen.data[var$9];
    }
    $this.$stackSize = $this.$stackSize - 1 | 0;
    $k = cbgu_TimSort_gallopRight($this.$a0.data[$base2], $this.$a0, $base1, $len1, 0, $this.$c);
    var$9 = $base1 + $k | 0;
    var$11 = $len1 - $k | 0;
    if (!var$11)
        return;
    var$12 = cbgu_TimSort_gallopLeft($this.$a0.data[(var$9 + var$11 | 0) - 1 | 0], $this.$a0, $base2, $len2, $len2 - 1 | 0, $this.$c);
    if (!var$12)
        return;
    if (var$11 > var$12)
        cbgu_TimSort_mergeHi($this, var$9, var$11, $base2, var$12);
    else
        cbgu_TimSort_mergeLo($this, var$9, var$11, $base2, var$12);
},
cbgu_TimSort_gallopLeft = ($key, $a, $base, $len, $hint, $c) => {
    let var$7, $lastOfs, $ofs, var$10, $maxOfs, var$12, var$13, $m;
    var$7 = $a.data;
    $lastOfs = 0;
    $ofs = 1;
    var$10 = $base + $hint | 0;
    if ($c.$compare0($key, var$7[var$10]) > 0) {
        $maxOfs = $len - $hint | 0;
        while (true) {
            var$12 = $rt_compare($ofs, $maxOfs);
            if (var$12 >= 0)
                break;
            if ($c.$compare0($key, var$7[var$10 + $ofs | 0]) <= 0)
                break;
            var$13 = ($ofs << 1) + 1 | 0;
            if (var$13 > 0) {
                $lastOfs = $ofs;
                $ofs = var$13;
                continue;
            }
            var$13 = $maxOfs;
            $lastOfs = $ofs;
            $ofs = var$13;
        }
        if (var$12 <= 0)
            $maxOfs = $ofs;
        var$13 = $lastOfs + $hint | 0;
        var$10 = $maxOfs + $hint | 0;
    } else {
        $maxOfs = $hint + 1 | 0;
        while (true) {
            var$13 = $rt_compare($ofs, $maxOfs);
            if (var$13 >= 0)
                break;
            if ($c.$compare0($key, var$7[var$10 - $ofs | 0]) > 0)
                break;
            var$13 = ($ofs << 1) + 1 | 0;
            if (var$13 > 0) {
                $lastOfs = $ofs;
                $ofs = var$13;
                continue;
            }
            var$13 = $maxOfs;
            $lastOfs = $ofs;
            $ofs = var$13;
        }
        if (var$13 <= 0)
            $maxOfs = $ofs;
        var$13 = $hint - $maxOfs | 0;
        var$10 = $hint - $lastOfs | 0;
    }
    var$13 = var$13 + 1 | 0;
    while (var$13 < var$10) {
        $m = var$13 + ((var$10 - var$13 | 0) >>> 1 | 0) | 0;
        if ($c.$compare0($key, var$7[$base + $m | 0]) > 0) {
            var$13 = $m + 1 | 0;
            $m = var$10;
        }
        var$10 = $m;
    }
    return var$10;
},
cbgu_TimSort_gallopRight = ($key, $a, $base, $len, $hint, $c) => {
    let var$7, $ofs, $lastOfs, var$10, $maxOfs, var$12, var$13, $m;
    var$7 = $a.data;
    $ofs = 1;
    $lastOfs = 0;
    var$10 = $base + $hint | 0;
    if ($c.$compare0($key, var$7[var$10]) >= 0) {
        $maxOfs = $len - $hint | 0;
        while (true) {
            var$12 = $rt_compare($ofs, $maxOfs);
            if (var$12 >= 0)
                break;
            if ($c.$compare0($key, var$7[var$10 + $ofs | 0]) < 0)
                break;
            var$12 = ($ofs << 1) + 1 | 0;
            if (var$12 > 0) {
                $lastOfs = $ofs;
                $ofs = var$12;
                continue;
            }
            var$12 = $maxOfs;
            $lastOfs = $ofs;
            $ofs = var$12;
        }
        if (var$12 <= 0)
            $maxOfs = $ofs;
        var$12 = $lastOfs + $hint | 0;
        var$13 = $maxOfs + $hint | 0;
    } else {
        $maxOfs = $hint + 1 | 0;
        while (true) {
            var$12 = $rt_compare($ofs, $maxOfs);
            if (var$12 >= 0)
                break;
            if ($c.$compare0($key, var$7[var$10 - $ofs | 0]) >= 0)
                break;
            var$12 = ($ofs << 1) + 1 | 0;
            if (var$12 > 0) {
                $lastOfs = $ofs;
                $ofs = var$12;
                continue;
            }
            var$12 = $maxOfs;
            $lastOfs = $ofs;
            $ofs = var$12;
        }
        if (var$12 <= 0)
            $maxOfs = $ofs;
        var$12 = $hint - $maxOfs | 0;
        var$13 = $hint - $lastOfs | 0;
    }
    var$12 = var$12 + 1 | 0;
    while (var$12 < var$13) {
        $m = var$12 + ((var$13 - var$12 | 0) >>> 1 | 0) | 0;
        if ($c.$compare0($key, var$7[$base + $m | 0]) < 0)
            var$13 = $m;
        else
            var$12 = $m + 1 | 0;
    }
    return var$13;
},
cbgu_TimSort_mergeLo = ($this, $base1, $len1, $base2, $len2) => {
    let $a, var$6, $tmp_0, $cursor1, var$9, var$10, var$11, var$12, $c, $minGallop, $count1, $count2, var$17, var$18, var$19, var$20, var$21;
    $a = $this.$a0;
    var$6 = $a.data;
    $tmp_0 = cbgu_TimSort_ensureCapacity($this, $len1);
    jl_System_fastArraycopy($a, $base1, $tmp_0, 0, $len1);
    $cursor1 = 0;
    var$9 = $base1 + 1 | 0;
    var$10 = $base2 + 1 | 0;
    var$6[$base1] = var$6[$base2];
    var$11 = $len2 + (-1) | 0;
    if (!var$11) {
        jl_System_fastArraycopy($tmp_0, $cursor1, $a, var$9, $len1);
        return;
    }
    if ($len1 == 1) {
        var$12 = $tmp_0.data;
        jl_System_fastArraycopy($a, var$10, $a, var$9, var$11);
        var$6[var$9 + var$11 | 0] = var$12[$cursor1];
        return;
    }
    $c = $this.$c;
    $minGallop = $this.$minGallop;
    a: {
        b: while (true) {
            $count1 = 0;
            $count2 = 0;
            var$17 = var$9;
            var$18 = var$10;
            var$19 = $cursor1;
            while (true) {
                var$12 = $tmp_0.data;
                if ($c.$compare0(var$6[var$18], var$12[var$19]) < 0) {
                    var$9 = var$17 + 1 | 0;
                    var$10 = var$18 + 1 | 0;
                    var$6[var$17] = var$6[var$18];
                    $count2 = $count2 + 1 | 0;
                    $count1 = 0;
                    var$11 = var$11 + (-1) | 0;
                    if (!var$11)
                        break a;
                    var$18 = var$10;
                    $cursor1 = var$19;
                } else {
                    var$9 = var$17 + 1 | 0;
                    $cursor1 = var$19 + 1 | 0;
                    var$6[var$17] = var$12[var$19];
                    $count1 = $count1 + 1 | 0;
                    $count2 = 0;
                    $len1 = $len1 + (-1) | 0;
                    if ($len1 == 1) {
                        var$19 = $cursor1;
                        var$10 = var$18;
                        break a;
                    }
                }
                if (($count1 | $count2) >= $minGallop)
                    break;
                var$17 = var$9;
                var$19 = $cursor1;
            }
            var$10 = var$18;
            while (true) {
                var$17 = cbgu_TimSort_gallopRight(var$6[var$10], $tmp_0, $cursor1, $len1, 0, $c);
                if (!var$17) {
                    var$18 = var$9;
                    var$19 = $cursor1;
                } else {
                    jl_System_fastArraycopy($tmp_0, $cursor1, $a, var$9, var$17);
                    var$9 = var$9 + var$17 | 0;
                    var$19 = $cursor1 + var$17 | 0;
                    $len1 = $len1 - var$17 | 0;
                    if ($len1 <= 1)
                        break a;
                    var$18 = var$9;
                }
                var$9 = var$18 + 1 | 0;
                var$20 = var$10 + 1 | 0;
                var$6[var$18] = var$6[var$10];
                var$11 = var$11 + (-1) | 0;
                if (!var$11) {
                    var$10 = var$20;
                    break a;
                }
                var$18 = cbgu_TimSort_gallopLeft(var$12[var$19], $a, var$20, var$11, 0, $c);
                if (!var$18) {
                    var$21 = var$9;
                    var$10 = var$20;
                } else {
                    jl_System_fastArraycopy($a, var$20, $a, var$9, var$18);
                    var$9 = var$9 + var$18 | 0;
                    var$10 = var$20 + var$18 | 0;
                    var$11 = var$11 - var$18 | 0;
                    if (!var$11)
                        break b;
                    var$21 = var$9;
                }
                var$9 = var$21 + 1 | 0;
                $cursor1 = var$19 + 1 | 0;
                var$6[var$21] = var$12[var$19];
                $len1 = $len1 + (-1) | 0;
                if ($len1 == 1) {
                    var$19 = $cursor1;
                    break a;
                }
                $minGallop = $minGallop + (-1) | 0;
                if (!((var$17 < 7 ? 0 : 1) | (var$18 < 7 ? 0 : 1)))
                    break;
            }
            if ($minGallop < 0)
                $minGallop = 0;
            $minGallop = $minGallop + 2 | 0;
        }
    }
    if ($minGallop < 1)
        $minGallop = 1;
    $this.$minGallop = $minGallop;
    if ($len1 == 1) {
        jl_System_fastArraycopy($a, var$10, $a, var$9, var$11);
        var$6[var$9 + var$11 | 0] = var$12[var$19];
    } else {
        if (!$len1)
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(569)));
        jl_System_fastArraycopy($tmp_0, var$19, $a, var$9, $len1);
    }
},
cbgu_TimSort_mergeHi = ($this, $base1, $len1, $base2, $len2) => {
    let $a, var$6, $tmp_0, $cursor1, $cursor2, $dest, var$11, var$12, var$13, var$14, var$15, var$16, $c, $minGallop, $count1, $count2, var$21, var$22;
    $a = $this.$a0;
    var$6 = $a.data;
    $tmp_0 = cbgu_TimSort_ensureCapacity($this, $len2);
    jl_System_fastArraycopy($a, $base2, $tmp_0, 0, $len2);
    $cursor1 = ($base1 + $len1 | 0) - 1 | 0;
    $cursor2 = $len2 - 1 | 0;
    $dest = ($base2 + $len2 | 0) - 1 | 0;
    var$11 = $dest + (-1) | 0;
    var$12 = $cursor1 + (-1) | 0;
    var$6[$dest] = var$6[$cursor1];
    var$13 = $len1 + (-1) | 0;
    if (!var$13) {
        jl_System_fastArraycopy($tmp_0, 0, $a, var$11 - $cursor2 | 0, $len2);
        return;
    }
    if ($len2 == 1) {
        var$14 = $tmp_0.data;
        var$15 = var$11 - var$13 | 0;
        var$16 = var$12 - var$13 | 0;
        jl_System_fastArraycopy($a, var$16 + 1 | 0, $a, var$15 + 1 | 0, var$13);
        var$6[var$15] = var$14[$cursor2];
        return;
    }
    $c = $this.$c;
    $minGallop = $this.$minGallop;
    a: {
        b: while (true) {
            $count1 = 0;
            $count2 = 0;
            var$21 = var$11;
            while (true) {
                var$14 = $tmp_0.data;
                if ($c.$compare0(var$14[$cursor2], var$6[var$12]) < 0) {
                    var$11 = var$21 + (-1) | 0;
                    var$16 = var$12 + (-1) | 0;
                    var$6[var$21] = var$6[var$12];
                    $count1 = $count1 + 1 | 0;
                    $count2 = 0;
                    var$13 = var$13 + (-1) | 0;
                    if (!var$13)
                        break a;
                    var$12 = var$16;
                    var$15 = $cursor2;
                } else {
                    var$11 = var$21 + (-1) | 0;
                    var$15 = $cursor2 + (-1) | 0;
                    var$6[var$21] = var$14[$cursor2];
                    $count2 = $count2 + 1 | 0;
                    $count1 = 0;
                    $len2 = $len2 + (-1) | 0;
                    if ($len2 == 1) {
                        var$16 = var$12;
                        $cursor2 = var$15;
                        break a;
                    }
                }
                if (($count1 | $count2) >= $minGallop)
                    break;
                var$21 = var$11;
                $cursor2 = var$15;
            }
            $cursor2 = var$15;
            while (true) {
                var$21 = var$13 - cbgu_TimSort_gallopRight(var$14[$cursor2], $a, $base1, var$13, var$13 - 1 | 0, $c) | 0;
                if (!var$21) {
                    var$15 = var$11;
                    var$16 = var$12;
                } else {
                    var$11 = var$11 - var$21 | 0;
                    var$16 = var$12 - var$21 | 0;
                    var$13 = var$13 - var$21 | 0;
                    jl_System_fastArraycopy($a, var$16 + 1 | 0, $a, var$11 + 1 | 0, var$21);
                    if (!var$13)
                        break a;
                    var$15 = var$11;
                }
                var$11 = var$15 + (-1) | 0;
                var$12 = $cursor2 + (-1) | 0;
                var$6[var$15] = var$14[$cursor2];
                $len2 = $len2 + (-1) | 0;
                if ($len2 == 1) {
                    $cursor2 = var$12;
                    break a;
                }
                var$22 = $len2 - cbgu_TimSort_gallopLeft(var$6[var$16], $tmp_0, 0, $len2, $len2 - 1 | 0, $c) | 0;
                if (!var$22) {
                    var$15 = var$11;
                    $cursor2 = var$12;
                } else {
                    var$11 = var$11 - var$22 | 0;
                    $cursor2 = var$12 - var$22 | 0;
                    $len2 = $len2 - var$22 | 0;
                    jl_System_fastArraycopy($tmp_0, $cursor2 + 1 | 0, $a, var$11 + 1 | 0, var$22);
                    if ($len2 <= 1)
                        break b;
                    var$15 = var$11;
                }
                var$11 = var$15 + (-1) | 0;
                var$12 = var$16 + (-1) | 0;
                var$6[var$15] = var$6[var$16];
                var$13 = var$13 + (-1) | 0;
                if (!var$13) {
                    var$16 = var$12;
                    break a;
                }
                $minGallop = $minGallop + (-1) | 0;
                if (!((var$21 < 7 ? 0 : 1) | (var$22 < 7 ? 0 : 1)))
                    break;
            }
            if ($minGallop < 0)
                $minGallop = 0;
            $minGallop = $minGallop + 2 | 0;
        }
    }
    if ($minGallop < 1)
        $minGallop = 1;
    $this.$minGallop = $minGallop;
    if ($len2 == 1) {
        var$15 = var$11 - var$13 | 0;
        var$16 = var$16 - var$13 | 0;
        jl_System_fastArraycopy($a, var$16 + 1 | 0, $a, var$15 + 1 | 0, var$13);
        var$6[var$15] = var$14[$cursor2];
    } else {
        if (!$len2)
            $rt_throw(jl_IllegalArgumentException__init_($rt_s(569)));
        jl_System_fastArraycopy($tmp_0, 0, $a, var$11 - ($len2 - 1 | 0) | 0, $len2);
    }
},
cbgu_TimSort_ensureCapacity = ($this, $minCapacity) => {
    let var$2, $newArray;
    $this.$tmpCount = jl_Math_max($this.$tmpCount, $minCapacity);
    if ($this.$tmp0.data.length < $minCapacity) {
        var$2 = $minCapacity | $minCapacity >> 1;
        var$2 = var$2 | var$2 >> 2;
        var$2 = var$2 | var$2 >> 4;
        var$2 = var$2 | var$2 >> 8;
        var$2 = var$2 | var$2 >> 16;
        var$2 = var$2 + 1 | 0;
        if (var$2 >= 0)
            $minCapacity = jl_Math_min(var$2, $this.$a0.data.length >>> 1 | 0);
        $newArray = $rt_createArray(jl_Object, $minCapacity);
        $this.$tmp0 = $newArray;
    }
    return $this.$tmp0;
},
cbgu_TimSort_rangeCheck = ($arrayLen, $fromIndex, $toIndex) => {
    if ($fromIndex <= $toIndex) {
        if ($fromIndex < 0)
            $rt_throw(jl_ArrayIndexOutOfBoundsException__init_0($fromIndex));
        if ($toIndex <= $arrayLen)
            return;
        $rt_throw(jl_ArrayIndexOutOfBoundsException__init_0($toIndex));
    }
    $rt_throw(jl_IllegalArgumentException__init_(((((((jl_StringBuilder__init_()).$append1($rt_s(570))).$append2($fromIndex)).$append1($rt_s(571))).$append2($toIndex)).$append1($rt_s(486))).$toString()));
},
otjc_JSObjects = $rt_classWithoutFields();
function cbgm_Interpolation$SwingIn() {
    cbgm_Interpolation.call(this);
    this.$scale4 = 0.0;
}
let cbgm_Interpolation$SwingIn__init_ = ($this, $scale) => {
    cbgm_Interpolation__init_($this);
    $this.$scale4 = $scale;
},
cbgm_Interpolation$SwingIn__init_0 = var_0 => {
    let var_1 = new cbgm_Interpolation$SwingIn();
    cbgm_Interpolation$SwingIn__init_(var_1, var_0);
    return var_1;
};
function bg_btDebugRenderer() {
    bl_btIDebugDraw.call(this);
    this.$debugMode = 0;
}
let bg_btDebugRenderer__init_ = $this => {
    bl_btIDebugDraw__init_($this);
},
bg_btDebugRenderer_setDebugMode = ($this, $debugMode) => {
    $this.$debugMode = $debugMode;
},
bg_btDebugRenderer_getDebugMode = $this => {
    return $this.$debugMode;
},
ju_Objects = $rt_classWithoutFields(),
ju_Objects_toString = $o => {
    return ju_Objects_toString0($o, $rt_s(61));
},
ju_Objects_toString0 = ($o, $nullDefault) => {
    if ($o !== null)
        $nullDefault = $o.$toString();
    return $nullDefault;
},
ju_Objects_checkFromIndexSize = ($fromIndex, $size, $length) => {
    if ($fromIndex >= 0 && $size >= 0 && $size <= ($length - $fromIndex | 0))
        return $fromIndex;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
};
function cbggge_AmbientCubemap() {
    jl_Object.call(this);
    this.$data1 = null;
}
let cbggge_AmbientCubemap_clamp0 = $v => {
    if ($v < 0.0)
        $v = 0.0;
    else if ($v > 1.0)
        $v = 1.0;
    return $v;
},
cbggge_AmbientCubemap__init_0 = $this => {
    jl_Object__init_($this);
    $this.$data1 = $rt_createFloatArray(18);
},
cbggge_AmbientCubemap__init_ = () => {
    let var_0 = new cbggge_AmbientCubemap();
    cbggge_AmbientCubemap__init_0(var_0);
    return var_0;
},
cbggge_AmbientCubemap_set0 = ($this, $color) => {
    return $this.$set37($color.$r, $color.$g, $color.$b);
},
cbggge_AmbientCubemap_set = ($this, $r, $g, $b) => {
    let $idx;
    $idx = 0;
    while ($idx < 18) {
        $this.$data1.data[$idx] = $r;
        $this.$data1.data[$idx + 1 | 0] = $g;
        $this.$data1.data[$idx + 2 | 0] = $b;
        $idx = $idx + 3 | 0;
    }
    return $this;
},
cbggge_AmbientCubemap_clamp = $this => {
    let $i;
    $i = 0;
    while ($i < $this.$data1.data.length) {
        $this.$data1.data[$i] = cbggge_AmbientCubemap_clamp0($this.$data1.data[$i]);
        $i = $i + 1 | 0;
    }
    return $this;
},
cbggge_AmbientCubemap_add1 = ($this, $r, $g, $b, $x, $y, $z) => {
    let $x2, $y2, $z2, $d, var$11, $rd, $gd, $bd, $idx, var$16, var$17, var$18;
    $x2 = $x * $x;
    $y2 = $y * $y;
    $z2 = $z * $z;
    $d = $x2 + $y2 + $z2;
    if ($d === 0.0)
        return $this;
    var$11 = 1.0 / $d * ($d + 1.0);
    $rd = $r * var$11;
    $gd = $g * var$11;
    $bd = $b * var$11;
    $idx = $x <= 0.0 ? 3 : 0;
    var$16 = $this.$data1.data;
    var$16[$idx] = var$16[$idx] + $x2 * $rd;
    var$16 = $this.$data1.data;
    var$17 = $idx + 1 | 0;
    var$16[var$17] = var$16[var$17] + $x2 * $gd;
    var$16 = $this.$data1.data;
    var$17 = $idx + 2 | 0;
    var$16[var$17] = var$16[var$17] + $x2 * $bd;
    var$17 = $y <= 0.0 ? 9 : 6;
    var$16 = $this.$data1.data;
    var$16[var$17] = var$16[var$17] + $y2 * $rd;
    var$16 = $this.$data1.data;
    var$18 = var$17 + 1 | 0;
    var$16[var$18] = var$16[var$18] + $y2 * $gd;
    var$16 = $this.$data1.data;
    var$17 = var$17 + 2 | 0;
    var$16[var$17] = var$16[var$17] + $y2 * $bd;
    var$17 = $z <= 0.0 ? 15 : 12;
    var$16 = $this.$data1.data;
    var$16[var$17] = var$16[var$17] + $z2 * $rd;
    var$16 = $this.$data1.data;
    var$18 = var$17 + 1 | 0;
    var$16[var$18] = var$16[var$18] + $z2 * $gd;
    var$16 = $this.$data1.data;
    var$17 = var$17 + 2 | 0;
    var$16[var$17] = var$16[var$17] + $z2 * $bd;
    return $this;
},
cbggge_AmbientCubemap_add0 = ($this, $color, $direction) => {
    return $this.$add11($color.$r, $color.$g, $color.$b, $direction.$x, $direction.$y, $direction.$z);
},
cbggge_AmbientCubemap_add = ($this, $color, $point, $target, $intensity) => {
    let $t;
    $t = $intensity / (1.0 + $target.$dst0($point));
    return $this.$add11($color.$r * $t, $color.$g * $t, $color.$b * $t, $target.$x - $point.$x, $target.$y - $point.$y, $target.$z - $point.$z);
};
function jur_SequenceSet() {
    let a = this; jur_LeafSet.call(a);
    a.$string = null;
    a.$leftToRight = null;
    a.$rightToLeft = null;
}
let jur_SequenceSet__init_ = ($this, $substring) => {
    let $j;
    jur_LeafSet__init_($this);
    $this.$string = $substring.$toString();
    $this.$charCount0 = $substring.$length();
    $this.$leftToRight = jur_SequenceSet$IntHash__init_0($this.$charCount0);
    $this.$rightToLeft = jur_SequenceSet$IntHash__init_0($this.$charCount0);
    $j = 0;
    while ($j < ($this.$charCount0 - 1 | 0)) {
        $this.$leftToRight.$put4($this.$string.$charAt($j), ($this.$charCount0 - $j | 0) - 1 | 0);
        $this.$rightToLeft.$put4($this.$string.$charAt(($this.$charCount0 - $j | 0) - 1 | 0), ($this.$charCount0 - $j | 0) - 1 | 0);
        $j = $j + 1 | 0;
    }
},
jur_SequenceSet__init_0 = var_0 => {
    let var_1 = new jur_SequenceSet();
    jur_SequenceSet__init_(var_1, var_0);
    return var_1;
},
jur_SequenceSet_accepts = ($this, $strIndex, $testString) => {
    return !$this.$startsWith1($testString, $strIndex) ? (-1) : $this.$charCount0;
},
jur_SequenceSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $strLength, var$5;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex > $strLength)
            return (-1);
        var$5 = $this.$indexOf5($testString, $strIndex, $strLength);
        if (var$5 < 0)
            return (-1);
        if ($this.$next1.$matches(var$5 + $this.$charCount0 | 0, $testString, $matchResult) >= 0)
            break;
        $strIndex = var$5 + 1 | 0;
    }
    return var$5;
},
jur_SequenceSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let var$5;
    while (true) {
        if ($lastIndex < $strIndex)
            return (-1);
        var$5 = $this.$lastIndexOf3($testString, $strIndex, $lastIndex);
        if (var$5 < 0)
            return (-1);
        if ($this.$next1.$matches(var$5 + $this.$charCount0 | 0, $testString, $matchResult) >= 0)
            break;
        $lastIndex = var$5 + (-1) | 0;
    }
    return var$5;
},
jur_SequenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$string;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(572)), var$1);
    return jl_StringBuilder_toString(var$2);
},
jur_SequenceSet_first = ($this, $set) => {
    let var$2, var$3, var$4, var$5, var$6;
    if ($set instanceof jur_CharSet)
        return $set.$getChar0() != $this.$string.$charAt(0) ? 0 : 1;
    if ($set instanceof jur_RangeSet)
        return $set.$accepts(0, $this.$string.$substring(0, 1)) <= 0 ? 0 : 1;
    if (!($set instanceof jur_SupplRangeSet)) {
        if (!($set instanceof jur_SupplCharSet))
            return 1;
        a: {
            if ($this.$string.$length() > 1) {
                var$2 = $set;
                var$3 = var$2.$getCodePoint();
                var$4 = $this.$string.$charAt(0);
                var$2 = $this.$string;
                var$5 = var$2.$charAt(1);
                if (var$3 == jl_Character_toCodePoint(var$4, var$5)) {
                    var$4 = 1;
                    break a;
                }
            }
            var$4 = 0;
        }
        return var$4;
    }
    b: {
        c: {
            var$2 = $set;
            if (!var$2.$contains($this.$string.$charAt(0))) {
                var$6 = $this.$string;
                if (var$6.$length() <= 1)
                    break c;
                var$6 = $this.$string;
                var$4 = jl_Character_toCodePoint(var$6.$charAt(0), $this.$string.$charAt(1));
                if (!var$2.$contains(var$4))
                    break c;
            }
            var$4 = 1;
            break b;
        }
        var$4 = 0;
    }
    return var$4;
},
jur_SequenceSet_indexOf = ($this, $str, $i, $to) => {
    let $last, $ch;
    $last = $this.$string.$charAt($this.$charCount0 - 1 | 0);
    while (true) {
        if ($i > ($to - $this.$charCount0 | 0))
            return (-1);
        $ch = $str.$charAt(($i + $this.$charCount0 | 0) - 1 | 0);
        if ($ch == $last && $this.$startsWith1($str, $i))
            break;
        $i = $i + $this.$leftToRight.$get1($ch) | 0;
    }
    return $i;
},
jur_SequenceSet_lastIndexOf = ($this, $str, $to, $i) => {
    let $first, $size, $delta, $ch;
    $first = $this.$string.$charAt(0);
    $size = $str.$length();
    $delta = ($size - $i | 0) - $this.$charCount0 | 0;
    if ($delta <= 0)
        $i = $i + $delta | 0;
    while (true) {
        if ($i < $to)
            return (-1);
        $ch = $str.$charAt($i);
        if ($ch == $first && $this.$startsWith1($str, $i))
            break;
        $i = $i - $this.$rightToLeft.$get1($ch) | 0;
    }
    return $i;
},
jur_SequenceSet_startsWith = ($this, $str, $from) => {
    let $i;
    $i = 0;
    while ($i < $this.$charCount0) {
        if ($str.$charAt($i + $from | 0) != $this.$string.$charAt($i))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
},
jur_AltGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_AltGroupQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_GroupQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_AltGroupQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_AltGroupQuantifierSet();
    jur_AltGroupQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_AltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0)
        return $nextIndex;
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_AltGroupQuantifierSet_setNext = ($this, $next) => {
    jur_AbstractSet_setNext($this, $next);
    $this.$innerSet.$setNext($next);
};
function jur_UCIRangeSet() {
    let a = this; jur_LeafSet.call(a);
    a.$chars2 = null;
    a.$alt1 = 0;
}
let jur_UCIRangeSet__init_0 = ($this, $cc) => {
    jur_LeafSet__init_($this);
    $this.$chars2 = $cc.$getInstance();
    $this.$alt1 = $cc.$alt;
},
jur_UCIRangeSet__init_ = var_0 => {
    let var_1 = new jur_UCIRangeSet();
    jur_UCIRangeSet__init_0(var_1, var_0);
    return var_1;
},
jur_UCIRangeSet_accepts = ($this, $strIndex, $testString) => {
    let var$3, var$4;
    var$3 = $this.$chars2;
    var$4 = jl_Character_toUpperCase($testString.$charAt($strIndex));
    return !var$3.$contains(jl_Character_toLowerCase(var$4)) ? (-1) : 1;
},
jur_UCIRangeSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = !$this.$alt1 ? $rt_s(48) : $rt_s(49);
    var$2 = $this.$chars2.$toString();
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(450)), var$1), var$2);
    return jl_StringBuilder_toString(var$3);
},
otcic_JsConsolePrintStream = $rt_classWithoutFields(ji_PrintStream),
otcic_JsConsolePrintStream__init_ = $this => {
    ji_PrintStream__init_($this, null, 0, null);
},
otcic_JsConsolePrintStream_println1 = ($this, $s) => {
    $this.$print($s);
    $this.$print($rt_s(573));
},
otcic_JsConsolePrintStream_println0 = $this => {
    $this.$print($rt_s(573));
},
otcic_JsConsolePrintStream_println = ($this, $s) => {
    $this.$println1(ju_Objects_toString($s));
},
otcic_JSStdoutPrintStream = $rt_classWithoutFields(otcic_JsConsolePrintStream),
otcic_JSStdoutPrintStream__init_ = $this => {
    otcic_JsConsolePrintStream__init_($this);
},
otcic_JSStdoutPrintStream__init_0 = () => {
    let var_0 = new otcic_JSStdoutPrintStream();
    otcic_JSStdoutPrintStream__init_(var_0);
    return var_0;
},
otcic_JSStdoutPrintStream_print = ($this, $s) => {
    if ($s === null)
        $s = $rt_s(61);
    $rt_putStdout($rt_ustr($s));
},
cbgu_ArraySupplier$_clinit_$lambda$_3_0 = $rt_classWithoutFields(),
cbgu_ArraySupplier$_clinit_$lambda$_3_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgu_ArraySupplier$_clinit_$lambda$_3_0__init_0 = () => {
    let var_0 = new cbgu_ArraySupplier$_clinit_$lambda$_3_0();
    cbgu_ArraySupplier$_clinit_$lambda$_3_0__init_(var_0);
    return var_0;
},
cbgu_ArraySupplier$_clinit_$lambda$_3_0_get = (var$0, var$1) => {
    return cbgu_ArraySupplier_lambda$static$0(var$1);
},
otp_Platform = $rt_classWithoutFields(),
otp_Platform_clone = var$1 => {
    let copy = new var$1.constructor();
    for (let field in var$1) {
        if (var$1.hasOwnProperty(field)) {
            copy[field] = var$1[field];
        }
    }
    return copy;
},
otp_Platform_isInstance = (var$1, $cls) => {
    return var$1 !== null && !(typeof var$1.constructor.$meta === 'undefined' ? 1 : 0) && otp_Platform_isAssignable(var$1.constructor, $cls) ? 1 : 0;
},
otp_Platform_isAssignable = ($from, $to) => {
    let $supertypes, $i;
    if ($from === $to)
        return 1;
    $supertypes = $from.$meta.supertypes;
    $i = 0;
    while ($i < $supertypes.length) {
        if (otp_Platform_isAssignable($supertypes[$i], $to))
            return 1;
        $i = $i + 1 | 0;
    }
    return 0;
},
otp_Platform_launchThread = $runnable => {
    $runnable.$run();
},
otp_Platform_postpone = $runnable => {
    otp_Platform_schedule($runnable, 0);
},
otp_Platform_schedule = (var$1, var$2) => {
    setTimeout(() => {
        otp_Platform_launchThread(var$1);
    }, var$2);
},
otp_Platform_createQueue = () => {
    return otp_Platform_createQueueJs$js_body$_30();
},
otp_Platform_isPrimitive = $cls => {
    return $cls.$meta.primitive ? 1 : 0;
},
otp_Platform_getArrayItem = $cls => {
    return $cls.$meta.item;
},
otp_Platform_getName = $cls => {
    return $rt_str($cls.$meta.name);
},
otp_Platform_getSimpleName = $cls => {
    return $rt_str($cls.$meta.simpleName);
},
otp_Platform_getEnclosingClass = $cls => {
    return $cls.$meta.enclosingClass;
},
otp_Platform_createQueueJs$js_body$_30 = () => {
    return [];
};
function jnc_CodingErrorAction() {
    jl_Object.call(this);
    this.$name6 = null;
}
let jnc_CodingErrorAction_IGNORE = null,
jnc_CodingErrorAction_REPLACE = null,
jnc_CodingErrorAction_REPORT = null,
jnc_CodingErrorAction_$callClinit = () => {
    jnc_CodingErrorAction_$callClinit = $rt_eraseClinit(jnc_CodingErrorAction);
    jnc_CodingErrorAction__clinit_();
},
jnc_CodingErrorAction__init_0 = ($this, $name) => {
    jnc_CodingErrorAction_$callClinit();
    jl_Object__init_($this);
    $this.$name6 = $name;
},
jnc_CodingErrorAction__init_ = var_0 => {
    let var_1 = new jnc_CodingErrorAction();
    jnc_CodingErrorAction__init_0(var_1, var_0);
    return var_1;
},
jnc_CodingErrorAction__clinit_ = () => {
    jnc_CodingErrorAction_IGNORE = jnc_CodingErrorAction__init_($rt_s(574));
    jnc_CodingErrorAction_REPLACE = jnc_CodingErrorAction__init_($rt_s(575));
    jnc_CodingErrorAction_REPORT = jnc_CodingErrorAction__init_($rt_s(576));
};
function jl_Boolean() {
    jl_Object.call(this);
    this.$value9 = 0;
}
let jl_Boolean_TRUE = null,
jl_Boolean_FALSE = null,
jl_Boolean_TYPE = null,
jl_Boolean_$callClinit = () => {
    jl_Boolean_$callClinit = $rt_eraseClinit(jl_Boolean);
    jl_Boolean__clinit_();
},
jl_Boolean__init_0 = ($this, $value) => {
    jl_Boolean_$callClinit();
    jl_Object__init_($this);
    $this.$value9 = $value;
},
jl_Boolean__init_ = var_0 => {
    let var_1 = new jl_Boolean();
    jl_Boolean__init_0(var_1, var_0);
    return var_1;
},
jl_Boolean__clinit_ = () => {
    jl_Boolean_TRUE = jl_Boolean__init_(1);
    jl_Boolean_FALSE = jl_Boolean__init_(0);
    jl_Boolean_TYPE = $rt_cls($rt_booleancls);
},
ju_NoSuchElementException = $rt_classWithoutFields(jl_RuntimeException),
ju_NoSuchElementException__init_0 = $this => {
    jl_RuntimeException__init_($this);
},
ju_NoSuchElementException__init_1 = () => {
    let var_0 = new ju_NoSuchElementException();
    ju_NoSuchElementException__init_0(var_0);
    return var_0;
},
ju_NoSuchElementException__init_ = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
ju_NoSuchElementException__init_2 = var_0 => {
    let var_1 = new ju_NoSuchElementException();
    ju_NoSuchElementException__init_(var_1, var_0);
    return var_1;
},
jur_BackReferenceSet = $rt_classWithoutFields(jur_CIBackReferenceSet),
jur_BackReferenceSet__init_ = ($this, $groupIndex, $consCounter) => {
    jur_CIBackReferenceSet__init_($this, $groupIndex, $consCounter);
},
jur_BackReferenceSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_BackReferenceSet();
    jur_BackReferenceSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_BackReferenceSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $group, $shift;
    $group = $this.$getString($matchResult);
    if ($group !== null && ($stringIndex + $group.$length() | 0) <= $matchResult.$getRightBound()) {
        $shift = !($testString.$toString()).$startsWith0($group, $stringIndex) ? (-1) : $group.$length();
        if ($shift < 0)
            return (-1);
        $matchResult.$setConsumed($this.$consCounter1, $shift);
        return $this.$next1.$matches($stringIndex + $shift | 0, $testString, $matchResult);
    }
    return (-1);
},
jur_BackReferenceSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $group, $strLength, $testStr, var$7;
    $group = $this.$getString($matchResult);
    $strLength = $matchResult.$getLeftBound();
    if ($group !== null && ($strIndex + $group.$length() | 0) <= $strLength) {
        $testStr = $testString.$toString();
        while (true) {
            if ($strIndex > $strLength)
                return (-1);
            var$7 = $testStr.$indexOf3($group, $strIndex);
            if (var$7 < 0)
                return (-1);
            if ($this.$next1.$matches(var$7 + $group.$length() | 0, $testString, $matchResult) >= 0)
                break;
            $strIndex = var$7 + 1 | 0;
        }
        return var$7;
    }
    return (-1);
},
jur_BackReferenceSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $group, $testStr, var$7;
    $group = $this.$getString($matchResult);
    if ($group === null)
        return (-1);
    $testStr = $testString.$toString();
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf2($group, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$next1.$matches(var$7 + $group.$length() | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
},
jur_BackReferenceSet_first = ($this, $set) => {
    return 1;
},
jur_BackReferenceSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$groupIndex;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(577)), var$1);
    return jl_StringBuilder_toString(var$2);
};
function jur_DotQuantifierSet() {
    jur_QuantifierSet.call(this);
    this.$lt = null;
}
let jur_DotQuantifierSet__init_ = ($this, $innerSet, $next, $type, $lt) => {
    jur_QuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$lt = $lt;
},
jur_DotQuantifierSet__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_DotQuantifierSet();
    jur_DotQuantifierSet__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_DotQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $startSearch;
    $strLength = $matchResult.$getRightBound();
    $startSearch = jur_DotQuantifierSet_findLineTerminator($this, $stringIndex, $strLength, $testString);
    if ($startSearch >= 0)
        $strLength = $startSearch;
    if ($strLength > $stringIndex)
        return $this.$next1.$findBack($stringIndex, $strLength, $testString, $matchResult);
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_DotQuantifierSet_find = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, $res, $nextSearch, var$7, $leftBound;
    $strLength = $matchResult.$getRightBound();
    $res = $this.$next1.$find($stringIndex, $testString, $matchResult);
    if ($res < 0)
        return (-1);
    $nextSearch = jur_DotQuantifierSet_findLineTerminator($this, $res, $strLength, $testString);
    if ($nextSearch >= 0)
        $strLength = $nextSearch;
    var$7 = $this.$next1.$findBack($res, $strLength, $testString, $matchResult);
    var$7 = jl_Math_max($res, var$7);
    $leftBound = var$7 > 0 ? jur_DotQuantifierSet_findBackLineTerminator($this, $stringIndex, var$7 - 1 | 0, $testString) : var$7 ? (-1) : 0;
    if ($leftBound >= $stringIndex)
        $stringIndex = $leftBound >= var$7 ? $leftBound : $leftBound + 1 | 0;
    return $stringIndex;
},
jur_DotQuantifierSet_findLineTerminator = ($this, $i, $to, $testString) => {
    while (true) {
        if ($i >= $to)
            return (-1);
        if ($this.$lt.$isLineTerminator($testString.$charAt($i)))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
jur_DotQuantifierSet_findBackLineTerminator = ($this, $from, $i, $testString) => {
    while (true) {
        if ($i < $from)
            return (-1);
        if ($this.$lt.$isLineTerminator($testString.$charAt($i)))
            break;
        $i = $i + (-1) | 0;
    }
    return $i;
},
jur_DotQuantifierSet_getName = $this => {
    return $rt_s(578);
},
otcit_FloatAnalyzer = $rt_classWithoutFields(),
otcit_FloatAnalyzer_MAX_MANTISSA = 0,
otcit_FloatAnalyzer_mantissa10Table = null,
otcit_FloatAnalyzer_exp10Table = null,
otcit_FloatAnalyzer_$callClinit = () => {
    otcit_FloatAnalyzer_$callClinit = $rt_eraseClinit(otcit_FloatAnalyzer);
    otcit_FloatAnalyzer__clinit_();
},
otcit_FloatAnalyzer_analyze = ($d, $result) => {
    let $bits, $mantissa, $exponent, var$6, $decExponent, var$8, var$9, $binExponentCorrection, $mantissaShift, $decMantissa, var$13, var$14, var$15, $decMantissaHi, $decMantissaLow, $lowerPos, $upperPos, $posCmp;
    otcit_FloatAnalyzer_$callClinit();
    $bits = jl_Float_floatToIntBits($d);
    $result.$sign0 = !($bits & (-2147483648)) ? 0 : 1;
    $mantissa = $bits & 8388607;
    $exponent = $bits >> 23 & 255;
    if (!$mantissa && !$exponent) {
        $result.$mantissa = 0;
        $result.$exponent0 = 0;
        return;
    }
    if ($exponent)
        var$6 = $mantissa | 8388608;
    else {
        var$6 = $mantissa << 1;
        while (Long_eq(Long_and(Long_fromInt(var$6), Long_fromInt(8388608)), Long_ZERO)) {
            var$6 = var$6 << 1;
            $exponent = $exponent + (-1) | 0;
        }
    }
    $decExponent = ju_Arrays_binarySearch(otcit_FloatAnalyzer_exp10Table, $exponent);
    if ($decExponent < 0)
        $decExponent =  -$decExponent | 0;
    var$8 = otcit_FloatAnalyzer_exp10Table.data;
    var$9 = $decExponent + 1 | 0;
    $binExponentCorrection = $exponent - var$8[var$9] | 0;
    $mantissaShift = 9 + $binExponentCorrection | 0;
    $decMantissa = otcit_FloatAnalyzer_mulAndShiftRight(var$6, otcit_FloatAnalyzer_mantissa10Table.data[var$9], $mantissaShift);
    if ($decMantissa < otcit_FloatAnalyzer_MAX_MANTISSA) {
        while ($rt_ucmp($decMantissa, otcit_FloatAnalyzer_MAX_MANTISSA) <= 0) {
            $decExponent = $decExponent + (-1) | 0;
            $decMantissa = ($decMantissa * 10 | 0) + 9 | 0;
        }
        var$8 = otcit_FloatAnalyzer_exp10Table.data;
        var$9 = $decExponent + 1 | 0;
        var$13 = $exponent - var$8[var$9] | 0;
        $mantissaShift = 9 + var$13 | 0;
        $decMantissa = otcit_FloatAnalyzer_mulAndShiftRight(var$6, otcit_FloatAnalyzer_mantissa10Table.data[var$9], $mantissaShift);
    }
    var$9 = var$6 << 1;
    var$6 = var$9 + 1 | 0;
    var$8 = otcit_FloatAnalyzer_mantissa10Table.data;
    var$13 = $decExponent + 1 | 0;
    var$14 = var$8[var$13];
    var$15 = $mantissaShift - 1 | 0;
    $decMantissaHi = otcit_FloatAnalyzer_mulAndShiftRight(var$6, var$14, var$15);
    $decMantissaLow = otcit_FloatAnalyzer_mulAndShiftRight(var$9 - 1 | 0, otcit_FloatAnalyzer_mantissa10Table.data[var$13], var$15);
    $lowerPos = otcit_FloatAnalyzer_findLowerDistance($decMantissa, $decMantissaLow);
    $upperPos = otcit_FloatAnalyzer_findUpperDistance($decMantissa, $decMantissaHi);
    $posCmp = $rt_ucmp($lowerPos, $upperPos);
    var$9 = $posCmp > 0 ? $rt_imul($rt_udiv($decMantissa, $lowerPos), $lowerPos) : $posCmp < 0 ? $rt_imul($rt_udiv($decMantissa, $upperPos), $upperPos) + $upperPos | 0 : $rt_imul($rt_udiv(($decMantissa + ($upperPos / 2 | 0) | 0), $upperPos), $upperPos);
    if (jl_Long_compareUnsigned(Long_fromInt(var$9), Long_fromInt(1000000000)) >= 0)
        while (true) {
            $decExponent = $decExponent + 1 | 0;
            var$9 = $rt_udiv(var$9, 10);
            if ($rt_ucmp(var$9, 1000000000) < 0)
                break;
        }
    else if ($rt_ucmp(var$9, 100000000) < 0) {
        $decExponent = $decExponent + (-1) | 0;
        var$9 = var$9 * 10 | 0;
    }
    $result.$mantissa = var$9;
    $result.$exponent0 = $decExponent - 50 | 0;
},
otcit_FloatAnalyzer_findLowerDistance = ($mantissa, $lower) => {
    let $pos, $pos_0, var$5, var$6;
    otcit_FloatAnalyzer_$callClinit();
    $pos = 1;
    while (true) {
        $pos_0 = $pos * 10 | 0;
        var$5 = $rt_udiv($mantissa, $pos_0);
        var$6 = $rt_udiv($lower, $pos_0);
        if ($rt_ucmp(var$5, var$6) <= 0)
            break;
        $pos = $pos_0;
    }
    return $pos;
},
otcit_FloatAnalyzer_findUpperDistance = ($mantissa, $upper) => {
    let $pos, $pos_0, var$5, var$6;
    otcit_FloatAnalyzer_$callClinit();
    $pos = 1;
    while (true) {
        $pos_0 = $pos * 10 | 0;
        var$5 = $rt_udiv($mantissa, $pos_0);
        var$6 = $rt_udiv($upper, $pos_0);
        if ($rt_ucmp(var$5, var$6) >= 0)
            break;
        $pos = $pos_0;
    }
    return $pos;
},
otcit_FloatAnalyzer_mulAndShiftRight = ($a, $b, $shift) => {
    let $result;
    otcit_FloatAnalyzer_$callClinit();
    $result = Long_mul(Long_and(Long_fromInt($a), Long_create(4294967295, 0)), Long_and(Long_fromInt($b), Long_create(4294967295, 0)));
    return Long_lo(Long_shru($result, 32 - $shift | 0));
},
otcit_FloatAnalyzer__clinit_ = () => {
    otcit_FloatAnalyzer_MAX_MANTISSA = $rt_udiv((-1), 10);
    otcit_FloatAnalyzer_mantissa10Table = $rt_createIntArrayFromData([(-18543760), (-873828468), (-1558056233), (-2105438446), (-791721136), (-1492370368), (-2052889754), (-707643228), (-1425108042), (-1999079893), (-621547450), (-1356231419), (-1943978595), (-533385374), (-1285701758), (-1887554866), (-443107408), (-1213479385), (-1829776968), (-350662770), (-1139523676), (-1770612400), (-255999462), (-1063793029), (-1710027882), (-159064234), (-986244846), (-1647989336), (-59802560), (-906835507), (-1584461865),
    (-2126562952), (-825520345), (-1519409735), (-2074521247), (-742253618), (-1452796353), (-2021230542), (-656988489), (-1384584251), (-1966660860), (-569676998), (-1314735058), (-1910781505), (-480270031), (-1243209484), (-1853561046), (-388717296), (-1169967296), (-1794967296), (-294967296), (-1094967296), (-1734967296), (-198967296), (-1018167296), (-1673527296), (-100663296), (-939524096), (-1610612736), (-2147483648), (-858993460), (-1546188227), (-2095944041), (-776530088), (-1480217529), (-2043167483),
    (-692087595), (-1412663535), (-1989124287), (-605618482), (-1343488245), (-1933784055), (-517074110), (-1272652747), (-1877115657), (-426404674), (-1200117198), (-1819087218), (-333559171), (-1125840796), (-1759666096), (-238485376), (-1049781760), (-1698818867), (-141129810), (-971897307), (-1636511305), (-41437710), (-892143627), (-1572708361), (-2117160148), (-810475859), (-1507374147), (-2064892777), (-726848065), (-1440471911), (-2011370988), (-641213203), (-1371964022), (-1956564688)]);
    otcit_FloatAnalyzer_exp10Table = $rt_createIntArrayFromData([(-37), (-34), (-31), (-28), (-24), (-21), (-18), (-14), (-11), (-8), (-4), (-1), 2, 6, 9, 12, 16, 19, 22, 26, 29, 32, 36, 39, 42, 46, 49, 52, 56, 59, 62, 65, 69, 72, 75, 79, 82, 85, 89, 92, 95, 99, 102, 105, 109, 112, 115, 119, 122, 125, 129, 132, 135, 139, 142, 145, 149, 152, 155, 158, 162, 165, 168, 172, 175, 178, 182, 185, 188, 192, 195, 198, 202, 205, 208, 212, 215, 218, 222, 225, 228, 232, 235, 238, 242, 245, 248, 252, 255, 258, 261, 265,
    268, 271, 275, 278, 281, 285, 288, 291]);
},
otcir_MethodInfo = $rt_classWithoutFields(),
cbg_Files$FileType = $rt_classWithoutFields(jl_Enum),
cbg_Files$FileType_Classpath = null,
cbg_Files$FileType_Internal = null,
cbg_Files$FileType_External = null,
cbg_Files$FileType_Absolute = null,
cbg_Files$FileType_Local = null,
cbg_Files$FileType_$VALUES = null,
cbg_Files$FileType_$callClinit = () => {
    cbg_Files$FileType_$callClinit = $rt_eraseClinit(cbg_Files$FileType);
    cbg_Files$FileType__clinit_();
},
cbg_Files$FileType_values = () => {
    cbg_Files$FileType_$callClinit();
    return cbg_Files$FileType_$VALUES.$clone0();
},
cbg_Files$FileType__init_0 = ($this, var$1, var$2) => {
    cbg_Files$FileType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cbg_Files$FileType__init_ = (var_0, var_1) => {
    let var_2 = new cbg_Files$FileType();
    cbg_Files$FileType__init_0(var_2, var_0, var_1);
    return var_2;
},
cbg_Files$FileType_$values = () => {
    let var$1, var$2;
    cbg_Files$FileType_$callClinit();
    var$1 = $rt_createArray(cbg_Files$FileType, 5);
    var$2 = var$1.data;
    var$2[0] = cbg_Files$FileType_Classpath;
    var$2[1] = cbg_Files$FileType_Internal;
    var$2[2] = cbg_Files$FileType_External;
    var$2[3] = cbg_Files$FileType_Absolute;
    var$2[4] = cbg_Files$FileType_Local;
    return var$1;
},
cbg_Files$FileType__clinit_ = () => {
    cbg_Files$FileType_Classpath = cbg_Files$FileType__init_($rt_s(579), 0);
    cbg_Files$FileType_Internal = cbg_Files$FileType__init_($rt_s(580), 1);
    cbg_Files$FileType_External = cbg_Files$FileType__init_($rt_s(581), 2);
    cbg_Files$FileType_Absolute = cbg_Files$FileType__init_($rt_s(582), 3);
    cbg_Files$FileType_Local = cbg_Files$FileType__init_($rt_s(583), 4);
    cbg_Files$FileType_$VALUES = cbg_Files$FileType_$values();
};
function cbggg_ShaderProgram() {
    let a = this; jl_Object.call(a);
    a.$log0 = null;
    a.$isCompiled0 = 0;
    a.$uniforms1 = null;
    a.$uniformTypes = null;
    a.$uniformSizes = null;
    a.$uniformNames = null;
    a.$attributes5 = null;
    a.$attributeTypes = null;
    a.$attributeSizes = null;
    a.$attributeNames = null;
    a.$program0 = 0;
    a.$vertexShaderHandle = 0;
    a.$fragmentShaderHandle = 0;
    a.$matrix = null;
    a.$vertexShaderSource = null;
    a.$fragmentShaderSource = null;
    a.$invalidated = 0;
    a.$refCount = 0;
    a.$params = null;
    a.$type4 = null;
}
let cbggg_ShaderProgram_pedantic = 0,
cbggg_ShaderProgram_prependVertexCode = null,
cbggg_ShaderProgram_prependFragmentCode = null,
cbggg_ShaderProgram_shaders = null,
cbggg_ShaderProgram_intbuf = null,
cbggg_ShaderProgram_$callClinit = () => {
    cbggg_ShaderProgram_$callClinit = $rt_eraseClinit(cbggg_ShaderProgram);
    cbggg_ShaderProgram__clinit_();
},
cbggg_ShaderProgram__init_0 = ($this, $vertexShader, $fragmentShader) => {
    cbggg_ShaderProgram_$callClinit();
    jl_Object__init_($this);
    $this.$log0 = $rt_s(60);
    $this.$uniforms1 = cbgu_ObjectIntMap__init_();
    $this.$uniformTypes = cbgu_ObjectIntMap__init_();
    $this.$uniformSizes = cbgu_ObjectIntMap__init_();
    $this.$attributes5 = cbgu_ObjectIntMap__init_();
    $this.$attributeTypes = cbgu_ObjectIntMap__init_();
    $this.$attributeSizes = cbgu_ObjectIntMap__init_();
    $this.$refCount = 0;
    $this.$params = cbgu_BufferUtils_newIntBuffer(1);
    $this.$type4 = cbgu_BufferUtils_newIntBuffer(1);
    if ($vertexShader === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(584)));
    if ($fragmentShader === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(585)));
    if (cbggg_ShaderProgram_prependVertexCode !== null && cbggg_ShaderProgram_prependVertexCode.$length() > 0)
        $vertexShader = (((jl_StringBuilder__init_()).$append1(cbggg_ShaderProgram_prependVertexCode)).$append1($vertexShader)).$toString();
    if (cbggg_ShaderProgram_prependFragmentCode !== null && cbggg_ShaderProgram_prependFragmentCode.$length() > 0)
        $fragmentShader = (((jl_StringBuilder__init_()).$append1(cbggg_ShaderProgram_prependFragmentCode)).$append1($fragmentShader)).$toString();
    $this.$vertexShaderSource = $vertexShader;
    $this.$fragmentShaderSource = $fragmentShader;
    $this.$matrix = cbgu_BufferUtils_newFloatBuffer(16);
    cbggg_ShaderProgram_compileShaders($this, $vertexShader, $fragmentShader);
    if ($this.$isCompiled()) {
        cbggg_ShaderProgram_fetchAttributes($this);
        cbggg_ShaderProgram_fetchUniforms($this);
        cbggg_ShaderProgram_addManagedShader($this, cbg_Gdx_app, $this);
    }
},
cbggg_ShaderProgram__init_ = (var_0, var_1) => {
    let var_2 = new cbggg_ShaderProgram();
    cbggg_ShaderProgram__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggg_ShaderProgram_compileShaders = ($this, $vertexShader, $fragmentShader) => {
    $this.$vertexShaderHandle = cbggg_ShaderProgram_loadShader($this, 35633, $vertexShader);
    $this.$fragmentShaderHandle = cbggg_ShaderProgram_loadShader($this, 35632, $fragmentShader);
    if ($this.$vertexShaderHandle != (-1) && $this.$fragmentShaderHandle != (-1)) {
        $this.$program0 = cbggg_ShaderProgram_linkProgram($this, $this.$createProgram());
        if ($this.$program0 != (-1)) {
            $this.$isCompiled0 = 1;
            return;
        }
        $this.$isCompiled0 = 0;
        return;
    }
    $this.$isCompiled0 = 0;
},
cbggg_ShaderProgram_loadShader = ($this, $type, $source) => {
    let $gl, $intbuf, $shader, $compiled, $infoLog;
    $gl = cbg_Gdx_gl20;
    $intbuf = cbgu_BufferUtils_newIntBuffer(1);
    $shader = $gl.$glCreateShader($type);
    if (!$shader)
        return (-1);
    $gl.$glShaderSource($shader, $source);
    $gl.$glCompileShader($shader);
    $gl.$glGetShaderiv($shader, 35713, $intbuf);
    $compiled = $intbuf.$get1(0);
    if ($compiled)
        return $shader;
    $infoLog = $gl.$glGetShaderInfoLog($shader);
    $this.$log0 = (((jl_StringBuilder__init_()).$append1($this.$log0)).$append1($type != 35633 ? $rt_s(586) : $rt_s(587))).$toString();
    $this.$log0 = (((jl_StringBuilder__init_()).$append1($this.$log0)).$append1($infoLog)).$toString();
    return (-1);
},
cbggg_ShaderProgram_createProgram = $this => {
    let $gl, $program;
    $gl = cbg_Gdx_gl20;
    $program = $gl.$glCreateProgram();
    if (!$program)
        $program = (-1);
    return $program;
},
cbggg_ShaderProgram_linkProgram = ($this, $program) => {
    let $gl, $tmp_0, $intbuf, $linked;
    $gl = cbg_Gdx_gl20;
    if ($program == (-1))
        return (-1);
    $gl.$glAttachShader($program, $this.$vertexShaderHandle);
    $gl.$glAttachShader($program, $this.$fragmentShaderHandle);
    $gl.$glLinkProgram($program);
    $tmp_0 = jn_ByteBuffer_allocateDirect(4);
    jn_ByteBuffer_order($tmp_0, jn_ByteOrder_nativeOrder());
    $intbuf = $tmp_0.$asIntBuffer();
    $gl.$glGetProgramiv($program, 35714, $intbuf);
    $linked = $intbuf.$get1(0);
    if ($linked)
        return $program;
    $this.$log0 = cbg_Gdx_gl20.$glGetProgramInfoLog($program);
    return (-1);
},
cbggg_ShaderProgram_getLog = $this => {
    if (!$this.$isCompiled0)
        return $this.$log0;
    $this.$log0 = cbg_Gdx_gl20.$glGetProgramInfoLog($this.$program0);
    return $this.$log0;
},
cbggg_ShaderProgram_isCompiled = $this => {
    return $this.$isCompiled0;
},
cbggg_ShaderProgram_fetchAttributeLocation = ($this, $name) => {
    let $gl, var$3;
    $gl = cbg_Gdx_gl20;
    var$3 = $this.$attributes5.$get26($name, (-2));
    if (var$3 == (-2)) {
        var$3 = $gl.$glGetAttribLocation($this.$program0, $name);
        $this.$attributes5.$put11($name, var$3);
    }
    return var$3;
},
cbggg_ShaderProgram_fetchUniformLocation = ($this, $name) => {
    cbggg_ShaderProgram_$callClinit();
    return $this.$fetchUniformLocation($name, cbggg_ShaderProgram_pedantic);
},
cbggg_ShaderProgram_fetchUniformLocation0 = ($this, $name, $pedantic) => {
    let var$3;
    var$3 = $this.$uniforms1.$get26($name, (-2));
    if (var$3 == (-2)) {
        var$3 = cbg_Gdx_gl20.$glGetUniformLocation($this.$program0, $name);
        if (var$3 == (-1) && $pedantic) {
            if (!$this.$isCompiled0)
                $rt_throw(jl_IllegalStateException__init_((((jl_StringBuilder__init_()).$append1($rt_s(588))).$append1($this.$getLog())).$toString()));
            $rt_throw(jl_IllegalArgumentException__init_(((((jl_StringBuilder__init_()).$append1($rt_s(589))).$append1($name)).$append1($rt_s(590))).$toString()));
        }
        $this.$uniforms1.$put11($name, var$3);
    }
    return var$3;
},
cbggg_ShaderProgram_setUniformi0 = ($this, $name, $value) => {
    let $gl, $location;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $location = cbggg_ShaderProgram_fetchUniformLocation($this, $name);
    $gl.$glUniform1i($location, $value);
},
cbggg_ShaderProgram_setUniformi = ($this, $location, $value) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniform1i($location, $value);
},
cbggg_ShaderProgram_setUniformf2 = ($this, $location, $value) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniform1f($location, $value);
},
cbggg_ShaderProgram_setUniformf0 = ($this, $location, $value1, $value2) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniform2f($location, $value1, $value2);
},
cbggg_ShaderProgram_setUniformf1 = ($this, $location, $value1, $value2, $value3) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniform3f($location, $value1, $value2, $value3);
},
cbggg_ShaderProgram_setUniformf3 = ($this, $location, $value1, $value2, $value3, $value4) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniform4f($location, $value1, $value2, $value3, $value4);
},
cbggg_ShaderProgram_setUniform3fv = ($this, $location, $values, $offset, $length) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniform3fv($location, $length / 3 | 0, $values, $offset);
},
cbggg_ShaderProgram_setUniformMatrix2 = ($this, $name, $matrix) => {
    $this.$setUniformMatrix2($name, $matrix, 0);
},
cbggg_ShaderProgram_setUniformMatrix1 = ($this, $name, $matrix, $transpose) => {
    $this.$setUniformMatrix3(cbggg_ShaderProgram_fetchUniformLocation($this, $name), $matrix, $transpose);
},
cbggg_ShaderProgram_setUniformMatrix0 = ($this, $location, $matrix) => {
    $this.$setUniformMatrix3($location, $matrix, 0);
},
cbggg_ShaderProgram_setUniformMatrix3 = ($this, $location, $matrix, $transpose) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniformMatrix4fv($location, 1, $transpose, $matrix.$val, 0);
},
cbggg_ShaderProgram_setUniformMatrix4 = ($this, $location, $matrix) => {
    $this.$setUniformMatrix4($location, $matrix, 0);
},
cbggg_ShaderProgram_setUniformMatrix = ($this, $location, $matrix, $transpose) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniformMatrix3fv($location, 1, $transpose, $matrix.$val0, 0);
},
cbggg_ShaderProgram_setUniformMatrix4fv = ($this, $location, $values, $offset, $length) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUniformMatrix4fv($location, $length / 16 | 0, 0, $values, $offset);
},
cbggg_ShaderProgram_setUniformf = ($this, $location, $values) => {
    $this.$setUniformf4($location, $values.$x, $values.$y, $values.$z);
},
cbggg_ShaderProgram_setUniformf4 = ($this, $location, $values) => {
    $this.$setUniformf3($location, $values.$r, $values.$g, $values.$b, $values.$a);
},
cbggg_ShaderProgram_setVertexAttribute = ($this, $location, $size, $type, $normalize, $stride, $offset) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glVertexAttribPointer($location, $size, $type, $normalize, $stride, $offset);
},
cbggg_ShaderProgram_bind = $this => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glUseProgram($this.$program0);
},
cbggg_ShaderProgram_dispose = $this => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    $gl.$glUseProgram(0);
    $gl.$glDeleteShader($this.$vertexShaderHandle);
    $gl.$glDeleteShader($this.$fragmentShaderHandle);
    $gl.$glDeleteProgram($this.$program0);
    cbggg_ShaderProgram_$callClinit();
    if (cbggg_ShaderProgram_shaders.$get2(cbg_Gdx_app) !== null)
        (cbggg_ShaderProgram_shaders.$get2(cbg_Gdx_app)).$removeValue($this, 1);
},
cbggg_ShaderProgram_disableVertexAttribute = ($this, $name) => {
    let $gl, $location;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $location = cbggg_ShaderProgram_fetchAttributeLocation($this, $name);
    if ($location == (-1))
        return;
    $gl.$glDisableVertexAttribArray($location);
},
cbggg_ShaderProgram_disableVertexAttribute0 = ($this, $location) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glDisableVertexAttribArray($location);
},
cbggg_ShaderProgram_enableVertexAttribute = ($this, $location) => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    cbggg_ShaderProgram_checkManaged($this);
    $gl.$glEnableVertexAttribArray($location);
},
cbggg_ShaderProgram_checkManaged = $this => {
    if ($this.$invalidated) {
        cbggg_ShaderProgram_compileShaders($this, $this.$vertexShaderSource, $this.$fragmentShaderSource);
        $this.$invalidated = 0;
    }
},
cbggg_ShaderProgram_addManagedShader = ($this, $app, $shaderProgram) => {
    let $managedResources;
    cbggg_ShaderProgram_$callClinit();
    $managedResources = cbggg_ShaderProgram_shaders.$get2($app);
    if ($managedResources === null)
        $managedResources = cbgu_Array__init_();
    $managedResources.$add1($shaderProgram);
    cbggg_ShaderProgram_shaders.$put($app, $managedResources);
},
cbggg_ShaderProgram_fetchUniforms = $this => {
    let $numUniforms, $i, $name, $location;
    $this.$params.$clear0();
    cbg_Gdx_gl20.$glGetProgramiv($this.$program0, 35718, $this.$params);
    $numUniforms = $this.$params.$get1(0);
    $this.$uniformNames = $rt_createArray(jl_String, $numUniforms);
    $i = 0;
    while ($i < $numUniforms) {
        $this.$params.$clear0();
        $this.$params.$put7(0, 1);
        $this.$type4.$clear0();
        $name = cbg_Gdx_gl20.$glGetActiveUniform($this.$program0, $i, $this.$params, $this.$type4);
        $location = cbg_Gdx_gl20.$glGetUniformLocation($this.$program0, $name);
        $this.$uniforms1.$put11($name, $location);
        $this.$uniformTypes.$put11($name, $this.$type4.$get1(0));
        $this.$uniformSizes.$put11($name, $this.$params.$get1(0));
        $this.$uniformNames.data[$i] = $name;
        $i = $i + 1 | 0;
    }
},
cbggg_ShaderProgram_fetchAttributes = $this => {
    let $numAttributes, $i, $name, $location;
    $this.$params.$clear0();
    cbg_Gdx_gl20.$glGetProgramiv($this.$program0, 35721, $this.$params);
    $numAttributes = $this.$params.$get1(0);
    $this.$attributeNames = $rt_createArray(jl_String, $numAttributes);
    $i = 0;
    while ($i < $numAttributes) {
        $this.$params.$clear0();
        $this.$params.$put7(0, 1);
        $this.$type4.$clear0();
        $name = cbg_Gdx_gl20.$glGetActiveAttrib($this.$program0, $i, $this.$params, $this.$type4);
        $location = cbg_Gdx_gl20.$glGetAttribLocation($this.$program0, $name);
        $this.$attributes5.$put11($name, $location);
        $this.$attributeTypes.$put11($name, $this.$type4.$get1(0));
        $this.$attributeSizes.$put11($name, $this.$params.$get1(0));
        $this.$attributeNames.data[$i] = $name;
        $i = $i + 1 | 0;
    }
},
cbggg_ShaderProgram_getAttributeLocation = ($this, $name) => {
    return $this.$attributes5.$get26($name, (-1));
},
cbggg_ShaderProgram__clinit_ = () => {
    cbggg_ShaderProgram_pedantic = 1;
    cbggg_ShaderProgram_prependVertexCode = $rt_s(60);
    cbggg_ShaderProgram_prependFragmentCode = $rt_s(60);
    cbggg_ShaderProgram_shaders = cbgu_ObjectMap__init_();
    cbggg_ShaderProgram_intbuf = cbgu_BufferUtils_newIntBuffer(1);
};
function jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1() {
    jur_AbstractCharClass.call(this);
    this.$this$041 = null;
}
let jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_ = ($this, $this$0) => {
    $this.$this$041 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains = ($this, $ch) => {
    return jl_Character_isJavaIdentifierStart($ch);
};
function cbgg_OrthographicCamera() {
    let a = this; cbgg_Camera.call(a);
    a.$zoom1 = 0.0;
    a.$tmp4 = null;
}
let cbgg_OrthographicCamera__init_ = $this => {
    cbgg_Camera__init_($this);
    $this.$zoom1 = 1.0;
    $this.$tmp4 = cbgm_Vector3__init_();
    $this.$near = 0.0;
},
cbgg_OrthographicCamera__init_0 = () => {
    let var_0 = new cbgg_OrthographicCamera();
    cbgg_OrthographicCamera__init_(var_0);
    return var_0;
},
cbgg_OrthographicCamera_update = $this => {
    $this.$update1(1);
},
cbgg_OrthographicCamera_update0 = ($this, $updateFrustum) => {
    $this.$projection.$setToOrtho($this.$zoom1 *  -$this.$viewportWidth / 2.0, $this.$zoom1 * $this.$viewportWidth / 2.0, $this.$zoom1 *  -($this.$viewportHeight / 2.0), $this.$zoom1 * $this.$viewportHeight / 2.0, $this.$near, $this.$far);
    $this.$view.$setToLookAt0($this.$direction, $this.$up);
    $this.$view.$translate2( -$this.$position8.$x,  -$this.$position8.$y,  -$this.$position8.$z);
    $this.$combined.$set1($this.$projection);
    cbgm_Matrix4_mul($this.$combined.$val, $this.$view.$val);
    if ($updateFrustum) {
        $this.$invProjectionView.$set1($this.$combined);
        cbgm_Matrix4_inv($this.$invProjectionView.$val);
        $this.$frustum.$update2($this.$invProjectionView);
    }
};
function cbggg_IndexBufferObject() {
    let a = this; jl_Object.call(a);
    a.$byteBuffer1 = null;
    a.$buffer0 = null;
    a.$bufferHandle = 0;
    a.$isDirect1 = 0;
    a.$isDirty = 0;
    a.$isBound = 0;
    a.$usage0 = 0;
}
let cbggg_IndexBufferObject__init_1 = ($this, $isStatic, $maxIndices) => {
    jl_Object__init_($this);
    $this.$isDirty = 1;
    $this.$isBound = 0;
    $this.$isDirect1 = 1;
    $this.$byteBuffer1 = cbgu_BufferUtils_newUnsafeByteBuffer($maxIndices * 2 | 0);
    $this.$buffer0 = $this.$byteBuffer1.$asShortBuffer();
    jn_ShortBuffer_flip($this.$buffer0);
    $this.$bufferHandle = cbg_Gdx_gl20.$glGenBuffer();
    $this.$usage0 = !$isStatic ? 35048 : 35044;
},
cbggg_IndexBufferObject__init_ = (var_0, var_1) => {
    let var_2 = new cbggg_IndexBufferObject();
    cbggg_IndexBufferObject__init_1(var_2, var_0, var_1);
    return var_2;
},
cbggg_IndexBufferObject__init_0 = ($this, $maxIndices) => {
    jl_Object__init_($this);
    $this.$isDirty = 1;
    $this.$isBound = 0;
    $this.$isDirect1 = 1;
    $this.$buffer0 = cbgu_BufferUtils_newShortBuffer($maxIndices);
    jn_ShortBuffer_flip($this.$buffer0);
    $this.$bufferHandle = cbg_Gdx_gl20.$glGenBuffer();
    $this.$usage0 = 35044;
},
cbggg_IndexBufferObject__init_2 = var_0 => {
    let var_1 = new cbggg_IndexBufferObject();
    cbggg_IndexBufferObject__init_0(var_1, var_0);
    return var_1;
},
cbggg_IndexBufferObject_getNumIndices = $this => {
    return jn_Buffer_limit($this.$buffer0);
},
cbggg_IndexBufferObject_getNumMaxIndices = $this => {
    return jn_Buffer_capacity($this.$buffer0);
},
cbggg_IndexBufferObject_setIndices = ($this, $indices, $offset, $count) => {
    $this.$isDirty = 1;
    jn_ShortBuffer_clear($this.$buffer0);
    $this.$buffer0.$put9($indices, $offset, $count);
    jn_ShortBuffer_flip($this.$buffer0);
    if ($this.$isBound) {
        cbg_Gdx_gl20.$glBufferData(34963, jn_Buffer_limit($this.$buffer0), $this.$buffer0, $this.$usage0);
        $this.$isDirty = 0;
    }
},
cbggg_IndexBufferObject_getBuffer = ($this, $forWriting) => {
    $this.$isDirty = $this.$isDirty | $forWriting;
    return $this.$buffer0;
},
cbggg_IndexBufferObject_bind = $this => {
    if (!$this.$bufferHandle)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(591)));
    cbg_Gdx_gl20.$glBindBuffer(34963, $this.$bufferHandle);
    if ($this.$isDirty) {
        cbg_Gdx_gl20.$glBufferData(34963, jn_Buffer_limit($this.$buffer0), $this.$buffer0, $this.$usage0);
        $this.$isDirty = 0;
    }
    $this.$isBound = 1;
},
cbggg_IndexBufferObject_unbind = $this => {
    cbg_Gdx_gl20.$glBindBuffer(34963, 0);
    $this.$isBound = 0;
},
cbggg_IndexBufferObject_dispose = $this => {
    let $gl;
    $gl = cbg_Gdx_gl20;
    $gl.$glBindBuffer(34963, 0);
    $gl.$glDeleteBuffer($this.$bufferHandle);
    $this.$bufferHandle = 0;
    cbgu_BufferUtils_disposeUnsafeByteBuffer($this.$byteBuffer1);
    $this.$byteBuffer1 = null;
    $this.$buffer0 = null;
},
cbggg_IndexArray = $rt_classWithoutFields(cbggg_IndexBufferObject),
cbggg_IndexArray__init_ = ($this, $maxIndices) => {
    cbggg_IndexBufferObject__init_0($this, $maxIndices);
},
cbggg_IndexArray__init_0 = var_0 => {
    let var_1 = new cbggg_IndexArray();
    cbggg_IndexArray__init_(var_1, var_0);
    return var_1;
},
ju_Arrays = $rt_classWithoutFields(),
ju_Arrays_copyOf1 = ($array, $length) => {
    let var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createCharArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_copyOf0 = ($array, $length) => {
    let var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createByteArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_copyOf2 = ($array, $length) => {
    let var$3, $result, $sz, $i;
    var$3 = $array.data;
    $result = $rt_createIntArray($length);
    $sz = jl_Math_min($length, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_copyOf = ($original, $newLength) => {
    let var$3, $result, $sz, $i;
    var$3 = $original.data;
    $result = jlr_Array_newInstance(jl_Class_getComponentType(jl_Object_getClass($original)), $newLength);
    $sz = jl_Math_min($newLength, var$3.length);
    $i = 0;
    while ($i < $sz) {
        $result.data[$i] = var$3[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_copyOfRange = ($original, $from, $to) => {
    let $result, $i, var$6, var$7;
    $result = jlr_Array_newInstance(jl_Class_getComponentType(jl_Object_getClass($original)), $to - $from | 0);
    $i = $from;
    while ($i < $to) {
        var$6 = $result.data;
        var$7 = $original.data;
        var$6[$i - $from | 0] = var$7[$i];
        $i = $i + 1 | 0;
    }
    return $result;
},
ju_Arrays_fill2 = ($a, $fromIndex, $toIndex, $val) => {
    let var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
},
ju_Arrays_fill = ($a, $val) => {
    ju_Arrays_fill2($a, 0, $a.data.length, $val);
},
ju_Arrays_fill4 = ($a, $fromIndex, $toIndex, $val) => {
    let var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
},
ju_Arrays_fill3 = ($a, $val) => {
    ju_Arrays_fill4($a, 0, $a.data.length, $val);
},
ju_Arrays_fill5 = ($a, $fromIndex, $toIndex, $val) => {
    let var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
},
ju_Arrays_fill0 = ($a, $fromIndex, $toIndex, $val) => {
    let var$5, var$6;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    while ($fromIndex < $toIndex) {
        var$5 = $a.data;
        var$6 = $fromIndex + 1 | 0;
        var$5[$fromIndex] = $val;
        $fromIndex = var$6;
    }
},
ju_Arrays_fill1 = ($a, $val) => {
    ju_Arrays_fill0($a, 0, $a.data.length, $val);
},
ju_Arrays_binarySearch = ($a, $key) => {
    return ju_Arrays_binarySearch0($a, 0, $a.data.length, $key);
},
ju_Arrays_binarySearch0 = ($a, $fromIndex, $toIndex, $key) => {
    let $u, var$6, $i, $e;
    if ($fromIndex > $toIndex)
        $rt_throw(jl_IllegalArgumentException__init_0());
    $u = $toIndex - 1 | 0;
    while (true) {
        if ($fromIndex > $u)
            return ( -$fromIndex | 0) - 1 | 0;
        var$6 = $a.data;
        $i = ($fromIndex + $u | 0) / 2 | 0;
        $e = var$6[$i];
        if ($e == $key)
            break;
        if ($key >= $e)
            $fromIndex = $i + 1 | 0;
        else
            $u = $i - 1 | 0;
    }
    return $i;
},
cgxgbta_AssetLoaderListener = $rt_classWithoutFields(0),
cgxgbta_AssetLoaderListener_onProgress = ($this, $total, $loaded) => {
    return;
};
function cgxgbt_TeaPreloadApplicationListener$2() {
    jl_Object.call(this);
    this.$this$011 = null;
}
let cgxgbt_TeaPreloadApplicationListener$2__init_ = ($this, $this$0) => {
    $this.$this$011 = $this$0;
    jl_Object__init_($this);
},
cgxgbt_TeaPreloadApplicationListener$2__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaPreloadApplicationListener$2();
    cgxgbt_TeaPreloadApplicationListener$2__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaPreloadApplicationListener$2_onSuccess = ($this, $url, $result) => {
    $this.$this$011.$assetsCount = $this.$this$011.$assetLoader0.$getQueue();
},
cgxgbt_TeaPreloadApplicationListener$2_onSuccess0 = ($this, var$1, var$2) => {
    $this.$onSuccess0(var$1, var$2);
};
function cgxgbt_TeaPreloadApplicationListener$1() {
    jl_Object.call(this);
    this.$this$023 = null;
}
let cgxgbt_TeaPreloadApplicationListener$1__init_ = ($this, $this$0) => {
    $this.$this$023 = $this$0;
    jl_Object__init_($this);
},
cgxgbt_TeaPreloadApplicationListener$1__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaPreloadApplicationListener$1();
    cgxgbt_TeaPreloadApplicationListener$1__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaPreloadApplicationListener$1_onSuccess0 = ($this, $url, $result) => {
    cgxgbt_TeaPreloadApplicationListener_subtractQueue($this.$this$023);
},
cgxgbt_TeaPreloadApplicationListener$1_onSuccess = ($this, var$1, var$2) => {
    $this.$onSuccess1(var$1, var$2);
};
function jn_ShortBufferOverDataView() {
    let a = this; jn_ShortBufferImpl.call(a);
    a.$readOnly4 = 0;
    a.$data7 = null;
    a.$littleEndian2 = 0;
}
let jn_ShortBufferOverDataView__init_ = ($this, $position, $limit, $readOnly, $data, $littleEndian) => {
    jn_ShortBufferImpl__init_($this, $position, $limit);
    $this.$readOnly4 = $readOnly;
    $this.$data7 = $data;
    $this.$littleEndian2 = $littleEndian;
},
jn_ShortBufferOverDataView__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_ShortBufferOverDataView();
    jn_ShortBufferOverDataView__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_ShortBufferOverDataView_readOnly = $this => {
    return $this.$readOnly4;
},
jn_ShortBufferOverDataView_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$5 = $index * 2 | 0;
    while (true) {
        var$6 = $length + (-1) | 0;
        if ($length <= 0)
            break;
        var$7 = $src.data;
        var$8 = $this.$data7;
        var$9 = $offset + 1 | 0;
        var$10 = var$7[$offset];
        var$11 = $this.$littleEndian2;
        var$8.setInt16(var$5, var$10, !!var$11);
        var$5 = var$5 + 2 | 0;
        $length = var$6;
        $offset = var$9;
    }
},
jn_ShortBufferOverDataView_capacityImpl = $this => {
    return $this.$data7.byteLength / 2 | 0;
},
jn_ShortBufferOverDataView_getArrayBufferView = $this => {
    return $this.$data7;
};
function bgg_btDebugRendererGdxGL() {
    let a = this; bg_btDebugRenderer.call(a);
    a.$renderer0 = null;
    a.$spriteBatch = null;
    a.$font1 = null;
    a.$from = null;
    a.$to = null;
    a.$col = null;
}
let bgg_btDebugRendererGdxGL__init_ = $this => {
    bg_btDebugRenderer__init_($this);
    $this.$renderer0 = cbggg_ShapeRenderer__init_2();
    $this.$spriteBatch = cbggg_SpriteBatch__init_0();
    $this.$font1 = cbggg_BitmapFont__init_3();
    $this.$from = cbgm_Vector3__init_();
    $this.$to = cbgm_Vector3__init_();
    $this.$col = cbgm_Vector3__init_();
},
bgg_btDebugRendererGdxGL__init_0 = () => {
    let var_0 = new bgg_btDebugRendererGdxGL();
    bgg_btDebugRendererGdxGL__init_(var_0);
    return var_0;
},
bgg_btDebugRendererGdxGL_drawLine = ($this, $vecFrom, $vecTo, $color) => {
    bg_btGdx_convert($vecFrom, $this.$from);
    bg_btGdx_convert($vecTo, $this.$to);
    bg_btGdx_convert($color, $this.$col);
    bgg_btDebugRendererGdxGL_drawLine0($this, $this.$from, $this.$to, $this.$col);
},
bgg_btDebugRendererGdxGL_drawContactPoint0 = ($this, $PointOnB, $normalOnB, $distance, $lifeTime, $color) => {
    bg_btGdx_convert($PointOnB, $this.$from);
    bg_btGdx_convert($normalOnB, $this.$to);
    bg_btGdx_convert($color, $this.$col);
    bgg_btDebugRendererGdxGL_drawContactPoint($this, $this.$from, $this.$to, $distance, $lifeTime, $this.$col);
},
bgg_btDebugRendererGdxGL_debugDrawWorld = ($this, $camera, $world) => {
    let var$3;
    $this.$renderer0.$setProjectionMatrix($camera.$combined);
    var$3 = $this.$renderer0;
    cbggg_ShapeRenderer$ShapeType_$callClinit();
    var$3.$begin1(cbggg_ShapeRenderer$ShapeType_Line);
    $world.$debugDrawWorld();
    $this.$renderer0.$end();
},
bgg_btDebugRendererGdxGL_drawLine0 = ($this, $from, $to, $color) => {
    $this.$renderer0.$setColor0($color.$x, $color.$y, $color.$z, 1.0);
    cbggg_ShapeRenderer_line($this.$renderer0, $from, $to);
},
bgg_btDebugRendererGdxGL_drawContactPoint = ($this, $pointOnB, $normalOnB, $distance, $lifeTime, $color) => {
    $this.$renderer0.$setColor0($color.$x, $color.$y, $color.$z, 1.0);
    $this.$renderer0.$point($pointOnB.$x, $pointOnB.$y, $pointOnB.$z);
    cbggg_ShapeRenderer_line($this.$renderer0, $pointOnB, ($normalOnB.$scl($distance)).$add5($pointOnB));
};
function jur_CharClass$3() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt0 = 0;
    a.$val$cc1 = null;
    a.$this$010 = null;
}
let jur_CharClass$3__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$010 = $this$0;
    $this.$val$curAlt0 = var$2;
    $this.$val$cc1 = var$3;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$3__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_CharClass$3();
    jur_CharClass$3__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_CharClass$3_contains = ($this, $ch) => {
    return !($this.$val$curAlt0 ^ $this.$this$010.$bits.$get16($ch)) && !($this.$val$curAlt0 ^ $this.$this$010.$inverted ^ $this.$val$cc1.$contains($ch)) ? 0 : 1;
};
function jur_CharClass$4() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt1 = 0;
    a.$val$nb3 = null;
    a.$val$cc2 = null;
    a.$this$063 = null;
}
let jur_CharClass$4__init_ = ($this, $this$0, var$2, var$3, var$4) => {
    $this.$this$063 = $this$0;
    $this.$val$curAlt1 = var$2;
    $this.$val$nb3 = var$3;
    $this.$val$cc2 = var$4;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$4__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CharClass$4();
    jur_CharClass$4__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CharClass$4_contains = ($this, $ch) => {
    return $this.$val$curAlt1 ^ (!$this.$val$nb3.$contains($ch) && !$this.$val$cc2.$contains($ch) ? 0 : 1) ? 0 : 1;
};
function jur_CharClass$1() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$cc3 = null;
    a.$this$055 = null;
}
let jur_CharClass$1__init_ = ($this, $this$0, var$2) => {
    $this.$this$055 = $this$0;
    $this.$val$cc3 = var$2;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$1__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CharClass$1();
    jur_CharClass$1__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass$1_contains = ($this, $ch) => {
    return $this.$val$cc3.$contains($ch);
};
function jur_CharClass$2() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt = 0;
    a.$val$cc0 = null;
    a.$this$09 = null;
}
let jur_CharClass$2__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$09 = $this$0;
    $this.$val$curAlt = var$2;
    $this.$val$cc0 = var$3;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$2__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_CharClass$2();
    jur_CharClass$2__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_CharClass$2_contains = ($this, $ch) => {
    return !($this.$val$curAlt ^ $this.$this$09.$bits.$get16($ch)) && !($this.$val$curAlt ^ $this.$this$09.$inverted ^ $this.$val$cc0.$contains($ch)) ? 1 : 0;
};
function jur_CharClass$7() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz1 = null;
    a.$this$064 = null;
}
let jur_CharClass$7__init_ = ($this, $this$0, var$2) => {
    $this.$this$064 = $this$0;
    $this.$val$clazz1 = var$2;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$7__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CharClass$7();
    jur_CharClass$7__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass$7_contains = ($this, $ch) => {
    return $this.$val$clazz1.$contains($ch);
};
function jur_CharClass$8() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz4 = null;
    a.$val$curAlt6 = 0;
    a.$this$015 = null;
}
let jur_CharClass$8__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$015 = $this$0;
    $this.$val$clazz4 = var$2;
    $this.$val$curAlt6 = var$3;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$8__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_CharClass$8();
    jur_CharClass$8__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_CharClass$8_contains = ($this, $ch) => {
    return !$this.$val$clazz4.$contains($ch) && !($this.$val$curAlt6 ^ $this.$this$015.$bits.$get16($ch)) ? 1 : 0;
};
function jur_CharClass$5() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt10 = 0;
    a.$val$nb0 = null;
    a.$val$cc = null;
    a.$this$050 = null;
}
let jur_CharClass$5__init_ = ($this, $this$0, var$2, var$3, var$4) => {
    $this.$this$050 = $this$0;
    $this.$val$curAlt10 = var$2;
    $this.$val$nb0 = var$3;
    $this.$val$cc = var$4;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$5__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CharClass$5();
    jur_CharClass$5__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CharClass$5_contains = ($this, $ch) => {
    return $this.$val$curAlt10 ^ (!$this.$val$nb0.$contains($ch) && !$this.$val$cc.$contains($ch) ? 0 : 1);
};
function jur_CharClass$6() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz9 = null;
    a.$this$051 = null;
}
let jur_CharClass$6__init_ = ($this, $this$0, var$2) => {
    $this.$this$051 = $this$0;
    $this.$val$clazz9 = var$2;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$6__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CharClass$6();
    jur_CharClass$6__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass$6_contains = ($this, $ch) => {
    return $this.$val$clazz9.$contains($ch) ? 0 : 1;
},
cgxgbt_TeaGraphics$FullscreenChanged = $rt_classWithoutFields(0);
function jur_DotSet() {
    jur_JointSet.call(this);
    this.$lt0 = null;
}
let jur_DotSet__init_ = ($this, $lt) => {
    jur_JointSet__init_($this);
    $this.$lt0 = $lt;
},
jur_DotSet__init_0 = var_0 => {
    let var_1 = new jur_DotSet();
    jur_DotSet__init_(var_1, var_0);
    return var_1;
},
jur_DotSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, $high, var$7, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        var$7 = $stringIndex + 2 | 0;
        if (var$7 <= $strLength) {
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$lt0.$isLineTerminator(jl_Character_toCodePoint($high, $low)) ? (-1) : $this.$next1.$matches(var$7, $testString, $matchResult);
        }
    }
    return $this.$lt0.$isLineTerminator($high) ? (-1) : $this.$next1.$matches(var$5, $testString, $matchResult);
},
jur_DotSet_getName = $this => {
    return $rt_s(385);
},
jur_DotSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_DotSet_getType = $this => {
    return (-2147483602);
},
jur_DotSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function jur_CharClass$9() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz3 = null;
    a.$val$curAlt4 = 0;
    a.$this$020 = null;
}
let jur_CharClass$9__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$020 = $this$0;
    $this.$val$clazz3 = var$2;
    $this.$val$curAlt4 = var$3;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$9__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_CharClass$9();
    jur_CharClass$9__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_CharClass$9_contains = ($this, $ch) => {
    return !$this.$val$clazz3.$contains($ch) && !($this.$val$curAlt4 ^ $this.$this$020.$bits.$get16($ch)) ? 0 : 1;
},
jl_Character = $rt_classWithoutFields(),
jl_Character_TYPE = null,
jl_Character_digitMapping = null,
jl_Character_upperCaseMapping = null,
jl_Character_lowerCaseMapping = null,
jl_Character_classMapping = null,
jl_Character_characterCache = null,
jl_Character_$$metadata$$0 = null,
jl_Character_$$metadata$$1 = null,
jl_Character_$$metadata$$3 = null,
jl_Character_$$metadata$$4 = null,
jl_Character_$callClinit = () => {
    jl_Character_$callClinit = $rt_eraseClinit(jl_Character);
    jl_Character__clinit_();
},
jl_Character_toString = $c => {
    let var$2, var$3;
    jl_Character_$callClinit();
    var$2 = new jl_String;
    var$3 = $rt_createCharArray(1);
    var$3.data[0] = $c;
    jl_String__init_1(var$2, var$3);
    return var$2;
},
jl_Character_isValidCodePoint = $codePoint => {
    jl_Character_$callClinit();
    return $codePoint >= 0 && $codePoint <= 1114111 ? 1 : 0;
},
jl_Character_isBmpCodePoint = $codePoint => {
    jl_Character_$callClinit();
    return $codePoint > 0 && $codePoint <= 65535 ? 1 : 0;
},
jl_Character_isSupplementaryCodePoint = $codePoint => {
    jl_Character_$callClinit();
    return $codePoint >= 65536 && $codePoint <= 1114111 ? 1 : 0;
},
jl_Character_isHighSurrogate = $ch => {
    jl_Character_$callClinit();
    return ($ch & 64512) != 55296 ? 0 : 1;
},
jl_Character_isLowSurrogate = $ch => {
    jl_Character_$callClinit();
    return ($ch & 64512) != 56320 ? 0 : 1;
},
jl_Character_isSurrogate = $ch => {
    jl_Character_$callClinit();
    return !jl_Character_isHighSurrogate($ch) && !jl_Character_isLowSurrogate($ch) ? 0 : 1;
},
jl_Character_isSurrogatePair = ($high, $low) => {
    jl_Character_$callClinit();
    return jl_Character_isHighSurrogate($high) && jl_Character_isLowSurrogate($low) ? 1 : 0;
},
jl_Character_toCodePoint = ($high, $low) => {
    jl_Character_$callClinit();
    return (($high & 1023) << 10 | $low & 1023) + 65536 | 0;
},
jl_Character_codePointAt = ($a, $index) => {
    jl_Character_$callClinit();
    return jl_Character_codePointAt0($a, $index, $a.data.length);
},
jl_Character_codePointAt0 = ($a, $index, $limit) => {
    let var$4, var$5;
    jl_Character_$callClinit();
    if ($index < $limit && $index >= 0) {
        var$4 = $a.data;
        if ($limit <= var$4.length) {
            if ($index < ($limit - 1 | 0) && jl_Character_isHighSurrogate(var$4[$index])) {
                var$5 = $index + 1 | 0;
                if (jl_Character_isLowSurrogate(var$4[var$5]))
                    return jl_Character_toCodePoint(var$4[$index], var$4[var$5]);
            }
            return var$4[$index];
        }
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jl_Character_highSurrogate = $codePoint => {
    let var$2;
    jl_Character_$callClinit();
    var$2 = $codePoint - 65536 | 0;
    return (55296 | var$2 >> 10 & 1023) & 65535;
},
jl_Character_lowSurrogate = $codePoint => {
    jl_Character_$callClinit();
    return (56320 | $codePoint & 1023) & 65535;
},
jl_Character_toLowerCase = $ch => {
    jl_Character_$callClinit();
    return jl_Character_toLowerCase0($ch) & 65535;
},
jl_Character_toLowerCase0 = $ch => {
    jl_Character_$callClinit();
    return jl_Character_mapChar(jl_Character_getLowerCaseMapping(), $ch);
},
jl_Character_getLowerCaseMapping = () => {
    let var$1;
    jl_Character_$callClinit();
    if (jl_Character_lowerCaseMapping === null) {
        var$1 = otciu_UnicodeHelper_decodeCaseMapping(((jl_Character_acquireLowerCaseMapping()).value !== null ? $rt_str((jl_Character_acquireLowerCaseMapping()).value) : null));
        jl_Character_lowerCaseMapping = otciu_UnicodeHelper_createCharMapping(var$1);
    }
    return jl_Character_lowerCaseMapping;
},
jl_Character_acquireLowerCaseMapping = () => {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$0 === null)
        jl_Character_$$metadata$$0 = jl_Character_acquireLowerCaseMapping$$create();
    return jl_Character_$$metadata$$0;
},
jl_Character_toUpperCase = $ch => {
    jl_Character_$callClinit();
    return jl_Character_toUpperCase0($ch) & 65535;
},
jl_Character_toUpperCase0 = $codePoint => {
    jl_Character_$callClinit();
    return jl_Character_mapChar(jl_Character_getUpperCaseMapping(), $codePoint);
},
jl_Character_getUpperCaseMapping = () => {
    let var$1;
    jl_Character_$callClinit();
    if (jl_Character_upperCaseMapping === null) {
        var$1 = otciu_UnicodeHelper_decodeCaseMapping(((jl_Character_acquireUpperCaseMapping()).value !== null ? $rt_str((jl_Character_acquireUpperCaseMapping()).value) : null));
        jl_Character_upperCaseMapping = otciu_UnicodeHelper_createCharMapping(var$1);
    }
    return jl_Character_upperCaseMapping;
},
jl_Character_acquireUpperCaseMapping = () => {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$1 === null)
        jl_Character_$$metadata$$1 = jl_Character_acquireUpperCaseMapping$$create();
    return jl_Character_$$metadata$$1;
},
jl_Character_mapChar = ($table, $codePoint) => {
    let $binSearchTable, $index, var$5, var$6;
    jl_Character_$callClinit();
    if ($codePoint < $table.$fastTable.data.length)
        return $codePoint + $table.$fastTable.data[$codePoint] | 0;
    $binSearchTable = $table.$binarySearchTable0;
    $index = jl_Character_binarySearchTable($binSearchTable, $codePoint);
    if ($index >= 0) {
        var$5 = $binSearchTable.data;
        var$6 = $index * 2 | 0;
        if (var$6 < var$5.length)
            return $codePoint + var$5[var$6 + 1 | 0] | 0;
    }
    return 0;
},
jl_Character_binarySearchTable = ($data, $key) => {
    let var$3, $l, $u, $i, $e, var$8;
    jl_Character_$callClinit();
    var$3 = $data.data;
    $l = 0;
    $u = (var$3.length / 2 | 0) - 1 | 0;
    while (true) {
        $i = ($l + $u | 0) / 2 | 0;
        $e = var$3[$i * 2 | 0];
        var$8 = $rt_compare($e, $key);
        if (!var$8)
            break;
        if (var$8 <= 0) {
            $l = $i + 1 | 0;
            if ($l > $u)
                return $i;
        } else {
            $u = $i - 1 | 0;
            if ($u < $l)
                return $u;
        }
    }
    return $i;
},
jl_Character_digit = ($ch, $radix) => {
    jl_Character_$callClinit();
    return jl_Character_digit0($ch, $radix);
},
jl_Character_digit0 = ($codePoint, $radix) => {
    let $d;
    jl_Character_$callClinit();
    if ($radix >= 2 && $radix <= 36) {
        $d = jl_Character_getNumericValue($codePoint);
        if ($d >= $radix)
            $d = (-1);
        return $d;
    }
    return (-1);
},
jl_Character_getNumericValue = $codePoint => {
    let $digitMapping, var$3, $l, $u, $idx, var$7, $val, var$9;
    jl_Character_$callClinit();
    $digitMapping = jl_Character_getDigitMapping();
    var$3 = $digitMapping.data;
    $l = 0;
    $u = (var$3.length / 2 | 0) - 1 | 0;
    while ($u >= $l) {
        $idx = ($l + $u | 0) / 2 | 0;
        var$7 = $idx * 2 | 0;
        $val = var$3[var$7];
        var$9 = $rt_compare($codePoint, $val);
        if (var$9 > 0)
            $l = $idx + 1 | 0;
        else {
            if (var$9 >= 0)
                return var$3[var$7 + 1 | 0];
            $u = $idx - 1 | 0;
        }
    }
    return (-1);
},
jl_Character_forDigit = ($digit, $radix) => {
    jl_Character_$callClinit();
    if ($radix >= 2 && $radix <= 36 && $digit >= 0 && $digit < $radix)
        return $digit < 10 ? (48 + $digit | 0) & 65535 : ((97 + $digit | 0) - 10 | 0) & 65535;
    return 0;
},
jl_Character_isDigit = $codePoint => {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 9 ? 0 : 1;
},
jl_Character_getDigitMapping = () => {
    jl_Character_$callClinit();
    if (jl_Character_digitMapping === null)
        jl_Character_digitMapping = otciu_UnicodeHelper_decodeIntPairsDiff(((jl_Character_obtainDigitMapping()).value !== null ? $rt_str((jl_Character_obtainDigitMapping()).value) : null));
    return jl_Character_digitMapping;
},
jl_Character_obtainDigitMapping = () => {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$3 === null)
        jl_Character_$$metadata$$3 = jl_Character_obtainDigitMapping$$create();
    return jl_Character_$$metadata$$3;
},
jl_Character_getClasses = () => {
    jl_Character_$callClinit();
    if (jl_Character_classMapping === null)
        jl_Character_classMapping = otciu_UnicodeHelper_extractRle(((jl_Character_obtainClasses()).value !== null ? $rt_str((jl_Character_obtainClasses()).value) : null));
    return jl_Character_classMapping;
},
jl_Character_obtainClasses = () => {
    jl_Character_$callClinit();
    if (jl_Character_$$metadata$$4 === null)
        jl_Character_$$metadata$$4 = jl_Character_obtainClasses$$create();
    return jl_Character_$$metadata$$4;
},
jl_Character_toChars = $codePoint => {
    let var$2, var$3;
    jl_Character_$callClinit();
    if (!jl_Character_isValidCodePoint($codePoint))
        $rt_throw(jl_IllegalArgumentException__init_0());
    if ($codePoint < 65536) {
        var$2 = $rt_createCharArray(1);
        var$2.data[0] = $codePoint & 65535;
        return var$2;
    }
    var$2 = $rt_createCharArray(2);
    var$3 = var$2.data;
    var$3[0] = jl_Character_highSurrogate($codePoint);
    var$3[1] = jl_Character_lowSurrogate($codePoint);
    return var$2;
},
jl_Character_isISOControl = $codePoint => {
    let var$2;
    jl_Character_$callClinit();
    a: {
        b: {
            if (!($codePoint >= 0 && $codePoint <= 31)) {
                if ($codePoint < 127)
                    break b;
                if ($codePoint > 159)
                    break b;
            }
            var$2 = 1;
            break a;
        }
        var$2 = 0;
    }
    return var$2;
},
jl_Character_getType0 = $c => {
    jl_Character_$callClinit();
    return jl_Character_getType($c);
};
let jl_Character_getType = $codePoint => {
    let $classes, var$3, $l, $u, $i, $range;
    jl_Character_$callClinit();
    if (jl_Character_isBmpCodePoint($codePoint) && jl_Character_isSurrogate($codePoint & 65535))
        return 19;
    $classes = jl_Character_getClasses();
    var$3 = $classes.data;
    $l = 0;
    $u = var$3.length - 1 | 0;
    while ($l <= $u) {
        $i = ($l + $u | 0) / 2 | 0;
        $range = var$3[$i];
        if ($codePoint >= $range.$end5)
            $l = $i + 1 | 0;
        else {
            if ($codePoint >= $range.$start4)
                return $range.$data12.data[$codePoint - $range.$start4 | 0];
            $u = $i - 1 | 0;
        }
    }
    return 0;
},
jl_Character_isLowerCase = $codePoint => {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 2 ? 0 : 1;
},
jl_Character_isUpperCase = $codePoint => {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 1 ? 0 : 1;
},
jl_Character_isTitleCase = $codePoint => {
    jl_Character_$callClinit();
    return jl_Character_getType($codePoint) != 3 ? 0 : 1;
},
jl_Character_isDefined = $codePoint => {
    jl_Character_$callClinit();
    return !jl_Character_getType($codePoint) ? 0 : 1;
},
jl_Character_isLetter = $codePoint => {
    jl_Character_$callClinit();
    switch (jl_Character_getType($codePoint)) {
        case 1:
        case 2:
        case 3:
        case 4:
        case 5:
            break;
        default:
            return 0;
    }
    return 1;
},
jl_Character_isLetterOrDigit0 = $ch => {
    jl_Character_$callClinit();
    return jl_Character_isLetterOrDigit($ch);
},
jl_Character_isLetterOrDigit = $codePoint => {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 9:
                break;
            case 6:
            case 7:
            case 8:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return 0;
},
jl_Character_isJavaIdentifierStart = $codePoint => {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 10:
            case 23:
            case 26:
                break;
            case 6:
            case 7:
            case 8:
            case 9:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 24:
            case 25:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
},
jl_Character_isJavaIdentifierPart = $codePoint => {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 8:
            case 9:
            case 10:
            case 23:
            case 26:
                break;
            case 7:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
            case 24:
            case 25:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
},
jl_Character_isUnicodeIdentifierStart = $codePoint => {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 10:
                break;
            case 6:
            case 7:
            case 8:
            case 9:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
},
jl_Character_isUnicodeIdentifierPart = $codePoint => {
    jl_Character_$callClinit();
    a: {
        switch (jl_Character_getType($codePoint)) {
            case 1:
            case 2:
            case 3:
            case 4:
            case 5:
            case 6:
            case 8:
            case 9:
            case 10:
            case 23:
                break;
            case 7:
            case 11:
            case 12:
            case 13:
            case 14:
            case 15:
            case 16:
            case 17:
            case 18:
            case 19:
            case 20:
            case 21:
            case 22:
                break a;
            default:
                break a;
        }
        return 1;
    }
    return jl_Character_isIdentifierIgnorable($codePoint);
},
jl_Character_isIdentifierIgnorable = $codePoint => {
    jl_Character_$callClinit();
    a: {
        if (!($codePoint >= 0 && $codePoint <= 8) && !($codePoint >= 14 && $codePoint <= 27)) {
            if ($codePoint < 127)
                break a;
            if ($codePoint > 159)
                break a;
        }
        return 1;
    }
    return jl_Character_getType($codePoint) != 16 ? 0 : 1;
},
jl_Character_isSpaceChar = $codePoint => {
    jl_Character_$callClinit();
    switch (jl_Character_getType($codePoint)) {
        case 12:
        case 13:
        case 14:
            break;
        default:
            return 0;
    }
    return 1;
},
jl_Character_isWhitespace0 = $ch => {
    jl_Character_$callClinit();
    return jl_Character_isWhitespace($ch);
},
jl_Character_isWhitespace = $codePoint => {
    jl_Character_$callClinit();
    switch ($codePoint) {
        case 9:
        case 10:
        case 11:
        case 12:
        case 13:
        case 28:
        case 29:
        case 30:
        case 31:
            break;
        case 160:
        case 8199:
        case 8239:
            return 0;
        default:
            return jl_Character_isSpaceChar($codePoint);
    }
    return 1;
},
jl_Character__clinit_ = () => {
    jl_Character_TYPE = $rt_cls($rt_charcls);
    jl_Character_characterCache = $rt_createArray(jl_Character, 128);
},
jl_Character_acquireLowerCaseMapping$$create = () => {
    return {"value" : "TW  H#F#U 4%F#O #F#/ d%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a1# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #<+#%# #%# #%# \'.3#%# #%# #{1#%# #w1%%# %J\'#k1#o1#%# #w1#!3# #23#*3#%# \'23#:3# #>3#%# #%# #%# #N3#%# #N3# %%# #N3#%# #J3%%# #%# #R3#%# \'%# /)#%# #)#%# #)#%# #%# #%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%# #%# %)#%# #%# #8)#L%#%# #%# #%# #"
    + "%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #a+# #%# #%# #%# #%# #%# #%# #%# #%# #%# /B45#%# #,/#645# %%# #P1#!\'#*\'#%# #%# #%# #%# #%# <-%# #%# \'%# 1&++ %_## #Z#)k%%g%% #F#W hA# 1%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# +]%# %%# #?#%# %a+\'N\'AF#b &#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #^#%# #%# #%# #%# #%# #%# #%# %%# #%# #%# #%# #%# #%# #%# #%"
    + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# %*%r iB#oq-&# _?gejg#A1 a$#%# -mo%&# {-%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3,4/# #%# #%"
    + "# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 3C1 1C1 1C1 1C1 1C1 3C/ 1C1 QC1 1C1 1C1 1C%8\'%G# 7i\')G# 7C%D)\' 7C%u)%?# 7X+%P+%G# L-q*/# \'Pw/#8m/# -6## |bA G%# kC.#U !r*%&# &#%# #,05#qX\'#H.5# %%# #%# #%# #e25#D05#q25#m25# #%# %%# 1865%%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# "
    + "#%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 1%# #%# )%# (a=%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# G%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# y%%# #%# #%# #%# #%# #%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #%# 5%# #%# #4Fd#%# #%# #%# #%# #%# )%# #<{p# %%# #%# \'%# #%# #%# #%# #%# #%# #%# #%# #%# #%# #P}p#}}p#m}p#D}p#P}p# #@yp#D{p#Lyp#Br#%# #%# #%"
    + "# #%# #%# #%# #%# #%# #,%#L}p#LJd#%# #%# #$$r#%# \'%# +%# #%# #%# #P6rM \'%# ,T5F#U TUg#r {%g#r >\'c#p Lnk%F# .\'F#S HB#F#b o@5F#b Jo=N#f "};
},
jl_Character_acquireUpperCaseMapping$$create = () => {
    return {"value" : "NY  ,%H#U :#>b# vH#O #H#/:+# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #,5# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'#(;#N1# %\'# #\'# %\'# \'\'# +\'# %6)# \'\'#*/#N6r# %_+# %\'# #\'# #\'# %\'# )\'# %\'# \'\'# #\'# %\'# \'\'# #J%# +\'#+# #\'#+# #\'#+# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#L\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'#+# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#"
    + " #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# %665% #\'# )\'# #\'# #\'# #\'# #\'#o25#c25#k25#03#}1# #y1% #m1# #q1#{}p# \'y1#k}p# #$3#!$r#:{p#N}p# #,3#43#N}p#*05#B}p# %43# #B05#<3# %@3# /F.5# %P3# #J}p#P3# \'B{p#P3#$\'#L3%,\'# +T3# 5Jyp#>yp# Z\'_\'# x\'# #\'# \'\'\' #_+\' !#a##]#\' #H#CD##H#3m%#i%% #e%#P%# \'(%#D%#C# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#i\'#P\'#=#(+# #4)# %\'# %\'# .#H#bP\'A #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 3\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'"
    + "# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# %\'# #\'# #\'# #\'# #\'# #\'# #\'#`# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'% &#,%n mB#ko%x %ko%\' RAC1 >$#yu+#uu+#Pu+#Hu+%Lu+#0u+#io+#>@d# #\'- (+2Fd# \'oX\'# AJJd# N%\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'#"
g\')B)%V+%s)%N+)A1 1A1 1A1 1A% #E# 5<m-# )E# 9A% =A% \'=# ;E# R/8## ddA )\'# @E0#U Nr,%&# #\'# \'D45#845# #\'#"
    + " #\'# #\'# -\'# %\'# 5\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 1\'# #\'# )\'- /qq-&# i]=\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# G\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# y%\'# #\'# #\'# #\'# #\'# #\'# #\'# \'\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #"
    + "\'# #\'# #\'# #\'# #\'# #\'# #\'# 5\'# #\'# %\'# #\'# #\'# #\'# #\'# )\'# )\'# #\'#*%# %\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# 7\'# #\'# #\'# #\'# #\'# #\'# #\'# #\'# )\'# #\'# %\'\' #\'% )\'# #\'# #\'# U\'# cEDr# Yiejg# e*5H#U eUi#r {%i#r <\'e#t {nm%:# V%H#^ >B#H#b o@5H#b No=P#f "};
},
jl_Character_obtainDigitMapping$$create = () => {
    return {"value" : "kE*% %%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%_H#T#%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%{CG%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%6)G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%!i#G"
    + "%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%*;G%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%:/G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%{/G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%R@dG%%%%%%%%%%%%%%%%%%R[G%%%%%%%%%%%%%%%%%%c#G%%%%%%%%%%%%%%%%%%_1G%%%%%%%%%%%%%%%%%%!#G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%cCG%%%%%%%%%%%%%%%%%%o*IG%%%%%%%%%%%%%%%%%%A%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%=,#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%c:#T#%%%%%%%%%%%%%%%%%%w&%G%%%%%"
    + "%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%_fG%%%%%%%%%%%%%%%%%%Z+G%%%%%%%%%%%%%%%%%%_%G%%%%%%%%%%%%%%%%%%>-G%%%%%%%%%%%%%%%%%%.9G%%%%%%%%%%%%%%%%%%w=G%%%%%%%%%%%%%%%%%%2+G%%%%%%%%%%%%%%%%%%>AG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%=G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%B\'G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%N)G%%%%%%%%%%%%%%%%%%oYG%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%g5G%%%%%%%%%%%%%%%%%%*\'G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%ow?G%%%%%%%%%%%%%%%%%%s4%G%%%%%%%%%%%%%%%%%%k\'G%%%%%%%%%%%%%%%%%%s+G%%%%%%%%%%%%%%"
    + "%%%%:OG%%%%%%%%%%%%%%%%%%V*OG%%%%%%%%%%%%%%%%%%VZ%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%%G%%%%%%%%%%%%%%%%%%!8%G%%%%%%%%%%%%%%%%%%FEG%%%%%%%%%%%%%%%%%%sKG%%%%%%%%%%%%%%%%%%k5G%%%%%%%%%%%%%%%%%%.lG%%%%%%%%%%%%%%%%%%wN)G%%%%%%%%%%%%%%%%%%"};
},
jl_Character_obtainClasses$$create = () => {
    return {"value" : "PA-Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:PB-9[%=9<=&>:1=<=:L#<#Y#<,&?L$9B8:B(C9:C)!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!C$B##!#B##B$C#B%#B##B$C$B##B##!#!#B##!C#!#B##B$#!#B#C#&!C$F%!$#!$#!$#!#!#!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!C#!$#!#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C(B##B#C#!#B%#!#!#!#!Cg&C<E3]%E-]/E&](%<%]2b\'Q! !#!#%<!#A#%C$9!A%]#!9B$ ! B##B2 B*CD!C#B$C$!#!#!#!#!#!#!#!#!#!#!#!C&!#:!#B#C#BTCQ!#!#!#!#"
    + "!#!#!#!#!#!#!#!#!#!#!#!#!#=G&H#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#B##!#!#!#!#!#!C#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!# BGA#%Y\'CJ95A#^#; GN5\'9G#9G#9\'A)F<A%F%Y#A,Q\'Z$Y#;Y#^#G,91Y$FA%F+G6J+Y%F#\'b&D! 9&G(1=G\'E#G#=G%F#J+F$^#&Y/ 1&\'F?G<A#b&:! G,&A/J+FBG*E#=Y$%A#\'[#F7G%%G*%G$%G&A#Y0 F:G$A#9 F,A&F9<F\' Q#A&G*FJ%G91GA)FW\')\'&I$G)I%\'I#&G(F+G#Y#J+9%F0\'I# F)A#F#A#F7 F( &A$F%A#\'&I$G%A#I#A#I#\'&A))A%F# F$G#A#J+F#[#L\'=;&9\'A#G#) F\'A%F#A#F7 F( F# F#"

    + "L+=\'=\'=\'6767I#F) FEA%G/)G&9G#F&G, GE ^)\'^\' ^#Y&^%Y#AFFLI#G%)G\')G#I#G#&J+Y\'F\'I#G#F%G$&I$F#I(F$G%F.\'I#G#I\'\'&)J+I$\'^#BG !A&!A#CL9%C$b&*&  F%A#F( & F%A#FJ F%A#FB F%A#F( & F%A#F0 FZ F%A#FeA#G$Y*L5A$F1^+A\'b!7! A#C\'A#5b&M* =9F2-F;67A$FmY$K$F)A(F3G$)A*F4G#)Y#A*F3G#A-F. F$ G#A-FUG#)G(I)\'I#G,Y$%Y$;&\'A#J+A\'L+A\'Y\'5Y%G$1\'J+A\'FD%FVA(F&G#FC\'&A&FhA+F@ G$I%G#I$A%I#\'I\'G$A%=A$Y#J+F?A#F&A,FMA%F;A\'J+,A$^CF8G#I#\'A#Y#FV)\')G( \')\'I#G)I\'G+A#\'J+A\'J+A\'Y(%Y\'A#G/(G1ARG%)FP\')G&)\'I&\'I#F) Y#J+Y(^+G*^*Y$G#)F?)G%I#G#)G$F#J+FM\')G#I$\')G$I#A)Y%"
    + "FEI)G)I#G#A$Y&J+A$F$J+F?E\'Y#C*!#A&BLA#B$Y)A)G$9G.)G(F%\'F\'\'F#)G#&A&CMEaC.%CCEFGb!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C*B)C\'A#B\'A#C)B)C)B)C\'A#B\'A#C) ! ! ! !C)B)C/A#C)D)C)D)C)D)C& C#B%$<#]$C$ C#B%$]$C%A#C#B% ]$C)B&]$A#C$ C#B%$]# M,Q&U\'Y#>?6_#?6>Y)./Q&-Y*>?Y%X#Y$:67Y,:98Y+-Q& Q+,%A#L\'Z$67%L+Z$67 E.A$[BA0"
    + "G.H%\'H$G-A0^#!^%!^##B$C#B$#=!^#:B&^\'!=!=!=B%=#B%#F%#^#C#B#Z&!C%=:^##=L1KD!#K%,^#A%Z&^&Z#^%:^#:^#:^(:^@Z#^#:=:^@b:-% ^)6767^5Z#^(67b=2! :^?Z:^IZ\'^jA7^,A6L^^pL7b=X# :^*:^WZ)b=P! :b=Y$ 67676767676767L?^MZ&67Z@6767676767Z1b= % b:$# 6767676767676767676767Za6767ZA67b:#% ^QZ6^#Z\'^HA#^A b=J! BQCQ!#B$C#!#!#!#B%#!C#!C\'E#B$#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!C#^\'!#!#G$!#A&Y%,Y#CG #A&#A#FYA(%9A/\'F8A*F( F( F( F( F( F( F( F( GAY#>?>?Y$>?9>?Y*5Y#59>?Y#>?6767676"
    + "7Y&%Y+U#Y%596Y.^#Y$676767675AC^; b=:! A-b=7$ A;^1-Y$=%&+6767676767^#6767676756W#=K*G%I#5E&^#K$%&9^# b&7! A#G#]#E#&5b&;! 9E$&A&FL b&?!  ^#L%^+FA^GA*=F1^@ L+^?L)=L0^AL+^HL0b= & &b `G!&^b&b   %b `(!F7%b&X2 A$^XA*FIE\'Y#b&-% %Y$F1J+F#A5!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#&\'H$9G+9%!#!#!#!#!#!#!#!#!#!#!#!#!#!#E#G#FhK+G#Y\'A)]8E*]#!#!#!#!#!#!#!C$!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#!#%C)!#!#B##!#!#!#!#%]#!#!#&!#!C$!#!#!#!#!#!#!#!#!#!#B&#B&#!#!#!#!#!#!#!#B%#!#B##A#!# # #!#!#!#!A6E$!#&"
    + "E##F(\'F$\'F%\'F8I#G#)^%\'A$L\'^#;=A\'FUY%A)I#FSI1G#A)Y#J+A\'G3F\'Y$&9F#\'J+F=G)Y#F8G,I#A,9F>A$G$)FP\'I#G%I#G#I$Y. %J+A%Y#F&\'%F*J+F& FJG\'I#G#I#G#A*F$\'F)\')A#J+A#Y%F1%F\'^$&)\')FS\'&G$F#G#F&G#&\'&A9F#%Y#F,)G#I#Y#&E#)\'A+F\'A#F\'A#F\'A*F( F( CL<E%C*%]#A%b#1! FDI#\'I#\'I#9)\'A#J+A\'&b CO#&A-F8A%FRA%4b `. T#b `! T#b `0 43b `D!3b&O& A#b&K! AGC(A-C&A&&\'F+:F. F& & F# F# b&M! ]2A1b&L& 76^1FbA#FWA(=AAF-;^$G1Y(679A\'G19U#X#6767676767676767Y#67Y%X$Y$ Y%5676767Y$:5Z$ 9;Y#A%F& b&(# A#1 Y$;Y$679:95Y#J+Y#Z$Y#B;697<8<C;6:7:67967Y#F+%FNE#F@A$F\'A#F"
    + "\'A#F\'A#F$A$[#:<=[# =Z%^#A+Q$^#A#F- F; F4 F# F0A#F/ACb&]! A&Y$A%LNA$^*KVL%^2L#^$ ^.A$=AP^N\'b ## F>A$FRA0\'L<A%FAL%A*F5+F)+A&FGG&A&F? 9FEA%F)9K&AKBICIFpA#J+A\'BEA%CEA%FIA)FUA,9B, B0 B( B# C, C0 C( C#A$FUA-b&X% A*F7A+F)A9E\' EK E*AgF\'A#& FM F#A$&A#F8 9L)F8^#L(F@A)L*AQF4 F#A&L&F7L\'A$9F;A&9AbFYA%L#F#L1A#LO&G$ G#A&G%F% F$ F>A#G$A%\'L*A(Y*A(F>L#9F>L$AAF)=F=G#A%L&Y(A*FWA$Y(F7A#L)F4A&L)F3A(Y%A-L(b 1! FkAXBTA.CTA(L\'FEG%A)J+A\'J+F%%&B7A$G&5%C7A)Z#b 1$ L@ FK G#5A#F#A1F$AXG%F>L+&A)F7G,L%Y&A7F3G%Y%AGF6L(A5F8A*)\')FVG0Y(A%L5J+\'"
    + "F#G#&A*G$)FNI$G%I#G#Y#1Y%\'A+1A#F:A(J+A\'G$FEG&)G) J+Y%&I#&A)FD\'Y#&A*G#)FQI$G*I#F%Y%G%9)\'J+&9&Y$ L5A,F3 F:I$G$I#\')G#Y\'\'F#\'A`F( & F% F0 F+9A\'FP\'I$G)A&J+A\'G#I# F)A#F#A#F7 F( F# F& G#&I#\'I%A#I#A#I$A#&A\')A&F&I#A#G(A$G&A,F+ &A#& FG &I$G\' )A#) I% I#\')\'&\'&Y# Y#A)G#A>FVI$G)I#G$)\'F%Y&J+Y# 9\'F$A?FQI$G\')\'I%G#)G#F#9&A)J+b G# FPI$G%A#I%G#)G#Y8F%G#ACFQI$G)I#\')G#Y$&A,J+A\'Y.A4FL\')\'I#G\')\'&9A\'J+A\'J5A=F<A#\')\'I#G%)G&A%J+L#Y$=F(b Z# FMI$G*)G#9b E! BACAJ+L*A-F)A#&A#F) F# F9I\' I#A#G#)\'&)&)\'Y$A*J+AhF)A#FHI$G%A#G#I%\'&9&)A<&G+FIG\')&G%"
    + "Y)\'A)&G\'I#G$FOG.)G#Y$&Y&A.FkA(Y+b W# FB9A/J+A\'F* FF)G( G\')\'&Y&A+J+L4A$Y#F?A#G7 )G()G#)G#AkF( F# FGG\'A$\' G# G(&\'A)J+A\'F\' F# FAI& G# I#\')\'&A(J+b W% F4G#I#Y#A(G#&)F. FCI#G&A$I#\')\'Y.J+\'b 6! &A0L6^)[%^2A.9b&;/ b G! b+P!  Y&A,b&%$ b -J b&B! Y#A.b&Q1 Q1\'F\'G0A+b&<` A&b&(* b ZK!F?G-I$G$J+b \'< b&Z) A(F@ J+A%Y#Fq J+A\'F?A#G&9A+FQG(Y&^%E%9=A+J+ L( F6A&F4b Q\' E$FIE#Y$J+b \'$ BACAL8Y%b F! FmA%\'&IXA(G%E.AbE#9%\'A,I#A/&b W@!&A)b&74 AJF#A(&b H,#E% E( E# b&D% A0&A>F$A#&A/F%A)b&-\' b %E b&L! A&F.A$F*A(F+A#=G#9Q%b =_ b=Q$ J+A\'b=U\'"
    + " AnGOA#G8A*b=U! A^b=W$ A+^HA#^^I#G$^$I\'Q)G)^#G(^?G%^_A6^dG$=b [! L5A-L5A-b=8! A*L:b (# B;C;B;C( C3B;C;! B#A#!A#B#A#B% B)C% # C( C,B;C;B# B%A#B) B( C;B# B% B& !A$B( C;B;C;B;C;B;C;B;C;B;C;B;C=A#B::C::C\'B::C::C\'B::C::C\'B::C::C\'B::C::C\'!#A#JSb= ) GX^%GS^)\'^/\'^#Y&A0G& G0b 12 C+&C5A\'C\'b 6$ G( G2A#G( G# G&A&E`AB\'b Q! FNA$G(E(A#J+A%&=b  & F?\'A2FMG%J+A&;b 1( F<%G%J+b 7$ F?G#&J+A%9b A( F( F% F# F0 b&&$ A#L*G(AJBCCCG(%A%J+A%Y#b 2- L]=L$;L%AnLN=L0b #$ F% F< F# &A#& F+ F% & &A\'&A%& & & F$ F# &A#& & & & & F# &A#F% F( F% "
    + "F% & F+ F2A&F$ F& F2AUZ#b /% ^MA%b=E! A-^0A#^0 ^0 ^FA+L.b=B# AY^>A.^MA%^*A(^#A/^\'b ;# b=]$ ]&b=9, A%^2A$^.A$b=X! A%b=@! A\'^-A%=A0^-A%^YA)^+A\'^IA)^?A#^-A%^#A`b=5& A-^/A#^.A$^+A&^YA(^0A#^,A\'^*A(b=4#  b==! J+b \'1 &b   %b   %b ?<#&AA&b Y !&A\'&b =$ &A#&b  ;!&A/&b PU!&A0&b M* &b CG b&?) b C8 &b *.!&A&&b ?!!&b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   %b   "
    + "%b   %b 2R!1A?b1A! b  # b\'Q$ b   %b   %b   %b 1Y$3b   %b   %b   %b ^a$3A#3b   %b   %b   %b ^a$3"};
};
function jur_CICharSet() {
    let a = this; jur_LeafSet.call(a);
    a.$ch3 = 0;
    a.$supplement = 0;
}
let jur_CICharSet__init_ = ($this, $ch) => {
    jur_LeafSet__init_($this);
    $this.$ch3 = $ch;
    $this.$supplement = jur_Pattern_getSupplement($ch);
},
jur_CICharSet__init_0 = var_0 => {
    let var_1 = new jur_CICharSet();
    jur_CICharSet__init_(var_1, var_0);
    return var_1;
},
jur_CICharSet_accepts = ($this, $strIndex, $testString) => {
    return $this.$ch3 != $testString.$charAt($strIndex) && $this.$supplement != $testString.$charAt($strIndex) ? (-1) : 1;
},
jur_CICharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$ch3;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(592)), var$1);
    return jl_StringBuilder_toString(var$2);
};
function jur_SupplCharSet() {
    let a = this; jur_LeafSet.call(a);
    a.$high0 = 0;
    a.$low0 = 0;
    a.$ch1 = 0;
}
let jur_SupplCharSet__init_ = ($this, $ch) => {
    let $chUTF16, var$3;
    jur_LeafSet__init_($this);
    $this.$charCount0 = 2;
    $this.$ch1 = $ch;
    $chUTF16 = jl_Character_toChars($ch);
    var$3 = $chUTF16.data;
    $this.$high0 = var$3[0];
    $this.$low0 = var$3[1];
},
jur_SupplCharSet__init_0 = var_0 => {
    let var_1 = new jur_SupplCharSet();
    jur_SupplCharSet__init_(var_1, var_0);
    return var_1;
},
jur_SupplCharSet_accepts = ($this, $strIndex, $testString) => {
    let var$3, $high, $low;
    var$3 = $strIndex + 1 | 0;
    $high = $testString.$charAt($strIndex);
    $low = $testString.$charAt(var$3);
    return $this.$high0 == $high && $this.$low0 == $low ? 2 : (-1);
},
jur_SupplCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$6, $ch;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while ($strIndex < $strLength) {
        var$6 = $testStr.$indexOf0($this.$high0, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex >= $strLength)
            continue;
        $ch = $testStr.$charAt($strIndex);
        if ($this.$low0 == $ch && $this.$next1.$matches($strIndex + 1 | 0, $testString, $matchResult) >= 0)
            return $strIndex + (-1) | 0;
        $strIndex = $strIndex + 1 | 0;
    }
    return (-1);
},
jur_SupplCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $testStr, var$6, var$7;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$6 = $testStr.$lastIndexOf1($this.$low0, $lastIndex);
            var$7 = var$6 + (-1) | 0;
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            if ($this.$high0 == $testStr.$charAt(var$7) && $this.$next1.$matches(var$7 + 2 | 0, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
},
jur_SupplCharSet_getName = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$high0;
    var$2 = $this.$low0;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append1(var$3, var$1), var$2);
    return jl_StringBuilder_toString(var$3);
},
jur_SupplCharSet_getCodePoint = $this => {
    return $this.$ch1;
},
jur_SupplCharSet_first = ($this, $set) => {
    if ($set instanceof jur_SupplCharSet)
        return $set.$getCodePoint() != $this.$ch1 ? 0 : 1;
    if ($set instanceof jur_SupplRangeSet)
        return $set.$contains($this.$ch1);
    if ($set instanceof jur_CharSet)
        return 0;
    if (!($set instanceof jur_RangeSet))
        return 1;
    return 0;
};
function cgxgbtf_FileDB$1() {
    let a = this; ji_OutputStream.call(a);
    a.$val$buffer = null;
    a.$val$file = null;
    a.$val$append = 0;
    a.$val$bufferSize = 0;
    a.$this$019 = null;
}
let cgxgbtf_FileDB$1__init_ = ($this, $this$0, var$2, var$3, var$4, var$5) => {
    $this.$this$019 = $this$0;
    $this.$val$buffer = var$2;
    $this.$val$file = var$3;
    $this.$val$append = var$4;
    $this.$val$bufferSize = var$5;
    ji_OutputStream__init_($this);
},
cgxgbtf_FileDB$1__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cgxgbtf_FileDB$1();
    cgxgbtf_FileDB$1__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cgxgbtf_FileDB$1_write = ($this, $b) => {
    $this.$val$buffer.$write1($b);
},
cgxgbtf_FileDB$1_close = $this => {
    let $data, var$2;
    $data = $this.$val$buffer.$toByteArray0();
    var$2 = $data.data;
    $this.$this$019.$writeInternal($this.$val$file, $data, $this.$val$append, jl_Math_max(var$2.length, $this.$val$bufferSize));
};
function cbgggm_NodeAnimation() {
    let a = this; jl_Object.call(a);
    a.$node2 = null;
    a.$translation = null;
    a.$rotation = null;
    a.$scaling = null;
}
let cbgggm_NodeAnimation__init_ = $this => {
    jl_Object__init_($this);
    $this.$translation = null;
    $this.$rotation = null;
    $this.$scaling = null;
},
cbgggm_NodeAnimation__init_0 = () => {
    let var_0 = new cbgggm_NodeAnimation();
    cbgggm_NodeAnimation__init_(var_0);
    return var_0;
};
function cbgu_IntMap() {
    let a = this; jl_Object.call(a);
    a.$size7 = 0;
    a.$keyTable0 = null;
    a.$valueTable0 = null;
    a.$zeroValue = null;
    a.$hasZeroValue = 0;
    a.$loadFactor1 = 0.0;
    a.$threshold0 = 0;
    a.$shift0 = 0;
    a.$mask3 = 0;
}
let cbgu_IntMap__init_0 = ($this, $initialCapacity) => {
    cbgu_IntMap__init_($this, $initialCapacity, 0.800000011920929);
},
cbgu_IntMap__init_1 = var_0 => {
    let var_1 = new cbgu_IntMap();
    cbgu_IntMap__init_0(var_1, var_0);
    return var_1;
},
cbgu_IntMap__init_ = ($this, $initialCapacity, $loadFactor) => {
    let $tableSize;
    jl_Object__init_($this);
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor1 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold0 = $tableSize * $loadFactor | 0;
        $this.$mask3 = $tableSize - 1 | 0;
        $this.$shift0 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask3));
        $this.$keyTable0 = $rt_createIntArray($tableSize);
        $this.$valueTable0 = $rt_createArray(jl_Object, $tableSize);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(374))).$append20($loadFactor)).$toString()));
},
cbgu_IntMap__init_2 = (var_0, var_1) => {
    let var_2 = new cbgu_IntMap();
    cbgu_IntMap__init_(var_2, var_0, var_1);
    return var_2;
},
cbgu_IntMap_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item), Long_create(2135587861, 2654435769)), $this.$shift0));
},
cbgu_IntMap_locateKey = ($this, $key) => {
    let $keyTable, $i, $other;
    $keyTable = $this.$keyTable0;
    $i = $this.$place($key);
    while (true) {
        $other = $keyTable.data[$i];
        if (!$other)
            return  -($i + 1 | 0) | 0;
        if ($other == $key)
            break;
        $i = ($i + 1 | 0) & $this.$mask3;
    }
    return $i;
},
cbgu_IntMap_put = ($this, $key, $value) => {
    let $oldValue, $i, var$5;
    if (!$key) {
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = $value;
        if (!$this.$hasZeroValue) {
            $this.$hasZeroValue = 1;
            $this.$size7 = $this.$size7 + 1 | 0;
        }
        return $oldValue;
    }
    $i = cbgu_IntMap_locateKey($this, $key);
    if ($i >= 0) {
        $oldValue = $this.$valueTable0.data[$i];
        $this.$valueTable0.data[$i] = $value;
        return $oldValue;
    }
    var$5 =  -($i + 1 | 0) | 0;
    $this.$keyTable0.data[var$5] = $key;
    $this.$valueTable0.data[var$5] = $value;
    var$5 = $this.$size7 + 1 | 0;
    $this.$size7 = var$5;
    if (var$5 >= $this.$threshold0)
        cbgu_IntMap_resize($this, $this.$keyTable0.data.length << 1);
    return null;
},
cbgu_IntMap_putResize = ($this, $key, $value) => {
    let $keyTable, $i, var$5;
    $keyTable = $this.$keyTable0;
    $i = $this.$place($key);
    while (true) {
        var$5 = $keyTable.data;
        if (!var$5[$i])
            break;
        $i = ($i + 1 | 0) & $this.$mask3;
    }
    var$5[$i] = $key;
    $this.$valueTable0.data[$i] = $value;
},
cbgu_IntMap_get = ($this, $key) => {
    let $i;
    if (!$key)
        return !$this.$hasZeroValue ? null : $this.$zeroValue;
    $i = cbgu_IntMap_locateKey($this, $key);
    return $i < 0 ? null : $this.$valueTable0.data[$i];
},
cbgu_IntMap_remove = ($this, $key) => {
    let $oldValue, $i, $keyTable, $valueTable, var$6, $mask, $next, var$9, var$10, $placement;
    if (!$key) {
        if (!$this.$hasZeroValue)
            return null;
        $this.$hasZeroValue = 0;
        $oldValue = $this.$zeroValue;
        $this.$zeroValue = null;
        $this.$size7 = $this.$size7 - 1 | 0;
        return $oldValue;
    }
    $i = cbgu_IntMap_locateKey($this, $key);
    if ($i < 0)
        return null;
    $keyTable = $this.$keyTable0;
    $valueTable = $this.$valueTable0;
    var$6 = $valueTable.data;
    $oldValue = var$6[$i];
    $mask = $this.$mask3;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$9 = $keyTable.data;
        var$10 = var$9[$next];
        if (!var$10)
            break;
        $placement = $this.$place(var$10);
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$9[$i] = var$10;
            var$6[$i] = var$6[$next];
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$9[$i] = 0;
    var$6[$i] = null;
    $this.$size7 = $this.$size7 - 1 | 0;
    return $oldValue;
},
cbgu_IntMap_containsValue = ($this, $value, $identity) => {
    let $valueTable, var$4, $keyTable, $i;
    a: {
        $valueTable = $this.$valueTable0;
        if ($value === null) {
            if ($this.$hasZeroValue && $this.$zeroValue === null)
                return 1;
            var$4 = $valueTable.data;
            $keyTable = $this.$keyTable0;
            $i = var$4.length - 1 | 0;
            while (true) {
                if ($i < 0)
                    break a;
                if ($keyTable.data[$i] && var$4[$i] === null)
                    break;
                $i = $i + (-1) | 0;
            }
            return 1;
        }
        if ($identity) {
            if ($value === $this.$zeroValue)
                return 1;
            var$4 = $valueTable.data;
            $i = var$4.length - 1 | 0;
            while (true) {
                if ($i < 0)
                    break a;
                if (var$4[$i] === $value)
                    break;
                $i = $i + (-1) | 0;
            }
            return 1;
        }
        if ($this.$hasZeroValue && $value.$equals($this.$zeroValue))
            return 1;
        var$4 = $valueTable.data;
        $i = var$4.length - 1 | 0;
        while (true) {
            if ($i < 0)
                break a;
            if ($value.$equals(var$4[$i]))
                return 1;
            $i = $i + (-1) | 0;
        }
    }
    return 0;
},
cbgu_IntMap_resize = ($this, $newSize) => {
    let $oldCapacity, $oldKeyTable, $oldValueTable, $i, $key;
    a: {
        $oldCapacity = $this.$keyTable0.data.length;
        $this.$threshold0 = $newSize * $this.$loadFactor1 | 0;
        $this.$mask3 = $newSize - 1 | 0;
        $this.$shift0 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask3));
        $oldKeyTable = $this.$keyTable0;
        $oldValueTable = $this.$valueTable0;
        $this.$keyTable0 = $rt_createIntArray($newSize);
        $this.$valueTable0 = $rt_createArray(jl_Object, $newSize);
        if ($this.$size7 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key)
                    cbgu_IntMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
},
cbggg_ModelBatch$RenderablePool = $rt_classWithoutFields(cbgu_FlushablePool),
cbggg_ModelBatch$RenderablePool__init_ = $this => {
    cbgu_FlushablePool__init_($this);
},
cbggg_ModelBatch$RenderablePool__init_0 = () => {
    let var_0 = new cbggg_ModelBatch$RenderablePool();
    cbggg_ModelBatch$RenderablePool__init_(var_0);
    return var_0;
},
cbggg_ModelBatch$RenderablePool_newObject = $this => {
    return cbggg_Renderable__init_0();
},
cbggg_ModelBatch$RenderablePool_obtain0 = $this => {
    let $renderable;
    $renderable = cbgu_FlushablePool_obtain($this);
    $renderable.$environment = null;
    $renderable.$material = null;
    $renderable.$meshPart.$set38($rt_s(60), null, 0, 0, 0);
    $renderable.$shader1 = null;
    $renderable.$userData = null;
    return $renderable;
},
cbggg_ModelBatch$RenderablePool_obtain = $this => {
    return $this.$obtain1();
},
cbggg_ModelBatch$RenderablePool_newObject0 = $this => {
    return $this.$newObject0();
};
function cbgm_Quaternion() {
    let a = this; jl_Object.call(a);
    a.$x3 = 0.0;
    a.$y3 = 0.0;
    a.$z0 = 0.0;
    a.$w = 0.0;
}
let cbgm_Quaternion_tmp1 = null,
cbgm_Quaternion_tmp2 = null,
cbgm_Quaternion_$callClinit = () => {
    cbgm_Quaternion_$callClinit = $rt_eraseClinit(cbgm_Quaternion);
    cbgm_Quaternion__clinit_();
},
cbgm_Quaternion__init_2 = ($this, $x, $y, $z, $w) => {
    cbgm_Quaternion_$callClinit();
    jl_Object__init_($this);
    $this.$set39($x, $y, $z, $w);
},
cbgm_Quaternion__init_ = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgm_Quaternion();
    cbgm_Quaternion__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgm_Quaternion__init_0 = $this => {
    cbgm_Quaternion_$callClinit();
    jl_Object__init_($this);
    $this.$idt1();
},
cbgm_Quaternion__init_1 = () => {
    let var_0 = new cbgm_Quaternion();
    cbgm_Quaternion__init_0(var_0);
    return var_0;
},
cbgm_Quaternion_set = ($this, $x, $y, $z, $w) => {
    $this.$x3 = $x;
    $this.$y3 = $y;
    $this.$z0 = $z;
    $this.$w = $w;
    return $this;
},
cbgm_Quaternion_set0 = ($this, $quaternion) => {
    return $this.$set39($quaternion.$x3, $quaternion.$y3, $quaternion.$z0, $quaternion.$w);
},
cbgm_Quaternion_set1 = ($this, $axis, $angle) => {
    return $this.$setFromAxis($axis.$x, $axis.$y, $axis.$z, $angle);
},
cbgm_Quaternion_len2 = $this => {
    return $this.$x3 * $this.$x3 + $this.$y3 * $this.$y3 + $this.$z0 * $this.$z0 + $this.$w * $this.$w;
},
cbgm_Quaternion_nor = $this => {
    let $len, var$2;
    $len = $this.$len2();
    if ($len !== 0.0 && !cbgm_MathUtils_isEqual($len, 1.0)) {
        var$2 = jl_Math_sqrt($len);
        $this.$w = $this.$w / var$2;
        $this.$x3 = $this.$x3 / var$2;
        $this.$y3 = $this.$y3 / var$2;
        $this.$z0 = $this.$z0 / var$2;
    }
    return $this;
},
cbgm_Quaternion_toMatrix = ($this, $matrix) => {
    let var$2, $xx, $xy, $xz, $xw, $yy, $yz, $yw, $zz, $zw;
    var$2 = $matrix.data;
    $xx = $this.$x3 * $this.$x3;
    $xy = $this.$x3 * $this.$y3;
    $xz = $this.$x3 * $this.$z0;
    $xw = $this.$x3 * $this.$w;
    $yy = $this.$y3 * $this.$y3;
    $yz = $this.$y3 * $this.$z0;
    $yw = $this.$y3 * $this.$w;
    $zz = $this.$z0 * $this.$z0;
    $zw = $this.$z0 * $this.$w;
    var$2[0] = 1.0 - 2.0 * ($yy + $zz);
    var$2[4] = 2.0 * ($xy - $zw);
    var$2[8] = 2.0 * ($xz + $yw);
    var$2[12] = 0.0;
    var$2[1] = 2.0 * ($xy + $zw);
    var$2[5] = 1.0 - 2.0 * ($xx + $zz);
    var$2[9] = 2.0 * ($yz - $xw);
    var$2[13] = 0.0;
    var$2[2] = 2.0 * ($xz - $yw);
    var$2[6] = 2.0 * ($yz + $xw);
    var$2[10] = 1.0 - 2.0 * ($xx + $yy);
    var$2[14] = 0.0;
    var$2[3] = 0.0;
    var$2[7] = 0.0;
    var$2[11] = 0.0;
    var$2[15] = 1.0;
},
cbgm_Quaternion_idt = $this => {
    return $this.$set39(0.0, 0.0, 0.0, 1.0);
},
cbgm_Quaternion_setFromAxis = ($this, $x, $y, $z, $degrees) => {
    return $this.$setFromAxisRad($x, $y, $z, $degrees * 0.01745329238474369);
},
cbgm_Quaternion_setFromAxisRad = ($this, $x, $y, $z, $radians) => {
    let $d, var$6, $l_ang, var$8, $l_sin, $l_cos;
    $d = cbgm_Vector3_len($x, $y, $z);
    if ($d === 0.0)
        return $this.$idt1();
    var$6 = 1.0 / $d;
    $l_ang = $radians >= 0.0 ? $radians % 6.2831854820251465 : 6.2831854820251465 -  -$radians % 6.2831854820251465;
    var$8 = $l_ang / 2.0;
    $l_sin = jl_Math_sin(var$8);
    $l_cos = jl_Math_cos(var$8);
    return ($this.$set39(var$6 * $x * $l_sin, var$6 * $y * $l_sin, var$6 * $z * $l_sin, $l_cos)).$nor1();
},
cbgm_Quaternion__clinit_ = () => {
    cbgm_Quaternion_tmp1 = cbgm_Quaternion__init_(0.0, 0.0, 0.0, 0.0);
    cbgm_Quaternion_tmp2 = cbgm_Quaternion__init_(0.0, 0.0, 0.0, 0.0);
},
jnc_StandardCharsets = $rt_classWithoutFields(),
jnc_StandardCharsets_UTF_8 = null,
jnc_StandardCharsets_US_ASCII = null,
jnc_StandardCharsets_ISO_8859_1 = null,
jnc_StandardCharsets_UTF_16 = null,
jnc_StandardCharsets_UTF_16BE = null,
jnc_StandardCharsets_UTF_16LE = null,
jnc_StandardCharsets_$callClinit = () => {
    jnc_StandardCharsets_$callClinit = $rt_eraseClinit(jnc_StandardCharsets);
    jnc_StandardCharsets__clinit_();
},
jnc_StandardCharsets__clinit_ = () => {
    jnci_UTF8Charset_$callClinit();
    jnc_StandardCharsets_UTF_8 = jnci_UTF8Charset_INSTANCE;
    jnc_StandardCharsets_US_ASCII = jnci_AsciiCharset__init_0();
    jnc_StandardCharsets_ISO_8859_1 = jnci_Iso8859Charset__init_0();
    jnc_StandardCharsets_UTF_16 = jnci_UTF16Charset__init_($rt_s(593), 1, 0);
    jnc_StandardCharsets_UTF_16BE = jnci_UTF16Charset__init_($rt_s(594), 0, 0);
    jnc_StandardCharsets_UTF_16LE = jnci_UTF16Charset__init_($rt_s(595), 0, 1);
},
otcir_ClassList = $rt_classWithoutFields();
function jur_AbstractCharClass$LazyJavaMirrored$1() {
    jur_AbstractCharClass.call(this);
    this.$this$037 = null;
}
let jur_AbstractCharClass$LazyJavaMirrored$1__init_ = ($this, $this$0) => {
    $this.$this$037 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaMirrored$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaMirrored$1();
    jur_AbstractCharClass$LazyJavaMirrored$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaMirrored$1_contains = ($this, $ch) => {
    return 0;
};
function jur_UEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter3 = 0;
}
let jur_UEOLSet__init_ = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter3 = $counter;
},
jur_UEOLSet__init_0 = var_0 => {
    let var_1 = new jur_UEOLSet();
    jur_UEOLSet__init_(var_1, var_0);
    return var_1;
},
jur_UEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound;
    $rightBound = !$matchResult.$hasAnchoringBounds() ? $testString.$length() : $matchResult.$getRightBound();
    if ($strIndex >= $rightBound) {
        $matchResult.$setConsumed($this.$consCounter3, 0);
        return $this.$next1.$matches($strIndex, $testString, $matchResult);
    }
    if (($rightBound - $strIndex | 0) == 1 && $testString.$charAt($strIndex) == 10) {
        $matchResult.$setConsumed($this.$consCounter3, 1);
        return $this.$next1.$matches($strIndex + 1 | 0, $testString, $matchResult);
    }
    return (-1);
},
jur_UEOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !$matchResult.$getConsumed($this.$consCounter3) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter3, (-1));
    return $res;
},
jur_UEOLSet_getName = $this => {
    return $rt_s(489);
};
function jur_UCICharSet() {
    jur_LeafSet.call(this);
    this.$ch4 = 0;
}
let jur_UCICharSet__init_ = ($this, $ch) => {
    jur_LeafSet__init_($this);
    $this.$ch4 = jl_Character_toLowerCase(jl_Character_toUpperCase($ch));
},
jur_UCICharSet__init_0 = var_0 => {
    let var_1 = new jur_UCICharSet();
    jur_UCICharSet__init_(var_1, var_0);
    return var_1;
},
jur_UCICharSet_accepts = ($this, $strIndex, $testString) => {
    return $this.$ch4 != jl_Character_toLowerCase(jl_Character_toUpperCase($testString.$charAt($strIndex))) ? (-1) : 1;
},
jur_UCICharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$ch4;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(var$2, $rt_s(422)), var$1);
    return jl_StringBuilder_toString(var$2);
};
function cgxgbta_AssetDownloadImpl$loadBinary$lambda$_3_0() {
    let a = this; jl_Object.call(a);
    a.$_0 = null;
    a.$_1 = null;
    a.$_2 = null;
    a.$_3 = 0;
}
let cgxgbta_AssetDownloadImpl$loadBinary$lambda$_3_0__init_ = (var$0, var$1, var$2, var$3, var$4) => {
    jl_Object__init_(var$0);
    var$0.$_0 = var$1;
    var$0.$_1 = var$2;
    var$0.$_2 = var$3;
    var$0.$_3 = var$4;
},
cgxgbta_AssetDownloadImpl$loadBinary$lambda$_3_0__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cgxgbta_AssetDownloadImpl$loadBinary$lambda$_3_0();
    cgxgbta_AssetDownloadImpl$loadBinary$lambda$_3_0__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cgxgbta_AssetDownloadImpl$loadBinary$lambda$_3_0_onTimer = var$0 => {
    cgxgbta_AssetDownloadImpl_lambda$loadBinary$1(var$0.$_0, var$0.$_1, var$0.$_2, var$0.$_3);
},
cgxgbta_AssetDownloadImpl$loadBinary$lambda$_3_0_onTimer$exported$0 = var$1 => {
    var$1.$onTimer();
};
function cbggga_PointLightsAttribute() {
    cbggg_Attribute.call(this);
    this.$lights0 = null;
}
let cbggga_PointLightsAttribute_Type = Long_ZERO,
cbggga_PointLightsAttribute_$callClinit = () => {
    cbggga_PointLightsAttribute_$callClinit = $rt_eraseClinit(cbggga_PointLightsAttribute);
    cbggga_PointLightsAttribute__clinit_();
},
cbggga_PointLightsAttribute__clinit_ = () => {
    cbggga_PointLightsAttribute_Type = cbggg_Attribute_register($rt_s(596));
},
jnci_Iso8859Charset = $rt_classWithoutFields(jnc_Charset),
jnci_Iso8859Charset__init_ = $this => {
    jnc_Charset__init_($this, $rt_s(597), $rt_createArray(jl_String, 0));
},
jnci_Iso8859Charset__init_0 = () => {
    let var_0 = new jnci_Iso8859Charset();
    jnci_Iso8859Charset__init_(var_0);
    return var_0;
},
jnci_Iso8859Charset_newDecoder = $this => {
    return jnci_Iso8859Decoder__init_0($this);
};
function cbgg_Texture$TextureWrap() {
    jl_Enum.call(this);
    this.$glEnum = 0;
}
let cbgg_Texture$TextureWrap_MirroredRepeat = null,
cbgg_Texture$TextureWrap_ClampToEdge = null,
cbgg_Texture$TextureWrap_Repeat = null,
cbgg_Texture$TextureWrap_$VALUES = null,
cbgg_Texture$TextureWrap_$callClinit = () => {
    cbgg_Texture$TextureWrap_$callClinit = $rt_eraseClinit(cbgg_Texture$TextureWrap);
    cbgg_Texture$TextureWrap__clinit_();
},
cbgg_Texture$TextureWrap__init_0 = ($this, var$1, var$2, $glEnum) => {
    cbgg_Texture$TextureWrap_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$glEnum = $glEnum;
},
cbgg_Texture$TextureWrap__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_Texture$TextureWrap();
    cbgg_Texture$TextureWrap__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_Texture$TextureWrap_getGLEnum = $this => {
    return $this.$glEnum;
},
cbgg_Texture$TextureWrap_$values = () => {
    let var$1, var$2;
    cbgg_Texture$TextureWrap_$callClinit();
    var$1 = $rt_createArray(cbgg_Texture$TextureWrap, 3);
    var$2 = var$1.data;
    var$2[0] = cbgg_Texture$TextureWrap_MirroredRepeat;
    var$2[1] = cbgg_Texture$TextureWrap_ClampToEdge;
    var$2[2] = cbgg_Texture$TextureWrap_Repeat;
    return var$1;
},
cbgg_Texture$TextureWrap__clinit_ = () => {
    cbgg_Texture$TextureWrap_MirroredRepeat = cbgg_Texture$TextureWrap__init_($rt_s(598), 0, 33648);
    cbgg_Texture$TextureWrap_ClampToEdge = cbgg_Texture$TextureWrap__init_($rt_s(599), 1, 33071);
    cbgg_Texture$TextureWrap_Repeat = cbgg_Texture$TextureWrap__init_($rt_s(600), 2, 10497);
    cbgg_Texture$TextureWrap_$VALUES = cbgg_Texture$TextureWrap_$values();
},
cbgggu_RenderableSorter = $rt_classWithoutFields(0);
function cbgggu_DefaultRenderableSorter() {
    let a = this; jl_Object.call(a);
    a.$camera4 = null;
    a.$tmpV10 = null;
    a.$tmpV2 = null;
}
let cbgggu_DefaultRenderableSorter__init_ = $this => {
    jl_Object__init_($this);
    $this.$tmpV10 = cbgm_Vector3__init_();
    $this.$tmpV2 = cbgm_Vector3__init_();
},
cbgggu_DefaultRenderableSorter__init_0 = () => {
    let var_0 = new cbgggu_DefaultRenderableSorter();
    cbgggu_DefaultRenderableSorter__init_(var_0);
    return var_0;
},
cbgggu_DefaultRenderableSorter_sort = ($this, $camera, $renderables) => {
    $this.$camera4 = $camera;
    $renderables.$sort0($this);
},
cbgggu_DefaultRenderableSorter_getTranslation = ($this, $worldTransform, $center, $output) => {
    if ($center.$isZero())
        $worldTransform.$getTranslation($output);
    else if ($worldTransform.$hasRotationOrScaling())
        ($output.$set7($center)).$mul0($worldTransform);
    else
        ($worldTransform.$getTranslation($output)).$add5($center);
    return $output;
},
cbgggu_DefaultRenderableSorter_compare = ($this, $o1, $o2) => {
    let var$3, var$4, $b1, $b2, $dst, var$8, $result;
    a: {
        var$3 = $o1.$material;
        cbggga_BlendingAttribute_$callClinit();
        if (cbggg_Attributes_has(var$3, cbggga_BlendingAttribute_Type)) {
            var$3 = $o1.$material;
            var$4 = cbggga_BlendingAttribute_Type;
            if ((cbggg_Attributes_get(var$3, var$4)).$blended) {
                $b1 = 1;
                break a;
            }
        }
        $b1 = 0;
    }
    b: {
        if (cbggg_Attributes_has($o2.$material, cbggga_BlendingAttribute_Type)) {
            var$3 = $o2.$material;
            var$4 = cbggga_BlendingAttribute_Type;
            if ((cbggg_Attributes_get(var$3, var$4)).$blended) {
                $b2 = 1;
                break b;
            }
        }
        $b2 = 0;
    }
    if ($b1 != $b2)
        return !$b1 ? (-1) : 1;
    cbgggu_DefaultRenderableSorter_getTranslation($this, $o1.$worldTransform, $o1.$meshPart.$center, $this.$tmpV10);
    cbgggu_DefaultRenderableSorter_getTranslation($this, $o2.$worldTransform, $o2.$meshPart.$center, $this.$tmpV2);
    $dst = (1000.0 * $this.$camera4.$position8.$dst2($this.$tmpV10) | 0) - (1000.0 * $this.$camera4.$position8.$dst2($this.$tmpV2) | 0) | 0;
    var$8 = $rt_compare($dst, 0.0);
    $result = var$8 < 0 ? (-1) : var$8 <= 0 ? 0 : 1;
    if ($b1)
        $result =  -$result | 0;
    return $result;
},
cbgggu_DefaultRenderableSorter_compare0 = ($this, var$1, var$2) => {
    return $this.$compare1(var$1, var$2);
};
function jur_CompositeGroupQuantifierSet() {
    let a = this; jur_GroupQuantifierSet.call(a);
    a.$quantifier = null;
    a.$setCounter = 0;
}
let jur_CompositeGroupQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type, $setCounter) => {
    jur_GroupQuantifierSet__init_($this, $innerSet, $next, $type);
    $this.$quantifier = $quant;
    $this.$setCounter = $setCounter;
},
jur_CompositeGroupQuantifierSet__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jur_CompositeGroupQuantifierSet();
    jur_CompositeGroupQuantifierSet__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jur_CompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $enterCounter, var$5, var$6, $nextIndex;
    $enterCounter = $matchResult.$getEnterCounter($this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier.$max1())
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    var$5 = $this.$setCounter;
    var$6 = $enterCounter + 1 | 0;
    $matchResult.$setEnterCounter(var$5, var$6);
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex >= 0) {
        $matchResult.$setEnterCounter($this.$setCounter, 0);
        return $nextIndex;
    }
    var$5 = $this.$setCounter;
    var$6 = var$6 + (-1) | 0;
    $matchResult.$setEnterCounter(var$5, var$6);
    if (var$6 >= $this.$quantifier.$min1())
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    $matchResult.$setEnterCounter($this.$setCounter, 0);
    return (-1);
},
jur_CompositeGroupQuantifierSet_getName = $this => {
    return $this.$quantifier.$toString();
},
jur_RelCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet),
jur_RelCompositeGroupQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type, $setCounter) => {
    jur_CompositeGroupQuantifierSet__init_($this, $quant, $innerSet, $next, $type, $setCounter);
},
jur_RelCompositeGroupQuantifierSet__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jur_RelCompositeGroupQuantifierSet();
    jur_RelCompositeGroupQuantifierSet__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jur_RelCompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $enterCounter, $nextIndex;
    $enterCounter = $matchResult.$getEnterCounter($this.$setCounter);
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    if ($enterCounter >= $this.$quantifier.$max1()) {
        $matchResult.$setEnterCounter($this.$setCounter, 0);
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    }
    if ($enterCounter < $this.$quantifier.$min1()) {
        $matchResult.$setEnterCounter($this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    } else {
        $nextIndex = $this.$next1.$matches($stringIndex, $testString, $matchResult);
        if ($nextIndex >= 0) {
            $matchResult.$setEnterCounter($this.$setCounter, 0);
            return $nextIndex;
        }
        $matchResult.$setEnterCounter($this.$setCounter, $enterCounter + 1 | 0);
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    }
    return $nextIndex;
};
function ju_ArrayList() {
    let a = this; ju_AbstractList.call(a);
    a.$array1 = null;
    a.$size5 = 0;
}
let ju_ArrayList__init_1 = $this => {
    ju_ArrayList__init_($this, 10);
},
ju_ArrayList__init_0 = () => {
    let var_0 = new ju_ArrayList();
    ju_ArrayList__init_1(var_0);
    return var_0;
},
ju_ArrayList__init_ = ($this, $initialCapacity) => {
    ju_AbstractList__init_($this);
    if ($initialCapacity >= 0) {
        $this.$array1 = $rt_createArray(jl_Object, $initialCapacity);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_0());
},
ju_ArrayList__init_2 = var_0 => {
    let var_1 = new ju_ArrayList();
    ju_ArrayList__init_(var_1, var_0);
    return var_1;
},
ju_ArrayList_ensureCapacity = ($this, $minCapacity) => {
    let $newLength;
    if ($this.$array1.data.length < $minCapacity) {
        $newLength = $this.$array1.data.length >= 1073741823 ? 2147483647 : jl_Math_max($minCapacity, jl_Math_max($this.$array1.data.length * 2 | 0, 5));
        $this.$array1 = ju_Arrays_copyOf($this.$array1, $newLength);
    }
},
ju_ArrayList_get = ($this, $index) => {
    ju_ArrayList_checkIndex($this, $index);
    return $this.$array1.data[$index];
},
ju_ArrayList_size = $this => {
    return $this.$size5;
},
ju_ArrayList_add = ($this, $element) => {
    let var$2, var$3;
    $this.$ensureCapacity($this.$size5 + 1 | 0);
    var$2 = $this.$array1.data;
    var$3 = $this.$size5;
    $this.$size5 = var$3 + 1 | 0;
    var$2[var$3] = $element;
    $this.$modCount = $this.$modCount + 1 | 0;
    return 1;
},
ju_ArrayList_add0 = ($this, $index, $element) => {
    let $i;
    ju_ArrayList_checkIndexForAdd($this, $index);
    $this.$ensureCapacity($this.$size5 + 1 | 0);
    $i = $this.$size5;
    while ($i > $index) {
        $this.$array1.data[$i] = $this.$array1.data[$i - 1 | 0];
        $i = $i + (-1) | 0;
    }
    $this.$array1.data[$index] = $element;
    $this.$size5 = $this.$size5 + 1 | 0;
    $this.$modCount = $this.$modCount + 1 | 0;
},
ju_ArrayList_remove = ($this, $i) => {
    let $old, var$3, var$4, $i_0;
    ju_ArrayList_checkIndex($this, $i);
    $old = $this.$array1.data[$i];
    $this.$size5 = $this.$size5 - 1 | 0;
    while ($i < $this.$size5) {
        var$3 = $this.$array1.data;
        var$4 = $this.$array1.data;
        $i_0 = $i + 1 | 0;
        var$3[$i] = var$4[$i_0];
        $i = $i_0;
    }
    $this.$array1.data[$this.$size5] = null;
    $this.$modCount = $this.$modCount + 1 | 0;
    return $old;
},
ju_ArrayList_checkIndex = ($this, $index) => {
    if ($index >= 0 && $index < $this.$size5)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
ju_ArrayList_checkIndexForAdd = ($this, $index) => {
    if ($index >= 0 && $index <= $this.$size5)
        return;
    $rt_throw(jl_IndexOutOfBoundsException__init_());
};
function cgxgbt_TeaApplication$4() {
    jl_Object.call(this);
    this.$this$06 = null;
}
let cgxgbt_TeaApplication$4__init_ = ($this, $this$0) => {
    $this.$this$06 = $this$0;
    jl_Object__init_($this);
},
cgxgbt_TeaApplication$4__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaApplication$4();
    cgxgbt_TeaApplication$4__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaApplication$4_run = $this => {
    $this.$this$06.$graphics.$update0();
    cgxgbt_TeaApplication_step($this.$this$06, $this.$this$06.$curListener);
    $this.$this$06.$window.$requestAnimationFrame($this);
};
function cgxgbt_TeaApplication$5() {
    let a = this; jl_Object.call(a);
    a.$val$appLoop = null;
    a.$this$0 = null;
}
let cgxgbt_TeaApplication$5__init_ = ($this, $this$0, var$2) => {
    $this.$this$0 = $this$0;
    $this.$val$appLoop = var$2;
    jl_Object__init_($this);
},
cgxgbt_TeaApplication$5__init_0 = (var_0, var_1) => {
    let var_2 = new cgxgbt_TeaApplication$5();
    cgxgbt_TeaApplication$5__init_(var_2, var_0, var_1);
    return var_2;
},
cgxgbt_TeaApplication$5_run = $this => {
    let $state, var$2;
    a: {
        $state = $this.$this$0.$initState;
        $this.$this$0.$graphics.$update0();
        cgxgbt_TeaApplication$7_$callClinit();
        switch (cgxgbt_TeaApplication$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState.data[jl_Enum_ordinal($state)]) {
            case 1:
                break;
            case 2:
                if ($this.$this$0.$initQueue0)
                    break a;
                cgxgbt_TeaApplication_step($this.$this$0, $this.$this$0.$curListener);
                break a;
            default:
                break a;
        }
        cgxgbt_TeaApplication_step($this.$this$0, $this.$this$0.$curListener);
    }
    if (!$this.$this$0.$isPreloadReady)
        $this.$this$0.$window.$requestAnimationFrame($this);
    else {
        var$2 = $this.$this$0;
        cgxgbt_TeaApplication$AppState_$callClinit();
        var$2.$initState = cgxgbt_TeaApplication$AppState_INIT;
        $this.$this$0.$curListener.$dispose();
        $this.$this$0.$curListener = $this.$this$0.$appListener;
        $this.$this$0.$appListener = null;
        $this.$this$0.$window.$requestAnimationFrame($this.$val$appLoop);
    }
},
jl_IllegalMonitorStateException = $rt_classWithoutFields(jl_RuntimeException),
jl_IllegalMonitorStateException__init_0 = $this => {
    jl_RuntimeException__init_($this);
},
jl_IllegalMonitorStateException__init_ = () => {
    let var_0 = new jl_IllegalMonitorStateException();
    jl_IllegalMonitorStateException__init_0(var_0);
    return var_0;
};
function cgxgbt_TeaApplication$6() {
    jl_Object.call(this);
    this.$this$022 = null;
}
let cgxgbt_TeaApplication$6__init_ = ($this, $this$0) => {
    $this.$this$022 = $this$0;
    jl_Object__init_($this);
},
cgxgbt_TeaApplication$6__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaApplication$6();
    cgxgbt_TeaApplication$6__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaApplication$6_onSuccess0 = ($this, $url, $result) => {
    $this.$this$022.$subtractInitQueue();
},
cgxgbt_TeaApplication$6_onFailure = ($this, $url) => {
    $rt_throw(jl_RuntimeException__init_1($rt_s(601)));
},
cgxgbt_TeaApplication$6_onSuccess = ($this, var$1, var$2) => {
    $this.$onSuccess2(var$1, var$2);
},
cgxgbtft_InternalStorage = $rt_classWithoutFields(cgxgbtf_MemoryFileStorage),
cgxgbtft_InternalStorage__init_ = $this => {
    cgxgbtf_MemoryFileStorage__init_($this);
},
cgxgbtft_InternalStorage__init_0 = () => {
    let var_0 = new cgxgbtft_InternalStorage();
    cgxgbtft_InternalStorage__init_(var_0);
    return var_0;
},
cgxgbt_TeaApplication$7 = $rt_classWithoutFields(),
cgxgbt_TeaApplication$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState = null,
cgxgbt_TeaApplication$7_$callClinit = () => {
    cgxgbt_TeaApplication$7_$callClinit = $rt_eraseClinit(cgxgbt_TeaApplication$7);
    cgxgbt_TeaApplication$7__clinit_();
},
cgxgbt_TeaApplication$7__clinit_ = () => {
    cgxgbt_TeaApplication$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState = $rt_createIntArray((cgxgbt_TeaApplication$AppState_values()).data.length);
    cgxgbt_TeaApplication$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState.data[jl_Enum_ordinal(cgxgbt_TeaApplication$AppState_APP_LOOP)] = 1;
    cgxgbt_TeaApplication$7_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$TeaApplication$AppState.data[jl_Enum_ordinal(cgxgbt_TeaApplication$AppState_INIT)] = 2;
};
function cgxgbt_TeaApplication$1() {
    jl_Object.call(this);
    this.$this$07 = null;
}
let cgxgbt_TeaApplication$1__init_ = ($this, $this$0) => {
    $this.$this$07 = $this$0;
    jl_Object__init_($this);
},
cgxgbt_TeaApplication$1__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaApplication$1();
    cgxgbt_TeaApplication$1__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaApplication$1_handleEvent = ($this, $evt) => {
    if ($this.$this$07.$curListener !== null) {
        $this.$this$07.$curListener.$pause();
        $this.$this$07.$curListener.$dispose();
        $this.$this$07.$curListener = null;
    }
},
cgxgbt_TeaApplication$1_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
};
function cgxgbt_TeaApplication$2() {
    jl_Object.call(this);
    this.$this$00 = null;
}
let cgxgbt_TeaApplication$2__init_ = ($this, $this$0) => {
    $this.$this$00 = $this$0;
    jl_Object__init_($this);
},
cgxgbt_TeaApplication$2__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaApplication$2();
    cgxgbt_TeaApplication$2__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaApplication$2_handleEvent = ($this, $evt) => {
    let var$2, $state, var$4, $listener, $$je;
    var$2 = $this.$this$00.$initState;
    cgxgbt_TeaApplication$AppState_$callClinit();
    if (var$2 === cgxgbt_TeaApplication$AppState_APP_LOOP) {
        $state = $rt_str(($this.$this$00.$window.$getDocument()).visibilityState);
        if ($state.$equals($rt_s(602))) {
            var$4 = $this.$this$00.$lifecycleListeners;
            jl_Object_monitorEnterSync(var$4);
            a: {
                try {
                    var$2 = $this.$this$00.$lifecycleListeners.$iterator();
                    while (var$2.$hasNext()) {
                        $listener = var$2.$next();
                        $listener.$pause();
                    }
                    jl_Object_monitorExitSync(var$4);
                    break a;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$2 = $$je;

                }
                jl_Object_monitorExitSync(var$4);
                $rt_throw(var$2);
            }
            $this.$this$00.$curListener.$pause();
        } else if ($state.$equals($rt_s(603))) {
            var$4 = $this.$this$00.$lifecycleListeners;
            jl_Object_monitorEnterSync(var$4);
            b: {
                try {
                    var$2 = $this.$this$00.$lifecycleListeners.$iterator();
                    while (var$2.$hasNext()) {
                        $listener = var$2.$next();
                        $listener.$resume();
                    }
                    jl_Object_monitorExitSync(var$4);
                    break b;
                } catch ($$e) {
                    $$je = $rt_wrapException($$e);
                    var$2 = $$je;

                }
                jl_Object_monitorExitSync(var$4);
                $rt_throw(var$2);
            }
            $this.$this$00.$curListener.$resume();
        }
    }
},
cgxgbt_TeaApplication$2_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
};
function cgxgbt_TeaApplication$3() {
    jl_Object.call(this);
    this.$this$01 = null;
}
let cgxgbt_TeaApplication$3__init_ = ($this, $this$0) => {
    $this.$this$01 = $this$0;
    jl_Object__init_($this);
},
cgxgbt_TeaApplication$3__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaApplication$3();
    cgxgbt_TeaApplication$3__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaApplication$3_handleEvent = ($this, $evt) => {
    let $width, $height;
    $width = $this.$this$01.$window.$getClientWidth() - $this.$this$01.$config.$padHorizontal | 0;
    $height = $this.$this$01.$window.$getClientHeight() - $this.$this$01.$config.$padVertical | 0;
    if ($width > 0 && $height > 0) {
        if ($this.$this$01.$graphics !== null)
            $this.$this$01.$graphics.$setCanvasSize($width, $height, $this.$this$01.$config.$usePhysicalPixels);
        return;
    }
},
cgxgbt_TeaApplication$3_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
},
jur_RelAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet),
jur_RelAltGroupQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_AltGroupQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_RelAltGroupQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_RelAltGroupQuantifierSet();
    jur_RelAltGroupQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_RelAltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    if (!$this.$innerSet.$hasConsumed($matchResult))
        return $this.$next1.$matches($stringIndex, $testString, $matchResult);
    $nextIndex = $this.$next1.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex < 0)
        $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    return $nextIndex;
},
cgxgbtdt_TypedArrays = $rt_classWithoutFields(),
cgxgbtdt_TypedArrays_toByteArray = $array => {
    let $intArray;
    $intArray = new Int8Array($array);
    return $rt_wrapArray($rt_bytecls, $intArray);
},
cgxgbtdt_TypedArrays_getTypedArray = $buffer => {
    return cgxgbtdt_TypedArrays_getTypedArray0(0, $buffer);
},
cgxgbtdt_TypedArrays_getTypedArray0 = ($isUnsigned, $buffer) => {
    let var$3, var$4, var$5;
    if ($buffer instanceof jn_ByteBuffer) {
        if (!$isUnsigned)
            return cgxgbtdt_TypedArrays_getInt8Array($buffer);
        return cgxgbtdt_TypedArrays_getUint8Array($buffer);
    }
    if ($buffer instanceof jn_ShortBuffer) {
        if (!$isUnsigned)
            return cgxgbtdt_TypedArrays_getInt16Array($buffer);
        return cgxgbtdt_TypedArrays_getUint16Array($buffer);
    }
    if ($buffer instanceof jn_IntBuffer)
        return cgxgbtdt_TypedArrays_getInt32Array($buffer);
    if ($buffer instanceof jn_FloatBuffer)
        return cgxgbtdt_TypedArrays_getFloat32Array($buffer);
    var$3 = new cbgu_GdxRuntimeException;
    var$4 = jl_String_valueOf(jl_Object_getClass($buffer));
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$5, $rt_s(604)), var$4);
    cbgu_GdxRuntimeException__init_0(var$3, jl_StringBuilder_toString(var$5));
    $rt_throw(var$3);
},
cgxgbtdt_TypedArrays_getInt8Array = $buff => {
    return jn_JSBufferHelper_toInt8Array(jn_JSBufferHelper_getArrayBufferView($buff));
},
cgxgbtdt_TypedArrays_getUint8Array = $buff => {
    return jn_JSBufferHelper_toUint8Array(jn_JSBufferHelper_getArrayBufferView($buff));
},
cgxgbtdt_TypedArrays_getInt16Array = $buff => {
    return jn_JSBufferHelper_toInt16Array(jn_JSBufferHelper_getArrayBufferView($buff));
},
cgxgbtdt_TypedArrays_getUint16Array = $buff => {
    return jn_JSBufferHelper_toUint16Array(jn_JSBufferHelper_getArrayBufferView($buff));
},
cgxgbtdt_TypedArrays_getInt32Array = $buff => {
    return jn_JSBufferHelper_toInt32Array(jn_JSBufferHelper_getArrayBufferView($buff));
},
cgxgbtdt_TypedArrays_getFloat32Array = $buff => {
    return jn_JSBufferHelper_toFloat32Array(jn_JSBufferHelper_getArrayBufferView($buff));
},
cgxgbtdt_TypedArrays_getInt8Array0 = $buffer => {
    return $buffer.data;
},
cgxgbtdt_TypedArrays_copy = ($in, $out) => {
    let $array;
    $array = jn_JSBufferHelper_toInt8Array(jn_JSBufferHelper_getArrayBufferView($out));
    $array.set($in);
},
cbgssu_Value$6 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_Value$6__init_ = $this => {
    cbgssu_Value__init_($this);
},
cbgssu_Value$6__init_0 = () => {
    let var_0 = new cbgssu_Value$6();
    cbgssu_Value$6__init_(var_0);
    return var_0;
},
cbgssu_Value$6_get = ($this, $context) => {
    if ($rt_isInstance($context, cbgssu_Layout))
        return $context.$getMaxHeight();
    return $context !== null ? $context.$getHeight() : 0.0;
},
cbgssu_Value$5 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_Value$5__init_ = $this => {
    cbgssu_Value__init_($this);
},
cbgssu_Value$5__init_0 = () => {
    let var_0 = new cbgssu_Value$5();
    cbgssu_Value$5__init_(var_0);
    return var_0;
},
cbgssu_Value$5_get = ($this, $context) => {
    if ($rt_isInstance($context, cbgssu_Layout))
        return $context.$getMaxWidth();
    return $context !== null ? $context.$getWidth() : 0.0;
},
cbgssu_Value$2 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_Value$2__init_ = $this => {
    cbgssu_Value__init_($this);
},
cbgssu_Value$2__init_0 = () => {
    let var_0 = new cbgssu_Value$2();
    cbgssu_Value$2__init_(var_0);
    return var_0;
},
cbgssu_Value$2_get = ($this, $context) => {
    if ($rt_isInstance($context, cbgssu_Layout))
        return $context.$getMinHeight();
    return $context !== null ? $context.$getHeight() : 0.0;
},
cbgssu_Value$1 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_Value$1__init_ = $this => {
    cbgssu_Value__init_($this);
},
cbgssu_Value$1__init_0 = () => {
    let var_0 = new cbgssu_Value$1();
    cbgssu_Value$1__init_(var_0);
    return var_0;
},
cbgssu_Value$1_get = ($this, $context) => {
    if ($rt_isInstance($context, cbgssu_Layout))
        return $context.$getMinWidth();
    return $context !== null ? $context.$getWidth() : 0.0;
},
otjt_Uint16Array = $rt_classWithoutFields(otjt_TypedArray),
jnc_Charset$Charsets = $rt_classWithoutFields(),
jnc_Charset$Charsets_value = null,
jnc_Charset$Charsets_$callClinit = () => {
    jnc_Charset$Charsets_$callClinit = $rt_eraseClinit(jnc_Charset$Charsets);
    jnc_Charset$Charsets__clinit_();
},
jnc_Charset$Charsets__clinit_ = () => {
    let $charsets, var$2, var$3, var$4, $charset;
    jnc_Charset$Charsets_value = ju_HashMap__init_();
    $charsets = $rt_createArray(jnc_Charset, 6);
    var$2 = $charsets.data;
    jnc_StandardCharsets_$callClinit();
    var$2[0] = jnc_StandardCharsets_UTF_8;
    var$2[1] = jnc_StandardCharsets_US_ASCII;
    var$2[2] = jnc_StandardCharsets_ISO_8859_1;
    var$2[3] = jnc_StandardCharsets_UTF_16;
    var$2[4] = jnc_StandardCharsets_UTF_16BE;
    var$2[5] = jnc_StandardCharsets_UTF_16LE;
    var$3 = var$2.length;
    var$4 = 0;
    while (var$4 < var$3) {
        $charset = var$2[var$4];
        jnc_Charset$Charsets_value.$put(jnc_Charset_name($charset), $charset);
        var$4 = var$4 + 1 | 0;
    }
},
cbgssu_Value$4 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_Value$4__init_ = $this => {
    cbgssu_Value__init_($this);
},
cbgssu_Value$4__init_0 = () => {
    let var_0 = new cbgssu_Value$4();
    cbgssu_Value$4__init_(var_0);
    return var_0;
},
cbgssu_Value$4_get = ($this, $context) => {
    if ($rt_isInstance($context, cbgssu_Layout))
        return $context.$getPrefHeight();
    return $context !== null ? $context.$getHeight() : 0.0;
},
cbgssu_Value$3 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_Value$3__init_ = $this => {
    cbgssu_Value__init_($this);
},
cbgssu_Value$3__init_0 = () => {
    let var_0 = new cbgssu_Value$3();
    cbgssu_Value$3__init_(var_0);
    return var_0;
},
cbgssu_Value$3_get = ($this, $context) => {
    if ($rt_isInstance($context, cbgssu_Layout))
        return $context.$getPrefWidth();
    return $context !== null ? $context.$getWidth() : 0.0;
},
cbg_ApplicationLogger = $rt_classWithoutFields(0);
let cgxgbt_TeaApplicationLogger = $rt_classWithoutFields(),
cgxgbt_TeaApplicationLogger__init_ = $this => {
    jl_Object__init_($this);
},
cgxgbt_TeaApplicationLogger__init_0 = () => {
    let var_0 = new cgxgbt_TeaApplicationLogger();
    cgxgbt_TeaApplicationLogger__init_(var_0);
    return var_0;
},
cgxgbt_TeaApplicationLogger_log = ($this, $tag, $message) => {
    let var$3, var$4;
    var$3 = jl_System_out();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $tag), $rt_s(10)), $message);
    var$3.$println1(jl_StringBuilder_toString(var$4));
},
cgxgbt_TeaApplicationLogger_error = ($this, $tag, $message) => {
    let var$3, var$4;
    var$3 = jl_System_err();
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$4, $tag), $rt_s(10)), $message);
    var$3.$println1(jl_StringBuilder_toString(var$4));
},
jur_FSet$PossessiveFSet = $rt_classWithoutFields(jur_AbstractSet),
jur_FSet$PossessiveFSet__init_ = $this => {
    jur_AbstractSet__init_($this);
},
jur_FSet$PossessiveFSet__init_0 = () => {
    let var_0 = new jur_FSet$PossessiveFSet();
    jur_FSet$PossessiveFSet__init_(var_0);
    return var_0;
},
jur_FSet$PossessiveFSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    return $stringIndex;
},
jur_FSet$PossessiveFSet_getName = $this => {
    return $rt_s(605);
},
jur_FSet$PossessiveFSet_hasConsumed = ($this, $mr) => {
    return 0;
},
cbgm_Interpolation$ExpOut = $rt_classWithoutFields(cbgm_Interpolation$Exp),
cbgm_Interpolation$ExpOut__init_ = ($this, $value, $power) => {
    cbgm_Interpolation$Exp__init_($this, $value, $power);
},
cbgm_Interpolation$ExpOut__init_0 = (var_0, var_1) => {
    let var_2 = new cbgm_Interpolation$ExpOut();
    cbgm_Interpolation$ExpOut__init_(var_2, var_0, var_1);
    return var_2;
},
jur_PosCompositeGroupQuantifierSet = $rt_classWithoutFields(jur_CompositeGroupQuantifierSet),
jur_PosCompositeGroupQuantifierSet__init_ = ($this, $quant, $innerSet, $next, $type, $setCounter) => {
    jur_CompositeGroupQuantifierSet__init_($this, $quant, $innerSet, $next, $type, $setCounter);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
},
jur_PosCompositeGroupQuantifierSet__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jur_PosCompositeGroupQuantifierSet();
    jur_PosCompositeGroupQuantifierSet__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jur_PosCompositeGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $counter, $max, $nextIndex;
    $counter = 0;
    $max = $this.$quantifier.$max1();
    a: {
        while (true) {
            $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
            if ($nextIndex <= $stringIndex)
                break a;
            if ($counter >= $max)
                break;
            $counter = $counter + 1 | 0;
            $stringIndex = $nextIndex;
        }
    }
    if ($nextIndex < 0 && $counter < $this.$quantifier.$min1())
        return (-1);
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
};
function cbgssu_FocusListener$FocusEvent() {
    let a = this; cbgss_Event.call(a);
    a.$focused = 0;
    a.$type8 = null;
    a.$relatedActor = null;
}
let cbgssu_FocusListener$FocusEvent__init_ = $this => {
    cbgss_Event__init_($this);
},
cbgssu_FocusListener$FocusEvent__init_0 = () => {
    let var_0 = new cbgssu_FocusListener$FocusEvent();
    cbgssu_FocusListener$FocusEvent__init_(var_0);
    return var_0;
},
cbgssu_FocusListener$FocusEvent_reset = $this => {
    cbgss_Event_reset($this);
    $this.$relatedActor = null;
},
cbgssu_FocusListener$FocusEvent_setFocused = ($this, $focused) => {
    $this.$focused = $focused;
},
cbgssu_FocusListener$FocusEvent_setType = ($this, $focusType) => {
    $this.$type8 = $focusType;
},
cbgssu_FocusListener$FocusEvent_setRelatedActor = ($this, $relatedActor) => {
    $this.$relatedActor = $relatedActor;
};
function cbgg_Texture$TextureFilter() {
    jl_Enum.call(this);
    this.$glEnum0 = 0;
}
let cbgg_Texture$TextureFilter_Nearest = null,
cbgg_Texture$TextureFilter_Linear = null,
cbgg_Texture$TextureFilter_MipMap = null,
cbgg_Texture$TextureFilter_MipMapNearestNearest = null,
cbgg_Texture$TextureFilter_MipMapLinearNearest = null,
cbgg_Texture$TextureFilter_MipMapNearestLinear = null,
cbgg_Texture$TextureFilter_MipMapLinearLinear = null,
cbgg_Texture$TextureFilter_$VALUES = null,
cbgg_Texture$TextureFilter_$callClinit = () => {
    cbgg_Texture$TextureFilter_$callClinit = $rt_eraseClinit(cbgg_Texture$TextureFilter);
    cbgg_Texture$TextureFilter__clinit_();
},
cbgg_Texture$TextureFilter__init_0 = ($this, var$1, var$2, $glEnum) => {
    cbgg_Texture$TextureFilter_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$glEnum0 = $glEnum;
},
cbgg_Texture$TextureFilter__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbgg_Texture$TextureFilter();
    cbgg_Texture$TextureFilter__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgg_Texture$TextureFilter_getGLEnum = $this => {
    return $this.$glEnum0;
},
cbgg_Texture$TextureFilter_$values = () => {
    let var$1, var$2;
    cbgg_Texture$TextureFilter_$callClinit();
    var$1 = $rt_createArray(cbgg_Texture$TextureFilter, 7);
    var$2 = var$1.data;
    var$2[0] = cbgg_Texture$TextureFilter_Nearest;
    var$2[1] = cbgg_Texture$TextureFilter_Linear;
    var$2[2] = cbgg_Texture$TextureFilter_MipMap;
    var$2[3] = cbgg_Texture$TextureFilter_MipMapNearestNearest;
    var$2[4] = cbgg_Texture$TextureFilter_MipMapLinearNearest;
    var$2[5] = cbgg_Texture$TextureFilter_MipMapNearestLinear;
    var$2[6] = cbgg_Texture$TextureFilter_MipMapLinearLinear;
    return var$1;
},
cbgg_Texture$TextureFilter__clinit_ = () => {
    cbgg_Texture$TextureFilter_Nearest = cbgg_Texture$TextureFilter__init_($rt_s(606), 0, 9728);
    cbgg_Texture$TextureFilter_Linear = cbgg_Texture$TextureFilter__init_($rt_s(607), 1, 9729);
    cbgg_Texture$TextureFilter_MipMap = cbgg_Texture$TextureFilter__init_($rt_s(608), 2, 9987);
    cbgg_Texture$TextureFilter_MipMapNearestNearest = cbgg_Texture$TextureFilter__init_($rt_s(609), 3, 9984);
    cbgg_Texture$TextureFilter_MipMapLinearNearest = cbgg_Texture$TextureFilter__init_($rt_s(610), 4, 9985);
    cbgg_Texture$TextureFilter_MipMapNearestLinear = cbgg_Texture$TextureFilter__init_($rt_s(611), 5, 9986);
    cbgg_Texture$TextureFilter_MipMapLinearLinear = cbgg_Texture$TextureFilter__init_($rt_s(612), 6, 9987);
    cbgg_Texture$TextureFilter_$VALUES = cbgg_Texture$TextureFilter_$values();
};
function jur_AbstractCharClass$LazyJavaDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$057 = null;
}
let jur_AbstractCharClass$LazyJavaDigit$1__init_ = ($this, $this$0) => {
    $this.$this$057 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaDigit$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaDigit$1();
    jur_AbstractCharClass$LazyJavaDigit$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaDigit$1_contains = ($this, $ch) => {
    return jl_Character_isDigit($ch);
};
function cbgss_InputEvent() {
    let a = this; cbgss_Event.call(a);
    a.$type6 = null;
    a.$stageX = 0.0;
    a.$stageY = 0.0;
    a.$pointer3 = 0;
    a.$button0 = 0;
    a.$relatedActor0 = null;
    a.$touchFocus = 0;
}
let cbgss_InputEvent__init_0 = $this => {
    cbgss_Event__init_($this);
    $this.$touchFocus = 1;
},
cbgss_InputEvent__init_ = () => {
    let var_0 = new cbgss_InputEvent();
    cbgss_InputEvent__init_0(var_0);
    return var_0;
},
cbgss_InputEvent_reset = $this => {
    cbgss_Event_reset($this);
    $this.$relatedActor0 = null;
    $this.$button0 = (-1);
},
cbgss_InputEvent_setStageX = ($this, $stageX) => {
    $this.$stageX = $stageX;
},
cbgss_InputEvent_setStageY = ($this, $stageY) => {
    $this.$stageY = $stageY;
},
cbgss_InputEvent_setType = ($this, $type) => {
    $this.$type6 = $type;
},
cbgss_InputEvent_setPointer = ($this, $pointer) => {
    $this.$pointer3 = $pointer;
},
cbgss_InputEvent_setButton = ($this, $button) => {
    $this.$button0 = $button;
},
cbgss_InputEvent_setRelatedActor = ($this, $relatedActor) => {
    $this.$relatedActor0 = $relatedActor;
},
cbgss_InputEvent_toString = $this => {
    return $this.$type6.$toString();
},
cgxgbt_TeaWindowListener = $rt_classWithoutFields(0),
jl_NullPointerException = $rt_classWithoutFields(jl_RuntimeException),
jl_NullPointerException__init_2 = ($this, $message) => {
    jl_RuntimeException__init_0($this, $message);
},
jl_NullPointerException__init_1 = var_0 => {
    let var_1 = new jl_NullPointerException();
    jl_NullPointerException__init_2(var_1, var_0);
    return var_1;
},
jl_NullPointerException__init_0 = $this => {
    jl_RuntimeException__init_($this);
},
jl_NullPointerException__init_ = () => {
    let var_0 = new jl_NullPointerException();
    jl_NullPointerException__init_0(var_0);
    return var_0;
};
function jur_AbstractCharClass$LazyJavaSpaceChar$1() {
    jur_AbstractCharClass.call(this);
    this.$this$038 = null;
}
let jur_AbstractCharClass$LazyJavaSpaceChar$1__init_ = ($this, $this$0) => {
    $this.$this$038 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaSpaceChar$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaSpaceChar$1();
    jur_AbstractCharClass$LazyJavaSpaceChar$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaSpaceChar$1_contains = ($this, $ch) => {
    return jl_Character_isSpaceChar($ch);
},
cgxgbt_TeaGL20$CustomIntMap = $rt_classWithoutFields(),
cgxgbt_TeaGL20$CustomIntMap_create$js_body$_1 = () => {
    return [undefined];
},
cgxgbt_TeaGL20$CustomIntMap_get$js_body$_2 = (var$1, var$2) => {
    if (var$1[var$2] === undefined) return null;
    return var$1[var$2];
},
cgxgbt_TeaGL20$CustomIntMap_add$js_body$_4 = (var$1, var$2) => {
    var$1.push(var$2);
    return var$1.length - 1;
},
cgxgbt_TeaGL20$CustomIntMap_remove$js_body$_5 = (var$1, var$2) => {
    var value = var$1[var$2];
    delete var$1[var$2];
    return value;
},
cgxgbt_TeaGL20$CustomIntMap_getKey$js_body$_6 = (var$1, var$2) => {
    for (var i = 0;i < var$1.length;i++) {
        if (var$2 === var$1[i]) {
            return i;
        }
    }
},
jl_Math = $rt_classWithoutFields(),
jl_Math_sin = var$1 => {
    return Math.sin(var$1);
},
jl_Math_cos = var$1 => {
    return Math.cos(var$1);
},
jl_Math_tan = var$1 => {
    return Math.tan(var$1);
},
jl_Math_sqrt = var$1 => {
    return Math.sqrt(var$1);
},
jl_Math_ceil = var$1 => {
    return Math.ceil(var$1);
},
jl_Math_floor = var$1 => {
    return Math.floor(var$1);
},
jl_Math_pow = (var$1, var$2) => {
    return jl_Math_powImpl(var$1, var$2);
},
jl_Math_powImpl = (var$1, var$2) => {
    return Math.pow(var$1, var$2);
},
jl_Math_round = var$1 => {
    return var$1 + jl_Math_signum(var$1) * 0.5 | 0;
},
jl_Math_random = () => {
    return jl_Math_randomImpl();
},
jl_Math_randomImpl = () => {
    return Math.random();
},
jl_Math_min = ($a, $b) => {
    if ($a < $b)
        $b = $a;
    return $b;
},
jl_Math_max = ($a, $b) => {
    if ($a > $b)
        $b = $a;
    return $b;
},
jl_Math_min1 = ($a, $b) => {
    if (Long_lt($a, $b))
        $b = $a;
    return $b;
},
jl_Math_max1 = ($a, $b) => {
    if (Long_gt($a, $b))
        $b = $a;
    return $b;
},
jl_Math_minImpl = (var$1, var$2) => {
    return Math.min(var$1, var$2);
},
jl_Math_min0 = (var$1, var$2) => {
    return jl_Math_minImpl(var$1, var$2);
},
jl_Math_maxImpl = (var$1, var$2) => {
    return Math.max(var$1, var$2);
},
jl_Math_max0 = (var$1, var$2) => {
    return jl_Math_maxImpl(var$1, var$2);
},
jl_Math_abs0 = $n => {
    if ($n < 0)
        $n =  -$n | 0;
    return $n;
},
jl_Math_absImpl = var$1 => {
    return Math.abs(var$1);
},
jl_Math_abs = var$1 => {
    return jl_Math_absImpl(var$1);
},
jl_Math_sign = var$1 => {
    return Math.sign(var$1);
},
jl_Math_signum = var$1 => {
    return jl_Math_sign(var$1);
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart();
    jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function jur_PatternSyntaxException() {
    let a = this; jl_IllegalArgumentException.call(a);
    a.$desc = null;
    a.$pattern1 = null;
    a.$index5 = 0;
}
let jur_PatternSyntaxException__init_0 = ($this, $description, $pattern, $index) => {
    jl_IllegalArgumentException__init_2($this);
    $this.$index5 = (-1);
    $this.$desc = $description;
    $this.$pattern1 = $pattern;
    $this.$index5 = $index;
},
jur_PatternSyntaxException__init_ = (var_0, var_1, var_2) => {
    let var_3 = new jur_PatternSyntaxException();
    jur_PatternSyntaxException__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_PatternSyntaxException_getMessage = $this => {
    let $filler, $temp, var$3, var$4, var$5, var$6;
    $filler = $rt_s(60);
    if ($this.$index5 >= 1) {
        $temp = $rt_createCharArray($this.$index5);
        ju_Arrays_fill3($temp, 32);
        $filler = jl_String__init_0($temp);
    }
    var$3 = $this.$desc;
    if ($this.$pattern1 !== null && $this.$pattern1.$length()) {
        var$4 = $this.$index5;
        var$5 = $this.$pattern1;
        var$6 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append0(var$6, var$4), $rt_s(27)), var$5), $rt_s(27)), $filler);
        var$5 = jl_StringBuilder_toString(var$6);
    } else
        var$5 = $rt_s(60);
    var$6 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$6, var$3), var$5);
    return jl_StringBuilder_toString(var$6);
};
function cbggg_ShapeRenderer$ShapeType() {
    jl_Enum.call(this);
    this.$glType = 0;
}
let cbggg_ShapeRenderer$ShapeType_Point = null,
cbggg_ShapeRenderer$ShapeType_Line = null,
cbggg_ShapeRenderer$ShapeType_Filled = null,
cbggg_ShapeRenderer$ShapeType_$VALUES = null,
cbggg_ShapeRenderer$ShapeType_$callClinit = () => {
    cbggg_ShapeRenderer$ShapeType_$callClinit = $rt_eraseClinit(cbggg_ShapeRenderer$ShapeType);
    cbggg_ShapeRenderer$ShapeType__clinit_();
},
cbggg_ShapeRenderer$ShapeType__init_0 = ($this, var$1, var$2, $glType) => {
    cbggg_ShapeRenderer$ShapeType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$glType = $glType;
},
cbggg_ShapeRenderer$ShapeType__init_ = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_ShapeRenderer$ShapeType();
    cbggg_ShapeRenderer$ShapeType__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_ShapeRenderer$ShapeType_getGlType = $this => {
    return $this.$glType;
},
cbggg_ShapeRenderer$ShapeType_$values = () => {
    let var$1, var$2;
    cbggg_ShapeRenderer$ShapeType_$callClinit();
    var$1 = $rt_createArray(cbggg_ShapeRenderer$ShapeType, 3);
    var$2 = var$1.data;
    var$2[0] = cbggg_ShapeRenderer$ShapeType_Point;
    var$2[1] = cbggg_ShapeRenderer$ShapeType_Line;
    var$2[2] = cbggg_ShapeRenderer$ShapeType_Filled;
    return var$1;
},
cbggg_ShapeRenderer$ShapeType__clinit_ = () => {
    cbggg_ShapeRenderer$ShapeType_Point = cbggg_ShapeRenderer$ShapeType__init_($rt_s(613), 0, 0);
    cbggg_ShapeRenderer$ShapeType_Line = cbggg_ShapeRenderer$ShapeType__init_($rt_s(614), 1, 1);
    cbggg_ShapeRenderer$ShapeType_Filled = cbggg_ShapeRenderer$ShapeType__init_($rt_s(615), 2, 4);
    cbggg_ShapeRenderer$ShapeType_$VALUES = cbggg_ShapeRenderer$ShapeType_$values();
},
jur_AbstractCharClass$LazyJavaDefined = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaDefined__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaDefined__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaDefined();
    jur_AbstractCharClass$LazyJavaDefined__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaDefined_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaDefined$1__init_0($this);
    $chCl.$lowHighSurrogates.$set6(0, 2048);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function cbggga_DepthTestAttribute() {
    let a = this; cbggg_Attribute.call(a);
    a.$depthFunc0 = 0;
    a.$depthRangeNear0 = 0.0;
    a.$depthRangeFar0 = 0.0;
    a.$depthMask0 = 0;
}
let cbggga_DepthTestAttribute_Type = Long_ZERO,
cbggga_DepthTestAttribute_Mask = Long_ZERO,
cbggga_DepthTestAttribute_$callClinit = () => {
    cbggga_DepthTestAttribute_$callClinit = $rt_eraseClinit(cbggga_DepthTestAttribute);
    cbggga_DepthTestAttribute__clinit_();
},
cbggga_DepthTestAttribute__clinit_ = () => {
    cbggga_DepthTestAttribute_Type = cbggg_Attribute_register($rt_s(616));
    cbggga_DepthTestAttribute_Mask = cbggga_DepthTestAttribute_Type;
},
cbgg_Mesh$VertexDataType = $rt_classWithoutFields(jl_Enum),
cbgg_Mesh$VertexDataType_VertexArray = null,
cbgg_Mesh$VertexDataType_VertexBufferObject = null,
cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = null,
cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = null,
cbgg_Mesh$VertexDataType_$VALUES = null,
cbgg_Mesh$VertexDataType_$callClinit = () => {
    cbgg_Mesh$VertexDataType_$callClinit = $rt_eraseClinit(cbgg_Mesh$VertexDataType);
    cbgg_Mesh$VertexDataType__clinit_();
},
cbgg_Mesh$VertexDataType_values = () => {
    cbgg_Mesh$VertexDataType_$callClinit();
    return cbgg_Mesh$VertexDataType_$VALUES.$clone0();
},
cbgg_Mesh$VertexDataType__init_0 = ($this, var$1, var$2) => {
    cbgg_Mesh$VertexDataType_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cbgg_Mesh$VertexDataType__init_ = (var_0, var_1) => {
    let var_2 = new cbgg_Mesh$VertexDataType();
    cbgg_Mesh$VertexDataType__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgg_Mesh$VertexDataType_$values = () => {
    let var$1, var$2;
    cbgg_Mesh$VertexDataType_$callClinit();
    var$1 = $rt_createArray(cbgg_Mesh$VertexDataType, 4);
    var$2 = var$1.data;
    var$2[0] = cbgg_Mesh$VertexDataType_VertexArray;
    var$2[1] = cbgg_Mesh$VertexDataType_VertexBufferObject;
    var$2[2] = cbgg_Mesh$VertexDataType_VertexBufferObjectSubData;
    var$2[3] = cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO;
    return var$1;
},
cbgg_Mesh$VertexDataType__clinit_ = () => {
    cbgg_Mesh$VertexDataType_VertexArray = cbgg_Mesh$VertexDataType__init_($rt_s(617), 0);
    cbgg_Mesh$VertexDataType_VertexBufferObject = cbgg_Mesh$VertexDataType__init_($rt_s(618), 1);
    cbgg_Mesh$VertexDataType_VertexBufferObjectSubData = cbgg_Mesh$VertexDataType__init_($rt_s(619), 2);
    cbgg_Mesh$VertexDataType_VertexBufferObjectWithVAO = cbgg_Mesh$VertexDataType__init_($rt_s(620), 3);
    cbgg_Mesh$VertexDataType_$VALUES = cbgg_Mesh$VertexDataType_$values();
};
function cbgu_ObjectMap() {
    let a = this; jl_Object.call(a);
    a.$size8 = 0;
    a.$keyTable = null;
    a.$valueTable = null;
    a.$loadFactor2 = 0.0;
    a.$threshold = 0;
    a.$shift2 = 0;
    a.$mask1 = 0;
}
let cbgu_ObjectMap_dummy = null,
cbgu_ObjectMap_$callClinit = () => {
    cbgu_ObjectMap_$callClinit = $rt_eraseClinit(cbgu_ObjectMap);
    cbgu_ObjectMap__clinit_();
},
cbgu_ObjectMap__init_0 = $this => {
    cbgu_ObjectMap_$callClinit();
    cbgu_ObjectMap__init_1($this, 51, 0.800000011920929);
},
cbgu_ObjectMap__init_ = () => {
    let var_0 = new cbgu_ObjectMap();
    cbgu_ObjectMap__init_0(var_0);
    return var_0;
},
cbgu_ObjectMap__init_1 = ($this, $initialCapacity, $loadFactor) => {
    let $tableSize;
    cbgu_ObjectMap_$callClinit();
    jl_Object__init_($this);
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor2 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold = $tableSize * $loadFactor | 0;
        $this.$mask1 = $tableSize - 1 | 0;
        $this.$shift2 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask1));
        $this.$keyTable = $rt_createArray(jl_Object, $tableSize);
        $this.$valueTable = $rt_createArray(jl_Object, $tableSize);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(374))).$append20($loadFactor)).$toString()));
},
cbgu_ObjectMap__init_2 = (var_0, var_1) => {
    let var_2 = new cbgu_ObjectMap();
    cbgu_ObjectMap__init_1(var_2, var_0, var_1);
    return var_2;
},
cbgu_ObjectMap_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item.$hashCode0()), Long_create(2135587861, 2654435769)), $this.$shift2));
},
cbgu_ObjectMap_locateKey = ($this, $key) => {
    let $keyTable, $i, $other;
    if ($key === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(621)));
    $keyTable = $this.$keyTable;
    $i = $this.$place0($key);
    while (true) {
        $other = $keyTable.data[$i];
        if ($other === null)
            return  -($i + 1 | 0) | 0;
        if ($other.$equals($key))
            break;
        $i = ($i + 1 | 0) & $this.$mask1;
    }
    return $i;
},
cbgu_ObjectMap_put = ($this, $key, $value) => {
    let $i, $oldValue, var$5;
    $i = $this.$locateKey0($key);
    if ($i >= 0) {
        $oldValue = $this.$valueTable.data[$i];
        $this.$valueTable.data[$i] = $value;
        return $oldValue;
    }
    var$5 =  -($i + 1 | 0) | 0;
    $this.$keyTable.data[var$5] = $key;
    $this.$valueTable.data[var$5] = $value;
    var$5 = $this.$size8 + 1 | 0;
    $this.$size8 = var$5;
    if (var$5 >= $this.$threshold)
        cbgu_ObjectMap_resize($this, $this.$keyTable.data.length << 1);
    return null;
},
cbgu_ObjectMap_putResize = ($this, $key, $value) => {
    let $keyTable, $i, var$5;
    $keyTable = $this.$keyTable;
    $i = $this.$place0($key);
    while (true) {
        var$5 = $keyTable.data;
        if (var$5[$i] === null)
            break;
        $i = ($i + 1 | 0) & $this.$mask1;
    }
    var$5[$i] = $key;
    $this.$valueTable.data[$i] = $value;
},
cbgu_ObjectMap_get = ($this, $key) => {
    let $i;
    $i = $this.$locateKey0($key);
    return $i < 0 ? null : $this.$valueTable.data[$i];
},
cbgu_ObjectMap_remove = ($this, $key) => {
    let $i, $keyTable, $valueTable, var$5, $oldValue, $mask, $next, var$9, var$10, $placement;
    $i = $this.$locateKey0($key);
    if ($i < 0)
        return null;
    $keyTable = $this.$keyTable;
    $valueTable = $this.$valueTable;
    var$5 = $valueTable.data;
    $oldValue = var$5[$i];
    $mask = $this.$mask1;
    $next = ($i + 1 | 0) & $mask;
    while (true) {
        var$9 = $keyTable.data;
        var$10 = var$9[$next];
        if (var$10 === null)
            break;
        $placement = $this.$place0(var$10);
        if ((($next - $placement | 0) & $mask) > (($i - $placement | 0) & $mask)) {
            var$9[$i] = var$10;
            var$5[$i] = var$5[$next];
            $i = $next;
        }
        $next = ($next + 1 | 0) & $mask;
    }
    var$9[$i] = null;
    var$5[$i] = null;
    $this.$size8 = $this.$size8 - 1 | 0;
    return $oldValue;
},
cbgu_ObjectMap_clear = $this => {
    if (!$this.$size8)
        return;
    $this.$size8 = 0;
    ju_Arrays_fill1($this.$keyTable, null);
    ju_Arrays_fill1($this.$valueTable, null);
},
cbgu_ObjectMap_containsKey = ($this, $key) => {
    return $this.$locateKey0($key) < 0 ? 0 : 1;
},
cbgu_ObjectMap_resize = ($this, $newSize) => {
    let $oldCapacity, $oldKeyTable, $oldValueTable, $i, $key;
    a: {
        $oldCapacity = $this.$keyTable.data.length;
        $this.$threshold = $newSize * $this.$loadFactor2 | 0;
        $this.$mask1 = $newSize - 1 | 0;
        $this.$shift2 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask1));
        $oldKeyTable = $this.$keyTable;
        $oldValueTable = $this.$valueTable;
        $this.$keyTable = $rt_createArray(jl_Object, $newSize);
        $this.$valueTable = $rt_createArray(jl_Object, $newSize);
        if ($this.$size8 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null)
                    cbgu_ObjectMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
},
cbgu_ObjectMap__clinit_ = () => {
    cbgu_ObjectMap_dummy = jl_Object__init_0();
};
function jur_Pattern() {
    let a = this; jl_Object.call(a);
    a.$lexemes = null;
    a.$flags = 0;
    a.$backRefs = null;
    a.$needsBackRefReplacement = 0;
    a.$globalGroupIndex = 0;
    a.$compCount0 = 0;
    a.$consCount0 = 0;
    a.$start3 = null;
}
let jur_Pattern_matcher = ($this, $input) => {
    return jur_Matcher__init_0($this, $input);
},
jur_Pattern_split = ($this, $inputSeq, $limit) => {
    let $res, $mat, $index, $curPos, var$7, var$8;
    $res = ju_ArrayList__init_0();
    $mat = jur_Pattern_matcher($this, $inputSeq);
    $index = 0;
    $curPos = 0;
    if (!$inputSeq.$length()) {
        var$7 = $rt_createArray(jl_String, 1);
        var$7.data[0] = $rt_s(60);
        return var$7;
    }
    while (jur_Matcher_find($mat)) {
        var$8 = $index + 1 | 0;
        if (var$8 >= $limit && $limit > 0)
            break;
        $res.$add3(($inputSeq.$subSequence($curPos, jur_Matcher_start($mat))).$toString());
        $curPos = jur_Matcher_end($mat);
        $index = var$8;
    }
    a: {
        $res.$add3(($inputSeq.$subSequence($curPos, $inputSeq.$length())).$toString());
        var$8 = $index + 1 | 0;
        if (!$limit)
            while (true) {
                var$8 = var$8 + (-1) | 0;
                if (var$8 < 0)
                    break;
                if ((($res.$get(var$8)).$toString()).$length())
                    break a;
                $res.$remove1(var$8);
            }
    }
    if (var$8 < 0)
        var$8 = 0;
    return $res.$toArray($rt_createArray(jl_String, var$8));
},
jur_Pattern_split0 = ($this, $input) => {
    return jur_Pattern_split($this, $input, 0);
},
jur_Pattern_pattern = $this => {
    return $this.$lexemes.$toString();
},
jur_Pattern_compile0 = ($pattern, $flags) => {
    if ($pattern === null)
        $rt_throw(jl_NullPointerException__init_1($rt_s(622)));
    if ($flags && ($flags | 255) != 255)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(60)));
    jur_AbstractSet_$callClinit();
    jur_AbstractSet_counter = 1;
    return jur_Pattern_compileImpl(jur_Pattern__init_0(), $pattern, $flags);
},
jur_Pattern_compileImpl = ($this, $pattern, $flags) => {
    $this.$lexemes = jur_Lexer__init_0($pattern, $flags);
    $this.$flags = $flags;
    $this.$start3 = jur_Pattern_processExpression($this, (-1), $this.$flags, null);
    if ($this.$lexemes.$isEmpty()) {
        jur_Pattern_finalizeCompile($this);
        return $this;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
},
jur_Pattern_processAlternations = ($this, $last) => {
    let $auxRange, var$3, $rangeSet;
    $auxRange = jur_CharClass__init_4(jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
    while (!$this.$lexemes.$isEmpty()) {
        var$3 = $this.$lexemes;
        if (!var$3.$isLetter0())
            break;
        var$3 = $this.$lexemes;
        if (var$3.$lookAhead() && $this.$lexemes.$lookAhead() != (-536870788)) {
            var$3 = $this.$lexemes;
            if (var$3.$lookAhead() != (-536870871))
                break;
        }
        $auxRange.$add($this.$lexemes.$next0());
        if ($this.$lexemes.$peek0() != (-536870788))
            continue;
        $this.$lexemes.$next0();
    }
    $rangeSet = jur_Pattern_processRangeSet($this, $auxRange);
    $rangeSet.$setNext($last);
    return $rangeSet;
},
jur_Pattern_processExpression = ($this, $ch, $newFlags, $last) => {
    let $children, $saveFlags, $saveChangedFlags, $fSet, var$8, $child;
    $children = ju_ArrayList__init_0();
    $saveFlags = $this.$flags;
    $saveChangedFlags = 0;
    if ($newFlags != $this.$flags)
        $this.$flags = $newFlags;
    a: {
        switch ($ch) {
            case -1073741784:
                $fSet = new jur_NonCapFSet;
                var$8 = $this.$consCount0 + 1 | 0;
                $this.$consCount0 = var$8;
                jur_NonCapFSet__init_($fSet, var$8);
                break a;
            case -536870872:
            case -268435416:
                break;
            case -134217688:
            case -67108824:
                $fSet = new jur_BehindFSet;
                var$8 = $this.$consCount0 + 1 | 0;
                $this.$consCount0 = var$8;
                jur_BehindFSet__init_($fSet, var$8);
                break a;
            case -33554392:
                $fSet = new jur_AtomicFSet;
                var$8 = $this.$consCount0 + 1 | 0;
                $this.$consCount0 = var$8;
                jur_AtomicFSet__init_($fSet, var$8);
                break a;
            default:
                $this.$globalGroupIndex = $this.$globalGroupIndex + 1 | 0;
                if ($last !== null)
                    $fSet = jur_FSet__init_0($this.$globalGroupIndex);
                else {
                    $fSet = jur_FinalSet__init_0();
                    $saveChangedFlags = 1;
                }
                if ($this.$globalGroupIndex <= (-1))
                    break a;
                if ($this.$globalGroupIndex >= 10)
                    break a;
                $this.$backRefs.data[$this.$globalGroupIndex] = $fSet;
                break a;
        }
        $fSet = jur_AheadFSet__init_0();
    }
    while (true) {
        if ($this.$lexemes.$isLetter0() && $this.$lexemes.$lookAhead() == (-536870788))
            $child = jur_Pattern_processAlternations($this, $fSet);
        else if ($this.$lexemes.$peek0() == (-536870788)) {
            $child = jur_EmptySet__init_($fSet);
            $this.$lexemes.$next0();
        } else {
            $child = jur_Pattern_processSubExpression($this, $fSet);
            if ($this.$lexemes.$peek0() == (-536870788))
                $this.$lexemes.$next0();
        }
        if ($child !== null)
            $children.$add3($child);
        if ($this.$lexemes.$isEmpty())
            break;
        if ($this.$lexemes.$peek0() == (-536870871))
            break;
    }
    if ($this.$lexemes.$back() == (-536870788))
        $children.$add3(jur_EmptySet__init_($fSet));
    if ($this.$flags != $saveFlags && !$saveChangedFlags) {
        $this.$flags = $saveFlags;
        $this.$lexemes.$restoreFlags($this.$flags);
    }
    switch ($ch) {
        case -1073741784:
            break;
        case -536870872:
            return jur_PositiveLookAhead__init_0($children, $fSet);
        case -268435416:
            return jur_NegativeLookAhead__init_0($children, $fSet);
        case -134217688:
            return jur_PositiveLookBehind__init_0($children, $fSet);
        case -67108824:
            return jur_NegativeLookBehind__init_0($children, $fSet);
        case -33554392:
            return jur_AtomicJointSet__init_0($children, $fSet);
        default:
            switch ($children.$size()) {
                case 0:
                    break;
                case 1:
                    return jur_SingleSet__init_0($children.$get(0), $fSet);
                default:
                    return jur_JointSet__init_1($children, $fSet);
            }
            return jur_EmptySet__init_($fSet);
    }
    return jur_NonCapJointSet__init_0($children, $fSet);
},
jur_Pattern_processSequence = $this => {
    let $substring, var$2, $ch;
    $substring = jl_StringBuffer__init_();
    while (!$this.$lexemes.$isEmpty()) {
        var$2 = $this.$lexemes;
        if (!var$2.$isLetter0())
            break;
        var$2 = $this.$lexemes;
        if (var$2.$isHighSurrogate1())
            break;
        var$2 = $this.$lexemes;
        if (var$2.$isLowSurrogate1())
            break;
        var$2 = $this.$lexemes;
        if (!(!var$2.$isNextSpecial() && !$this.$lexemes.$lookAhead())) {
            var$2 = $this.$lexemes;
            if (!(!var$2.$isNextSpecial() && jur_Lexer_isLetter($this.$lexemes.$lookAhead()))) {
                var$2 = $this.$lexemes;
                if (var$2.$lookAhead() != (-536870871)) {
                    var$2 = $this.$lexemes;
                    if ((var$2.$lookAhead() & (-2147418113)) != (-2147483608)) {
                        var$2 = $this.$lexemes;
                        if (var$2.$lookAhead() != (-536870788)) {
                            var$2 = $this.$lexemes;
                            if (var$2.$lookAhead() != (-536870876))
                                break;
                        }
                    }
                }
            }
        }
        $ch = $this.$lexemes.$next0();
        if (!jl_Character_isSupplementaryCodePoint($ch))
            $substring.$append21($ch & 65535);
        else
            $substring.$append22(jl_Character_toChars($ch));
    }
    if (!jur_Pattern_hasFlag($this, 2))
        return jur_SequenceSet__init_0($substring);
    if (jur_Pattern_hasFlag($this, 64))
        return jur_UCISequenceSet__init_0($substring);
    return jur_CISequenceSet__init_0($substring);
},
jur_Pattern_processDecomposedChar = $this => {
    let $codePoints, $readCodePoints, $curSymb, $curSymbIndex, var$5, $codePointsHangul, var$7, var$8, var$9, var$10;
    $codePoints = $rt_createIntArray(4);
    $readCodePoints = 0;
    $curSymb = (-1);
    $curSymbIndex = (-1);
    if (!$this.$lexemes.$isEmpty() && $this.$lexemes.$isLetter0()) {
        var$5 = $codePoints.data;
        $curSymb = $this.$lexemes.$next0();
        var$5[$readCodePoints] = $curSymb;
        $curSymbIndex = $curSymb - 4352 | 0;
    }
    if ($curSymbIndex >= 0 && $curSymbIndex < 19) {
        $codePointsHangul = $rt_createCharArray(3);
        var$5 = $codePointsHangul.data;
        var$5[$readCodePoints] = $curSymb & 65535;
        var$7 = $this.$lexemes.$peek0();
        var$8 = var$7 - 4449 | 0;
        if (var$8 >= 0 && var$8 < 21) {
            var$5[1] = var$7 & 65535;
            $this.$lexemes.$next0();
            var$9 = $this.$lexemes.$peek0();
            var$7 = var$9 - 4519 | 0;
            if (var$7 >= 0 && var$7 < 28) {
                var$5[2] = var$9 & 65535;
                $this.$lexemes.$next0();
                return jur_HangulDecomposedCharSet__init_0($codePointsHangul, 3);
            }
            return jur_HangulDecomposedCharSet__init_0($codePointsHangul, 2);
        }
        if (!jur_Pattern_hasFlag($this, 2))
            return jur_CharSet__init_(var$5[0]);
        if (jur_Pattern_hasFlag($this, 64))
            return jur_UCICharSet__init_0(var$5[0]);
        return jur_CICharSet__init_0(var$5[0]);
    }
    var$10 = 1;
    while (var$10 < 4 && !$this.$lexemes.$isEmpty() && $this.$lexemes.$isLetter0()) {
        var$5 = $codePoints.data;
        var$9 = var$10 + 1 | 0;
        var$5[var$10] = $this.$lexemes.$next0();
        var$10 = var$9;
    }
    if (var$10 == 1) {
        var$5 = $codePoints.data;
        if (!jur_Lexer_hasSingleCodepointDecomposition(var$5[0]))
            return jur_Pattern_processCharSet($this, var$5[0]);
    }
    if (!jur_Pattern_hasFlag($this, 2))
        return jur_DecomposedCharSet__init_0($codePoints, var$10);
    if (jur_Pattern_hasFlag($this, 64))
        return jur_UCIDecomposedCharSet__init_0($codePoints, var$10);
    return jur_CIDecomposedCharSet__init_0($codePoints, var$10);
},
jur_Pattern_processSubExpression = ($this, $last) => {
    let $cur, $term, var$4, $next;
    if ($this.$lexemes.$isLetter0() && !$this.$lexemes.$isNextSpecial() && jur_Lexer_isLetter($this.$lexemes.$lookAhead())) {
        if (!jur_Pattern_hasFlag($this, 128)) {
            if (!$this.$lexemes.$isHighSurrogate1() && !$this.$lexemes.$isLowSurrogate1())
                $cur = jur_Pattern_processSequence($this);
            else {
                $term = jur_Pattern_processTerminal($this, $last);
                $cur = jur_Pattern_processQuantifier($this, $last, $term);
            }
        } else {
            $cur = jur_Pattern_processDecomposedChar($this);
            if (!$this.$lexemes.$isEmpty()) {
                var$4 = $this.$lexemes;
                if (!(var$4.$peek0() == (-536870871) && !($last instanceof jur_FinalSet))) {
                    var$4 = $this.$lexemes;
                    if (var$4.$peek0() != (-536870788) && !$this.$lexemes.$isLetter0())
                        $cur = jur_Pattern_processQuantifier($this, $last, $cur);
                }
            }
        }
    } else if ($this.$lexemes.$peek0() != (-536870871)) {
        $term = jur_Pattern_processTerminal($this, $last);
        $cur = jur_Pattern_processQuantifier($this, $last, $term);
    } else {
        if ($last instanceof jur_FinalSet)
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
        $cur = jur_EmptySet__init_($last);
    }
    a: {
        if (!$this.$lexemes.$isEmpty()) {
            var$4 = $this.$lexemes;
            if (!(var$4.$peek0() == (-536870871) && !($last instanceof jur_FinalSet))) {
                var$4 = $this.$lexemes;
                if (var$4.$peek0() != (-536870788)) {
                    $next = jur_Pattern_processSubExpression($this, $last);
                    if ($cur instanceof jur_LeafQuantifierSet && !($cur instanceof jur_CompositeQuantifierSet) && !($cur instanceof jur_GroupQuantifierSet) && !($cur instanceof jur_AltQuantifierSet)) {
                        var$4 = $cur;
                        if (!$next.$first(var$4.$getInnerSet()))
                            $cur = jur_UnifiedQuantifierSet__init_0(var$4);
                    }
                    if (($next.$getType0() & 65535) != 43)
                        $cur.$setNext($next);
                    else
                        $cur.$setNext($next.$getInnerSet());
                    break a;
                }
            }
        }
        if ($cur === null)
            return null;
        $cur.$setNext($last);
    }
    if (($cur.$getType0() & 65535) != 43)
        return $cur;
    return $cur.$getInnerSet();
},
jur_Pattern_processQuantifier = ($this, $last, $term) => {
    let $quant, var$4, var$5, var$6, $q, var$8, $leaf;
    $quant = $this.$lexemes.$peek0();
    if ($term !== null && !($term instanceof jur_LeafSet)) {
        switch ($quant) {
            case -2147483606:
                $this.$lexemes.$next0();
                return jur_PossessiveGroupQuantifierSet__init_0($term, $last, $quant);
            case -2147483605:
                $this.$lexemes.$next0();
                return jur_PosPlusGroupQuantifierSet__init_0($term, $last, (-2147483606));
            case -2147483585:
                $this.$lexemes.$next0();
                return jur_PosAltGroupQuantifierSet__init_0($term, $last, (-536870849));
            case -2147483525:
                var$4 = new jur_PosCompositeGroupQuantifierSet;
                var$5 = $this.$lexemes.$nextSpecial();
                var$6 = $this.$compCount0 + 1 | 0;
                $this.$compCount0 = var$6;
                jur_PosCompositeGroupQuantifierSet__init_(var$4, var$5, $term, $last, (-536870849), var$6);
                return var$4;
            case -1073741782:
            case -1073741781:
                $this.$lexemes.$next0();
                $q = jur_ReluctantGroupQuantifierSet__init_0($term, $last, $quant);
                $term.$setNext($q);
                return $q;
            case -1073741761:
                $this.$lexemes.$next0();
                $q = jur_RelAltGroupQuantifierSet__init_0($term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -1073741701:
                $q = new jur_RelCompositeGroupQuantifierSet;
                var$4 = $this.$lexemes;
                var$4 = var$4.$nextSpecial();
                var$8 = $this.$compCount0 + 1 | 0;
                $this.$compCount0 = var$8;
                jur_RelCompositeGroupQuantifierSet__init_($q, var$4, $term, $last, (-536870849), var$8);
                $term.$setNext($q);
                return $q;
            case -536870870:
            case -536870869:
                $this.$lexemes.$next0();
                $q = $term.$getType0() != (-2147483602) ? jur_GroupQuantifierSet__init_0($term, $last, $quant) : jur_Pattern_hasFlag($this, 32) ? jur_DotAllQuantifierSet__init_0($term, $last, $quant) : jur_DotQuantifierSet__init_0($term, $last, $quant, jur_AbstractLineTerminator_getInstance($this.$flags));
                $term.$setNext($q);
                return $q;
            case -536870849:
                $this.$lexemes.$next0();
                $q = jur_AltGroupQuantifierSet__init_0($term, $last, (-536870849));
                $term.$setNext($last);
                return $q;
            case -536870789:
                $q = new jur_CompositeGroupQuantifierSet;
                var$4 = $this.$lexemes;
                var$4 = var$4.$nextSpecial();
                var$6 = $this.$compCount0 + 1 | 0;
                $this.$compCount0 = var$6;
                jur_CompositeGroupQuantifierSet__init_($q, var$4, $term, $last, (-536870849), var$6);
                $term.$setNext($q);
                return $q;
            default:
        }
        return $term;
    }
    $leaf = null;
    if ($term !== null)
        $leaf = $term;
    switch ($quant) {
        case -2147483606:
        case -2147483605:
            $this.$lexemes.$next0();
            $q = jur_PossessiveQuantifierSet__init_0($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -2147483585:
            $this.$lexemes.$next0();
            return jur_PossessiveAltQuantifierSet__init_0($leaf, $last, (-2147483585));
        case -2147483525:
            return jur_PossessiveCompositeQuantifierSet__init_0($this.$lexemes.$nextSpecial(), $leaf, $last, (-2147483525));
        case -1073741782:
        case -1073741781:
            $this.$lexemes.$next0();
            $q = jur_ReluctantQuantifierSet__init_0($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -1073741761:
            $this.$lexemes.$next0();
            return jur_ReluctantAltQuantifierSet__init_0($leaf, $last, (-1073741761));
        case -1073741701:
            return jur_ReluctantCompositeQuantifierSet__init_0($this.$lexemes.$nextSpecial(), $leaf, $last, (-1073741701));
        case -536870870:
        case -536870869:
            $this.$lexemes.$next0();
            $q = jur_LeafQuantifierSet__init_0($leaf, $last, $quant);
            $leaf.$setNext($q);
            return $q;
        case -536870849:
            $this.$lexemes.$next0();
            return jur_AltQuantifierSet__init_0($leaf, $last, (-536870849));
        case -536870789:
            return jur_CompositeQuantifierSet__init_0($this.$lexemes.$nextSpecial(), $leaf, $last, (-536870789));
        default:
    }
    return $term;
},
jur_Pattern_processTerminal = ($this, $last) => {
    let $term, $ch, $newFlags, var$5, $negative, $cc, $number, var$9, var$10, var$11;
    $term = null;
    while (true) {
        a: {
            $ch = $this.$lexemes.$peek0();
            if (($ch & (-2147418113)) == (-2147483608)) {
                $this.$lexemes.$next0();
                $newFlags = ($ch & 16711680) >> 16;
                $ch = $ch & (-16711681);
                if ($ch == (-16777176))
                    $this.$flags = $newFlags;
                else {
                    if ($ch != (-1073741784))
                        $newFlags = $this.$flags;
                    $term = jur_Pattern_processExpression($this, $ch, $newFlags, $last);
                    if ($this.$lexemes.$peek0() != (-536870871))
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $this.$lexemes.$next0();
                }
            } else {
                b: {
                    c: {
                        switch ($ch) {
                            case -2147483599:
                            case -2147483598:
                            case -2147483597:
                            case -2147483596:
                            case -2147483595:
                            case -2147483594:
                            case -2147483593:
                            case -2147483592:
                            case -2147483591:
                                break c;
                            case -2147483583:
                                break;
                            case -2147483582:
                                $this.$lexemes.$next0();
                                $term = jur_WordBoundary__init_0(0);
                                break a;
                            case -2147483577:
                                $this.$lexemes.$next0();
                                $term = jur_PreviousMatch__init_0();
                                break a;
                            case -2147483558:
                                $this.$lexemes.$next0();
                                $term = new jur_EOLSet;
                                var$5 = $this.$consCount0 + 1 | 0;
                                $this.$consCount0 = var$5;
                                jur_EOLSet__init_($term, var$5);
                                break a;
                            case -2147483550:
                                $this.$lexemes.$next0();
                                $term = jur_WordBoundary__init_0(1);
                                break a;
                            case -2147483526:
                                $this.$lexemes.$next0();
                                $term = jur_EOISet__init_0();
                                break a;
                            case -536870876:
                                $this.$lexemes.$next0();
                                $this.$consCount0 = $this.$consCount0 + 1 | 0;
                                if (jur_Pattern_hasFlag($this, 8)) {
                                    if (jur_Pattern_hasFlag($this, 1)) {
                                        $term = jur_UMultiLineEOLSet__init_0($this.$consCount0);
                                        break a;
                                    }
                                    $term = jur_MultiLineEOLSet__init_0($this.$consCount0);
                                    break a;
                                }
                                if (jur_Pattern_hasFlag($this, 1)) {
                                    $term = jur_UEOLSet__init_0($this.$consCount0);
                                    break a;
                                }
                                $term = jur_EOLSet__init_0($this.$consCount0);
                                break a;
                            case -536870866:
                                $this.$lexemes.$next0();
                                if (jur_Pattern_hasFlag($this, 32)) {
                                    $term = jur_DotAllSet__init_0();
                                    break a;
                                }
                                $term = jur_DotSet__init_0(jur_AbstractLineTerminator_getInstance($this.$flags));
                                break a;
                            case -536870821:
                                $this.$lexemes.$next0();
                                $negative = 0;
                                if ($this.$lexemes.$peek0() == (-536870818)) {
                                    $negative = 1;
                                    $this.$lexemes.$next0();
                                }
                                $term = jur_Pattern_processRange($this, $negative, $last);
                                if ($this.$lexemes.$peek0() != (-536870819))
                                    $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                                $this.$lexemes.$setMode(1);
                                $this.$lexemes.$next0();
                                break a;
                            case -536870818:
                                $this.$lexemes.$next0();
                                $this.$consCount0 = $this.$consCount0 + 1 | 0;
                                if (!jur_Pattern_hasFlag($this, 8)) {
                                    $term = jur_SOLSet__init_0();
                                    break a;
                                }
                                $term = jur_MultiLineSOLSet__init_0(jur_AbstractLineTerminator_getInstance($this.$flags));
                                break a;
                            case 0:
                                $cc = $this.$lexemes.$peekSpecial();
                                if ($cc !== null)
                                    $term = jur_Pattern_processRangeSet($this, $cc);
                                else {
                                    if ($this.$lexemes.$isEmpty()) {
                                        $term = jur_EmptySet__init_($last);
                                        break a;
                                    }
                                    $term = jur_CharSet__init_($ch & 65535);
                                }
                                $this.$lexemes.$next0();
                                break a;
                            default:
                                break b;
                        }
                        $this.$lexemes.$next0();
                        $term = jur_SOLSet__init_0();
                        break a;
                    }
                    $number = ($ch & 2147483647) - 48 | 0;
                    if ($this.$globalGroupIndex < $number)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $this.$lexemes.$next0();
                    $this.$consCount0 = $this.$consCount0 + 1 | 0;
                    $term = !jur_Pattern_hasFlag($this, 2) ? jur_BackReferenceSet__init_0($number, $this.$consCount0) : jur_Pattern_hasFlag($this, 64) ? jur_UCIBackReferenceSet__init_0($number, $this.$consCount0) : jur_CIBackReferenceSet__init_0($number, $this.$consCount0);
                    $this.$backRefs.data[$number].$isBackReferenced = 1;
                    $this.$needsBackRefReplacement = 1;
                    break a;
                }
                if ($ch >= 0 && !$this.$lexemes.$isSpecial()) {
                    $term = jur_Pattern_processCharSet($this, $ch);
                    $this.$lexemes.$next0();
                } else if ($ch == (-536870788))
                    $term = jur_EmptySet__init_($last);
                else {
                    if ($ch != (-536870871)) {
                        var$9 = new jur_PatternSyntaxException;
                        var$10 = !$this.$lexemes.$isSpecial() ? jl_Character_toString($ch & 65535) : ($this.$lexemes.$peekSpecial()).$toString();
                        var$11 = $this.$lexemes;
                        jur_PatternSyntaxException__init_0(var$9, var$10, var$11.$toString(), $this.$lexemes.$getIndex());
                        $rt_throw(var$9);
                    }
                    if ($last instanceof jur_FinalSet)
                        $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), $this.$lexemes.$toString(), $this.$lexemes.$getIndex()));
                    $term = jur_EmptySet__init_($last);
                }
            }
        }
        if ($ch != (-16777176))
            break;
    }
    return $term;
},
jur_Pattern_processRange = ($this, $negative, $last) => {
    let $res, $rangeSet;
    $res = jur_Pattern_processRangeExpression($this, $negative);
    $rangeSet = jur_Pattern_processRangeSet($this, $res);
    $rangeSet.$setNext($last);
    return $rangeSet;
},
jur_Pattern_processRangeExpression = ($this, $alt) => {
    let $res, $buffer, $intersection, $notClosed, $firstInClass, var$7, $cur, $negative, $cs, $$je;
    $res = jur_CharClass__init_3($alt, jur_Pattern_hasFlag($this, 2), jur_Pattern_hasFlag($this, 64));
    $buffer = (-1);
    $intersection = 0;
    $notClosed = 0;
    $firstInClass = 1;
    a: {
        b: {
            c: while (true) {
                if ($this.$lexemes.$isEmpty())
                    break a;
                $notClosed = $this.$lexemes.$peek0() == (-536870819) && !$firstInClass ? 0 : 1;
                if (!$notClosed)
                    break a;
                d: {
                    switch ($this.$lexemes.$peek0()) {
                        case -536870874:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = $this.$lexemes.$next0();
                            if ($this.$lexemes.$peek0() != (-536870874)) {
                                $buffer = 38;
                                break d;
                            }
                            if ($this.$lexemes.$lookAhead() == (-536870821)) {
                                $this.$lexemes.$next0();
                                $intersection = 1;
                                $buffer = (-1);
                                break d;
                            }
                            $this.$lexemes.$next0();
                            if ($firstInClass) {
                                $res = jur_Pattern_processRangeExpression($this, 0);
                                break d;
                            }
                            if ($this.$lexemes.$peek0() == (-536870819))
                                break d;
                            $res.$intersection(jur_Pattern_processRangeExpression($this, 0));
                            break d;
                        case -536870867:
                            if (!$firstInClass && $this.$lexemes.$lookAhead() != (-536870819)) {
                                var$7 = $this.$lexemes;
                                if (var$7.$lookAhead() != (-536870821) && $buffer >= 0) {
                                    $this.$lexemes.$next0();
                                    $cur = $this.$lexemes.$peek0();
                                    if ($this.$lexemes.$isSpecial())
                                        break c;
                                    if ($cur < 0) {
                                        var$7 = $this.$lexemes;
                                        if (var$7.$lookAhead() != (-536870819)) {
                                            var$7 = $this.$lexemes;
                                            if (var$7.$lookAhead() != (-536870821) && $buffer >= 0)
                                                break c;
                                        }
                                    }
                                    e: {
                                        try {
                                            if (jur_Lexer_isLetter($cur))
                                                break e;
                                            $cur = $cur & 65535;
                                            break e;
                                        } catch ($$e) {
                                            $$je = $rt_wrapException($$e);
                                            if ($$je instanceof jl_Exception) {
                                                break b;
                                            } else {
                                                throw $$e;
                                            }
                                        }
                                    }
                                    try {
                                        $res.$add0($buffer, $cur);
                                    } catch ($$e) {
                                        $$je = $rt_wrapException($$e);
                                        if ($$je instanceof jl_Exception) {
                                            break b;
                                        } else {
                                            throw $$e;
                                        }
                                    }
                                    $this.$lexemes.$next0();
                                    $buffer = (-1);
                                    break d;
                                }
                            }
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 45;
                            $this.$lexemes.$next0();
                            break d;
                        case -536870821:
                            if ($buffer >= 0) {
                                $res.$add($buffer);
                                $buffer = (-1);
                            }
                            $this.$lexemes.$next0();
                            $negative = 0;
                            if ($this.$lexemes.$peek0() == (-536870818)) {
                                $this.$lexemes.$next0();
                                $negative = 1;
                            }
                            if (!$intersection)
                                $res.$union(jur_Pattern_processRangeExpression($this, $negative));
                            else
                                $res.$intersection(jur_Pattern_processRangeExpression($this, $negative));
                            $intersection = 0;
                            $this.$lexemes.$next0();
                            break d;
                        case -536870819:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 93;
                            $this.$lexemes.$next0();
                            break d;
                        case -536870818:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $buffer = 94;
                            $this.$lexemes.$next0();
                            break d;
                        case 0:
                            if ($buffer >= 0)
                                $res.$add($buffer);
                            $cs = $this.$lexemes.$peekSpecial();
                            if ($cs === null)
                                $buffer = 0;
                            else {
                                $res.$add12($cs);
                                $buffer = (-1);
                            }
                            $this.$lexemes.$next0();
                            break d;
                        default:
                    }
                    if ($buffer >= 0)
                        $res.$add($buffer);
                    $buffer = $this.$lexemes.$next0();
                }
                $firstInClass = 0;
            }
            $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), jur_Pattern_pattern($this), $this.$lexemes.$getIndex()));
        }
        $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), jur_Pattern_pattern($this), $this.$lexemes.$getIndex()));
    }
    if (!$notClosed) {
        if ($buffer >= 0)
            $res.$add($buffer);
        return $res;
    }
    $rt_throw(jur_PatternSyntaxException__init_($rt_s(60), jur_Pattern_pattern($this), $this.$lexemes.$getIndex() - 1 | 0));
},
jur_Pattern_processCharSet = ($this, $ch) => {
    let $isSupplCodePoint;
    $isSupplCodePoint = jl_Character_isSupplementaryCodePoint($ch);
    if (jur_Pattern_hasFlag($this, 2)) {
        a: {
            if (!($ch >= 97 && $ch <= 122)) {
                if ($ch < 65)
                    break a;
                if ($ch > 90)
                    break a;
            }
            return jur_CICharSet__init_0($ch & 65535);
        }
        if (jur_Pattern_hasFlag($this, 64) && $ch > 128) {
            if ($isSupplCodePoint)
                return jur_UCISupplCharSet__init_0($ch);
            if (jur_Lexer_isLowSurrogate($ch))
                return jur_LowSurrogateCharSet__init_0($ch & 65535);
            if (!jur_Lexer_isHighSurrogate($ch))
                return jur_UCICharSet__init_0($ch & 65535);
            return jur_HighSurrogateCharSet__init_0($ch & 65535);
        }
    }
    if ($isSupplCodePoint)
        return jur_SupplCharSet__init_0($ch);
    if (jur_Lexer_isLowSurrogate($ch))
        return jur_LowSurrogateCharSet__init_0($ch & 65535);
    if (!jur_Lexer_isHighSurrogate($ch))
        return jur_CharSet__init_($ch & 65535);
    return jur_HighSurrogateCharSet__init_0($ch & 65535);
},
jur_Pattern_processRangeSet = ($this, $charClass) => {
    let $surrogates, $lowHighSurrRangeSet;
    if (!$charClass.$hasLowHighSurrogates()) {
        if (!$charClass.$mayContainSupplCodepoints()) {
            if ($charClass.$hasUCI())
                return jur_UCIRangeSet__init_($charClass);
            return jur_RangeSet__init_0($charClass);
        }
        if ($charClass.$hasUCI())
            return jur_UCISupplRangeSet__init_0($charClass);
        return jur_SupplRangeSet__init_0($charClass);
    }
    $surrogates = $charClass.$getSurrogates();
    $lowHighSurrRangeSet = jur_LowHighSurrogateRangeSet__init_0($surrogates);
    if (!$charClass.$mayContainSupplCodepoints()) {
        if ($charClass.$hasUCI())
            return jur_CompositeRangeSet__init_(jur_UCIRangeSet__init_($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
        return jur_CompositeRangeSet__init_(jur_RangeSet__init_0($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
    }
    if ($charClass.$hasUCI())
        return jur_CompositeRangeSet__init_(jur_UCISupplRangeSet__init_0($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
    return jur_CompositeRangeSet__init_(jur_SupplRangeSet__init_0($charClass.$getWithoutSurrogates()), $lowHighSurrRangeSet);
},
jur_Pattern_compile = $pattern => {
    return jur_Pattern_compile0($pattern, 0);
},
jur_Pattern_finalizeCompile = $this => {
    if ($this.$needsBackRefReplacement)
        $this.$start3.$processSecondPass();
},
jur_Pattern_quote = $s => {
    let $sb, $apos, var$4, $apos_0;
    $sb = (jl_StringBuilder__init_()).$append1($rt_s(623));
    $apos = 0;
    while (true) {
        var$4 = $s.$indexOf3($rt_s(624), $apos);
        if (var$4 < 0)
            break;
        $apos_0 = var$4 + 2 | 0;
        ($sb.$append1($s.$substring($apos, $apos_0))).$append1($rt_s(625));
        $apos = $apos_0;
    }
    return (($sb.$append1($s.$substring0($apos))).$append1($rt_s(624))).$toString();
},
jur_Pattern_groupCount = $this => {
    return $this.$globalGroupIndex;
},
jur_Pattern_compCount = $this => {
    return $this.$compCount0 + 1 | 0;
},
jur_Pattern_consCount = $this => {
    return $this.$consCount0 + 1 | 0;
},
jur_Pattern_getSupplement = $ch => {
    if ($ch >= 97 && $ch <= 122)
        $ch = ($ch - 32 | 0) & 65535;
    else if ($ch >= 65 && $ch <= 90)
        $ch = ($ch + 32 | 0) & 65535;
    return $ch;
},
jur_Pattern_hasFlag = ($this, $flag) => {
    return ($this.$flags & $flag) != $flag ? 0 : 1;
},
jur_Pattern__init_ = $this => {
    jl_Object__init_($this);
    $this.$backRefs = $rt_createArray(jur_FSet, 10);
    $this.$globalGroupIndex = (-1);
    $this.$compCount0 = (-1);
    $this.$consCount0 = (-1);
},
jur_Pattern__init_0 = () => {
    let var_0 = new jur_Pattern();
    jur_Pattern__init_(var_0);
    return var_0;
},
ji_UnsupportedEncodingException = $rt_classWithoutFields(ji_IOException),
ji_UnsupportedEncodingException__init_ = ($this, $message) => {
    ji_IOException__init_($this, $message);
},
ji_UnsupportedEncodingException__init_0 = var_0 => {
    let var_1 = new ji_UnsupportedEncodingException();
    ji_UnsupportedEncodingException__init_(var_1, var_0);
    return var_1;
},
jur_PosAltGroupQuantifierSet = $rt_classWithoutFields(jur_AltGroupQuantifierSet),
jur_PosAltGroupQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_AltGroupQuantifierSet__init_($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
},
jur_PosAltGroupQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_PosAltGroupQuantifierSet();
    jur_PosAltGroupQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_PosAltGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $nextIndex;
    $nextIndex = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
    if ($nextIndex <= 0)
        $nextIndex = $stringIndex;
    return $this.$next1.$matches($nextIndex, $testString, $matchResult);
},
jur_PosAltGroupQuantifierSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
cbgm_Interpolation$12 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$12__init_ = $this => {
    cbgm_Interpolation__init_($this);
},
cbgm_Interpolation$12__init_0 = () => {
    let var_0 = new cbgm_Interpolation$12();
    cbgm_Interpolation$12__init_(var_0);
    return var_0;
},
cbgm_Interpolation$13 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$13__init_ = $this => {
    cbgm_Interpolation__init_($this);
},
cbgm_Interpolation$13__init_0 = () => {
    let var_0 = new cbgm_Interpolation$13();
    cbgm_Interpolation$13__init_(var_0);
    return var_0;
},
cbgm_Interpolation$14 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$14__init_ = $this => {
    cbgm_Interpolation__init_($this);
},
cbgm_Interpolation$14__init_0 = () => {
    let var_0 = new cbgm_Interpolation$14();
    cbgm_Interpolation$14__init_(var_0);
    return var_0;
};
function cbgm_Rectangle() {
    let a = this; jl_Object.call(a);
    a.$x2 = 0.0;
    a.$y2 = 0.0;
    a.$width1 = 0.0;
    a.$height1 = 0.0;
}
let cbgm_Rectangle_tmp = null,
cbgm_Rectangle_tmp2 = null,
cbgm_Rectangle_$callClinit = () => {
    cbgm_Rectangle_$callClinit = $rt_eraseClinit(cbgm_Rectangle);
    cbgm_Rectangle__clinit_();
},
cbgm_Rectangle__init_0 = $this => {
    cbgm_Rectangle_$callClinit();
    jl_Object__init_($this);
},
cbgm_Rectangle__init_ = () => {
    let var_0 = new cbgm_Rectangle();
    cbgm_Rectangle__init_0(var_0);
    return var_0;
},
cbgm_Rectangle_set = ($this, $x, $y, $width, $height) => {
    $this.$x2 = $x;
    $this.$y2 = $y;
    $this.$width1 = $width;
    $this.$height1 = $height;
    return $this;
},
cbgm_Rectangle_toString = $this => {
    return ((((((((((jl_StringBuilder__init_()).$append1($rt_s(626))).$append20($this.$x2)).$append1($rt_s(426))).$append20($this.$y2)).$append1($rt_s(426))).$append20($this.$width1)).$append1($rt_s(426))).$append20($this.$height1)).$append1($rt_s(627))).$toString();
},
cbgm_Rectangle_hashCode = $this => {
    let var$1;
    var$1 = 31 + cbgu_NumberUtils_floatToRawIntBits($this.$height1) | 0;
    var$1 = (31 * var$1 | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$width1) | 0;
    var$1 = (31 * var$1 | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$x2) | 0;
    var$1 = (31 * var$1 | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$y2) | 0;
    return var$1;
},
cbgm_Rectangle_equals = ($this, $obj) => {
    let $other;
    if ($this === $obj)
        return 1;
    if ($obj === null)
        return 0;
    if (jl_Object_getClass($this) !== jl_Object_getClass($obj))
        return 0;
    $other = $obj;
    if (cbgu_NumberUtils_floatToRawIntBits($this.$height1) != cbgu_NumberUtils_floatToRawIntBits($other.$height1))
        return 0;
    if (cbgu_NumberUtils_floatToRawIntBits($this.$width1) != cbgu_NumberUtils_floatToRawIntBits($other.$width1))
        return 0;
    if (cbgu_NumberUtils_floatToRawIntBits($this.$x2) != cbgu_NumberUtils_floatToRawIntBits($other.$x2))
        return 0;
    if (cbgu_NumberUtils_floatToRawIntBits($this.$y2) == cbgu_NumberUtils_floatToRawIntBits($other.$y2))
        return 1;
    return 0;
},
cbgm_Rectangle__clinit_ = () => {
    cbgm_Rectangle_tmp = cbgm_Rectangle__init_();
    cbgm_Rectangle_tmp2 = cbgm_Rectangle__init_();
},
cbgm_Interpolation$10 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$10__init_ = $this => {
    cbgm_Interpolation__init_($this);
},
cbgm_Interpolation$10__init_0 = () => {
    let var_0 = new cbgm_Interpolation$10();
    cbgm_Interpolation$10__init_(var_0);
    return var_0;
},
cbgm_Interpolation$11 = $rt_classWithoutFields(cbgm_Interpolation),
cbgm_Interpolation$11__init_ = $this => {
    cbgm_Interpolation__init_($this);
},
cbgm_Interpolation$11__init_0 = () => {
    let var_0 = new cbgm_Interpolation$11();
    cbgm_Interpolation$11__init_(var_0);
    return var_0;
};
function cgxgbt_TeaGraphics$2() {
    cbg_Graphics$DisplayMode.call(this);
    this.$this$040 = null;
}
let cgxgbt_TeaGraphics$2__init_ = ($this, $this$0, $arg0, $arg1, $arg2, $arg3) => {
    $this.$this$040 = $this$0;
    cbg_Graphics$DisplayMode__init_($this, $arg0, $arg1, $arg2, $arg3);
},
cgxgbt_TeaGraphics$2__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cgxgbt_TeaGraphics$2();
    cgxgbt_TeaGraphics$2__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
};
function cgxgbt_TeaGraphics$1() {
    jl_Object.call(this);
    this.$this$034 = null;
}
let cgxgbt_TeaGraphics$1__init_ = ($this, $this$0) => {
    $this.$this$034 = $this$0;
    jl_Object__init_($this);
},
cgxgbt_TeaGraphics$1__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaGraphics$1();
    cgxgbt_TeaGraphics$1__init_(var_1, var_0);
    return var_1;
},
cgxgbt_TeaGraphics$1_fullscreenChanged = $this => {
    return;
},
cgxgbt_TeaGraphics$1_fullscreenChanged$exported$0 = var$1 => {
    var$1.$fullscreenChanged();
};
function cbggg_Environment() {
    cbggg_Attributes.call(this);
    this.$shadowMap = null;
}
let cbggg_Environment__init_ = $this => {
    cbggg_Attributes__init_($this);
},
cbggg_Environment__init_0 = () => {
    let var_0 = new cbggg_Environment();
    cbggg_Environment__init_(var_0);
    return var_0;
},
cbggg_Environment_add = ($this, $light) => {
    let $dirLights;
    cbggga_DirectionalLightsAttribute_$callClinit();
    $dirLights = cbggg_Attributes_get($this, cbggga_DirectionalLightsAttribute_Type);
    if ($dirLights === null) {
        $dirLights = cbggga_DirectionalLightsAttribute__init_1();
        cbggg_Attributes_set($this, $dirLights);
    }
    $dirLights.$lights.$add1($light);
    return $this;
};
function cbg_AbstractInput() {
    let a = this; jl_Object.call(a);
    a.$pressedKeys = null;
    a.$justPressedKeys = null;
    a.$keysToCatch = null;
}
let cbg_AbstractInput__init_ = $this => {
    jl_Object__init_($this);
    $this.$keysToCatch = cbgu_IntSet__init_1();
    $this.$pressedKeys = $rt_createBooleanArray(256);
    $this.$justPressedKeys = $rt_createBooleanArray(256);
},
cbg_AbstractInput_isCatchKey = ($this, $keycode) => {
    return $this.$keysToCatch.$contains($keycode);
},
cbgu_Collections = $rt_classWithoutFields(),
cbgu_Collections_allocateIterators = 0;
function cgxjl_JParserLibraryLoader$loadScript$lambda$_12_1() {
    let a = this; jl_Object.call(a);
    a.$_024 = null;
    a.$_110 = null;
    a.$_27 = null;
}
let cgxjl_JParserLibraryLoader$loadScript$lambda$_12_1__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_024 = var$1;
    var$0.$_110 = var$2;
    var$0.$_27 = var$3;
},
cgxjl_JParserLibraryLoader$loadScript$lambda$_12_1__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cgxjl_JParserLibraryLoader$loadScript$lambda$_12_1();
    cgxjl_JParserLibraryLoader$loadScript$lambda$_12_1__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxjl_JParserLibraryLoader$loadScript$lambda$_12_1_handleEvent = (var$0, var$1) => {
    cgxjl_JParserLibraryLoader_lambda$loadScript$4(var$0.$_024, var$0.$_110, var$0.$_27, var$1);
},
cgxjl_JParserLibraryLoader$loadScript$lambda$_12_1_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
};
function cbgu_Sort() {
    jl_Object.call(this);
    this.$timSort = null;
}
let cbgu_Sort_instance = null,
cbgu_Sort__init_ = $this => {
    jl_Object__init_($this);
},
cbgu_Sort__init_0 = () => {
    let var_0 = new cbgu_Sort();
    cbgu_Sort__init_(var_0);
    return var_0;
},
cbgu_Sort_sort = ($this, $a, $c, $fromIndex, $toIndex) => {
    if ($this.$timSort === null)
        $this.$timSort = cbgu_TimSort__init_0();
    $this.$timSort.$doSort($a, $c, $fromIndex, $toIndex);
},
cbgu_Sort_instance0 = () => {
    if (cbgu_Sort_instance === null)
        cbgu_Sort_instance = cbgu_Sort__init_0();
    return cbgu_Sort_instance;
};
function jur_UnicodeCategory() {
    jur_AbstractCharClass.call(this);
    this.$category = 0;
}
let jur_UnicodeCategory__init_ = ($this, $category) => {
    jur_AbstractCharClass__init_($this);
    $this.$category = $category;
},
jur_UnicodeCategory__init_0 = var_0 => {
    let var_1 = new jur_UnicodeCategory();
    jur_UnicodeCategory__init_(var_1, var_0);
    return var_1;
},
jur_UnicodeCategory_contains = ($this, $ch) => {
    return $this.$alt ^ ($this.$category != jl_Character_getType0($ch & 65535) ? 0 : 1);
},
jur_UnicodeCategoryScope = $rt_classWithoutFields(jur_UnicodeCategory),
jur_UnicodeCategoryScope__init_ = ($this, $category) => {
    jur_UnicodeCategory__init_($this, $category);
},
jur_UnicodeCategoryScope__init_0 = var_0 => {
    let var_1 = new jur_UnicodeCategoryScope();
    jur_UnicodeCategoryScope__init_(var_1, var_0);
    return var_1;
},
jur_UnicodeCategoryScope_contains = ($this, $ch) => {
    return $this.$alt ^ (!($this.$category >> jl_Character_getType0($ch & 65535) & 1) ? 0 : 1);
};
function jnc_UnmappableCharacterException() {
    jnc_CharacterCodingException.call(this);
    this.$length7 = 0;
}
let jnc_UnmappableCharacterException__init_ = ($this, $length) => {
    jnc_CharacterCodingException__init_($this);
    $this.$length7 = $length;
},
jnc_UnmappableCharacterException__init_0 = var_0 => {
    let var_1 = new jnc_UnmappableCharacterException();
    jnc_UnmappableCharacterException__init_(var_1, var_0);
    return var_1;
},
jnc_UnmappableCharacterException_getMessage = $this => {
    let var$1, var$2;
    var$1 = $this.$length7;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(var$2, $rt_s(628)), var$1);
    return jl_StringBuilder_toString(var$2);
},
beb_BulletGame = $rt_classWithoutFields(cbg_Game),
beb_BulletGame__init_ = $this => {
    cbg_Game__init_($this);
},
beb_BulletGame__init_0 = () => {
    let var_0 = new beb_BulletGame();
    beb_BulletGame__init_(var_0);
    return var_0;
},
beb_BulletGame_create = $this => {
    $this.$setScreen(beb_BulletInitScreen__init_0($this));
};
function otcit_FloatAnalyzer$Result() {
    let a = this; jl_Object.call(a);
    a.$mantissa = 0;
    a.$exponent0 = 0;
    a.$sign0 = 0;
}
let otcit_FloatAnalyzer$Result__init_ = $this => {
    jl_Object__init_($this);
},
otcit_FloatAnalyzer$Result__init_0 = () => {
    let var_0 = new otcit_FloatAnalyzer$Result();
    otcit_FloatAnalyzer$Result__init_(var_0);
    return var_0;
},
jur_UCIDecomposedCharSet = $rt_classWithoutFields(jur_DecomposedCharSet),
jur_UCIDecomposedCharSet__init_ = ($this, $decomp, $decomposedCharLength) => {
    jur_DecomposedCharSet__init_($this, $decomp, $decomposedCharLength);
},
jur_UCIDecomposedCharSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_UCIDecomposedCharSet();
    jur_UCIDecomposedCharSet__init_(var_2, var_0, var_1);
    return var_2;
},
jn_FloatBuffer = $rt_classWithoutFields(jn_Buffer),
jn_FloatBuffer__init_ = ($this, $position, $limit) => {
    jn_Buffer__init_($this);
    $this.$position6 = $position;
    $this.$limit4 = $limit;
},
jn_FloatBuffer_wrap0 = ($array, $offset, $length) => {
    let var$4, $result;
    var$4 = $array.data;
    $result = jn_FloatBufferOverTypedArray__init_(0, var$4.length, 0, $array.data, $array);
    $result.$position6 = $offset;
    $result.$limit4 = $offset + $length | 0;
    return $result;
},
jn_FloatBuffer_wrap = $array => {
    return jn_FloatBuffer_wrap0($array, 0, $array.data.length);
},
jn_FloatBuffer_put = ($this, $src, $offset, $length) => {
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if (jn_Buffer_remaining($this) < $length)
        $rt_throw(jn_BufferOverflowException__init_());
    if ($length >= 0 && $offset >= 0 && ($offset + $length | 0) <= $src.data.length) {
        $this.$putImpl4($this.$position6, $src, $offset, $length);
        $this.$position6 = $this.$position6 + $length | 0;
        return $this;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jn_FloatBuffer_clear = $this => {
    jn_Buffer_clear($this);
    return $this;
},
jn_FloatBuffer_flip = $this => {
    jn_Buffer_flip($this);
    return $this;
},
jn_FloatBuffer_limit = ($this, $newLimit) => {
    jn_Buffer_limit0($this, $newLimit);
    return $this;
},
jn_FloatBuffer_position0 = ($this, $newPosition) => {
    jn_Buffer_position0($this, $newPosition);
    return $this;
},
jn_FloatBuffer_flip0 = $this => {
    return jn_FloatBuffer_flip($this);
},
jn_FloatBuffer_clear0 = $this => {
    return jn_FloatBuffer_clear($this);
},
jn_FloatBuffer_limit0 = ($this, var$1) => {
    return $this.$limit2(var$1);
},
jn_FloatBuffer_position = ($this, var$1) => {
    return $this.$position4(var$1);
},
jn_FloatBufferImpl = $rt_classWithoutFields(jn_FloatBuffer),
jn_FloatBufferImpl__init_ = ($this, $position, $limit) => {
    jn_FloatBuffer__init_($this, $position, $limit);
},
jn_FloatBufferImpl_get = ($this, $index) => {
    let var$2, var$3, var$4;
    if ($index >= 0 && $index < $this.$limit4)
        return $this.$getElement0($index);
    var$2 = new jl_IndexOutOfBoundsException;
    var$3 = $this.$limit4;
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$4, $rt_s(344)), $index), $rt_s(65)), var$3), 41);
    jl_IndexOutOfBoundsException__init_1(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
},
jn_FloatBufferImpl_put = ($this, $index, $b) => {
    let var$3, var$4, var$5;
    if ($this.$isReadOnly())
        $rt_throw(jn_ReadOnlyBufferException__init_());
    if ($index >= 0 && $index < $this.$limit4) {
        $this.$putElement0($index, $b);
        return $this;
    }
    var$3 = new jl_IndexOutOfBoundsException;
    var$4 = $this.$limit4;
    var$5 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append0(jl_StringBuilder_append(var$5, $rt_s(344)), $index), $rt_s(65)), var$4), 41);
    jl_IndexOutOfBoundsException__init_1(var$3, jl_StringBuilder_toString(var$5));
    $rt_throw(var$3);
},
jn_FloatBufferImpl_isReadOnly = $this => {
    return $this.$readOnly();
};
function cgxgbta_AssetDownloadImpl$loadScript$lambda$_2_0() {
    let a = this; jl_Object.call(a);
    a.$_01 = null;
    a.$_11 = null;
    a.$_21 = null;
}
let cgxgbta_AssetDownloadImpl$loadScript$lambda$_2_0__init_ = (var$0, var$1, var$2, var$3) => {
    jl_Object__init_(var$0);
    var$0.$_01 = var$1;
    var$0.$_11 = var$2;
    var$0.$_21 = var$3;
},
cgxgbta_AssetDownloadImpl$loadScript$lambda$_2_0__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbta_AssetDownloadImpl$loadScript$lambda$_2_0();
    cgxgbta_AssetDownloadImpl$loadScript$lambda$_2_0__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbta_AssetDownloadImpl$loadScript$lambda$_2_0_handleEvent = (var$0, var$1) => {
    cgxgbta_AssetDownloadImpl_lambda$loadScript$0(var$0.$_01, var$0.$_11, var$0.$_21, var$1);
},
cgxgbta_AssetDownloadImpl$loadScript$lambda$_2_0_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
},
jl_String$_clinit_$lambda$_115_0 = $rt_classWithoutFields(),
jl_String$_clinit_$lambda$_115_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
jl_String$_clinit_$lambda$_115_0__init_0 = () => {
    let var_0 = new jl_String$_clinit_$lambda$_115_0();
    jl_String$_clinit_$lambda$_115_0__init_(var_0);
    return var_0;
};
function cgxjl_JParserLibraryLoader$loadScript$lambda$_12_0() {
    jl_Object.call(this);
    this.$_014 = null;
}
let cgxjl_JParserLibraryLoader$loadScript$lambda$_12_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_014 = var$1;
},
cgxjl_JParserLibraryLoader$loadScript$lambda$_12_0__init_0 = var_0 => {
    let var_1 = new cgxjl_JParserLibraryLoader$loadScript$lambda$_12_0();
    cgxjl_JParserLibraryLoader$loadScript$lambda$_12_0__init_(var_1, var_0);
    return var_1;
},
cgxjl_JParserLibraryLoader$loadScript$lambda$_12_0_handleEvent = (var$0, var$1) => {
    cgxjl_JParserLibraryLoader_lambda$loadScript$3(var$0.$_014, var$1);
},
cgxjl_JParserLibraryLoader$loadScript$lambda$_12_0_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
};
function jur_AbstractCharClass$LazyJavaWhitespace$1() {
    jur_AbstractCharClass.call(this);
    this.$this$053 = null;
}
let jur_AbstractCharClass$LazyJavaWhitespace$1__init_ = ($this, $this$0) => {
    $this.$this$053 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaWhitespace$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaWhitespace$1();
    jur_AbstractCharClass$LazyJavaWhitespace$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaWhitespace$1_contains = ($this, $ch) => {
    return jl_Character_isWhitespace($ch);
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaJavaIdentifierStart();
    jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
},
cbgg_Pixmap$Blending = $rt_classWithoutFields(jl_Enum),
cbgg_Pixmap$Blending_None = null,
cbgg_Pixmap$Blending_SourceOver = null,
cbgg_Pixmap$Blending_$VALUES = null,
cbgg_Pixmap$Blending_$callClinit = () => {
    cbgg_Pixmap$Blending_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Blending);
    cbgg_Pixmap$Blending__clinit_();
},
cbgg_Pixmap$Blending__init_0 = ($this, var$1, var$2) => {
    cbgg_Pixmap$Blending_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cbgg_Pixmap$Blending__init_ = (var_0, var_1) => {
    let var_2 = new cbgg_Pixmap$Blending();
    cbgg_Pixmap$Blending__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgg_Pixmap$Blending__clinit_ = () => {
    let var$1, var$2;
    cbgg_Pixmap$Blending_None = cbgg_Pixmap$Blending__init_($rt_s(629), 0);
    cbgg_Pixmap$Blending_SourceOver = cbgg_Pixmap$Blending__init_($rt_s(630), 1);
    var$1 = $rt_createArray(cbgg_Pixmap$Blending, 2);
    var$2 = var$1.data;
    var$2[0] = cbgg_Pixmap$Blending_None;
    var$2[1] = cbgg_Pixmap$Blending_SourceOver;
    cbgg_Pixmap$Blending_$VALUES = var$1;
},
cgxgbt_TeaApplication$AppState = $rt_classWithoutFields(jl_Enum),
cgxgbt_TeaApplication$AppState_INIT = null,
cgxgbt_TeaApplication$AppState_APP_LOOP = null,
cgxgbt_TeaApplication$AppState_$VALUES = null,
cgxgbt_TeaApplication$AppState_$callClinit = () => {
    cgxgbt_TeaApplication$AppState_$callClinit = $rt_eraseClinit(cgxgbt_TeaApplication$AppState);
    cgxgbt_TeaApplication$AppState__clinit_();
},
cgxgbt_TeaApplication$AppState_values = () => {
    cgxgbt_TeaApplication$AppState_$callClinit();
    return cgxgbt_TeaApplication$AppState_$VALUES.$clone0();
},
cgxgbt_TeaApplication$AppState__init_0 = ($this, var$1, var$2) => {
    cgxgbt_TeaApplication$AppState_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cgxgbt_TeaApplication$AppState__init_ = (var_0, var_1) => {
    let var_2 = new cgxgbt_TeaApplication$AppState();
    cgxgbt_TeaApplication$AppState__init_0(var_2, var_0, var_1);
    return var_2;
},
cgxgbt_TeaApplication$AppState__clinit_ = () => {
    let var$1, var$2;
    cgxgbt_TeaApplication$AppState_INIT = cgxgbt_TeaApplication$AppState__init_($rt_s(631), 0);
    cgxgbt_TeaApplication$AppState_APP_LOOP = cgxgbt_TeaApplication$AppState__init_($rt_s(632), 1);
    var$1 = $rt_createArray(cgxgbt_TeaApplication$AppState, 2);
    var$2 = var$1.data;
    var$2[0] = cgxgbt_TeaApplication$AppState_INIT;
    var$2[1] = cgxgbt_TeaApplication$AppState_APP_LOOP;
    cgxgbt_TeaApplication$AppState_$VALUES = var$1;
},
otjt_Uint8Array = $rt_classWithoutFields(otjt_TypedArray),
otji_IDBFactory = $rt_classWithoutFields(),
otji_IDBFactory_getInstance = () => {
    let $factory;
    $factory = indexedDB || mozIndexedDB || webkitIndexedDB || msIndexedDB;
    if (!(typeof $factory === 'undefined' ? 1 : 0))
        return $factory;
    $rt_throw(jl_IllegalStateException__init_($rt_s(633)));
},
jl_Long = $rt_classWithoutFields(jl_Number),
jl_Long_TYPE = null,
jl_Long_$callClinit = () => {
    jl_Long_$callClinit = $rt_eraseClinit(jl_Long);
    jl_Long__clinit_();
},
jl_Long_numberOfLeadingZeros = $i => {
    let $n, var$3, var$4;
    jl_Long_$callClinit();
    if (Long_eq($i, Long_ZERO))
        return 64;
    $n = 0;
    var$3 = Long_shru($i, 32);
    if (Long_ne(var$3, Long_ZERO))
        $n = 32;
    else
        var$3 = $i;
    var$4 = Long_shru(var$3, 16);
    if (Long_eq(var$4, Long_ZERO))
        var$4 = var$3;
    else
        $n = $n | 16;
    var$3 = Long_shru(var$4, 8);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = var$4;
    else
        $n = $n | 8;
    var$4 = Long_shru(var$3, 4);
    if (Long_eq(var$4, Long_ZERO))
        var$4 = var$3;
    else
        $n = $n | 4;
    var$3 = Long_shru(var$4, 2);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = var$4;
    else
        $n = $n | 2;
    if (Long_ne(Long_shru(var$3, 1), Long_ZERO))
        $n = $n | 1;
    return (64 - $n | 0) - 1 | 0;
},
jl_Long_numberOfTrailingZeros = $i => {
    let $n, var$3, var$4;
    jl_Long_$callClinit();
    if (Long_eq($i, Long_ZERO))
        return 64;
    $n = 0;
    var$3 = Long_shl($i, 32);
    if (Long_ne(var$3, Long_ZERO))
        $n = 32;
    else
        var$3 = $i;
    var$4 = Long_shl(var$3, 16);
    if (Long_eq(var$4, Long_ZERO))
        var$4 = var$3;
    else
        $n = $n | 16;
    var$3 = Long_shl(var$4, 8);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = var$4;
    else
        $n = $n | 8;
    var$4 = Long_shl(var$3, 4);
    if (Long_eq(var$4, Long_ZERO))
        var$4 = var$3;
    else
        $n = $n | 4;
    var$3 = Long_shl(var$4, 2);
    if (Long_eq(var$3, Long_ZERO))
        var$3 = var$4;
    else
        $n = $n | 2;
    if (Long_ne(Long_shl(var$3, 1), Long_ZERO))
        $n = $n | 1;
    return (64 - $n | 0) - 1 | 0;
},
jl_Long_divideUnsigned = (var$1, var$2) => {
    return Long_udiv(var$1, var$2);
},
jl_Long_remainderUnsigned = (var$1, var$2) => {
    return Long_urem(var$1, var$2);
},
jl_Long_compareUnsigned = (var$1, var$2) => {
    return Long_ucompare(var$1, var$2);
},
jl_Long__clinit_ = () => {
    jl_Long_TYPE = $rt_cls($rt_longcls);
};
function jur_SequenceSet$IntHash() {
    let a = this; jl_Object.call(a);
    a.$table0 = null;
    a.$values5 = null;
    a.$mask = 0;
    a.$size12 = 0;
}
let jur_SequenceSet$IntHash__init_ = ($this, $size) => {
    jl_Object__init_($this);
    while ($size >= $this.$mask) {
        $this.$mask = $this.$mask << 1 | 1;
    }
    $this.$mask = $this.$mask << 1 | 1;
    $this.$table0 = $rt_createIntArray($this.$mask + 1 | 0);
    $this.$values5 = $rt_createIntArray($this.$mask + 1 | 0);
    $this.$size12 = $size;
},
jur_SequenceSet$IntHash__init_0 = var_0 => {
    let var_1 = new jur_SequenceSet$IntHash();
    jur_SequenceSet$IntHash__init_(var_1, var_0);
    return var_1;
},
jur_SequenceSet$IntHash_put = ($this, $key, $value) => {
    let $i, $hashCode, var$5;
    $i = 0;
    $hashCode = $key & $this.$mask;
    while ($this.$table0.data[$hashCode] && $this.$table0.data[$hashCode] != $key) {
        var$5 = $i + 1 | 0;
        $i = var$5 & $this.$mask;
        var$5 = $hashCode + $i | 0;
        $hashCode = var$5 & $this.$mask;
    }
    $this.$table0.data[$hashCode] = $key;
    $this.$values5.data[$hashCode] = $value;
},
jur_SequenceSet$IntHash_get = ($this, $key) => {
    let $hashCode, $i, $storedKey, var$5;
    $hashCode = $key & $this.$mask;
    $i = 0;
    while (true) {
        $storedKey = $this.$table0.data[$hashCode];
        if (!$storedKey)
            break;
        if ($storedKey == $key)
            return $this.$values5.data[$hashCode];
        var$5 = $i + 1 | 0;
        $i = var$5 & $this.$mask;
        var$5 = $hashCode + $i | 0;
        $hashCode = var$5 & $this.$mask;
    }
    return $this.$size12;
};
function cbgssu_Image() {
    let a = this; cbgssu_Widget.call(a);
    a.$scaling0 = null;
    a.$align1 = 0;
    a.$imageX = 0.0;
    a.$imageY = 0.0;
    a.$imageWidth = 0.0;
    a.$imageHeight = 0.0;
    a.$drawable = null;
}
let cbgssu_Image__init_1 = ($this, $texture) => {
    cbgssu_Image__init_($this, cbgssu_TextureRegionDrawable__init_(cbggg_TextureRegion__init_($texture)));
},
cbgssu_Image__init_2 = var_0 => {
    let var_1 = new cbgssu_Image();
    cbgssu_Image__init_1(var_1, var_0);
    return var_1;
},
cbgssu_Image__init_ = ($this, $drawable) => {
    cbgu_Scaling_$callClinit();
    cbgssu_Image__init_0($this, $drawable, cbgu_Scaling_stretch, 1);
},
cbgssu_Image__init_4 = var_0 => {
    let var_1 = new cbgssu_Image();
    cbgssu_Image__init_(var_1, var_0);
    return var_1;
},
cbgssu_Image__init_0 = ($this, $drawable, $scaling, $align) => {
    cbgssu_Widget__init_($this);
    $this.$align1 = 1;
    $this.$setDrawable($drawable);
    $this.$scaling0 = $scaling;
    $this.$align1 = $align;
    $this.$setSize($this.$getPrefWidth(), $this.$getPrefHeight());
},
cbgssu_Image__init_3 = (var_0, var_1, var_2) => {
    let var_3 = new cbgssu_Image();
    cbgssu_Image__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgssu_Image_layout = $this => {
    let $regionWidth, $regionHeight, $width, $height, $size;
    if ($this.$drawable === null)
        return;
    $regionWidth = $this.$drawable.$getMinWidth();
    $regionHeight = $this.$drawable.$getMinHeight();
    $width = $this.$getWidth();
    $height = $this.$getHeight();
    $size = $this.$scaling0.$apply5($regionWidth, $regionHeight, $width, $height);
    $this.$imageWidth = $size.$x0;
    $this.$imageHeight = $size.$y0;
    if ($this.$align1 & 8)
        $this.$imageX = 0.0;
    else if ($this.$align1 & 16)
        $this.$imageX = $width - $this.$imageWidth | 0;
    else
        $this.$imageX = $width / 2.0 - $this.$imageWidth / 2.0 | 0;
    if ($this.$align1 & 2)
        $this.$imageY = $height - $this.$imageHeight | 0;
    else if ($this.$align1 & 4)
        $this.$imageY = 0.0;
    else
        $this.$imageY = $height / 2.0 - $this.$imageHeight / 2.0 | 0;
},
cbgssu_Image_draw = ($this, $batch, $parentAlpha) => {
    let $color, $x, $y, $scaleX, $scaleY, $rotation;
    a: {
        $this.$validate();
        $color = $this.$getColor();
        $batch.$setColor0($color.$r, $color.$g, $color.$b, $color.$a * $parentAlpha);
        $x = $this.$getX();
        $y = $this.$getY();
        $scaleX = $this.$getScaleX();
        $scaleY = $this.$getScaleY();
        if ($rt_isInstance($this.$drawable, cbgssu_TransformDrawable)) {
            $rotation = $this.$getRotation();
            if ($scaleX !== 1.0)
                break a;
            if ($scaleY !== 1.0)
                break a;
            if ($rotation !== 0.0)
                break a;
        }
        if ($this.$drawable !== null)
            $this.$drawable.$draw0($batch, $x + $this.$imageX, $y + $this.$imageY, $this.$imageWidth * $scaleX, $this.$imageHeight * $scaleY);
        return;
    }
    $this.$drawable.$draw6($batch, $x + $this.$imageX, $y + $this.$imageY, $this.$getOriginX() - $this.$imageX, $this.$getOriginY() - $this.$imageY, $this.$imageWidth, $this.$imageHeight, $scaleX, $scaleY, $rotation);
},
cbgssu_Image_setDrawable = ($this, $drawable) => {
    if ($this.$drawable === $drawable)
        return;
    if ($drawable === null)
        $this.$invalidateHierarchy();
    else if (!($this.$getPrefWidth() === $drawable.$getMinWidth() && $this.$getPrefHeight() === $drawable.$getMinHeight()))
        $this.$invalidateHierarchy();
    $this.$drawable = $drawable;
},
cbgssu_Image_setScaling = ($this, $scaling) => {
    if ($scaling !== null) {
        $this.$scaling0 = $scaling;
        $this.$invalidate();
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(634)));
},
cbgssu_Image_getMinWidth = $this => {
    return 0.0;
},
cbgssu_Image_getMinHeight = $this => {
    return 0.0;
},
cbgssu_Image_getPrefWidth = $this => {
    if ($this.$drawable === null)
        return 0.0;
    return $this.$drawable.$getMinWidth();
},
cbgssu_Image_getPrefHeight = $this => {
    if ($this.$drawable === null)
        return 0.0;
    return $this.$drawable.$getMinHeight();
},
cbgssu_Image_toString = $this => {
    let $name, $className, $dotIndex;
    $name = $this.$getName();
    if ($name !== null)
        return $name;
    $className = jl_Class_getName(jl_Object_getClass($this));
    $dotIndex = $className.$lastIndexOf(46);
    if ($dotIndex != (-1))
        $className = $className.$substring0($dotIndex + 1 | 0);
    return (((((jl_StringBuilder__init_()).$append1($className.$indexOf1(36) == (-1) ? $rt_s(60) : $rt_s(635))).$append1($className)).$append1($rt_s(10))).$append($this.$drawable)).$toString();
},
otcin_Buffers = $rt_classWithoutFields(),
otcin_Buffers_free = $buffer => {
    if ($buffer.$isDirect()) {
        otcin_Buffers_releaseNative($buffer);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(636)));
},
otcin_Buffers_releaseNative = var$1 => {
    if ($rt_isInstance(var$1, jn_NativeBuffer))
        var$1.$release();
},
jur_AbstractCharClass$LazyJavaLowerCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaLowerCase__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaLowerCase__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaLowerCase();
    jur_AbstractCharClass$LazyJavaLowerCase__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaLowerCase_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaLowerCase$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
},
cbgg_Pixmap$Format = $rt_classWithoutFields(jl_Enum),
cbgg_Pixmap$Format_Alpha = null,
cbgg_Pixmap$Format_Intensity = null,
cbgg_Pixmap$Format_LuminanceAlpha = null,
cbgg_Pixmap$Format_RGB565 = null,
cbgg_Pixmap$Format_RGBA4444 = null,
cbgg_Pixmap$Format_RGB888 = null,
cbgg_Pixmap$Format_RGBA8888 = null,
cbgg_Pixmap$Format_$VALUES = null,
cbgg_Pixmap$Format_$callClinit = () => {
    cbgg_Pixmap$Format_$callClinit = $rt_eraseClinit(cbgg_Pixmap$Format);
    cbgg_Pixmap$Format__clinit_();
},
cbgg_Pixmap$Format__init_0 = ($this, var$1, var$2) => {
    cbgg_Pixmap$Format_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cbgg_Pixmap$Format__init_ = (var_0, var_1) => {
    let var_2 = new cbgg_Pixmap$Format();
    cbgg_Pixmap$Format__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgg_Pixmap$Format_toGdx2DPixmapFormat = $format => {
    let var$2, var$3, var$4;
    cbgg_Pixmap$Format_$callClinit();
    if ($format === cbgg_Pixmap$Format_Alpha)
        return 1;
    if ($format === cbgg_Pixmap$Format_Intensity)
        return 1;
    if ($format === cbgg_Pixmap$Format_LuminanceAlpha)
        return 2;
    if ($format === cbgg_Pixmap$Format_RGB565)
        return 5;
    if ($format === cbgg_Pixmap$Format_RGBA4444)
        return 6;
    if ($format === cbgg_Pixmap$Format_RGB888)
        return 3;
    if ($format === cbgg_Pixmap$Format_RGBA8888)
        return 4;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = jl_String_valueOf($format);
    var$4 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(637)), var$3);
    cbgu_GdxRuntimeException__init_0(var$2, jl_StringBuilder_toString(var$4));
    $rt_throw(var$2);
},
cbgg_Pixmap$Format_fromGdx2DPixmapFormat = $format => {
    let var$2, var$3;
    cbgg_Pixmap$Format_$callClinit();
    if ($format == 1)
        return cbgg_Pixmap$Format_Alpha;
    if ($format == 2)
        return cbgg_Pixmap$Format_LuminanceAlpha;
    if ($format == 5)
        return cbgg_Pixmap$Format_RGB565;
    if ($format == 6)
        return cbgg_Pixmap$Format_RGBA4444;
    if ($format == 3)
        return cbgg_Pixmap$Format_RGB888;
    if ($format == 4)
        return cbgg_Pixmap$Format_RGBA8888;
    var$2 = new cbgu_GdxRuntimeException;
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append0(jl_StringBuilder_append(var$3, $rt_s(638)), $format);
    cbgu_GdxRuntimeException__init_0(var$2, jl_StringBuilder_toString(var$3));
    $rt_throw(var$2);
},
cbgg_Pixmap$Format__clinit_ = () => {
    let var$1, var$2;
    cbgg_Pixmap$Format_Alpha = cbgg_Pixmap$Format__init_($rt_s(69), 0);
    cbgg_Pixmap$Format_Intensity = cbgg_Pixmap$Format__init_($rt_s(639), 1);
    cbgg_Pixmap$Format_LuminanceAlpha = cbgg_Pixmap$Format__init_($rt_s(640), 2);
    cbgg_Pixmap$Format_RGB565 = cbgg_Pixmap$Format__init_($rt_s(641), 3);
    cbgg_Pixmap$Format_RGBA4444 = cbgg_Pixmap$Format__init_($rt_s(642), 4);
    cbgg_Pixmap$Format_RGB888 = cbgg_Pixmap$Format__init_($rt_s(643), 5);
    cbgg_Pixmap$Format_RGBA8888 = cbgg_Pixmap$Format__init_($rt_s(644), 6);
    var$1 = $rt_createArray(cbgg_Pixmap$Format, 7);
    var$2 = var$1.data;
    var$2[0] = cbgg_Pixmap$Format_Alpha;
    var$2[1] = cbgg_Pixmap$Format_Intensity;
    var$2[2] = cbgg_Pixmap$Format_LuminanceAlpha;
    var$2[3] = cbgg_Pixmap$Format_RGB565;
    var$2[4] = cbgg_Pixmap$Format_RGBA4444;
    var$2[5] = cbgg_Pixmap$Format_RGB888;
    var$2[6] = cbgg_Pixmap$Format_RGBA8888;
    cbgg_Pixmap$Format_$VALUES = var$1;
};
function cgxgbt_TeaApplicationConfiguration() {
    let a = this; jl_Object.call(a);
    a.$useGL30 = 0;
    a.$windowListener = null;
    a.$storagePrefix = null;
    a.$localStoragePrefix = null;
    a.$shouldEncodePreference = 0;
    a.$showDownloadLogs = 0;
    a.$canvasID = null;
    a.$width5 = 0;
    a.$height4 = 0;
    a.$padHorizontal = 0;
    a.$padVertical = 0;
    a.$stencil = 0;
    a.$antialiasing = 0;
    a.$alpha = 0;
    a.$premultipliedAlpha = 0;
    a.$preserveDrawingBuffer = 0;
    a.$useDebugGL = 0;
    a.$usePhysicalPixels = 0;
    a.$powerPreference = null;
    a.$preloadListener = null;
    a.$baseUrlProvider = null;
}
let cgxgbt_TeaApplicationConfiguration_isFixedSizeApplication = $this => {
    return $this.$width5 && $this.$height4 ? 1 : 0;
},
cgxgbt_TeaApplicationConfiguration_isAutoSizeApplication = $this => {
    return !$this.$width5 && !$this.$height4 ? 1 : 0;
},
cgxgbt_TeaApplicationConfiguration__init_ = ($this, $canvasID) => {
    jl_Object__init_($this);
    $this.$useGL30 = 0;
    $this.$storagePrefix = $rt_s(645);
    $this.$localStoragePrefix = $rt_s(646);
    $this.$shouldEncodePreference = 0;
    $this.$showDownloadLogs = 0;
    $this.$canvasID = $rt_s(488);
    $this.$width5 = (-1);
    $this.$height4 = (-1);
    $this.$padHorizontal = 0;
    $this.$padVertical = 0;
    $this.$stencil = 0;
    $this.$antialiasing = 0;
    $this.$alpha = 0;
    $this.$premultipliedAlpha = 0;
    $this.$preserveDrawingBuffer = 0;
    $this.$useDebugGL = 0;
    $this.$usePhysicalPixels = 0;
    $this.$powerPreference = $rt_s(647);
    $this.$baseUrlProvider = cgxgbtu_TeaDefaultBaseUrlProvider__init_0();
    $this.$canvasID = $canvasID;
},
cgxgbt_TeaApplicationConfiguration__init_0 = var_0 => {
    let var_1 = new cgxgbt_TeaApplicationConfiguration();
    cgxgbt_TeaApplicationConfiguration__init_(var_1, var_0);
    return var_1;
},
bbc_btConstraintSolver = $rt_classWithoutFields(bi_IDLBase),
bbc_btConstraintSolver_NULL = null,
bbc_btConstraintSolver_T_01 = null,
bbc_btConstraintSolver_T_02 = null,
bbc_btConstraintSolver_T_03 = null,
bbc_btConstraintSolver_$callClinit = () => {
    bbc_btConstraintSolver_$callClinit = $rt_eraseClinit(bbc_btConstraintSolver);
    bbc_btConstraintSolver__clinit_();
},
bbc_btConstraintSolver__init_ = ($this, $b, $c) => {
    bbc_btConstraintSolver_$callClinit();
    bi_IDLBase__init_($this);
},
bbc_btConstraintSolver__init_0 = (var_0, var_1) => {
    let var_2 = new bbc_btConstraintSolver();
    bbc_btConstraintSolver__init_(var_2, var_0, var_1);
    return var_2;
},
bbc_btConstraintSolver_native_new = () => {
    bbc_btConstraintSolver_$callClinit();
    return bbc_btConstraintSolver__init_0(0, 0);
},
bbc_btConstraintSolver__clinit_ = () => {
    bbc_btConstraintSolver_NULL = bbc_btConstraintSolver_native_new();
    bbc_btConstraintSolver_T_01 = bbc_btConstraintSolver_native_new();
    bbc_btConstraintSolver_T_02 = bbc_btConstraintSolver_native_new();
    bbc_btConstraintSolver_T_03 = bbc_btConstraintSolver_native_new();
},
bbc_btSequentialImpulseConstraintSolver = $rt_classWithoutFields(bbc_btConstraintSolver),
bbc_btSequentialImpulseConstraintSolver_NULL = null,
bbc_btSequentialImpulseConstraintSolver_T_01 = null,
bbc_btSequentialImpulseConstraintSolver_T_02 = null,
bbc_btSequentialImpulseConstraintSolver_T_03 = null,
bbc_btSequentialImpulseConstraintSolver_$callClinit = () => {
    bbc_btSequentialImpulseConstraintSolver_$callClinit = $rt_eraseClinit(bbc_btSequentialImpulseConstraintSolver);
    bbc_btSequentialImpulseConstraintSolver__clinit_();
},
bbc_btSequentialImpulseConstraintSolver__init_0 = $this => {
    let $addr;
    bbc_btSequentialImpulseConstraintSolver_$callClinit();
    bbc_btConstraintSolver__init_($this, 1, 1);
    $addr = bbc_btSequentialImpulseConstraintSolver_internal_native_create$js_body$_1();
    bi_IDLBase_internal_reset($this, $addr, 1);
},
bbc_btSequentialImpulseConstraintSolver__init_2 = () => {
    let var_0 = new bbc_btSequentialImpulseConstraintSolver();
    bbc_btSequentialImpulseConstraintSolver__init_0(var_0);
    return var_0;
},
bbc_btSequentialImpulseConstraintSolver__init_ = ($this, $b, $c) => {
    bbc_btSequentialImpulseConstraintSolver_$callClinit();
    bbc_btConstraintSolver__init_($this, 1, 1);
},
bbc_btSequentialImpulseConstraintSolver__init_1 = (var_0, var_1) => {
    let var_2 = new bbc_btSequentialImpulseConstraintSolver();
    bbc_btSequentialImpulseConstraintSolver__init_(var_2, var_0, var_1);
    return var_2;
},
bbc_btSequentialImpulseConstraintSolver_native_new = () => {
    bbc_btSequentialImpulseConstraintSolver_$callClinit();
    return bbc_btSequentialImpulseConstraintSolver__init_1(0, 0);
},
bbc_btSequentialImpulseConstraintSolver__clinit_ = () => {
    bbc_btSequentialImpulseConstraintSolver_NULL = bbc_btSequentialImpulseConstraintSolver_native_new();
    bbc_btSequentialImpulseConstraintSolver_T_01 = bbc_btSequentialImpulseConstraintSolver_native_new();
    bbc_btSequentialImpulseConstraintSolver_T_02 = bbc_btSequentialImpulseConstraintSolver_native_new();
    bbc_btSequentialImpulseConstraintSolver_T_03 = bbc_btSequentialImpulseConstraintSolver_native_new();
},
bbc_btSequentialImpulseConstraintSolver_internal_native_create$js_body$_1 = () => {
    var jsObj = new bullet.btSequentialImpulseConstraintSolver();
    return bullet.getPointer(jsObj);
};
function jur_AbstractCharClass$LazyJavaLetterOrDigit$1() {
    jur_AbstractCharClass.call(this);
    this.$this$061 = null;
}
let jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_ = ($this, $this$0) => {
    $this.$this$061 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaLetterOrDigit$1();
    jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains = ($this, $ch) => {
    return jl_Character_isLetterOrDigit($ch);
};
function cgxjc_JPlatformMap() {
    jl_Object.call(this);
    this.$map = null;
}
let cgxjc_JPlatformMap__init_ = $this => {
    jl_Object__init_($this);
    $this.$map = ju_HashMap__init_();
},
cgxjc_JPlatformMap__init_0 = () => {
    let var_0 = new cgxjc_JPlatformMap();
    cgxjc_JPlatformMap__init_(var_0);
    return var_0;
},
cgxjc_JPlatformMap_put = ($this, $key, $value) => {
    $this.$map.$put($key, $value);
},
cgxjc_JPlatformMap_getObject = ($this, $key, $type) => {
    let $o;
    $o = $this.$map.$get2($key);
    if (!jl_Class_isInstance($type, $o))
        return null;
    return jl_Class_cast($type, $o);
};
function jur_CharClass$18() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$bs = null;
    a.$this$048 = null;
}
let jur_CharClass$18__init_ = ($this, $this$0, var$2) => {
    $this.$this$048 = $this$0;
    $this.$val$bs = var$2;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$18__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CharClass$18();
    jur_CharClass$18__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass$18_contains = ($this, $ch) => {
    return $this.$alt ^ $this.$val$bs.$get16($ch);
},
jur_CharClass$18_toString = $this => {
    let $temp, $i;
    $temp = jl_StringBuilder__init_();
    $i = $this.$val$bs.$nextSetBit(0);
    while ($i >= 0) {
        $temp.$append18(jl_Character_toChars($i));
        $temp.$append0(124);
        $i = $this.$val$bs.$nextSetBit($i + 1 | 0);
    }
    if ($temp.$length() > 0)
        $temp.$deleteCharAt($temp.$length() - 1 | 0);
    return $temp.$toString();
},
jur_PossessiveGroupQuantifierSet = $rt_classWithoutFields(jur_GroupQuantifierSet),
jur_PossessiveGroupQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_GroupQuantifierSet__init_($this, $innerSet, $next, $type);
    jur_FSet_$callClinit();
    $innerSet.$setNext(jur_FSet_posFSet);
},
jur_PossessiveGroupQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_PossessiveGroupQuantifierSet();
    jur_PossessiveGroupQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_PossessiveGroupQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $stringIndex_0;
    while (true) {
        $stringIndex_0 = $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
        if ($stringIndex_0 <= 0)
            break;
        $stringIndex = $stringIndex_0;
    }
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
};
function cbggga_ColorAttribute() {
    cbggg_Attribute.call(this);
    this.$color4 = null;
}
let cbggga_ColorAttribute_Diffuse = Long_ZERO,
cbggga_ColorAttribute_Specular = Long_ZERO,
cbggga_ColorAttribute_Ambient = Long_ZERO,
cbggga_ColorAttribute_Emissive = Long_ZERO,
cbggga_ColorAttribute_Reflection = Long_ZERO,
cbggga_ColorAttribute_AmbientLight = Long_ZERO,
cbggga_ColorAttribute_Fog = Long_ZERO,
cbggga_ColorAttribute_Mask = Long_ZERO,
cbggga_ColorAttribute_$callClinit = () => {
    cbggga_ColorAttribute_$callClinit = $rt_eraseClinit(cbggga_ColorAttribute);
    cbggga_ColorAttribute__clinit_();
},
cbggga_ColorAttribute_is = $mask => {
    cbggga_ColorAttribute_$callClinit();
    return Long_eq(Long_and($mask, cbggga_ColorAttribute_Mask), Long_ZERO) ? 0 : 1;
},
cbggga_ColorAttribute_createDiffuse = ($r, $g, $b, $a) => {
    cbggga_ColorAttribute_$callClinit();
    return cbggga_ColorAttribute__init_2(cbggga_ColorAttribute_Diffuse, $r, $g, $b, $a);
},
cbggga_ColorAttribute_createSpecular = ($r, $g, $b, $a) => {
    cbggga_ColorAttribute_$callClinit();
    return cbggga_ColorAttribute__init_2(cbggga_ColorAttribute_Specular, $r, $g, $b, $a);
},
cbggga_ColorAttribute__init_ = ($this, $type) => {
    cbggga_ColorAttribute_$callClinit();
    cbggg_Attribute__init_($this, $type);
    $this.$color4 = cbgg_Color__init_1();
    if (cbggga_ColorAttribute_is($type))
        return;
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(648)));
},
cbggga_ColorAttribute__init_6 = var_0 => {
    let var_1 = new cbggga_ColorAttribute();
    cbggga_ColorAttribute__init_(var_1, var_0);
    return var_1;
},
cbggga_ColorAttribute__init_0 = ($this, $type, $color) => {
    cbggga_ColorAttribute_$callClinit();
    cbggga_ColorAttribute__init_($this, $type);
    if ($color !== null)
        $this.$color4.$set11($color);
},
cbggga_ColorAttribute__init_5 = (var_0, var_1) => {
    let var_2 = new cbggga_ColorAttribute();
    cbggga_ColorAttribute__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggga_ColorAttribute__init_1 = ($this, $type, $r, $g, $b, $a) => {
    cbggga_ColorAttribute_$callClinit();
    cbggga_ColorAttribute__init_($this, $type);
    $this.$color4.$set12($r, $g, $b, $a);
},
cbggga_ColorAttribute__init_2 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cbggga_ColorAttribute();
    cbggga_ColorAttribute__init_1(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cbggga_ColorAttribute__init_3 = ($this, $copyFrom) => {
    cbggga_ColorAttribute_$callClinit();
    cbggga_ColorAttribute__init_0($this, $copyFrom.$type1, $copyFrom.$color4);
},
cbggga_ColorAttribute__init_4 = var_0 => {
    let var_1 = new cbggga_ColorAttribute();
    cbggga_ColorAttribute__init_3(var_1, var_0);
    return var_1;
},
cbggga_ColorAttribute_copy = $this => {
    return cbggga_ColorAttribute__init_4($this);
},
cbggga_ColorAttribute_hashCode = $this => {
    let $result, var$2;
    $result = cbggg_Attribute_hashCode($this);
    var$2 = (953 * $result | 0) + $this.$color4.$toIntBits() | 0;
    return var$2;
},
cbggga_ColorAttribute__clinit_ = () => {
    cbggga_ColorAttribute_Diffuse = cbggg_Attribute_register($rt_s(649));
    cbggga_ColorAttribute_Specular = cbggg_Attribute_register($rt_s(650));
    cbggga_ColorAttribute_Ambient = cbggg_Attribute_register($rt_s(651));
    cbggga_ColorAttribute_Emissive = cbggg_Attribute_register($rt_s(652));
    cbggga_ColorAttribute_Reflection = cbggg_Attribute_register($rt_s(653));
    cbggga_ColorAttribute_AmbientLight = cbggg_Attribute_register($rt_s(654));
    cbggga_ColorAttribute_Fog = cbggg_Attribute_register($rt_s(655));
    cbggga_ColorAttribute_Mask = Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(cbggga_ColorAttribute_Ambient, cbggga_ColorAttribute_Diffuse), cbggga_ColorAttribute_Specular), cbggga_ColorAttribute_Emissive), cbggga_ColorAttribute_Reflection), cbggga_ColorAttribute_AmbientLight), cbggga_ColorAttribute_Fog);
};
function jur_CharClass$13() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz6 = null;
    a.$this$036 = null;
}
let jur_CharClass$13__init_ = ($this, $this$0, var$2) => {
    $this.$this$036 = $this$0;
    $this.$val$clazz6 = var$2;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$13__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CharClass$13();
    jur_CharClass$13__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass$13_contains = ($this, $ch) => {
    return $this.$val$clazz6.$contains($ch);
};
function jur_CharClass$12() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz0 = null;
    a.$this$062 = null;
}
let jur_CharClass$12__init_ = ($this, $this$0, var$2) => {
    $this.$this$062 = $this$0;
    $this.$val$clazz0 = var$2;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$12__init_0 = (var_0, var_1) => {
    let var_2 = new jur_CharClass$12();
    jur_CharClass$12__init_(var_2, var_0, var_1);
    return var_2;
},
jur_CharClass$12_contains = ($this, $ch) => {
    return $this.$val$clazz0.$contains($ch) ? 0 : 1;
};
function jur_CharClass$11() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt3 = 0;
    a.$val$nb4 = null;
    a.$val$clazz5 = null;
    a.$this$033 = null;
}
let jur_CharClass$11__init_ = ($this, $this$0, var$2, var$3, var$4) => {
    $this.$this$033 = $this$0;
    $this.$val$curAlt3 = var$2;
    $this.$val$nb4 = var$3;
    $this.$val$clazz5 = var$4;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$11__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CharClass$11();
    jur_CharClass$11__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CharClass$11_contains = ($this, $ch) => {
    return !($this.$val$curAlt3 ^ $this.$val$nb4.$contains($ch)) && !$this.$val$clazz5.$contains($ch) ? 0 : 1;
};
function jur_CharClass$10() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt9 = 0;
    a.$val$nb = null;
    a.$val$clazz = null;
    a.$this$035 = null;
}
let jur_CharClass$10__init_ = ($this, $this$0, var$2, var$3, var$4) => {
    $this.$this$035 = $this$0;
    $this.$val$curAlt9 = var$2;
    $this.$val$nb = var$3;
    $this.$val$clazz = var$4;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$10__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CharClass$10();
    jur_CharClass$10__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CharClass$10_contains = ($this, $ch) => {
    return !($this.$val$curAlt9 ^ $this.$val$nb.$contains($ch)) && !$this.$val$clazz.$contains($ch) ? 1 : 0;
};
function jur_CharClass$17() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt8 = 0;
    a.$val$nb2 = null;
    a.$val$clazz2 = null;
    a.$this$049 = null;
}
let jur_CharClass$17__init_ = ($this, $this$0, var$2, var$3, var$4) => {
    $this.$this$049 = $this$0;
    $this.$val$curAlt8 = var$2;
    $this.$val$nb2 = var$3;
    $this.$val$clazz2 = var$4;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$17__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CharClass$17();
    jur_CharClass$17__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CharClass$17_contains = ($this, $ch) => {
    return $this.$val$curAlt8 ^ $this.$val$nb2.$contains($ch) && $this.$val$clazz2.$contains($ch) ? 1 : 0;
};
function jur_CharClass$16() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$curAlt7 = 0;
    a.$val$nb1 = null;
    a.$val$clazz8 = null;
    a.$this$052 = null;
}
let jur_CharClass$16__init_ = ($this, $this$0, var$2, var$3, var$4) => {
    $this.$this$052 = $this$0;
    $this.$val$curAlt7 = var$2;
    $this.$val$nb1 = var$3;
    $this.$val$clazz8 = var$4;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$16__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new jur_CharClass$16();
    jur_CharClass$16__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
jur_CharClass$16_contains = ($this, $ch) => {
    return $this.$val$curAlt7 ^ $this.$val$nb1.$contains($ch) && $this.$val$clazz8.$contains($ch) ? 0 : 1;
};
function jur_CharClass$15() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz10 = null;
    a.$val$curAlt2 = 0;
    a.$this$030 = null;
}
let jur_CharClass$15__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$030 = $this$0;
    $this.$val$clazz10 = var$2;
    $this.$val$curAlt2 = var$3;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$15__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_CharClass$15();
    jur_CharClass$15__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_CharClass$15_contains = ($this, $ch) => {
    return $this.$val$clazz10.$contains($ch) && $this.$val$curAlt2 ^ $this.$this$030.$bits.$get16($ch) ? 1 : 0;
};
function jur_CharClass$14() {
    let a = this; jur_AbstractCharClass.call(a);
    a.$val$clazz7 = null;
    a.$val$curAlt5 = 0;
    a.$this$016 = null;
}
let jur_CharClass$14__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$016 = $this$0;
    $this.$val$clazz7 = var$2;
    $this.$val$curAlt5 = var$3;
    jur_AbstractCharClass__init_($this);
},
jur_CharClass$14__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_CharClass$14();
    jur_CharClass$14__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_CharClass$14_contains = ($this, $ch) => {
    return $this.$val$clazz7.$contains($ch) && $this.$val$curAlt5 ^ $this.$this$016.$bits.$get16($ch) ? 0 : 1;
},
jl_StringBuilder = $rt_classWithoutFields(jl_AbstractStringBuilder),
jl_StringBuilder__init_1 = ($this, $capacity) => {
    jl_AbstractStringBuilder__init_($this, $capacity);
},
jl_StringBuilder__init_0 = var_0 => {
    let var_1 = new jl_StringBuilder();
    jl_StringBuilder__init_1(var_1, var_0);
    return var_1;
},
jl_StringBuilder__init_2 = $this => {
    jl_AbstractStringBuilder__init_0($this);
},
jl_StringBuilder__init_ = () => {
    let var_0 = new jl_StringBuilder();
    jl_StringBuilder__init_2(var_0);
    return var_0;
},
jl_StringBuilder_append = ($this, $obj) => {
    jl_AbstractStringBuilder_append7($this, $obj);
    return $this;
},
jl_StringBuilder_append4 = ($this, $string) => {
    jl_AbstractStringBuilder_append($this, $string);
    return $this;
},
jl_StringBuilder_append0 = ($this, $value) => {
    jl_AbstractStringBuilder_append3($this, $value);
    return $this;
},
jl_StringBuilder_append7 = ($this, $value) => {
    jl_AbstractStringBuilder_append8($this, $value);
    return $this;
},
jl_StringBuilder_append3 = ($this, $value) => {
    jl_AbstractStringBuilder_append6($this, $value);
    return $this;
},
jl_StringBuilder_append1 = ($this, $c) => {
    jl_AbstractStringBuilder_append0($this, $c);
    return $this;
},
jl_StringBuilder_append5 = ($this, $chars, $offset, $len) => {
    jl_AbstractStringBuilder_append2($this, $chars, $offset, $len);
    return $this;
},
jl_StringBuilder_append8 = ($this, $chars) => {
    jl_AbstractStringBuilder_append1($this, $chars);
    return $this;
},
jl_StringBuilder_append2 = ($this, $b) => {
    jl_AbstractStringBuilder_append5($this, $b);
    return $this;
},
jl_StringBuilder_insert3 = ($this, $target, $value) => {
    jl_AbstractStringBuilder_insert4($this, $target, $value);
    return $this;
},
jl_StringBuilder_insert11 = ($this, $target, $value) => {
    jl_AbstractStringBuilder_insert6($this, $target, $value);
    return $this;
},
jl_StringBuilder_insert10 = ($this, $index, $chars, $offset, $len) => {
    jl_AbstractStringBuilder_insert($this, $index, $chars, $offset, $len);
    return $this;
},
jl_StringBuilder_insert12 = ($this, $index, $obj) => {
    jl_AbstractStringBuilder_insert3($this, $index, $obj);
    return $this;
},
jl_StringBuilder_insert9 = ($this, $index, $b) => {
    jl_AbstractStringBuilder_insert2($this, $index, $b);
    return $this;
},
jl_StringBuilder_insert1 = ($this, $index, $c) => {
    jl_AbstractStringBuilder_insert1($this, $index, $c);
    return $this;
},
jl_StringBuilder_delete = ($this, $start, $end) => {
    jl_AbstractStringBuilder_delete($this, $start, $end);
    return $this;
},
jl_StringBuilder_deleteCharAt = ($this, $index) => {
    jl_AbstractStringBuilder_deleteCharAt($this, $index);
    return $this;
},
jl_StringBuilder_insert6 = ($this, $index, $string) => {
    jl_AbstractStringBuilder_insert0($this, $index, $string);
    return $this;
},
jl_StringBuilder_substring = ($this, var$1, var$2) => {
    return jl_AbstractStringBuilder_substring($this, var$1, var$2);
},
jl_StringBuilder_setLength = ($this, var$1) => {
    jl_AbstractStringBuilder_setLength($this, var$1);
},
jl_StringBuilder_subSequence = ($this, var$1, var$2) => {
    return jl_AbstractStringBuilder_subSequence($this, var$1, var$2);
},
jl_StringBuilder_insert5 = ($this, var$1, var$2, var$3, var$4) => {
    return $this.$insert14(var$1, var$2, var$3, var$4);
},
jl_StringBuilder_append6 = ($this, var$1, var$2, var$3) => {
    return $this.$append7(var$1, var$2, var$3);
},
jl_StringBuilder_isEmpty = $this => {
    return jl_AbstractStringBuilder_isEmpty($this);
},
jl_StringBuilder_length = $this => {
    return jl_AbstractStringBuilder_length($this);
},
jl_StringBuilder_toString = $this => {
    return jl_AbstractStringBuilder_toString($this);
},
jl_StringBuilder_ensureCapacity = ($this, var$1) => {
    jl_AbstractStringBuilder_ensureCapacity($this, var$1);
},
jl_StringBuilder_insert0 = ($this, var$1, var$2) => {
    return $this.$insert15(var$1, var$2);
},
jl_StringBuilder_insert8 = ($this, var$1, var$2) => {
    return $this.$insert16(var$1, var$2);
},
jl_StringBuilder_insert7 = ($this, var$1, var$2) => {
    return $this.$insert17(var$1, var$2);
},
jl_StringBuilder_insert4 = ($this, var$1, var$2) => {
    return $this.$insert18(var$1, var$2);
},
jl_StringBuilder_insert = ($this, var$1, var$2) => {
    return $this.$insert19(var$1, var$2);
},
jl_StringBuilder_insert2 = ($this, var$1, var$2) => {
    return $this.$insert20(var$1, var$2);
},
ju_ConcurrentModificationException = $rt_classWithoutFields(jl_RuntimeException),
ju_ConcurrentModificationException__init_ = $this => {
    jl_RuntimeException__init_($this);
},
ju_ConcurrentModificationException__init_0 = () => {
    let var_0 = new ju_ConcurrentModificationException();
    ju_ConcurrentModificationException__init_(var_0);
    return var_0;
},
cgxgbtft_ClasspathStorage = $rt_classWithoutFields(cgxgbtf_MemoryFileStorage),
cgxgbtft_ClasspathStorage__init_ = $this => {
    cgxgbtf_MemoryFileStorage__init_($this);
},
cgxgbtft_ClasspathStorage__init_0 = () => {
    let var_0 = new cgxgbtft_ClasspathStorage();
    cgxgbtft_ClasspathStorage__init_(var_0);
    return var_0;
},
ju_Hashtable$1 = $rt_classWithoutFields(),
ju_Hashtable$1__init_ = $this => {
    jl_Object__init_($this);
},
ju_Hashtable$1__init_0 = () => {
    let var_0 = new ju_Hashtable$1();
    ju_Hashtable$1__init_(var_0);
    return var_0;
};
let ju_Hashtable$2 = $rt_classWithoutFields(),
ju_Hashtable$2__init_ = $this => {
    jl_Object__init_($this);
},
ju_Hashtable$2__init_0 = () => {
    let var_0 = new ju_Hashtable$2();
    ju_Hashtable$2__init_(var_0);
    return var_0;
};
function cgxgbt_TeaNet() {
    jl_Object.call(this);
    this.$httpResponseListeners = null;
}
let cgxgbt_TeaNet__init_ = $this => {
    jl_Object__init_($this);
    $this.$httpResponseListeners = ju_HashMap__init_3(16);
},
cgxgbt_TeaNet__init_0 = () => {
    let var_0 = new cgxgbt_TeaNet();
    cgxgbt_TeaNet__init_(var_0);
    return var_0;
},
b_BulletLoader = $rt_classWithoutFields(),
b_BulletLoader_init = $listener => {
    cgxjl_JParserLibraryLoader_load($rt_s(656), $listener);
};
function beb_BulletTestScreen() {
    let a = this; cbg_ScreenAdapter.call(a);
    a.$btVersion = 0;
    a.$camera1 = null;
    a.$viewport0 = null;
    a.$guiViewport = null;
    a.$boxes = null;
    a.$ground = null;
    a.$modelBatch = null;
    a.$batch = null;
    a.$environment0 = null;
    a.$colObjs = null;
    a.$world = null;
    a.$debugDrawer = null;
    a.$collisionConfiguration = null;
    a.$dispatcher = null;
    a.$broadphase = null;
    a.$solver = null;
    a.$font0 = null;
    a.$boxModel = null;
    a.$timeNow = Long_ZERO;
    a.$time = Long_ZERO;
    a.$debug2 = 0;
    a.$freeze = 0;
    a.$mat = null;
    a.$cameraController = null;
    a.$value5 = 0;
    a.$totalBoxes = 0;
}
let beb_BulletTestScreen_DELAY_TIME = Long_ZERO,
beb_BulletTestScreen_rayFrom = null,
beb_BulletTestScreen_rayTo = null,
beb_BulletTestScreen_$callClinit = () => {
    beb_BulletTestScreen_$callClinit = $rt_eraseClinit(beb_BulletTestScreen);
    beb_BulletTestScreen__clinit_();
},
beb_BulletTestScreen__init_ = $this => {
    beb_BulletTestScreen_$callClinit();
    cbg_ScreenAdapter__init_($this);
    $this.$boxes = cbgu_Array__init_();
    $this.$colObjs = cbgu_Array__init_();
    $this.$debug2 = 0;
    $this.$freeze = 0;
    $this.$mat = cbgm_Matrix4__init_();
    $this.$value5 = 25;
    $this.$totalBoxes = 0;
},
beb_BulletTestScreen__init_0 = () => {
    let var_0 = new beb_BulletTestScreen();
    beb_BulletTestScreen__init_(var_0);
    return var_0;
},
beb_BulletTestScreen_show = $this => {
    let $info, $gravity, var$3, var$4, $set, $builder, $r, $g, $b, $a, $texture, $material, var$13, var$14, $groundWidth, $groundHeight, $groundDepth, $groundBox;
    $this.$btVersion = bullet.CustomCode.prototype.GetBTVersion();
    $info = b_btDefaultCollisionConstructionInfo__init_2();
    $this.$collisionConfiguration = bbc_btDefaultCollisionConfiguration__init_1($info);
    $this.$dispatcher = bbc_btCollisionDispatcher__init_2($this.$collisionConfiguration);
    $this.$broadphase = bbb_btDbvtBroadphase__init_1();
    $this.$solver = bbc_btSequentialImpulseConstraintSolver__init_2();
    $this.$world = bbd_btDiscreteDynamicsWorld__init_1($this.$dispatcher, $this.$broadphase, $this.$solver, $this.$collisionConfiguration);
    $gravity = bl_btVector3__init_2(0.0, (-10.0), 0.0);
    $this.$world.$setGravity($gravity);
    $this.$debugDrawer = bgg_btDebugRendererGdxGL__init_0();
    $this.$world.$setDebugDrawer($this.$debugDrawer);
    var$3 = $this.$debugDrawer;
    b_DebugDrawModes_$callClinit();
    var$3.$setDebugMode(b_DebugDrawModes_getValue(b_DebugDrawModes_DBG_MAX_DEBUG_DRAW_MODE.$or0(b_DebugDrawModes_DBG_DrawContactPoints)));
    $this.$camera1 = cbgg_PerspectiveCamera__init_0();
    $this.$viewport0 = cbguv_ScreenViewport__init_2($this.$camera1);
    $this.$guiViewport = cbguv_ScreenViewport__init_0();
    $this.$modelBatch = cbggg_ModelBatch__init_1();
    $this.$environment0 = cbggg_Environment__init_0();
    var$3 = $this.$environment0;
    var$4 = new cbggga_ColorAttribute;
    cbggga_ColorAttribute_$callClinit();
    cbggga_ColorAttribute__init_1(var$4, cbggga_ColorAttribute_AmbientLight, 0.6000000238418579, 0.6000000238418579, 0.6000000238418579, 1.0);
    cbggg_Attributes_set(var$3, var$4);
    $set = (cbggge_DirectionalLight__init_()).$set40(1.0, 1.0, 1.0, (-1.0), (-1.0), (-0.4000000059604645));
    $this.$environment0.$add13($set);
    $this.$batch = cbggg_SpriteBatch__init_0();
    $this.$camera1.$position8.$z = 43.0;
    $this.$camera1.$position8.$y = 2.0;
    $this.$camera1.$lookAt(0.0, 0.0, 0.0);
    $builder = cbgggu_ModelBuilder__init_0();
    $r = 1.0;
    $g = 1.0;
    $b = 1.0;
    $a = 1.0;
    $texture = cbgg_Texture__init_5(cbg_Gdx_files.$internal($rt_s(657)));
    cbgg_Texture$TextureFilter_$callClinit();
    $texture.$setFilter(cbgg_Texture$TextureFilter_Linear, cbgg_Texture$TextureFilter_Linear);
    $material = new cbggg_Material;
    var$13 = $rt_createArray(cbggg_Attribute, 2);
    var$14 = var$13.data;
    var$14[0] = cbggga_TextureAttribute_createDiffuse($texture);
    var$14[1] = cbggga_FloatAttribute_createShininess(4.0);
    cbggg_Material__init_0($material, var$13);
    $this.$boxModel = $builder.$createBox(1.0, 1.0, 1.0, $material, Long_fromInt(25));
    $groundWidth = 60.0;
    $groundHeight = 0.30000001192092896;
    $groundDepth = 60.0;
    var$3 = new cbggg_Material;
    var$14 = $rt_createArray(cbggg_Attribute, 3);
    var$13 = var$14.data;
    var$13[0] = cbggga_ColorAttribute_createDiffuse($r, $g, $b, $a);
    var$13[1] = cbggga_ColorAttribute_createSpecular($r, $g, $b, $a);
    var$13[2] = cbggga_FloatAttribute_createShininess(16.0);
    cbggg_Material__init_0(var$3, var$14);
    $groundBox = $builder.$createBox($groundWidth, $groundHeight, $groundDepth, var$3, Long_fromInt(9));
    $this.$ground = $this.$createBox0($rt_s(658), 0, 0.0, 0.0, (-2.0), 0.0, 0.0, 0.0, 0.0, $groundBox, $groundWidth, $groundHeight, $groundDepth, 0.0, 0.0, 1.0);
    $this.$resetBoxes();
    $this.$font0 = cbggg_BitmapFont__init_3();
    $this.$font0.$setColor0(1.0, 0.0, 0.0, 1.0);
    $this.$time = jl_System_currentTimeMillis();
    $this.$cameraController = cbgggu_CameraInputController__init_1($this.$camera1);
    $this.$cameraController.$autoUpdate = 0;
    $this.$cameraController.$forwardTarget = 0;
    $this.$cameraController.$translateTarget = 0;
    var$3 = cbg_Gdx_input;
    var$4 = new cbg_InputMultiplexer;
    var$14 = $rt_createArray(cbg_InputProcessor, 2);
    var$13 = var$14.data;
    var$13[0] = $this;
    var$13[1] = $this.$cameraController;
    cbg_InputMultiplexer__init_(var$4, var$14);
    var$3.$setInputProcessor(var$4);
},
beb_BulletTestScreen_createBox = ($this, $userData, $add, $mass, $x, $y, $z, $axiX, $axiY, $axiZ, $model, $x1, $y1, $z1, $colorR, $colorG, $colorB) => {
    let $modelInstance, $attr, var$19, $motionState, $shape, $tmp_0, $body;
    $modelInstance = cbggg_ModelInstance__init_2($model);
    $attr = cbggga_ColorAttribute_createDiffuse($colorR, $colorG, $colorB, 1.0);
    cbggg_Attributes_set($modelInstance.$materials.$get(0), $attr);
    $modelInstance.$transform0.$translate2($x, $y, $z);
    var$19 = $modelInstance.$transform0;
    cbgm_Vector3_$callClinit();
    var$19.$rotate2(cbgm_Vector3_X, $axiX);
    $modelInstance.$transform0.$rotate2(cbgm_Vector3_Y, $axiY);
    $modelInstance.$transform0.$rotate2(cbgm_Vector3_Z, $axiZ);
    $motionState = beb_TestMotionState__init_0($modelInstance.$transform0);
    $shape = bbc_btBoxShape__init_2(bl_btVector3__init_2($x1 / 2.0, $y1 / 2.0, $z1 / 2.0));
    $tmp_0 = bl_btVector3__init_4();
    $shape.$calculateLocalInertia($mass, $tmp_0);
    $body = bbd_btRigidBody__init_2($mass, $motionState, $shape, $tmp_0);
    if ($add)
        $this.$colObjs.$add1($body);
    $body.$setRestitution(0.699999988079071);
    $this.$world.$addRigidBody($body);
    return $modelInstance;
},
beb_BulletTestScreen_resetBoxes = $this => {
    let $i, $btCollisionObject, $count, $offsetY, $offsetX, $iSize, $multi, $j, $k, $x, $y, $z, $axisX, $axisY, $axisZ, $r, $g, $b, var$19;
    $i = 0;
    while ($i < $this.$colObjs.$size0) {
        $btCollisionObject = $this.$colObjs.$get($i);
        $this.$world.$removeRigidBody($btCollisionObject);
        bi_IDLBase_dispose($btCollisionObject);
        $i = $i + 1 | 0;
    }
    $this.$colObjs.$clear();
    $this.$boxes.$clear();
    $count = 0;
    $offsetY = 20;
    $offsetX = (-3);
    $iSize = $this.$value5 / 3 | 0;
    $multi = 1.2999999523162842;
    $i = 0;
    while ($i < $iSize) {
        $j = 0;
        while ($j < $iSize) {
            $k = 0;
            while ($k < $iSize) {
                $x = ($i + $offsetX | 0) * $multi;
                $y = ($j + $offsetY | 0) * $multi;
                $z = $k * $multi;
                $axisX = 0.0;
                $axisY = 0.0;
                $axisZ = 0.0;
                $r = 1.0;
                $g = 1.0;
                $b = 1.0;
                var$19 = $this.$createBox0((((jl_StringBuilder__init_()).$append1($rt_s(659))).$append2($count)).$toString(), 1, 0.4000000059604645, $x, $y, $z, $axisX, $axisY, $axisZ, $this.$boxModel, 1.0, 1.0, 1.0, $r, $g, $b);
                $count = $count + 1 | 0;
                $this.$boxes.$add1(var$19);
                $k = $k + 1 | 0;
            }
            $j = $j + 1 | 0;
        }
        $i = $i + 1 | 0;
    }
    $this.$totalBoxes = $count;
},
beb_BulletTestScreen_render = ($this, $delta) => {
    let var$2, $i, $modelInstance, var$5, var$6, var$7, var$8, var$9;
    $this.$camera1.$update0();
    cbg_Gdx_gl.$glClearColor(0.8999999761581421, 0.8999999761581421, 0.8999999761581421, 1.0);
    cbg_Gdx_gl.$glClear(16640);
    if (!$this.$freeze) {
        $this.$timeNow = jl_System_currentTimeMillis();
        var$2 = Long_sub($this.$timeNow, $this.$time);
        beb_BulletTestScreen_$callClinit();
        if (Long_gt(var$2, beb_BulletTestScreen_DELAY_TIME)) {
            $this.$resetBoxes();
            $this.$time = jl_System_currentTimeMillis();
        }
        $this.$world.$stepSimulation(cbg_Gdx_graphics.$getDeltaTime());
    }
    $this.$modelBatch.$begin4($this.$camera1);
    $i = 0;
    while ($i < $this.$boxes.$size0) {
        $modelInstance = $this.$boxes.$get($i);
        $this.$modelBatch.$render6($modelInstance, $this.$environment0);
        $i = $i + 1 | 0;
    }
    $this.$modelBatch.$render6($this.$ground, $this.$environment0);
    $this.$modelBatch.$end();
    if ($this.$debug2)
        $this.$debugDrawer.$debugDrawWorld0($this.$camera1, $this.$world);
    $this.$batch.$begin();
    var$5 = $this.$font0;
    var$6 = $this.$batch;
    var$7 = ((((((((jl_StringBuilder__init_()).$append1($rt_s(660))).$append2(cbg_Gdx_graphics.$getFramesPerSecond())).$append1($rt_s(661))).$append2($this.$totalBoxes)).$append1($rt_s(662))).$append2($this.$btVersion)).$append1($rt_s(663))).$toString();
    var$8 = cbg_Gdx_graphics;
    var$9 = var$8.$getHeight0() - 14 | 0;
    var$5.$draw7(var$6, var$7, 30.0, var$9);
    $this.$font0.$draw7($this.$batch, $rt_s(664), 20.0, 30.0);
    $this.$batch.$end();
},
beb_BulletTestScreen_resize = ($this, $width, $height) => {
    let $guiCam;
    $this.$viewport0.$update4($width, $height, 0);
    $this.$guiViewport.$update4($width, $height, 1);
    $guiCam = $this.$guiViewport.$getCamera();
    $guiCam.$update0();
    $this.$batch.$setProjectionMatrix($guiCam.$combined);
},
beb_BulletTestScreen_pause = $this => {
    return;
},
beb_BulletTestScreen_resume = $this => {
    return;
},
beb_BulletTestScreen_keyDown = ($this, $keycode) => {
    if ($keycode == 62) {
        $this.$freeze = $this.$freeze ? 0 : 1;
        if (!$this.$freeze)
            $this.$time = Long_add(jl_System_currentTimeMillis(), Long_sub($this.$time, $this.$timeNow));
    } else if ($keycode == 66) {
        if (!cbg_Gdx_graphics.$isFullscreen())
            cbg_Gdx_graphics.$setFullscreenMode(cbg_Gdx_graphics.$getDisplayMode());
        else
            cbg_Gdx_graphics.$setWindowedMode(0, 0);
    } else if ($keycode == 32)
        $this.$debug2 = $this.$debug2 ? 0 : 1;
    return 0;
},
beb_BulletTestScreen_keyUp = ($this, $keycode) => {
    return 0;
},
beb_BulletTestScreen_keyTyped = ($this, $character) => {
    return 0;
},
beb_BulletTestScreen_touchDown = ($this, $screenX, $screenY, $pointer, $button) => {
    return 0;
},
beb_BulletTestScreen_touchUp = ($this, $screenX, $screenY, $pointer, $button) => {
    return 0;
},
beb_BulletTestScreen_touchDragged = ($this, $screenX, $screenY, $pointer) => {
    return 0;
},
beb_BulletTestScreen_mouseMoved = ($this, $screenX, $screenY) => {
    return 0;
},
beb_BulletTestScreen_scrolled = ($this, $amountX, $amountY) => {
    return 0;
},
beb_BulletTestScreen__clinit_ = () => {
    beb_BulletTestScreen_DELAY_TIME = Long_fromInt(14000);
    beb_BulletTestScreen_rayFrom = cbgm_Vector3__init_();
    beb_BulletTestScreen_rayTo = cbgm_Vector3__init_();
},
bg_btGdx = $rt_classWithoutFields(),
bg_btGdx_tmp = null,
bg_btGdx_$callClinit = () => {
    bg_btGdx_$callClinit = $rt_eraseClinit(bg_btGdx);
    bg_btGdx__clinit_();
},
bg_btGdx_convert = ($in, $out) => {
    let $x, $y, $z;
    bg_btGdx_$callClinit();
    $x = $in.$getX();
    $y = $in.$getY();
    $z = $in.$getZ();
    $out.$set8($x, $y, $z);
    return $out;
},
bg_btGdx_convert1 = ($in, $out) => {
    let $i, $v;
    bg_btGdx_$callClinit();
    $i = 0;
    while ($i < $in.$val.data.length) {
        $v = $in.$val.data[$i];
        bg_btGdx_tmp.$setValue($i, $v);
        $i = $i + 1 | 0;
    }
    $out.$setFromOpenGLMatrix(bg_btGdx_tmp);
    return $out;
},
bg_btGdx_convert0 = ($in, $out) => {
    let $origin, $matrix3x3, $row0, $row0X, $row0Y, $row0Z, $row1, $row1X, $row1Y, $row1Z, $row2, $row2X, $row2Y, $row2Z;
    bg_btGdx_$callClinit();
    $origin = $in.$getOrigin();
    $matrix3x3 = $in.$getBasis();
    $row0 = $matrix3x3.$getRow(0);
    $row0X = $row0.$getX();
    $row0Y = $row0.$getY();
    $row0Z = $row0.$getZ();
    $row1 = $matrix3x3.$getRow(1);
    $row1X = $row1.$getX();
    $row1Y = $row1.$getY();
    $row1Z = $row1.$getZ();
    $row2 = $matrix3x3.$getRow(2);
    $row2X = $row2.$getX();
    $row2Y = $row2.$getY();
    $row2Z = $row2.$getZ();
    $out.$val.data[0] = $row0X;
    $out.$val.data[1] = $row1X;
    $out.$val.data[2] = $row2X;
    $out.$val.data[3] = 0.0;
    $out.$val.data[4] = $row0Y;
    $out.$val.data[5] = $row1Y;
    $out.$val.data[6] = $row2Y;
    $out.$val.data[7] = 0.0;
    $out.$val.data[8] = $row0Z;
    $out.$val.data[9] = $row1Z;
    $out.$val.data[10] = $row2Z;
    $out.$val.data[11] = 0.0;
    $out.$val.data[12] = $origin.$getX();
    $out.$val.data[13] = $origin.$getY();
    $out.$val.data[14] = $origin.$getZ();
    $out.$val.data[15] = 1.0;
    return $out;
},
bg_btGdx__clinit_ = () => {
    bg_btGdx_tmp = bih_IDLFloatArray__init_2(16);
};
function jn_ShortBufferOverTypedArray() {
    let a = this; jn_ShortBufferImpl.call(a);
    a.$readOnly2 = 0;
    a.$data10 = null;
    a.$array8 = null;
}
let jn_ShortBufferOverTypedArray__init_ = ($this, $position, $limit, $readOnly, $data, $array) => {
    jn_ShortBufferImpl__init_($this, $position, $limit);
    $this.$readOnly2 = $readOnly;
    $this.$data10 = $data;
    $this.$array8 = $array;
},
jn_ShortBufferOverTypedArray__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_ShortBufferOverTypedArray();
    jn_ShortBufferOverTypedArray__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_ShortBufferOverTypedArray_readOnly = $this => {
    return $this.$readOnly2;
},
jn_ShortBufferOverTypedArray_capacityImpl = $this => {
    return $this.$data10.length;
},
jn_ShortBufferOverTypedArray_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, var$6, $slice;
    var$5 = $src.data.buffer;
    var$6 = $offset * 2 | 0;
    $slice = new Int16Array(var$5, var$6, $length);
    $this.$data10.set($slice, $index);
},
jn_ShortBufferOverTypedArray_getArrayBufferView = $this => {
    return $this.$data10;
},
cbgu_Scaling$8 = $rt_classWithoutFields(cbgu_Scaling),
cbgu_Scaling$8__init_ = $this => {
    cbgu_Scaling__init_($this);
},
cbgu_Scaling$8__init_0 = () => {
    let var_0 = new cbgu_Scaling$8();
    cbgu_Scaling$8__init_(var_0);
    return var_0;
},
cbgu_Scaling$7 = $rt_classWithoutFields(cbgu_Scaling),
cbgu_Scaling$7__init_ = $this => {
    cbgu_Scaling__init_($this);
},
cbgu_Scaling$7__init_0 = () => {
    let var_0 = new cbgu_Scaling$7();
    cbgu_Scaling$7__init_(var_0);
    return var_0;
},
cbgu_Scaling$6 = $rt_classWithoutFields(cbgu_Scaling),
cbgu_Scaling$6__init_ = $this => {
    cbgu_Scaling__init_($this);
},
cbgu_Scaling$6__init_0 = () => {
    let var_0 = new cbgu_Scaling$6();
    cbgu_Scaling$6__init_(var_0);
    return var_0;
},
cbgu_Scaling$6_apply = ($this, $sourceWidth, $sourceHeight, $targetWidth, $targetHeight) => {
    cbgu_Scaling_$callClinit();
    cbgu_Scaling_temp.$x0 = $targetWidth;
    cbgu_Scaling_temp.$y0 = $targetHeight;
    return cbgu_Scaling_temp;
},
cbgu_Scaling$5 = $rt_classWithoutFields(cbgu_Scaling),
cbgu_Scaling$5__init_ = $this => {
    cbgu_Scaling__init_($this);
},
cbgu_Scaling$5__init_0 = () => {
    let var_0 = new cbgu_Scaling$5();
    cbgu_Scaling$5__init_(var_0);
    return var_0;
};
function cbgg_VertexAttributes() {
    let a = this; jl_Object.call(a);
    a.$attributes = null;
    a.$vertexSize = 0;
    a.$mask6 = Long_ZERO;
    a.$boneWeightUnits = 0;
    a.$textureCoordinates = 0;
}
let cbgg_VertexAttributes__init_0 = ($this, $attributes) => {
    let var$2, var$3, $list, $i;
    var$2 = $attributes.data;
    jl_Object__init_($this);
    $this.$mask6 = Long_fromInt(-1);
    $this.$boneWeightUnits = (-1);
    $this.$textureCoordinates = (-1);
    var$3 = var$2.length;
    if (!var$3)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(665)));
    $list = $rt_createArray(cbgg_VertexAttribute, var$3);
    $i = 0;
    while ($i < var$3) {
        $list.data[$i] = var$2[$i];
        $i = $i + 1 | 0;
    }
    $this.$attributes = $list;
    $this.$vertexSize = cbgg_VertexAttributes_calculateOffsets($this);
},
cbgg_VertexAttributes__init_ = var_0 => {
    let var_1 = new cbgg_VertexAttributes();
    cbgg_VertexAttributes__init_0(var_1, var_0);
    return var_1;
},
cbgg_VertexAttributes_findByUsage = ($this, $usage) => {
    let $len, $i;
    $len = cbgg_VertexAttributes_size($this);
    $i = 0;
    while ($i < $len) {
        if ((cbgg_VertexAttributes_get($this, $i)).$usage == $usage)
            return cbgg_VertexAttributes_get($this, $i);
        $i = $i + 1 | 0;
    }
    return null;
},
cbgg_VertexAttributes_calculateOffsets = $this => {
    let $count, $i, $attribute;
    $count = 0;
    $i = 0;
    while ($i < $this.$attributes.data.length) {
        $attribute = $this.$attributes.data[$i];
        $attribute.$offset = $count;
        $count = $count + cbgg_VertexAttribute_getSizeInBytes($attribute) | 0;
        $i = $i + 1 | 0;
    }
    return $count;
},
cbgg_VertexAttributes_size = $this => {
    return $this.$attributes.data.length;
},
cbgg_VertexAttributes_get = ($this, $index) => {
    return $this.$attributes.data[$index];
},
cbgg_VertexAttributes_equals = ($this, $obj) => {
    let $other, $i;
    if ($obj === $this)
        return 1;
    if (!($obj instanceof cbgg_VertexAttributes))
        return 0;
    $other = $obj;
    if ($this.$attributes.data.length != $other.$attributes.data.length)
        return 0;
    $i = 0;
    while ($i < $this.$attributes.data.length) {
        if (!cbgg_VertexAttribute_equals($this.$attributes.data[$i], $other.$attributes.data[$i]))
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
},
cbgg_VertexAttributes_getMask = $this => {
    let $result, $i;
    if (Long_eq($this.$mask6, Long_fromInt(-1))) {
        $result = Long_ZERO;
        $i = 0;
        while ($i < $this.$attributes.data.length) {
            $result = Long_or($result, Long_fromInt($this.$attributes.data[$i].$usage));
            $i = $i + 1 | 0;
        }
        $this.$mask6 = $result;
    }
    return $this.$mask6;
},
cbgg_VertexAttributes_getMaskWithSizePacked = $this => {
    return Long_or(cbgg_VertexAttributes_getMask($this), Long_shl(Long_fromInt($this.$attributes.data.length), 32));
},
cbgg_VertexAttributes_getBoneWeights = $this => {
    let $i, $a;
    a: {
        if ($this.$boneWeightUnits < 0) {
            $this.$boneWeightUnits = 0;
            $i = 0;
            while (true) {
                if ($i >= $this.$attributes.data.length)
                    break a;
                $a = $this.$attributes.data[$i];
                if ($a.$usage == 64)
                    $this.$boneWeightUnits = jl_Math_max($this.$boneWeightUnits, $a.$unit + 1 | 0);
                $i = $i + 1 | 0;
            }
        }
    }
    return $this.$boneWeightUnits;
},
cbgg_VertexAttributes_getTextureCoordinates = $this => {
    let $i, $a;
    a: {
        if ($this.$textureCoordinates < 0) {
            $this.$textureCoordinates = 0;
            $i = 0;
            while (true) {
                if ($i >= $this.$attributes.data.length)
                    break a;
                $a = $this.$attributes.data[$i];
                if ($a.$usage == 16)
                    $this.$textureCoordinates = jl_Math_max($this.$textureCoordinates, $a.$unit + 1 | 0);
                $i = $i + 1 | 0;
            }
        }
    }
    return $this.$textureCoordinates;
},
cbgu_Scaling$9 = $rt_classWithoutFields(cbgu_Scaling),
cbgu_Scaling$9__init_ = $this => {
    cbgu_Scaling__init_($this);
},
cbgu_Scaling$9__init_0 = () => {
    let var_0 = new cbgu_Scaling$9();
    cbgu_Scaling$9__init_(var_0);
    return var_0;
};
function cbggg_ModelBatch() {
    let a = this; jl_Object.call(a);
    a.$camera3 = null;
    a.$renderablesPool = null;
    a.$renderables = null;
    a.$context1 = null;
    a.$ownContext = 0;
    a.$shaderProvider = null;
    a.$sorter = null;
}
let cbggg_ModelBatch__init_ = ($this, $context, $shaderProvider, $sorter) => {
    jl_Object__init_($this);
    $this.$renderablesPool = cbggg_ModelBatch$RenderablePool__init_0();
    $this.$renderables = cbgu_Array__init_();
    if ($sorter === null)
        $sorter = cbgggu_DefaultRenderableSorter__init_0();
    $this.$sorter = $sorter;
    $this.$ownContext = $context !== null ? 0 : 1;
    if ($context === null)
        $context = cbgggu_RenderContext__init_0(cbgggu_DefaultTextureBinder__init_1(1, 1));
    $this.$context1 = $context;
    if ($shaderProvider === null)
        $shaderProvider = cbgggu_DefaultShaderProvider__init_1();
    $this.$shaderProvider = $shaderProvider;
},
cbggg_ModelBatch__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_ModelBatch();
    cbggg_ModelBatch__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_ModelBatch__init_0 = $this => {
    cbggg_ModelBatch__init_($this, null, null, null);
},
cbggg_ModelBatch__init_1 = () => {
    let var_0 = new cbggg_ModelBatch();
    cbggg_ModelBatch__init_0(var_0);
    return var_0;
},
cbggg_ModelBatch_begin = ($this, $cam) => {
    if ($this.$camera3 !== null)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(666)));
    $this.$camera3 = $cam;
    if ($this.$ownContext)
        $this.$context1.$begin();
},
cbggg_ModelBatch_flush = $this => {
    let $currentShader, $i, $renderable;
    $this.$sorter.$sort2($this.$camera3, $this.$renderables);
    $currentShader = null;
    $i = 0;
    while ($i < $this.$renderables.$size0) {
        $renderable = $this.$renderables.$get($i);
        if ($currentShader !== $renderable.$shader1) {
            if ($currentShader !== null)
                $currentShader.$end();
            $currentShader = $renderable.$shader1;
            $currentShader.$begin5($this.$camera3, $this.$context1);
        }
        $currentShader.$render7($renderable);
        $i = $i + 1 | 0;
    }
    if ($currentShader !== null)
        $currentShader.$end();
    $this.$renderablesPool.$flush();
    $this.$renderables.$clear();
},
cbggg_ModelBatch_end = $this => {
    $this.$flush();
    if ($this.$ownContext)
        $this.$context1.$end();
    $this.$camera3 = null;
},
cbggg_ModelBatch_render = ($this, $renderableProvider, $environment) => {
    let $i, $renderable;
    $i = $this.$renderables.$size0;
    $renderableProvider.$getRenderables0($this.$renderables, $this.$renderablesPool);
    while ($i < $this.$renderables.$size0) {
        $renderable = $this.$renderables.$get($i);
        $renderable.$environment = $environment;
        $renderable.$shader1 = $this.$shaderProvider.$getShader($renderable);
        $i = $i + 1 | 0;
    }
},
cbgu_Scaling$4 = $rt_classWithoutFields(cbgu_Scaling),
cbgu_Scaling$4__init_ = $this => {
    cbgu_Scaling__init_($this);
},
cbgu_Scaling$4__init_0 = () => {
    let var_0 = new cbgu_Scaling$4();
    cbgu_Scaling$4__init_(var_0);
    return var_0;
},
cbgu_Scaling$3 = $rt_classWithoutFields(cbgu_Scaling),
cbgu_Scaling$3__init_ = $this => {
    cbgu_Scaling__init_($this);
},
cbgu_Scaling$3__init_0 = () => {
    let var_0 = new cbgu_Scaling$3();
    cbgu_Scaling$3__init_(var_0);
    return var_0;
},
cbgu_Scaling$3_apply = ($this, $sourceWidth, $sourceHeight, $targetWidth, $targetHeight) => {
    let $targetRatio, $sourceRatio, $scale;
    $targetRatio = $targetHeight / $targetWidth;
    $sourceRatio = $sourceHeight / $sourceWidth;
    $scale = $targetRatio >= $sourceRatio ? $targetHeight / $sourceHeight : $targetWidth / $sourceWidth;
    cbgu_Scaling_$callClinit();
    cbgu_Scaling_temp.$x0 = $sourceWidth * $scale;
    cbgu_Scaling_temp.$y0 = $sourceHeight * $scale;
    return cbgu_Scaling_temp;
},
cbgu_Scaling$2 = $rt_classWithoutFields(cbgu_Scaling),
cbgu_Scaling$2__init_ = $this => {
    cbgu_Scaling__init_($this);
},
cbgu_Scaling$2__init_0 = () => {
    let var_0 = new cbgu_Scaling$2();
    cbgu_Scaling$2__init_(var_0);
    return var_0;
},
cbgu_Scaling$1 = $rt_classWithoutFields(cbgu_Scaling),
cbgu_Scaling$1__init_ = $this => {
    cbgu_Scaling__init_($this);
},
cbgu_Scaling$1__init_0 = () => {
    let var_0 = new cbgu_Scaling$1();
    cbgu_Scaling$1__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyASCII = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyASCII__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyASCII__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyASCII();
    jur_AbstractCharClass$LazyASCII__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyASCII_computeValue = $this => {
    return (jur_CharClass__init_()).$add0(0, 127);
};
function cbggg_GlyphLayout() {
    let a = this; jl_Object.call(a);
    a.$runs = null;
    a.$colors = null;
    a.$glyphCount = 0;
    a.$width9 = 0.0;
    a.$height6 = 0.0;
}
let cbggg_GlyphLayout_glyphRunPool = null,
cbggg_GlyphLayout_colorStack = null,
cbggg_GlyphLayout_$callClinit = () => {
    cbggg_GlyphLayout_$callClinit = $rt_eraseClinit(cbggg_GlyphLayout);
    cbggg_GlyphLayout__clinit_();
},
cbggg_GlyphLayout__init_ = $this => {
    cbggg_GlyphLayout_$callClinit();
    jl_Object__init_($this);
    $this.$runs = cbgu_Array__init_0(1);
    $this.$colors = cbgu_IntArray__init_1(2);
},
cbggg_GlyphLayout__init_0 = () => {
    let var_0 = new cbggg_GlyphLayout();
    cbggg_GlyphLayout__init_(var_0);
    return var_0;
},
cbggg_GlyphLayout_setText = ($this, $font, $str, $start, $end, $color, $targetWidth, $halign, $wrap, $truncate) => {
    let $fontData, $wrapOrTruncate, $currentColor, $markupEnabled, $isLastRun, $y, $down, $lineRun, $lastGlyph, var$19, $runStart, $newline, $runEnd, var$23, $length, $run, $runWidth, $i, var$28, var$29, $glyph, $glyphWidth, $wrapIndex;
    $this.$reset2();
    $fontData = $font.$data6;
    if ($start == $end) {
        $this.$height6 = $fontData.$capHeight;
        return;
    }
    if ($wrap)
        $targetWidth = jl_Math_max0($targetWidth, $fontData.$spaceXadvance * 3.0);
    $wrapOrTruncate = !$wrap && $truncate === null ? 0 : 1;
    $currentColor = $color.$toIntBits();
    $this.$colors.$add14(0, $currentColor);
    $markupEnabled = $fontData.$markupEnabled;
    if ($markupEnabled)
        cbggg_GlyphLayout_colorStack.$add2($currentColor);
    $isLastRun = 0;
    $y = 0.0;
    $down = $fontData.$down;
    $lineRun = null;
    $lastGlyph = null;
    var$19 = $currentColor;
    $runStart = $start;
    a: {
        b: while (true) {
            c: {
                $newline = 0;
                if ($start == $end) {
                    if ($runStart == $end)
                        break b;
                    $isLastRun = 1;
                    $runEnd = $end;
                } else {
                    d: {
                        var$23 = $start + 1 | 0;
                        switch ($str.$charAt($start)) {
                            case 10:
                                $runEnd = var$23 - 1 | 0;
                                $newline = 1;
                                $start = var$23;
                                break c;
                            case 91:
                                if (!$markupEnabled) {
                                    $start = var$23;
                                    break d;
                                }
                                $length = cbggg_GlyphLayout_parseColorMarkup($this, $str, var$23, $end);
                                if ($length >= 0) {
                                    $runEnd = var$23 - 1 | 0;
                                    $start = var$23 + ($length + 1 | 0) | 0;
                                    if ($start == $end) {
                                        $isLastRun = 1;
                                        break c;
                                    }
                                    $currentColor = cbggg_GlyphLayout_colorStack.$peek0();
                                    break c;
                                }
                                if ($length != (-2)) {
                                    $start = var$23;
                                    break d;
                                }
                                $start = var$23 + 1 | 0;
                                break d;
                            default:
                        }
                        $start = var$23;
                    }
                    continue b;
                }
            }
            $run = cbggg_GlyphLayout_glyphRunPool.$obtain0();
            $run.$x4 = 0.0;
            $run.$y4 = $y;
            $fontData.$getGlyphs($run, $str, $runStart, $runEnd, $lastGlyph);
            $this.$glyphCount = $this.$glyphCount + $run.$glyphs.$size0 | 0;
            if ($currentColor != var$19) {
                if ($this.$colors.$get1($this.$colors.$size1 - 2 | 0) != $this.$glyphCount) {
                    $this.$colors.$add2($this.$glyphCount);
                    $this.$colors.$add2($currentColor);
                } else
                    $this.$colors.$set6($this.$colors.$size1 - 1 | 0, $currentColor);
                var$19 = $currentColor;
            }
            e: {
                if (!$run.$glyphs.$size0) {
                    cbggg_GlyphLayout_glyphRunPool.$free($run);
                    if ($lineRun === null)
                        break e;
                } else if ($lineRun !== null) {
                    $lineRun.$appendRun($run);
                    cbggg_GlyphLayout_glyphRunPool.$free($run);
                } else {
                    $this.$runs.$add1($run);
                    $lineRun = $run;
                }
                if (!$newline && !$isLastRun)
                    $lastGlyph = $lineRun.$glyphs.$peek();
                else {
                    cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $lineRun);
                    $lastGlyph = null;
                }
                if ($wrapOrTruncate && $lineRun.$glyphs.$size0 && !(!$newline && !$isLastRun)) {
                    $runWidth = $lineRun.$xAdvances.$first0() + $lineRun.$xAdvances.$get8(1);
                    $i = 2;
                    while ($i < $lineRun.$xAdvances.$size2) {
                        var$28 = $lineRun.$glyphs;
                        var$29 = $i - 1 | 0;
                        $glyph = var$28.$get(var$29);
                        $glyphWidth = cbggg_GlyphLayout_getGlyphWidth($this, $glyph, $fontData);
                        if ($runWidth + $glyphWidth - 9.999999747378752E-5 <= $targetWidth)
                            $runWidth = $runWidth + $lineRun.$xAdvances.$items0.data[$i];
                        else {
                            if ($truncate !== null) {
                                cbggg_GlyphLayout_truncate($this, $fontData, $lineRun, $targetWidth, $truncate);
                                break a;
                            }
                            $wrapIndex = $fontData.$getWrapIndex($lineRun.$glyphs, $i);
                            if (!(!$wrapIndex && $lineRun.$x4 === 0.0) && $wrapIndex < $lineRun.$glyphs.$size0)
                                var$29 = $wrapIndex;
                            $lineRun = cbggg_GlyphLayout_wrap($this, $fontData, $lineRun, var$29);
                            if ($lineRun === null)
                                break e;
                            $this.$runs.$add1($lineRun);
                            $y = $y + $down;
                            $lineRun.$x4 = 0.0;
                            $lineRun.$y4 = $y;
                            $runWidth = $lineRun.$xAdvances.$first0() + $lineRun.$xAdvances.$get8(1);
                            $i = 1;
                        }
                        $i = $i + 1 | 0;
                    }
                }
            }
            if ($newline) {
                $lineRun = null;
                $lastGlyph = null;
                $y = $runEnd != $runStart ? $y + $down : $y + $down * $fontData.$blankLineScale;
            }
            $runStart = $start;
        }
    }
    $this.$height6 = $fontData.$capHeight + jl_Math_abs($y);
    cbggg_GlyphLayout_calculateWidths($this, $fontData);
    cbggg_GlyphLayout_alignRuns($this, $targetWidth, $halign);
    if ($markupEnabled)
        cbggg_GlyphLayout_colorStack.$clear();
},
cbggg_GlyphLayout_calculateWidths = ($this, $fontData) => {
    let $width, $runsItems, $i, $n, $run, $xAdvances, var$8, $runWidth, $max, $glyphs, $ii, $nn, $glyph, $glyphWidth;
    $width = 0.0;
    $runsItems = $this.$runs.$items;
    $i = 0;
    $n = $this.$runs.$size0;
    while ($i < $n) {
        $run = $runsItems.data[$i];
        $xAdvances = $run.$xAdvances.$items0;
        var$8 = $xAdvances.data;
        $runWidth = $run.$x4 + var$8[0];
        $max = 0.0;
        $glyphs = $run.$glyphs.$items;
        $ii = 0;
        $nn = $run.$glyphs.$size0;
        while ($ii < $nn) {
            $glyph = $glyphs.data[$ii];
            $glyphWidth = cbggg_GlyphLayout_getGlyphWidth($this, $glyph, $fontData);
            $max = jl_Math_max0($max, $runWidth + $glyphWidth);
            $ii = $ii + 1 | 0;
            $runWidth = $runWidth + var$8[$ii];
        }
        $run.$width6 = jl_Math_max0($runWidth, $max) - $run.$x4;
        $width = jl_Math_max0($width, $run.$x4 + $run.$width6);
        $i = $i + 1 | 0;
    }
    $this.$width9 = $width;
},
cbggg_GlyphLayout_alignRuns = ($this, $targetWidth, $halign) => {
    let $center, $runsItems, $i, $n, $run;
    a: {
        if (!($halign & 8)) {
            $center = !($halign & 1) ? 0 : 1;
            $runsItems = $this.$runs.$items;
            $i = 0;
            $n = $this.$runs.$size0;
            while (true) {
                if ($i >= $n)
                    break a;
                $run = $runsItems.data[$i];
                $run.$x4 = $run.$x4 + (!$center ? $targetWidth - $run.$width6 : 0.5 * ($targetWidth - $run.$width6));
                $i = $i + 1 | 0;
            }
        }
    }
},
cbggg_GlyphLayout_truncate = ($this, $fontData, $run, $targetWidth, $truncate) => {
    let $glyphCount, $truncateRun, $truncateWidth, $xAdvances, $i, $n, var$11, $count, $width, $xAdvance, $droppedGlyphCount, var$16;
    $glyphCount = $run.$glyphs.$size0;
    cbggg_GlyphLayout_$callClinit();
    $truncateRun = cbggg_GlyphLayout_glyphRunPool.$obtain0();
    $fontData.$getGlyphs($truncateRun, $truncate, 0, $truncate.$length(), null);
    $truncateWidth = 0.0;
    if ($truncateRun.$xAdvances.$size2 > 0) {
        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $truncateRun);
        $xAdvances = $truncateRun.$xAdvances.$items0;
        $i = 1;
        $n = $truncateRun.$xAdvances.$size2;
        while ($i < $n) {
            $truncateWidth = $truncateWidth + $xAdvances.data[$i];
            $i = $i + 1 | 0;
        }
    }
    var$11 = $targetWidth - $truncateWidth;
    $count = 0;
    $width = $run.$x4;
    $xAdvances = $run.$xAdvances.$items0;
    a: {
        while (true) {
            if ($count >= $run.$xAdvances.$size2)
                break a;
            $xAdvance = $xAdvances.data[$count];
            $width = $width + $xAdvance;
            if ($width > var$11)
                break;
            $count = $count + 1 | 0;
        }
    }
    if ($count <= 1) {
        $run.$glyphs.$clear();
        $run.$xAdvances.$clear();
        $run.$xAdvances.$addAll3($truncateRun.$xAdvances);
    } else {
        $run.$glyphs.$truncate0($count - 1 | 0);
        $run.$xAdvances.$truncate0($count);
        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $run);
        if ($truncateRun.$xAdvances.$size2 > 0)
            $run.$xAdvances.$addAll4($truncateRun.$xAdvances, 1, $truncateRun.$xAdvances.$size2 - 1 | 0);
    }
    b: {
        $droppedGlyphCount = $glyphCount - $run.$glyphs.$size0 | 0;
        if ($droppedGlyphCount > 0) {
            $this.$glyphCount = $this.$glyphCount - $droppedGlyphCount | 0;
            if ($fontData.$markupEnabled)
                while (true) {
                    if ($this.$colors.$size1 <= 2)
                        break b;
                    if ($this.$colors.$get1($this.$colors.$size1 - 2 | 0) < $this.$glyphCount)
                        break b;
                    var$16 = $this.$colors;
                    var$16.$size1 = var$16.$size1 - 2 | 0;
                }
        }
    }
    $run.$glyphs.$addAll1($truncateRun.$glyphs);
    $this.$glyphCount = $this.$glyphCount + $truncate.$length() | 0;
    cbggg_GlyphLayout_glyphRunPool.$free($truncateRun);
},
cbggg_GlyphLayout_wrap = ($this, $fontData, $first, $secondStart) => {
    let $glyphs2, $glyphCount, $xAdvances2, $firstEnd, var$8, $second, $droppedGlyphCount, $lastColor, var$12, $glyphs1, $xAdvances1, $firstGlyphCount, $secondGlyphCount, $reductionThreshold, $i, $colorChangeIndex;
    $glyphs2 = $first.$glyphs;
    $glyphCount = $first.$glyphs.$size0;
    $xAdvances2 = $first.$xAdvances;
    $firstEnd = $secondStart;
    a: {
        while (true) {
            if ($firstEnd <= 0)
                break a;
            if (!$fontData.$isWhitespace(($glyphs2.$get($firstEnd - 1 | 0)).$id0 & 65535))
                break;
            $firstEnd = $firstEnd + (-1) | 0;
        }
    }
    b: {
        while (true) {
            var$8 = $rt_compare($secondStart, $glyphCount);
            if (var$8 >= 0)
                break b;
            if (!$fontData.$isWhitespace(($glyphs2.$get($secondStart)).$id0 & 65535))
                break;
            $secondStart = $secondStart + 1 | 0;
        }
    }
    $second = null;
    if (var$8 >= 0) {
        $glyphs2.$truncate0($firstEnd);
        $xAdvances2.$truncate0($firstEnd + 1 | 0);
        $droppedGlyphCount = $secondStart - $firstEnd | 0;
        if ($droppedGlyphCount > 0) {
            $this.$glyphCount = $this.$glyphCount - $droppedGlyphCount | 0;
            if ($fontData.$markupEnabled && $this.$colors.$get1($this.$colors.$size1 - 2 | 0) > $this.$glyphCount) {
                $lastColor = $this.$colors.$peek0();
                while ($this.$colors.$get1($this.$colors.$size1 - 2 | 0) > $this.$glyphCount) {
                    var$12 = $this.$colors;
                    var$12.$size1 = var$12.$size1 - 2 | 0;
                }
                $this.$colors.$set6($this.$colors.$size1 - 2 | 0, $this.$glyphCount);
                $this.$colors.$set6($this.$colors.$size1 - 1 | 0, $lastColor);
            }
        }
    } else
        c: {
            cbggg_GlyphLayout_$callClinit();
            $second = cbggg_GlyphLayout_glyphRunPool.$obtain0();
            $glyphs1 = $second.$glyphs;
            $glyphs1.$addAll5($glyphs2, 0, $firstEnd);
            $glyphs2.$removeRange(0, $secondStart - 1 | 0);
            $first.$glyphs = $glyphs1;
            $second.$glyphs = $glyphs2;
            $xAdvances1 = $second.$xAdvances;
            $xAdvances1.$addAll4($xAdvances2, 0, $firstEnd + 1 | 0);
            $xAdvances2.$removeRange(1, $secondStart);
            $xAdvances2.$items0.data[0] = cbggg_GlyphLayout_getLineOffset($this, $glyphs2, $fontData);
            $first.$xAdvances = $xAdvances1;
            $second.$xAdvances = $xAdvances2;
            $firstGlyphCount = $first.$glyphs.$size0;
            $secondGlyphCount = $second.$glyphs.$size0;
            $droppedGlyphCount = ($glyphCount - $firstGlyphCount | 0) - $secondGlyphCount | 0;
            $this.$glyphCount = $this.$glyphCount - $droppedGlyphCount | 0;
            if ($fontData.$markupEnabled && $droppedGlyphCount > 0) {
                $reductionThreshold = $this.$glyphCount - $secondGlyphCount | 0;
                $i = $this.$colors.$size1 - 2 | 0;
                while (true) {
                    if ($i < 2)
                        break c;
                    $colorChangeIndex = $this.$colors.$get1($i);
                    if ($colorChangeIndex <= $reductionThreshold)
                        break;
                    $this.$colors.$set6($i, $colorChangeIndex - $droppedGlyphCount | 0);
                    $i = $i + (-2) | 0;
                }
            }
        }
    if ($firstEnd)
        cbggg_GlyphLayout_setLastGlyphXAdvance($this, $fontData, $first);
    else {
        cbggg_GlyphLayout_$callClinit();
        cbggg_GlyphLayout_glyphRunPool.$free($first);
        $this.$runs.$pop0();
    }
    return $second;
},
cbggg_GlyphLayout_setLastGlyphXAdvance = ($this, $fontData, $run) => {
    let $last;
    $last = $run.$glyphs.$peek();
    if (!$last.$fixedWidth)
        $run.$xAdvances.$items0.data[$run.$xAdvances.$size2 - 1 | 0] = cbggg_GlyphLayout_getGlyphWidth($this, $last, $fontData);
},
cbggg_GlyphLayout_getGlyphWidth = ($this, $glyph, $fontData) => {
    return ($glyph.$fixedWidth ? $glyph.$xadvance : $glyph.$width2 + $glyph.$xoffset | 0) * $fontData.$scaleX - $fontData.$padRight1;
},
cbggg_GlyphLayout_getLineOffset = ($this, $glyphs, $fontData) => {
    let $first;
    $first = $glyphs.$first1();
    return ($first.$fixedWidth ? 0.0 : ( -$first.$xoffset | 0) * $fontData.$scaleX) - $fontData.$padLeft1;
},
cbggg_GlyphLayout_parseColorMarkup = ($this, $str, $start, $end) => {
    let $color, $i, $ch, var$7, var$8, $color_0;
    if ($start == $end)
        return (-1);
    switch ($str.$charAt($start)) {
        case 35:
            $color = 0;
            $i = $start + 1 | 0;
            a: {
                while (true) {
                    if ($i >= $end)
                        break a;
                    $ch = $str.$charAt($i);
                    if ($ch == 93)
                        break;
                    var$7 = ($color << 4) + $ch | 0;
                    if ($ch >= 48 && $ch <= 57)
                        $color = var$7 + (-48) | 0;
                    else if ($ch >= 65 && $ch <= 70)
                        $color = var$7 + (-55) | 0;
                    else {
                        if ($ch < 97)
                            break a;
                        if ($ch > 102)
                            break a;
                        $color = var$7 + (-87) | 0;
                    }
                    $i = $i + 1 | 0;
                }
                if ($i >= ($start + 2 | 0) && $i <= ($start + 9 | 0)) {
                    var$8 = $i - $start | 0;
                    if (var$8 < 8)
                        $color = $color << ((9 - var$8 | 0) << 2) | 255;
                    cbggg_GlyphLayout_$callClinit();
                    cbggg_GlyphLayout_colorStack.$add2(jl_Integer_reverseBytes($color));
                    return var$8;
                }
            }
            return (-1);
        case 91:
            break;
        case 93:
            cbggg_GlyphLayout_$callClinit();
            if (cbggg_GlyphLayout_colorStack.$size1 > 1)
                cbggg_GlyphLayout_colorStack.$pop();
            return 0;
        default:
            $i = $start + 1 | 0;
            while ($i < $end) {
                $ch = $str.$charAt($i);
                if ($ch == 93) {
                    $color_0 = cbgg_Colors_get(($str.$subSequence($start, $i)).$toString());
                    if ($color_0 === null)
                        return (-1);
                    cbggg_GlyphLayout_$callClinit();
                    cbggg_GlyphLayout_colorStack.$add2($color_0.$toIntBits());
                    return $i - $start | 0;
                }
                $i = $i + 1 | 0;
            }
            return (-1);
    }
    return (-2);
},
cbggg_GlyphLayout_reset = $this => {
    cbggg_GlyphLayout_$callClinit();
    cbggg_GlyphLayout_glyphRunPool.$freeAll($this.$runs);
    $this.$runs.$clear();
    $this.$colors.$clear();
    $this.$glyphCount = 0;
    $this.$width9 = 0.0;
    $this.$height6 = 0.0;
},
cbggg_GlyphLayout_toString = $this => {
    let $buffer, $i, $n;
    if (!$this.$runs.$size0)
        return $rt_s(60);
    $buffer = jl_StringBuilder__init_0(128);
    $buffer.$append20($this.$width9);
    $buffer.$append0(120);
    $buffer.$append20($this.$height6);
    $buffer.$append0(10);
    $i = 0;
    $n = $this.$runs.$size0;
    while ($i < $n) {
        $buffer.$append1(($this.$runs.$get($i)).$toString());
        $buffer.$append0(10);
        $i = $i + 1 | 0;
    }
    $buffer.$setLength($buffer.$length() - 1 | 0);
    return $buffer.$toString();
},
cbggg_GlyphLayout__clinit_ = () => {
    cbggg_GlyphLayout_glyphRunPool = cbgu_Pools_get(cbggg_GlyphLayout$_clinit_$lambda$_17_0__init_0());
    cbggg_GlyphLayout_colorStack = cbgu_IntArray__init_1(4);
},
cbggg_HdpiMode = $rt_classWithoutFields(jl_Enum),
cbggg_HdpiMode_Logical = null,
cbggg_HdpiMode_Pixels = null,
cbggg_HdpiMode_$VALUES = null,
cbggg_HdpiMode_$callClinit = () => {
    cbggg_HdpiMode_$callClinit = $rt_eraseClinit(cbggg_HdpiMode);
    cbggg_HdpiMode__clinit_();
},
cbggg_HdpiMode__init_0 = ($this, var$1, var$2) => {
    cbggg_HdpiMode_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
},
cbggg_HdpiMode__init_ = (var_0, var_1) => {
    let var_2 = new cbggg_HdpiMode();
    cbggg_HdpiMode__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggg_HdpiMode_$values = () => {
    let var$1, var$2;
    cbggg_HdpiMode_$callClinit();
    var$1 = $rt_createArray(cbggg_HdpiMode, 2);
    var$2 = var$1.data;
    var$2[0] = cbggg_HdpiMode_Logical;
    var$2[1] = cbggg_HdpiMode_Pixels;
    return var$1;
},
cbggg_HdpiMode__clinit_ = () => {
    cbggg_HdpiMode_Logical = cbggg_HdpiMode__init_($rt_s(667), 0);
    cbggg_HdpiMode_Pixels = cbggg_HdpiMode__init_($rt_s(668), 1);
    cbggg_HdpiMode_$VALUES = cbggg_HdpiMode_$values();
};
function cbgggm_Node() {
    let a = this; jl_Object.call(a);
    a.$id = null;
    a.$inheritTransform = 0;
    a.$isAnimated = 0;
    a.$translation0 = null;
    a.$rotation1 = null;
    a.$scale = null;
    a.$localTransform = null;
    a.$globalTransform = null;
    a.$parts = null;
    a.$parent1 = null;
    a.$children1 = null;
}
let cbgggm_Node__init_0 = $this => {
    jl_Object__init_($this);
    $this.$inheritTransform = 1;
    $this.$translation0 = cbgm_Vector3__init_();
    $this.$rotation1 = cbgm_Quaternion__init_(0.0, 0.0, 0.0, 1.0);
    $this.$scale = cbgm_Vector3__init_0(1.0, 1.0, 1.0);
    $this.$localTransform = cbgm_Matrix4__init_();
    $this.$globalTransform = cbgm_Matrix4__init_();
    $this.$parts = cbgu_Array__init_0(2);
    $this.$children1 = cbgu_Array__init_0(2);
},
cbgggm_Node__init_ = () => {
    let var_0 = new cbgggm_Node();
    cbgggm_Node__init_0(var_0);
    return var_0;
},
cbgggm_Node_calculateLocalTransform = $this => {
    if (!$this.$isAnimated)
        $this.$localTransform.$set41($this.$translation0, $this.$rotation1, $this.$scale);
    return $this.$localTransform;
},
cbgggm_Node_calculateWorldTransform = $this => {
    if ($this.$inheritTransform && $this.$parent1 !== null)
        ($this.$globalTransform.$set1($this.$parent1.$globalTransform)).$mul1($this.$localTransform);
    else
        $this.$globalTransform.$set1($this.$localTransform);
    return $this.$globalTransform;
},
cbgggm_Node_calculateTransforms = ($this, $recursive) => {
    let var$2, $child;
    a: {
        $this.$calculateLocalTransform();
        $this.$calculateWorldTransform();
        if ($recursive) {
            var$2 = $this.$children1.$iterator();
            while (true) {
                if (!var$2.$hasNext())
                    break a;
                $child = var$2.$next();
                $child.$calculateTransforms0(1);
            }
        }
    }
},
cbgggm_Node_calculateBoneTransforms = ($this, $recursive) => {
    let var$2, $part, $n, $i, $child;
    var$2 = $this.$parts.$iterator();
    while (var$2.$hasNext()) {
        $part = var$2.$next();
        if ($part.$invBoneBindTransforms === null)
            continue;
        if ($part.$bones0 === null)
            continue;
        if ($part.$invBoneBindTransforms.$size3 != $part.$bones0.data.length)
            continue;
        $n = $part.$invBoneBindTransforms.$size3;
        $i = 0;
        while ($i < $n) {
            ($part.$bones0.data[$i].$set1($part.$invBoneBindTransforms.$keys.data[$i].$globalTransform)).$mul1($part.$invBoneBindTransforms.$values4.data[$i]);
            $i = $i + 1 | 0;
        }
    }
    a: {
        if ($recursive) {
            var$2 = $this.$children1.$iterator();
            while (true) {
                if (!var$2.$hasNext())
                    break a;
                $child = var$2.$next();
                $child.$calculateBoneTransforms(1);
            }
        }
    }
},
cbgggm_Node_detach = $this => {
    if ($this.$parent1 !== null) {
        $this.$parent1.$removeChild($this);
        $this.$parent1 = null;
    }
},
cbgggm_Node_getChildCount = $this => {
    return $this.$children1.$size0;
},
cbgggm_Node_getChild = ($this, $index) => {
    return $this.$children1.$get($index);
},
cbgggm_Node_addChild = ($this, $child) => {
    return $this.$insertChild((-1), $child);
},
cbgggm_Node_insertChild = ($this, $index, $child) => {
    let $p;
    $p = $this;
    while (true) {
        if ($p === null) {
            $p = $child.$getParent0();
            if ($p !== null && !$p.$removeChild($child))
                $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(669)));
            if ($index >= 0 && $index < $this.$children1.$size0)
                $this.$children1.$insert21($index, $child);
            else {
                $index = $this.$children1.$size0;
                $this.$children1.$add1($child);
            }
            $child.$parent1 = $this;
            return $index;
        }
        if ($p === $child)
            break;
        $p = $p.$getParent0();
    }
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(670)));
},
cbgggm_Node_removeChild = ($this, $child) => {
    if (!$this.$children1.$removeValue($child, 1))
        return 0;
    $child.$parent1 = null;
    return 1;
},
cbgggm_Node_getChildren = $this => {
    return $this.$children1;
},
cbgggm_Node_getParent = $this => {
    return $this.$parent1;
},
cbgggm_Node_copy = $this => {
    return (cbgggm_Node__init_()).$set42($this);
},
cbgggm_Node_set = ($this, $other) => {
    let var$2, $nodePart, $child;
    $this.$detach();
    $this.$id = $other.$id;
    $this.$isAnimated = $other.$isAnimated;
    $this.$inheritTransform = $other.$inheritTransform;
    $this.$translation0.$set7($other.$translation0);
    $this.$rotation1.$set43($other.$rotation1);
    $this.$scale.$set7($other.$scale);
    $this.$localTransform.$set1($other.$localTransform);
    $this.$globalTransform.$set1($other.$globalTransform);
    $this.$parts.$clear();
    var$2 = $other.$parts.$iterator();
    while (var$2.$hasNext()) {
        $nodePart = var$2.$next();
        $this.$parts.$add1($nodePart.$copy4());
    }
    $this.$children1.$clear();
    var$2 = ($other.$getChildren0()).$iterator0();
    while (var$2.$hasNext()) {
        $child = var$2.$next();
        $this.$addChild($child.$copy1());
    }
    return $this;
},
cbgggm_Node_getNode = ($nodes, $id, $recursive, $ignoreCase) => {
    let $n, $i, var$7, var$8;
    a: {
        $n = $nodes.$size0;
        if (!$ignoreCase) {
            $i = 0;
            while (true) {
                if ($i >= $n)
                    break a;
                var$7 = $nodes.$get($i);
                if (var$7.$id.$equals($id))
                    break;
                $i = $i + 1 | 0;
            }
            return var$7;
        }
        $i = 0;
        while (true) {
            if ($i >= $n)
                break a;
            var$8 = $nodes.$get($i);
            if (var$8.$id.$equalsIgnoreCase($id))
                break;
            $i = $i + 1 | 0;
        }
        return var$8;
    }
    b: {
        if ($recursive) {
            $i = 0;
            while (true) {
                if ($i >= $n)
                    break b;
                var$8 = cbgggm_Node_getNode(($nodes.$get($i)).$children1, $id, 1, $ignoreCase);
                if (var$8 !== null)
                    break;
                $i = $i + 1 | 0;
            }
            return var$8;
        }
    }
    return null;
},
cgxgbta_TeaWebAgent = $rt_classWithoutFields(),
cgxgbta_TeaWebAgent_computeAgentInfo = () => {
    let $jsObj;
    $jsObj = cgxgbta_TeaWebAgent_createAgent$js_body$_1();
    return $jsObj;
},
cgxgbta_TeaWebAgent_createAgent$js_body$_1 = () => {
    var userAgent = navigator.userAgent.toLowerCase();
    return { firefox : userAgent.indexOf('firefox') !=  -1, chrome : userAgent.indexOf('chrome') !=  -1, safari : userAgent.indexOf('safari') !=  -1, opera : userAgent.indexOf('opera') !=  -1, IE : userAgent.indexOf('msie') !=  -1, macOS : userAgent.indexOf('mac') !=  -1, linux : userAgent.indexOf('linux') !=  -1, windows : userAgent.indexOf('win') !=  -1, userAgent : userAgent };
};
function jur_Quantifier() {
    let a = this; jur_SpecialToken.call(a);
    a.$min5 = 0;
    a.$max5 = 0;
}
let jur_Quantifier__init_ = ($this, $min, $max) => {
    jur_SpecialToken__init_($this);
    $this.$min5 = $min;
    $this.$max5 = $max;
},
jur_Quantifier__init_0 = (var_0, var_1) => {
    let var_2 = new jur_Quantifier();
    jur_Quantifier__init_(var_2, var_0, var_1);
    return var_2;
},
jur_Quantifier_min = $this => {
    return $this.$min5;
},
jur_Quantifier_max = $this => {
    return $this.$max5;
},
jur_Quantifier_toString = $this => {
    let var$1, var$2, var$3;
    var$1 = $this.$min5;
    var$2 = $this.$max5 == 2147483647 ? $rt_s(60) : jl_Integer_toString($this.$max5);
    var$3 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append1(var$3, 123), var$1), 44), var$2), 125);
    return jl_StringBuilder_toString(var$3);
},
cbggg_GlyphLayout$_clinit_$lambda$_17_0 = $rt_classWithoutFields(),
cbggg_GlyphLayout$_clinit_$lambda$_17_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbggg_GlyphLayout$_clinit_$lambda$_17_0__init_0 = () => {
    let var_0 = new cbggg_GlyphLayout$_clinit_$lambda$_17_0();
    cbggg_GlyphLayout$_clinit_$lambda$_17_0__init_(var_0);
    return var_0;
},
cbggg_GlyphLayout$_clinit_$lambda$_17_0_get0 = var$0 => {
    return cbggg_GlyphLayout$_clinit_$lambda$_17_0_get(var$0);
},
cbggg_GlyphLayout$_clinit_$lambda$_17_0_get = var$0 => {
    return cbggg_GlyphLayout$GlyphRun__init_0();
};
function jur_AbstractCharClass$LazyJavaUpperCase$1() {
    jur_AbstractCharClass.call(this);
    this.$this$056 = null;
}
let jur_AbstractCharClass$LazyJavaUpperCase$1__init_ = ($this, $this$0) => {
    $this.$this$056 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaUpperCase$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaUpperCase$1();
    jur_AbstractCharClass$LazyJavaUpperCase$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaUpperCase$1_contains = ($this, $ch) => {
    return jl_Character_isUpperCase($ch);
},
otpp_ResourceAccessor = $rt_classWithoutFields();
function cgxgbta_QueueAsset() {
    let a = this; jl_Object.call(a);
    a.$assetUrl = null;
    a.$fileHandle = null;
}
let cgxgbta_QueueAsset__init_ = $this => {
    jl_Object__init_($this);
},
cgxgbta_QueueAsset__init_0 = () => {
    let var_0 = new cgxgbta_QueueAsset();
    cgxgbta_QueueAsset__init_(var_0);
    return var_0;
};
function cgxgbt_TeaApplication() {
    let a = this; jl_Object.call(a);
    a.$initQueue0 = 0;
    a.$graphics = null;
    a.$input = null;
    a.$files = null;
    a.$net = null;
    a.$config = null;
    a.$appListener = null;
    a.$curListener = null;
    a.$lifecycleListeners = null;
    a.$window = null;
    a.$initState = null;
    a.$isPreloadReady = 0;
    a.$lastWidth = 0;
    a.$lastHeight = 0;
    a.$logger = null;
    a.$logLevel = 0;
    a.$assetLoader = null;
    a.$prefs = null;
    a.$clipboard = null;
    a.$runnables = null;
    a.$runnablesHelper = null;
}
let cgxgbt_TeaApplication_WEB_SCRIPT_PATH = null,
cgxgbt_TeaApplication_WEB_ASSET_PATH = null,
cgxgbt_TeaApplication_agentInfo = null,
cgxgbt_TeaApplication_$callClinit = () => {
    cgxgbt_TeaApplication_$callClinit = $rt_eraseClinit(cgxgbt_TeaApplication);
    cgxgbt_TeaApplication__clinit_();
},
cgxgbt_TeaApplication_getAgentInfo = () => {
    cgxgbt_TeaApplication_$callClinit();
    return cgxgbt_TeaApplication_agentInfo;
},
cgxgbt_TeaApplication_get = () => {
    cgxgbt_TeaApplication_$callClinit();
    return cbg_Gdx_app;
},
cgxgbt_TeaApplication__init_0 = ($this, $appListener, $config) => {
    cgxgbt_TeaApplication_$callClinit();
    cgxgbt_TeaApplication__init_($this, $appListener, null, $config);
},
cgxgbt_TeaApplication__init_1 = (var_0, var_1) => {
    let var_2 = new cgxgbt_TeaApplication();
    cgxgbt_TeaApplication__init_0(var_2, var_0, var_1);
    return var_2;
},
cgxgbt_TeaApplication__init_ = ($this, $appListener, $preloadAppListener, $config) => {
    cgxgbt_TeaApplication_$callClinit();
    jl_Object__init_($this);
    $this.$lifecycleListeners = cbgu_Array__init_0(4);
    cgxgbt_TeaApplication$AppState_$callClinit();
    $this.$initState = cgxgbt_TeaApplication$AppState_INIT;
    $this.$isPreloadReady = 0;
    $this.$lastWidth = (-1);
    $this.$lastHeight = 1;
    $this.$logLevel = 2;
    $this.$prefs = cbgu_ObjectMap__init_();
    $this.$runnables = cbgu_Array__init_();
    $this.$runnablesHelper = cbgu_Array__init_();
    $this.$window = cgxgbtdi_TeaWindow_get();
    $this.$config = $config;
    $this.$appListener = $appListener;
    if ($preloadAppListener === null)
        $preloadAppListener = $this.$createDefaultPreloadAppListener();
    $this.$curListener = $preloadAppListener;
    $this.$init0();
},
cgxgbt_TeaApplication__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbt_TeaApplication();
    cgxgbt_TeaApplication__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbt_TeaApplication_createDefaultPreloadAppListener = $this => {
    return cgxgbt_TeaPreloadApplicationListener__init_0();
},
cgxgbt_TeaApplication_init = $this => {
    let var$1, $assetDownload, $hostPageBaseURL, $instance, $map, var$6, $appLoop, $initialization;
    var$1 = cgxgbta_TeaWebAgent_computeAgentInfo();
    cgxgbt_TeaApplication_$callClinit();
    cgxgbt_TeaApplication_agentInfo = var$1;
    jl_System_setProperty($rt_s(671), $rt_s(60));
    jl_System_setProperty($rt_s(672), $rt_str(cgxgbt_TeaApplication_agentInfo.userAgent));
    if (cgxgbt_TeaApplication_agentInfo.windows ? 1 : 0)
        jl_System_setProperty($rt_s(673), $rt_s(674));
    else if (cgxgbt_TeaApplication_agentInfo.macOS ? 1 : 0)
        jl_System_setProperty($rt_s(673), $rt_s(675));
    else if (!(cgxgbt_TeaApplication_agentInfo.linux ? 1 : 0))
        jl_System_setProperty($rt_s(673), $rt_s(676));
    else
        jl_System_setProperty($rt_s(673), $rt_s(677));
    $assetDownload = cgxgbta_AssetDownloadImpl__init_0($this.$config.$showDownloadLogs);
    cgxgbta_AssetInstance_setInstance($assetDownload);
    $hostPageBaseURL = $this.$config.$baseUrlProvider.$getBaseUrl();
    $this.$assetLoader = cgxgbta_AssetLoadImpl__init_0($hostPageBaseURL, $this, $assetDownload);
    cgxgbta_AssetInstance_setInstance0($this.$assetLoader);
    $instance = cgxjc_JMultiplatform_getInstance();
    $map = cgxjc_JMultiplatform_getMap($instance);
    cgxjc_JPlatformMap_put($map, cgxgbt_TeaApplication_WEB_SCRIPT_PATH, $this.$assetLoader.$getScriptUrl());
    cgxjc_JPlatformMap_put($map, cgxgbt_TeaApplication_WEB_ASSET_PATH, $this.$assetLoader.$getAssetUrl());
    $this.$graphics = $this.$createGraphics($this.$config);
    $this.$assetLoader.$setupFileDrop($this.$graphics.$canvas0, $this);
    $this.$input = cgxgbt_TeaInput__init_0($this, $this.$graphics.$canvas0);
    $this.$files = cgxgbt_TeaFiles__init_0($this.$config, $this);
    $this.$net = cgxgbt_TeaNet__init_0();
    $this.$logger = cgxgbt_TeaApplicationLogger__init_0();
    $this.$clipboard = cgxgbt_TeaClipboard__init_0();
    cgxgbt_TeaApplication_initGdx($this);
    if ($this.$config.$preloadListener !== null)
        $this.$config.$preloadListener.$onPreload($this.$assetLoader);
    cbg_Gdx_app = $this;
    cbg_Gdx_graphics = $this.$graphics;
    cbg_Gdx_gl = $this.$graphics.$getGL20();
    cbg_Gdx_gl20 = $this.$graphics.$getGL20();
    cbg_Gdx_gl30 = $this.$graphics.$getGL30();
    cbg_Gdx_input = $this.$input;
    cbg_Gdx_files = $this.$files;
    cbg_Gdx_net = $this.$net;
    $this.$window.$addEventListener($rt_s(678), otji_JSWrapper_unwrap(cgxgbt_TeaApplication$1__init_0($this)));
    var$1 = $this.$window.$getDocument();
    var$6 = cgxgbt_TeaApplication$2__init_0($this);
    var$1.addEventListener("visibilitychange", otji_JS_function(otji_JSWrapper_unwrap(var$6), "handleEvent"));
    if ($this.$config.$isAutoSizeApplication())
        $this.$window.$addEventListener($rt_s(679), otji_JSWrapper_unwrap(cgxgbt_TeaApplication$3__init_0($this)));
    $appLoop = cgxgbt_TeaApplication$4__init_0($this);
    $initialization = cgxgbt_TeaApplication$5__init_0($this, $appLoop);
    $this.$window.$requestAnimationFrame($initialization);
},
cgxgbt_TeaApplication_step = ($this, $appListener) => {
    let $width, $height, $resizeBypass, var$5, $i, var$7;
    $width = cbg_Gdx_graphics.$getWidth0();
    $height = cbg_Gdx_graphics.$getHeight0();
    $resizeBypass = 0;
    var$5 = $this.$initState;
    cgxgbt_TeaApplication$AppState_$callClinit();
    if (var$5 === cgxgbt_TeaApplication$AppState_INIT) {
        $this.$initState = cgxgbt_TeaApplication$AppState_APP_LOOP;
        $this.$input.$setInputProcessor(null);
        $this.$input.$reset2();
        $this.$runnables.$clear();
        $this.$graphics.$frameId = Long_ZERO;
        $appListener.$create();
        $resizeBypass = 1;
    }
    if (!($width == $this.$lastWidth && $height == $this.$lastHeight && !$resizeBypass)) {
        $this.$lastWidth = $width;
        $this.$lastHeight = $height;
        $this.$graphics.$resize3($appListener, $width, $height);
    }
    $this.$runnablesHelper.$addAll1($this.$runnables);
    $this.$runnables.$clear();
    $i = 0;
    while ($i < $this.$runnablesHelper.$size0) {
        ($this.$runnablesHelper.$get($i)).$run();
        $i = $i + 1 | 0;
    }
    $this.$runnablesHelper.$clear();
    var$7 = $this.$graphics;
    var$7.$frameId = Long_add(var$7.$frameId, Long_fromInt(1));
    if (Long_gt($this.$graphics.$frameId, Long_fromInt(60)))
        $this.$graphics.$render8($appListener);
    $this.$input.$reset2();
},
cgxgbt_TeaApplication_getConfig = $this => {
    return $this.$config;
},
cgxgbt_TeaApplication_getApplicationListener = $this => {
    return $this.$curListener;
},
cgxgbt_TeaApplication_log = ($this, $tag, $message) => {
    if ($this.$logLevel >= 2)
        ($this.$getApplicationLogger()).$log($tag, $message);
},
cgxgbt_TeaApplication_error = ($this, $tag, $message) => {
    if ($this.$logLevel >= 1)
        ($this.$getApplicationLogger()).$error($tag, $message);
},
cgxgbt_TeaApplication_getApplicationLogger = $this => {
    return $this.$logger;
},
cgxgbt_TeaApplication_getType = $this => {
    cbg_Application$ApplicationType_$callClinit();
    return cbg_Application$ApplicationType_WebGL;
},
cgxgbt_TeaApplication_postRunnable = ($this, $runnable) => {
    $this.$runnables.$add1($runnable);
},
cgxgbt_TeaApplication_addLifecycleListener = ($this, $listener) => {
    let var$2, var$3, $$je;
    var$2 = $this.$lifecycleListeners;
    jl_Object_monitorEnterSync(var$2);
    a: {
        try {
            $this.$lifecycleListeners.$add1($listener);
            jl_Object_monitorExitSync(var$2);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$3 = $$je;
            break a;

        }
        return;
    }
    jl_Object_monitorExitSync(var$2);
    $rt_throw(var$3);
},
cgxgbt_TeaApplication_setPreloadReady = $this => {
    $this.$isPreloadReady = 1;
},
cgxgbt_TeaApplication_addInitQueue = $this => {
    $this.$initQueue0 = $this.$initQueue0 + 1 | 0;
},
cgxgbt_TeaApplication_subtractInitQueue = $this => {
    $this.$initQueue0 = $this.$initQueue0 - 1 | 0;
},
cgxgbt_TeaApplication_initGdx = $this => {
    $this.$addInitQueue();
    $this.$assetLoader.$loadScript1($rt_s(680), cgxgbt_TeaApplication$6__init_0($this));
},
cgxgbt_TeaApplication_createGraphics = ($this, $config) => {
    return cgxgbt_TeaGraphics__init_0($config);
},
cgxgbt_TeaApplication__clinit_ = () => {
    cgxgbt_TeaApplication_WEB_SCRIPT_PATH = $rt_s(298);
    cgxgbt_TeaApplication_WEB_ASSET_PATH = $rt_s(681);
};
function jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1() {
    jur_AbstractCharClass.call(this);
    this.$this$045 = null;
}
let jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_ = ($this, $this$0) => {
    $this.$this$045 = $this$0;
    jur_AbstractCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_0 = var_0 => {
    let var_1 = new jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1();
    jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_(var_1, var_0);
    return var_1;
},
jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains = ($this, $ch) => {
    return jl_Character_isIdentifierIgnorable($ch);
},
otcir_FieldInfo = $rt_classWithoutFields(),
bi_IDLEnum = $rt_classWithoutFields(0),
bi_IDLEnum_or = ($this, $other) => {
    return bi_IDLEnum_combine($this, $other);
},
bi_IDLEnum_combine = ($flag1, $flag2) => {
    let $custom, $result;
    if ($flag1 !== null && $flag2 !== null) {
        $custom = $flag1.$getCustom();
        $result = $flag1.$getValue0() | $flag2.$getValue0();
        $custom.$setValue0($result);
        return $custom;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(682)));
};
function b_DebugDrawModes() {
    jl_Enum.call(this);
    this.$value4 = 0;
}
let b_DebugDrawModes_CUSTOM = null,
b_DebugDrawModes_DBG_NoDebug = null,
b_DebugDrawModes_DBG_DrawWireframe = null,
b_DebugDrawModes_DBG_DrawAabb = null,
b_DebugDrawModes_DBG_DrawFeaturesText = null,
b_DebugDrawModes_DBG_DrawContactPoints = null,
b_DebugDrawModes_DBG_NoDeactivation = null,
b_DebugDrawModes_DBG_NoHelpText = null,
b_DebugDrawModes_DBG_DrawText = null,
b_DebugDrawModes_DBG_ProfileTimings = null,
b_DebugDrawModes_DBG_EnableSatComparison = null,
b_DebugDrawModes_DBG_DisableBulletLCP = null,
b_DebugDrawModes_DBG_EnableCCD = null,
b_DebugDrawModes_DBG_DrawConstraints = null,
b_DebugDrawModes_DBG_DrawConstraintLimits = null,
b_DebugDrawModes_DBG_FastWireframe = null,
b_DebugDrawModes_DBG_DrawNormals = null,
b_DebugDrawModes_DBG_DrawFrames = null,
b_DebugDrawModes_DBG_MAX_DEBUG_DRAW_MODE = null,
b_DebugDrawModes_MAP = null,
b_DebugDrawModes_$VALUES = null,
b_DebugDrawModes_$callClinit = () => {
    b_DebugDrawModes_$callClinit = $rt_eraseClinit(b_DebugDrawModes);
    b_DebugDrawModes__clinit_();
},
b_DebugDrawModes_values = () => {
    b_DebugDrawModes_$callClinit();
    return b_DebugDrawModes_$VALUES.$clone0();
},
b_DebugDrawModes__init_0 = ($this, var$1, var$2, $value) => {
    b_DebugDrawModes_$callClinit();
    jl_Enum__init_($this, var$1, var$2);
    $this.$value4 = $value;
},
b_DebugDrawModes__init_ = (var_0, var_1, var_2) => {
    let var_3 = new b_DebugDrawModes();
    b_DebugDrawModes__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
b_DebugDrawModes_getValue = $this => {
    return $this.$value4;
},
b_DebugDrawModes_setValue = ($this, $value) => {
    b_DebugDrawModes_$callClinit();
    if ($this === b_DebugDrawModes_CUSTOM) {
        $this.$value4 = $value;
        return $this;
    }
    $rt_throw(jl_RuntimeException__init_1($rt_s(683)));
},
b_DebugDrawModes_getCustom = $this => {
    b_DebugDrawModes_$callClinit();
    return b_DebugDrawModes_CUSTOM;
},
b_DebugDrawModes_getCustom0 = $this => {
    return b_DebugDrawModes_getCustom($this);
},
b_DebugDrawModes_setValue0 = ($this, var$1) => {
    return b_DebugDrawModes_setValue($this, var$1);
},
b_DebugDrawModes_$values = () => {
    let var$1, var$2;
    b_DebugDrawModes_$callClinit();
    var$1 = $rt_createArray(b_DebugDrawModes, 19);
    var$2 = var$1.data;
    var$2[0] = b_DebugDrawModes_CUSTOM;
    var$2[1] = b_DebugDrawModes_DBG_NoDebug;
    var$2[2] = b_DebugDrawModes_DBG_DrawWireframe;
    var$2[3] = b_DebugDrawModes_DBG_DrawAabb;
    var$2[4] = b_DebugDrawModes_DBG_DrawFeaturesText;
    var$2[5] = b_DebugDrawModes_DBG_DrawContactPoints;
    var$2[6] = b_DebugDrawModes_DBG_NoDeactivation;
    var$2[7] = b_DebugDrawModes_DBG_NoHelpText;
    var$2[8] = b_DebugDrawModes_DBG_DrawText;
    var$2[9] = b_DebugDrawModes_DBG_ProfileTimings;
    var$2[10] = b_DebugDrawModes_DBG_EnableSatComparison;
    var$2[11] = b_DebugDrawModes_DBG_DisableBulletLCP;
    var$2[12] = b_DebugDrawModes_DBG_EnableCCD;
    var$2[13] = b_DebugDrawModes_DBG_DrawConstraints;
    var$2[14] = b_DebugDrawModes_DBG_DrawConstraintLimits;
    var$2[15] = b_DebugDrawModes_DBG_FastWireframe;
    var$2[16] = b_DebugDrawModes_DBG_DrawNormals;
    var$2[17] = b_DebugDrawModes_DBG_DrawFrames;
    var$2[18] = b_DebugDrawModes_DBG_MAX_DEBUG_DRAW_MODE;
    return var$1;
},
b_DebugDrawModes__clinit_ = () => {
    let var$1, var$2, var$3, $value;
    b_DebugDrawModes_CUSTOM = b_DebugDrawModes__init_($rt_s(684), 0, 0);
    b_DebugDrawModes_DBG_NoDebug = b_DebugDrawModes__init_($rt_s(685), 1, bullet.DBG_NoDebug);
    b_DebugDrawModes_DBG_DrawWireframe = b_DebugDrawModes__init_($rt_s(686), 2, bullet.DBG_DrawWireframe);
    b_DebugDrawModes_DBG_DrawAabb = b_DebugDrawModes__init_($rt_s(687), 3, bullet.DBG_DrawAabb);
    b_DebugDrawModes_DBG_DrawFeaturesText = b_DebugDrawModes__init_($rt_s(688), 4, bullet.DBG_DrawFeaturesText);
    b_DebugDrawModes_DBG_DrawContactPoints = b_DebugDrawModes__init_($rt_s(689), 5, bullet.DBG_DrawContactPoints);
    b_DebugDrawModes_DBG_NoDeactivation = b_DebugDrawModes__init_($rt_s(690), 6, bullet.DBG_NoDeactivation);
    b_DebugDrawModes_DBG_NoHelpText = b_DebugDrawModes__init_($rt_s(691), 7, bullet.DBG_NoHelpText);
    b_DebugDrawModes_DBG_DrawText = b_DebugDrawModes__init_($rt_s(692), 8, bullet.DBG_DrawText);
    b_DebugDrawModes_DBG_ProfileTimings = b_DebugDrawModes__init_($rt_s(693), 9, bullet.DBG_ProfileTimings);
    b_DebugDrawModes_DBG_EnableSatComparison = b_DebugDrawModes__init_($rt_s(694), 10, bullet.DBG_EnableSatComparison);
    b_DebugDrawModes_DBG_DisableBulletLCP = b_DebugDrawModes__init_($rt_s(695), 11, bullet.DBG_DisableBulletLCP);
    b_DebugDrawModes_DBG_EnableCCD = b_DebugDrawModes__init_($rt_s(696), 12, bullet.DBG_EnableCCD);
    b_DebugDrawModes_DBG_DrawConstraints = b_DebugDrawModes__init_($rt_s(697), 13, bullet.DBG_DrawConstraints);
    b_DebugDrawModes_DBG_DrawConstraintLimits = b_DebugDrawModes__init_($rt_s(698), 14, bullet.DBG_DrawConstraintLimits);
    b_DebugDrawModes_DBG_FastWireframe = b_DebugDrawModes__init_($rt_s(699), 15, bullet.DBG_FastWireframe);
    b_DebugDrawModes_DBG_DrawNormals = b_DebugDrawModes__init_($rt_s(700), 16, bullet.DBG_DrawNormals);
    b_DebugDrawModes_DBG_DrawFrames = b_DebugDrawModes__init_($rt_s(701), 17, bullet.DBG_DrawFrames);
    b_DebugDrawModes_DBG_MAX_DEBUG_DRAW_MODE = b_DebugDrawModes__init_($rt_s(702), 18, bullet.DBG_MAX_DEBUG_DRAW_MODE);
    b_DebugDrawModes_$VALUES = b_DebugDrawModes_$values();
    b_DebugDrawModes_MAP = ju_HashMap__init_();
    var$1 = (b_DebugDrawModes_values()).data;
    var$2 = var$1.length;
    var$3 = 0;
    while (var$3 < var$2) {
        $value = var$1[var$3];
        if ($value !== b_DebugDrawModes_CUSTOM)
            b_DebugDrawModes_MAP.$put(jl_Integer_valueOf($value.$value4), $value);
        var$3 = var$3 + 1 | 0;
    }
},
jur_ReluctantQuantifierSet = $rt_classWithoutFields(jur_LeafQuantifierSet),
jur_ReluctantQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_LeafQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_ReluctantQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_ReluctantQuantifierSet();
    jur_ReluctantQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_ReluctantQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let var$4;
    while (true) {
        var$4 = $this.$next1.$matches($stringIndex, $testString, $matchResult);
        if (var$4 >= 0)
            break;
        if (($stringIndex + $this.$leaf.$charCount() | 0) <= $matchResult.$getRightBound()) {
            var$4 = $this.$leaf.$accepts($stringIndex, $testString);
            $stringIndex = $stringIndex + var$4 | 0;
        }
        if (var$4 < 1)
            return (-1);
    }
    return var$4;
};
function cbgggm_Animation() {
    let a = this; jl_Object.call(a);
    a.$id3 = null;
    a.$duration = 0.0;
    a.$nodeAnimations = null;
}
let cbgggm_Animation__init_ = $this => {
    jl_Object__init_($this);
    $this.$nodeAnimations = cbgu_Array__init_();
},
cbgggm_Animation__init_0 = () => {
    let var_0 = new cbgggm_Animation();
    cbgggm_Animation__init_(var_0);
    return var_0;
},
cbggg_BitmapFontCache$addText$lambda$_31_0 = $rt_classWithoutFields(),
cbggg_BitmapFontCache$addText$lambda$_31_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbggg_BitmapFontCache$addText$lambda$_31_0__init_0 = () => {
    let var_0 = new cbggg_BitmapFontCache$addText$lambda$_31_0();
    cbggg_BitmapFontCache$addText$lambda$_31_0__init_(var_0);
    return var_0;
},
cbggg_BitmapFontCache$addText$lambda$_31_0_get0 = var$0 => {
    return cbggg_BitmapFontCache$addText$lambda$_31_0_get(var$0);
},
cbggg_BitmapFontCache$addText$lambda$_31_0_get = var$0 => {
    return cbggg_GlyphLayout__init_0();
};
function cbgg_Mesh() {
    let a = this; jl_Object.call(a);
    a.$vertices0 = null;
    a.$indices0 = null;
    a.$autoBind = 0;
    a.$isVertexArray = 0;
    a.$instances = null;
    a.$isInstanced = 0;
    a.$tmpV = null;
}
let cbgg_Mesh_meshes = null,
cbgg_Mesh_$callClinit = () => {
    cbgg_Mesh_$callClinit = $rt_eraseClinit(cbgg_Mesh);
    cbgg_Mesh__clinit_();
},
cbgg_Mesh__init_2 = ($this, $isStatic, $maxVertices, $maxIndices, $attributes) => {
    cbgg_Mesh_$callClinit();
    jl_Object__init_($this);
    $this.$autoBind = 1;
    $this.$isInstanced = 0;
    $this.$tmpV = cbgm_Vector3__init_();
    $this.$vertices0 = cbgg_Mesh_makeVertexBuffer($this, $isStatic, $maxVertices, cbgg_VertexAttributes__init_($attributes));
    $this.$indices0 = cbggg_IndexBufferObject__init_($isStatic, $maxIndices);
    $this.$isVertexArray = 0;
    cbgg_Mesh_addManagedMesh(cbg_Gdx_app, $this);
},
cbgg_Mesh__init_3 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgg_Mesh();
    cbgg_Mesh__init_2(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgg_Mesh__init_1 = ($this, $isStatic, $maxVertices, $maxIndices, $attributes) => {
    cbgg_Mesh_$callClinit();
    jl_Object__init_($this);
    $this.$autoBind = 1;
    $this.$isInstanced = 0;
    $this.$tmpV = cbgm_Vector3__init_();
    $this.$vertices0 = cbgg_Mesh_makeVertexBuffer($this, $isStatic, $maxVertices, $attributes);
    $this.$indices0 = cbggg_IndexBufferObject__init_($isStatic, $maxIndices);
    $this.$isVertexArray = 0;
    cbgg_Mesh_addManagedMesh(cbg_Gdx_app, $this);
},
cbgg_Mesh__init_4 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgg_Mesh();
    cbgg_Mesh__init_1(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbgg_Mesh_makeVertexBuffer = ($this, $isStatic, $maxVertices, $vertexAttributes) => {
    if (cbg_Gdx_gl30 === null)
        return cbggg_VertexBufferObject__init_0($isStatic, $maxVertices, $vertexAttributes);
    return cbggg_VertexBufferObjectWithVAO__init_0($isStatic, $maxVertices, $vertexAttributes);
},
cbgg_Mesh__init_ = ($this, $type, $isStatic, $maxVertices, $maxIndices, $attributes) => {
    cbgg_Mesh_$callClinit();
    cbgg_Mesh__init_0($this, $type, $isStatic, $maxVertices, $maxIndices, cbgg_VertexAttributes__init_($attributes));
},
cbgg_Mesh__init_6 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cbgg_Mesh();
    cbgg_Mesh__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cbgg_Mesh__init_0 = ($this, $type, $isStatic, $maxVertices, $maxIndices, $attributes) => {
    cbgg_Mesh_$callClinit();
    a: {
        b: {
            jl_Object__init_($this);
            $this.$autoBind = 1;
            $this.$isInstanced = 0;
            $this.$tmpV = cbgm_Vector3__init_();
            cbgg_Mesh$1_$callClinit();
            switch (cbgg_Mesh$1_$SwitchMap$com$badlogic$gdx$graphics$Mesh$VertexDataType.data[jl_Enum_ordinal($type)]) {
                case 1:
                    break;
                case 2:
                    $this.$vertices0 = cbggg_VertexBufferObjectSubData__init_0($isStatic, $maxVertices, $attributes);
                    $this.$indices0 = cbggg_IndexBufferObjectSubData__init_0($isStatic, $maxIndices);
                    $this.$isVertexArray = 0;
                    break a;
                case 3:
                    $this.$vertices0 = cbggg_VertexBufferObjectWithVAO__init_0($isStatic, $maxVertices, $attributes);
                    $this.$indices0 = cbggg_IndexBufferObjectSubData__init_0($isStatic, $maxIndices);
                    $this.$isVertexArray = 0;
                    break a;
                case 4:
                    break b;
                default:
                    break b;
            }
            $this.$vertices0 = cbggg_VertexBufferObject__init_0($isStatic, $maxVertices, $attributes);
            $this.$indices0 = cbggg_IndexBufferObject__init_($isStatic, $maxIndices);
            $this.$isVertexArray = 0;
            break a;
        }
        $this.$vertices0 = cbggg_VertexArray__init_0($maxVertices, $attributes);
        $this.$indices0 = cbggg_IndexArray__init_0($maxIndices);
        $this.$isVertexArray = 1;
    }
    cbgg_Mesh_addManagedMesh(cbg_Gdx_app, $this);
},
cbgg_Mesh__init_5 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cbgg_Mesh();
    cbgg_Mesh__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cbgg_Mesh_setVertices = ($this, $vertices, $offset, $count) => {
    $this.$vertices0.$setVertices0($vertices, $offset, $count);
    return $this;
},
cbgg_Mesh_setIndices = ($this, $indices) => {
    let var$2;
    var$2 = $indices.data;
    $this.$indices0.$setIndices1($indices, 0, var$2.length);
    return $this;
},
cbgg_Mesh_setIndices0 = ($this, $indices, $offset, $count) => {
    $this.$indices0.$setIndices1($indices, $offset, $count);
    return $this;
},
cbgg_Mesh_getNumIndices = $this => {
    return $this.$indices0.$getNumIndices();
},
cbgg_Mesh_getNumVertices = $this => {
    return $this.$vertices0.$getNumVertices();
},
cbgg_Mesh_getMaxVertices = $this => {
    return $this.$vertices0.$getNumMaxVertices();
},
cbgg_Mesh_getMaxIndices = $this => {
    return $this.$indices0.$getNumMaxIndices();
},
cbgg_Mesh_getIndexData = $this => {
    return $this.$indices0;
},
cbgg_Mesh_bind = ($this, $shader) => {
    $this.$bind0($shader, null, null);
},
cbgg_Mesh_bind0 = ($this, $shader, $locations, $instanceLocations) => {
    $this.$vertices0.$bind2($shader, $locations);
    if ($this.$instances !== null && $this.$instances.$getNumInstances() > 0)
        $this.$instances.$bind2($shader, $instanceLocations);
    if ($this.$indices0.$getNumIndices() > 0)
        $this.$indices0.$bind();
},
cbgg_Mesh_unbind0 = ($this, $shader) => {
    $this.$unbind0($shader, null, null);
},
cbgg_Mesh_unbind = ($this, $shader, $locations, $instanceLocations) => {
    $this.$vertices0.$unbind1($shader, $locations);
    if ($this.$instances !== null && $this.$instances.$getNumInstances() > 0)
        $this.$instances.$unbind1($shader, $instanceLocations);
    if ($this.$indices0.$getNumIndices() > 0)
        $this.$indices0.$unbind();
},
cbgg_Mesh_render0 = ($this, $shader, $primitiveType) => {
    $this.$render($shader, $primitiveType, 0, $this.$indices0.$getNumMaxIndices() <= 0 ? $this.$getNumVertices() : $this.$getNumIndices(), $this.$autoBind);
},
cbgg_Mesh_render = ($this, $shader, $primitiveType, $offset, $count) => {
    $this.$render($shader, $primitiveType, $offset, $count, $this.$autoBind);
},
cbgg_Mesh_render1 = ($this, $shader, $primitiveType, $offset, $count, $autoBind) => {
    let $buffer, $oldPosition, $numInstances, var$9, var$10, var$11;
    if (!$count)
        return;
    if ($autoBind)
        $this.$bind3($shader);
    if ($this.$isVertexArray) {
        if ($this.$indices0.$getNumIndices() <= 0)
            cbg_Gdx_gl20.$glDrawArrays($primitiveType, $offset, $count);
        else {
            $buffer = $this.$indices0.$getBuffer0(0);
            $oldPosition = jn_Buffer_position($buffer);
            jn_Buffer_limit($buffer);
            $buffer.$position($offset);
            cbg_Gdx_gl20.$glDrawElements($primitiveType, $count, 5123, $buffer);
            $buffer.$position($oldPosition);
        }
    } else {
        $numInstances = 0;
        if ($this.$isInstanced)
            $numInstances = $this.$instances.$getNumInstances();
        if ($this.$indices0.$getNumIndices() <= 0) {
            if ($this.$isInstanced && $numInstances > 0)
                cbg_Gdx_gl30.$glDrawArraysInstanced($primitiveType, $offset, $count, $numInstances);
            else
                cbg_Gdx_gl20.$glDrawArrays($primitiveType, $offset, $count);
        } else {
            if (($count + $offset | 0) > $this.$indices0.$getNumMaxIndices()) {
                var$9 = new cbgu_GdxRuntimeException;
                var$10 = (((((jl_StringBuilder__init_()).$append1($rt_s(703))).$append2($count)).$append1($rt_s(704))).$append2($offset)).$append1($rt_s(705));
                var$11 = $this.$indices0;
                cbgu_GdxRuntimeException__init_0(var$9, ((var$10.$append2(var$11.$getNumMaxIndices())).$append1($rt_s(486))).$toString());
                $rt_throw(var$9);
            }
            if ($this.$isInstanced && $numInstances > 0)
                cbg_Gdx_gl30.$glDrawElementsInstanced($primitiveType, $count, 5123, $offset * 2 | 0, $numInstances);
            else
                cbg_Gdx_gl20.$glDrawElements0($primitiveType, $count, 5123, $offset * 2 | 0);
        }
    }
    if ($autoBind)
        $this.$unbind2($shader);
},
cbgg_Mesh_dispose = $this => {
    cbgg_Mesh_$callClinit();
    if (cbgg_Mesh_meshes.$get2(cbg_Gdx_app) !== null)
        (cbgg_Mesh_meshes.$get2(cbg_Gdx_app)).$removeValue($this, 1);
    $this.$vertices0.$dispose();
    if ($this.$instances !== null)
        $this.$instances.$dispose();
    $this.$indices0.$dispose();
},
cbgg_Mesh_getVertexAttribute = ($this, $usage) => {
    let $attributes, $len, $i;
    $attributes = $this.$vertices0.$getAttributes();
    $len = cbgg_VertexAttributes_size($attributes);
    $i = 0;
    while ($i < $len) {
        if ((cbgg_VertexAttributes_get($attributes, $i)).$usage == $usage)
            return cbgg_VertexAttributes_get($attributes, $i);
        $i = $i + 1 | 0;
    }
    return null;
},
cbgg_Mesh_getVertexAttributes = $this => {
    return $this.$vertices0.$getAttributes();
},
cbgg_Mesh_getInstancedAttributes = $this => {
    return $this.$instances === null ? null : $this.$instances.$getAttributes();
},
cbgg_Mesh_getIndicesBuffer = ($this, $forWriting) => {
    return $this.$indices0.$getBuffer0($forWriting);
},
cbgg_Mesh_addManagedMesh = ($app, $mesh) => {
    let $managedResources;
    cbgg_Mesh_$callClinit();
    $managedResources = cbgg_Mesh_meshes.$get2($app);
    if ($managedResources === null)
        $managedResources = cbgu_Array__init_();
    $managedResources.$add1($mesh);
    cbgg_Mesh_meshes.$put($app, $managedResources);
},
cbgg_Mesh__clinit_ = () => {
    cbgg_Mesh_meshes = ju_HashMap__init_();
},
cbgu_ObjectSet = $rt_classWithoutFields(),
cbgu_ObjectSet_tableSize = ($capacity, $loadFactor) => {
    let $tableSize;
    if ($capacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(706))).$append2($capacity)).$toString()));
    $tableSize = cbgm_MathUtils_nextPowerOfTwo(jl_Math_max(2, jl_Math_ceil($capacity / $loadFactor) | 0));
    if ($tableSize <= 1073741824)
        return $tableSize;
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(707))).$append2($capacity)).$toString()));
},
jur_EOISet = $rt_classWithoutFields(jur_AbstractSet),
jur_EOISet__init_ = $this => {
    jur_AbstractSet__init_($this);
},
jur_EOISet__init_0 = () => {
    let var_0 = new jur_EOISet();
    jur_EOISet__init_(var_0);
    return var_0;
},
jur_EOISet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $rightBound;
    $rightBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getRightBound() : $testString.$length();
    if ($stringIndex < $rightBound)
        return (-1);
    $matchResult.$hitEnd = 1;
    $matchResult.$requireEnd = 1;
    return $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_EOISet_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_EOISet_getName = $this => {
    return $rt_s(708);
};
function cbgu_ObjectIntMap() {
    let a = this; jl_Object.call(a);
    a.$size11 = 0;
    a.$keyTable3 = null;
    a.$valueTable1 = null;
    a.$loadFactor0 = 0.0;
    a.$threshold4 = 0;
    a.$shift3 = 0;
    a.$mask5 = 0;
}
let cbgu_ObjectIntMap__init_1 = $this => {
    cbgu_ObjectIntMap__init_0($this, 51, 0.800000011920929);
},
cbgu_ObjectIntMap__init_ = () => {
    let var_0 = new cbgu_ObjectIntMap();
    cbgu_ObjectIntMap__init_1(var_0);
    return var_0;
},
cbgu_ObjectIntMap__init_0 = ($this, $initialCapacity, $loadFactor) => {
    let $tableSize;
    jl_Object__init_($this);
    if ($loadFactor > 0.0 && $loadFactor < 1.0) {
        $this.$loadFactor0 = $loadFactor;
        $tableSize = cbgu_ObjectSet_tableSize($initialCapacity, $loadFactor);
        $this.$threshold4 = $tableSize * $loadFactor | 0;
        $this.$mask5 = $tableSize - 1 | 0;
        $this.$shift3 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask5));
        $this.$keyTable3 = $rt_createArray(jl_Object, $tableSize);
        $this.$valueTable1 = $rt_createIntArray($tableSize);
        return;
    }
    $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(374))).$append20($loadFactor)).$toString()));
},
cbgu_ObjectIntMap__init_2 = (var_0, var_1) => {
    let var_2 = new cbgu_ObjectIntMap();
    cbgu_ObjectIntMap__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgu_ObjectIntMap_place = ($this, $item) => {
    return Long_lo(Long_shru(Long_mul(Long_fromInt($item.$hashCode0()), Long_create(2135587861, 2654435769)), $this.$shift3));
},
cbgu_ObjectIntMap_locateKey = ($this, $key) => {
    let $keyTable, $i, $other;
    if ($key === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(621)));
    $keyTable = $this.$keyTable3;
    $i = $this.$place0($key);
    while (true) {
        $other = $keyTable.data[$i];
        if ($other === null)
            return  -($i + 1 | 0) | 0;
        if ($other.$equals($key))
            break;
        $i = ($i + 1 | 0) & $this.$mask5;
    }
    return $i;
},
cbgu_ObjectIntMap_put = ($this, $key, $value) => {
    let $i, var$4;
    $i = $this.$locateKey0($key);
    if ($i >= 0) {
        $this.$valueTable1.data[$i] = $value;
        return;
    }
    var$4 =  -($i + 1 | 0) | 0;
    $this.$keyTable3.data[var$4] = $key;
    $this.$valueTable1.data[var$4] = $value;
    var$4 = $this.$size11 + 1 | 0;
    $this.$size11 = var$4;
    if (var$4 >= $this.$threshold4)
        cbgu_ObjectIntMap_resize($this, $this.$keyTable3.data.length << 1);
},
cbgu_ObjectIntMap_putResize = ($this, $key, $value) => {
    let $keyTable, $i, var$5;
    $keyTable = $this.$keyTable3;
    $i = $this.$place0($key);
    while (true) {
        var$5 = $keyTable.data;
        if (var$5[$i] === null)
            break;
        $i = ($i + 1 | 0) & $this.$mask5;
    }
    var$5[$i] = $key;
    $this.$valueTable1.data[$i] = $value;
},
cbgu_ObjectIntMap_get = ($this, $key, $defaultValue) => {
    let $i;
    $i = $this.$locateKey0($key);
    if ($i >= 0)
        $defaultValue = $this.$valueTable1.data[$i];
    return $defaultValue;
},
cbgu_ObjectIntMap_resize = ($this, $newSize) => {
    let $oldCapacity, $oldKeyTable, $oldValueTable, $i, $key;
    a: {
        $oldCapacity = $this.$keyTable3.data.length;
        $this.$threshold4 = $newSize * $this.$loadFactor0 | 0;
        $this.$mask5 = $newSize - 1 | 0;
        $this.$shift3 = jl_Long_numberOfLeadingZeros(Long_fromInt($this.$mask5));
        $oldKeyTable = $this.$keyTable3;
        $oldValueTable = $this.$valueTable1;
        $this.$keyTable3 = $rt_createArray(jl_Object, $newSize);
        $this.$valueTable1 = $rt_createIntArray($newSize);
        if ($this.$size11 > 0) {
            $i = 0;
            while (true) {
                if ($i >= $oldCapacity)
                    break a;
                $key = $oldKeyTable.data[$i];
                if ($key !== null)
                    cbgu_ObjectIntMap_putResize($this, $key, $oldValueTable.data[$i]);
                $i = $i + 1 | 0;
            }
        }
    }
};
function cgxgbtf_FileData() {
    let a = this; jl_Object.call(a);
    a.$path0 = null;
    a.$bytes = null;
    a.$type5 = 0;
}
let cgxgbtf_FileData__init_0 = ($this, $path) => {
    cgxgbtf_FileData__init_($this, $path, 1, null);
},
cgxgbtf_FileData__init_3 = var_0 => {
    let var_1 = new cgxgbtf_FileData();
    cgxgbtf_FileData__init_0(var_1, var_0);
    return var_1;
},
cgxgbtf_FileData__init_1 = ($this, $path, $bytes) => {
    cgxgbtf_FileData__init_($this, $path, 2, $bytes);
},
cgxgbtf_FileData__init_2 = (var_0, var_1) => {
    let var_2 = new cgxgbtf_FileData();
    cgxgbtf_FileData__init_1(var_2, var_0, var_1);
    return var_2;
},
cgxgbtf_FileData__init_ = ($this, $path, $type, $bytes) => {
    let $length;
    jl_Object__init_($this);
    if ($bytes !== null && $path.$endsWith($rt_s(32))) {
        $length = $path.$length();
        $path = $path.$substring(0, $length - 1 | 0);
    }
    $this.$path0 = $path;
    $this.$bytes = $bytes;
    $this.$type5 = $type;
},
cgxgbtf_FileData__init_4 = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbtf_FileData();
    cgxgbtf_FileData__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbtf_FileData_getBytes = $this => {
    return $this.$bytes;
},
cgxgbtf_FileData_isDirectory = $this => {
    return $this.$type5 != 1 ? 0 : 1;
},
cgxgbtf_FileData_getType = $this => {
    return $this.$type5;
},
cgxgbtf_FileData_getBytesSize = $this => {
    return $this.$bytes === null ? 0 : $this.$bytes.data.length;
};
function cbgm_Plane() {
    let a = this; jl_Object.call(a);
    a.$normal = null;
    a.$d = 0.0;
}
let cbgm_Plane__init_ = ($this, $normal, $d) => {
    jl_Object__init_($this);
    $this.$normal = cbgm_Vector3__init_();
    $this.$d = 0.0;
    ($this.$normal.$set7($normal)).$nor0();
    $this.$d = $d;
},
cbgm_Plane__init_0 = (var_0, var_1) => {
    let var_2 = new cbgm_Plane();
    cbgm_Plane__init_(var_2, var_0, var_1);
    return var_2;
},
cbgm_Plane_set = ($this, $point1, $point2, $point3) => {
    ((($this.$normal.$set7($point1)).$sub($point2)).$crs0($point2.$x - $point3.$x, $point2.$y - $point3.$y, $point2.$z - $point3.$z)).$nor0();
    $this.$d =  -$point1.$dot($this.$normal);
};
function cbgggs_DefaultShader$Config() {
    let a = this; jl_Object.call(a);
    a.$vertexShader = null;
    a.$fragmentShader = null;
    a.$numDirectionalLights = 0;
    a.$numPointLights = 0;
    a.$numSpotLights = 0;
    a.$numBones = 0;
    a.$numBoneWeights = 0;
    a.$ignoreUnimplemented = 0;
    a.$defaultCullFace = 0;
    a.$defaultDepthFunc = 0;
}
let cbgggs_DefaultShader$Config__init_ = $this => {
    jl_Object__init_($this);
    $this.$vertexShader = null;
    $this.$fragmentShader = null;
    $this.$numDirectionalLights = 2;
    $this.$numPointLights = 5;
    $this.$numSpotLights = 0;
    $this.$numBones = 12;
    $this.$numBoneWeights = 4;
    $this.$ignoreUnimplemented = 1;
    $this.$defaultCullFace = (-1);
    $this.$defaultDepthFunc = (-1);
},
cbgggs_DefaultShader$Config__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Config();
    cbgggs_DefaultShader$Config__init_(var_0);
    return var_0;
};
function cbgm_Frustum() {
    let a = this; jl_Object.call(a);
    a.$planes = null;
    a.$planePoints = null;
    a.$planePointsArray = null;
}
let cbgm_Frustum_clipSpacePlanePoints = null,
cbgm_Frustum_clipSpacePlanePointsArray = null,
cbgm_Frustum_tmpV = null,
cbgm_Frustum_$callClinit = () => {
    cbgm_Frustum_$callClinit = $rt_eraseClinit(cbgm_Frustum);
    cbgm_Frustum__clinit_();
},
cbgm_Frustum__init_ = $this => {
    let var$1, var$2, $i;
    cbgm_Frustum_$callClinit();
    jl_Object__init_($this);
    $this.$planes = $rt_createArray(cbgm_Plane, 6);
    var$1 = $rt_createArray(cbgm_Vector3, 8);
    var$2 = var$1.data;
    var$2[0] = cbgm_Vector3__init_();
    var$2[1] = cbgm_Vector3__init_();
    var$2[2] = cbgm_Vector3__init_();
    var$2[3] = cbgm_Vector3__init_();
    var$2[4] = cbgm_Vector3__init_();
    var$2[5] = cbgm_Vector3__init_();
    var$2[6] = cbgm_Vector3__init_();
    var$2[7] = cbgm_Vector3__init_();
    $this.$planePoints = var$1;
    $this.$planePointsArray = $rt_createFloatArray(24);
    $i = 0;
    while ($i < 6) {
        $this.$planes.data[$i] = cbgm_Plane__init_0(cbgm_Vector3__init_(), 0.0);
        $i = $i + 1 | 0;
    }
},
cbgm_Frustum__init_0 = () => {
    let var_0 = new cbgm_Frustum();
    cbgm_Frustum__init_(var_0);
    return var_0;
},
cbgm_Frustum_update = ($this, $inverseProjectionView) => {
    let $i, $j, $v, var$5, var$6, var$7;
    cbgm_Frustum_$callClinit();
    jl_System_fastArraycopy(cbgm_Frustum_clipSpacePlanePointsArray, 0, $this.$planePointsArray, 0, cbgm_Frustum_clipSpacePlanePointsArray.data.length);
    cbgm_Matrix4_prj($inverseProjectionView.$val, $this.$planePointsArray, 0, 8, 3);
    $i = 0;
    $j = 0;
    while ($i < 8) {
        $v = $this.$planePoints.data[$i];
        var$5 = $this.$planePointsArray.data;
        var$6 = $j + 1 | 0;
        $v.$x = var$5[$j];
        var$5 = $this.$planePointsArray.data;
        var$7 = var$6 + 1 | 0;
        $v.$y = var$5[var$6];
        var$5 = $this.$planePointsArray.data;
        $j = var$7 + 1 | 0;
        $v.$z = var$5[var$7];
        $i = $i + 1 | 0;
    }
    $this.$planes.data[0].$set44($this.$planePoints.data[1], $this.$planePoints.data[0], $this.$planePoints.data[2]);
    $this.$planes.data[1].$set44($this.$planePoints.data[4], $this.$planePoints.data[5], $this.$planePoints.data[7]);
    $this.$planes.data[2].$set44($this.$planePoints.data[0], $this.$planePoints.data[4], $this.$planePoints.data[3]);
    $this.$planes.data[3].$set44($this.$planePoints.data[5], $this.$planePoints.data[1], $this.$planePoints.data[6]);
    $this.$planes.data[4].$set44($this.$planePoints.data[2], $this.$planePoints.data[3], $this.$planePoints.data[6]);
    $this.$planes.data[5].$set44($this.$planePoints.data[4], $this.$planePoints.data[0], $this.$planePoints.data[1]);
},
cbgm_Frustum__clinit_ = () => {
    let var$1, var$2, $j, var$4, var$5, $v, var$7, var$8;
    var$1 = $rt_createArray(cbgm_Vector3, 8);
    var$2 = var$1.data;
    var$2[0] = cbgm_Vector3__init_0((-1.0), (-1.0), (-1.0));
    var$2[1] = cbgm_Vector3__init_0(1.0, (-1.0), (-1.0));
    var$2[2] = cbgm_Vector3__init_0(1.0, 1.0, (-1.0));
    var$2[3] = cbgm_Vector3__init_0((-1.0), 1.0, (-1.0));
    var$2[4] = cbgm_Vector3__init_0((-1.0), (-1.0), 1.0);
    var$2[5] = cbgm_Vector3__init_0(1.0, (-1.0), 1.0);
    var$2[6] = cbgm_Vector3__init_0(1.0, 1.0, 1.0);
    var$2[7] = cbgm_Vector3__init_0((-1.0), 1.0, 1.0);
    cbgm_Frustum_clipSpacePlanePoints = var$1;
    cbgm_Frustum_clipSpacePlanePointsArray = $rt_createFloatArray(24);
    $j = 0;
    var$1 = cbgm_Frustum_clipSpacePlanePoints.data;
    var$4 = var$1.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $v = var$1[var$5];
        var$2 = cbgm_Frustum_clipSpacePlanePointsArray.data;
        var$7 = $j + 1 | 0;
        var$2[$j] = $v.$x;
        var$2 = cbgm_Frustum_clipSpacePlanePointsArray.data;
        var$8 = var$7 + 1 | 0;
        var$2[var$7] = $v.$y;
        var$2 = cbgm_Frustum_clipSpacePlanePointsArray.data;
        $j = var$8 + 1 | 0;
        var$2[var$8] = $v.$z;
        var$5 = var$5 + 1 | 0;
    }
    cbgm_Frustum_tmpV = cbgm_Vector3__init_();
},
cbgss_Stage$cancelTouchFocus$lambda$_21_0 = $rt_classWithoutFields(),
cbgss_Stage$cancelTouchFocus$lambda$_21_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgss_Stage$cancelTouchFocus$lambda$_21_0__init_0 = () => {
    let var_0 = new cbgss_Stage$cancelTouchFocus$lambda$_21_0();
    cbgss_Stage$cancelTouchFocus$lambda$_21_0__init_(var_0);
    return var_0;
},
cbgss_Stage$cancelTouchFocus$lambda$_21_0_get0 = var$0 => {
    return cbgss_Stage$cancelTouchFocus$lambda$_21_0_get(var$0);
},
cbgss_Stage$cancelTouchFocus$lambda$_21_0_get = var$0 => {
    return cbgss_InputEvent__init_();
};
function cbgmc_Ray() {
    let a = this; jl_Object.call(a);
    a.$origin = null;
    a.$direction2 = null;
}
let cbgmc_Ray_tmp = null,
cbgmc_Ray_$callClinit = () => {
    cbgmc_Ray_$callClinit = $rt_eraseClinit(cbgmc_Ray);
    cbgmc_Ray__clinit_();
},
cbgmc_Ray__init_ = ($this, $origin, $direction) => {
    cbgmc_Ray_$callClinit();
    jl_Object__init_($this);
    $this.$origin = cbgm_Vector3__init_();
    $this.$direction2 = cbgm_Vector3__init_();
    $this.$origin.$set7($origin);
    ($this.$direction2.$set7($direction)).$nor0();
},
cbgmc_Ray__init_0 = (var_0, var_1) => {
    let var_2 = new cbgmc_Ray();
    cbgmc_Ray__init_(var_2, var_0, var_1);
    return var_2;
},
cbgmc_Ray__clinit_ = () => {
    cbgmc_Ray_tmp = cbgm_Vector3__init_();
};
function cgxgbt_TeaInput() {
    let a = this; cbg_AbstractInput.call(a);
    a.$canvas = null;
    a.$justTouched = 0;
    a.$touchMap = null;
    a.$touched = null;
    a.$touchX = null;
    a.$touchY = null;
    a.$deltaX = null;
    a.$deltaY = null;
    a.$pressedButtons = null;
    a.$pressedKeyCount = 0;
    a.$keyJustPressed = 0;
    a.$justPressedButtons = null;
    a.$processor = null;
    a.$currentEventTimeStamp = Long_ZERO;
    a.$hasFocus = 0;
    a.$application = null;
}
let cgxgbt_TeaInput_getMouseWheelVelocity = $event => {
    let $agent, $delta, $detail, $wheelDelta, var$6;
    $agent = cgxgbt_TeaApplication_getAgentInfo();
    $delta = 0.0;
    $detail = $event.detail;
    $wheelDelta = $event.wheelDelta;
    if ($agent.firefox ? 1 : 0)
        $delta = ($agent.macOS ? 1 : 0) ? 1.0 * $detail : 1.0 * $detail / 3.0;
    else if ($agent.opera ? 1 : 0)
        $delta = !($agent.linux ? 1 : 0) ? (-1.0) * $wheelDelta / 40.0 : (-1.0) * $wheelDelta / 80.0;
    else if (!(!($agent.chrome ? 1 : 0) && !($agent.safari ? 1 : 0) && !($agent.IE ? 1 : 0))) {
        $delta = (-1.0) * $wheelDelta;
        var$6 = $delta / 120.0;
        if (jl_Math_abs(var$6) >= 1.0)
            $delta = var$6;
        else if (!($agent.windows ? 1 : 0))
            $delta = !($agent.macOS ? 1 : 0) ? var$6 : $delta / 3.0;
    }
    return $delta;
},
cgxgbt_TeaInput__init_ = ($this, $application, $canvas) => {
    cbg_AbstractInput__init_($this);
    $this.$justTouched = 0;
    $this.$touchMap = cbgu_IntMap__init_1(20);
    $this.$touched = $rt_createBooleanArray(20);
    $this.$touchX = $rt_createIntArray(20);
    $this.$touchY = $rt_createIntArray(20);
    $this.$deltaX = $rt_createIntArray(20);
    $this.$deltaY = $rt_createIntArray(20);
    $this.$pressedButtons = cbgu_IntSet__init_1();
    $this.$pressedKeyCount = 0;
    $this.$keyJustPressed = 0;
    $this.$justPressedButtons = $rt_createBooleanArray(5);
    $this.$hasFocus = 1;
    $this.$application = $application;
    $this.$canvas = $canvas;
    cgxgbt_TeaInput_hookEvents($this);
},
cgxgbt_TeaInput__init_0 = (var_0, var_1) => {
    let var_2 = new cgxgbt_TeaInput();
    cgxgbt_TeaInput__init_(var_2, var_0, var_1);
    return var_2;
},
cgxgbt_TeaInput_hookEvents = $this => {
    let $document;
    $document = $this.$canvas.ownerDocument;
    $document.addEventListener("mousedown", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("mouseup", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("mousemove", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("wheel", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("keydown", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("keyup", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $document.addEventListener("keypress", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!0);
    $this.$canvas.addEventListener("touchstart", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!1);
    $this.$canvas.addEventListener("touchmove", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!1);
    $this.$canvas.addEventListener("touchcancel", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!1);
    $this.$canvas.addEventListener("touchend", otji_JS_function(otji_JSWrapper_unwrap($this), "handleEvent"), !!1);
},
cgxgbt_TeaInput_handleEvent = ($this, $e) => {
    if ($this.$application.$getApplicationListener() !== null) {
        cgxgbt_TeaInput_handleMouseEvents($this, $e);
        cgxgbt_TeaInput_handleKeyboardEvents($this, $e);
    }
},
cgxgbt_TeaInput_handleMouseEvents = ($this, $e) => {
    let $type, $mouseEvent, $target, $equals, $button, $relativeX, $relativeY, var$9, $mouseX, $mouseY, $wheel, $wheelDelta, $touchEvent, $touches, $i, $j, $touch, $real, var$20, var$21, $touchId;
    a: {
        $type = $rt_str($e.type);
        if ($type.$equals($rt_s(709))) {
            window.focus();
            $mouseEvent = $e;
            $target = $e.target;
            $equals = $target !== $this.$canvas ? 0 : 1;
            if ($equals && !$this.$touched.data[0]) {
                $this.$hasFocus = 1;
                $this.$justTouched = 1;
                $this.$touched.data[0] = 1;
                $button = cgxgbtu_KeyCodes_getButton($mouseEvent.button);
                $this.$pressedButtons.$add15($button);
                $this.$justPressedButtons.data[$button] = 1;
                $this.$deltaX.data[0] = 0;
                $this.$deltaY.data[0] = 0;
                if (!$this.$isCursorCatched()) {
                    $relativeX = $this.$getRelativeX($mouseEvent, $this.$canvas);
                    $relativeY = $this.$getRelativeY($mouseEvent, $this.$canvas);
                    $this.$touchX.data[0] = $relativeX;
                    $this.$touchY.data[0] = $relativeY;
                } else {
                    var$9 = $this.$touchX.data;
                    var$9[0] = var$9[0] + ($mouseEvent.movementX | 0) | 0;
                    var$9 = $this.$touchY.data;
                    var$9[0] = var$9[0] + ($mouseEvent.movementY | 0) | 0;
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                if ($this.$processor !== null)
                    $this.$processor.$touchDown0($this.$touchX.data[0], $this.$touchY.data[0], 0, cgxgbtu_KeyCodes_getButton($mouseEvent.button));
                $e.preventDefault();
                $e.stopPropagation();
                break a;
            }
            $mouseX = $this.$getRelativeX($mouseEvent, $this.$canvas);
            $mouseY = $this.$getRelativeY($mouseEvent, $this.$canvas);
            if (!($mouseX >= 0.0 && $mouseX <= cbg_Gdx_graphics.$getWidth0() && $mouseY >= 0.0 && $mouseY <= cbg_Gdx_graphics.$getHeight0()))
                $this.$hasFocus = 0;
            return;
        }
        if ($type.$equals($rt_s(710))) {
            $mouseEvent = $e;
            if (!$this.$touched.data[0])
                return;
            $this.$pressedButtons.$remove3(cgxgbtu_KeyCodes_getButton($mouseEvent.button));
            var$9 = $this.$touched;
            var$9.data[0] = $this.$pressedButtons.$size6 <= 0 ? 0 : 1;
            if (!$this.$isCursorCatched()) {
                $this.$setDelta(0, $this.$getRelativeX($mouseEvent, $this.$canvas) - $this.$touchX.data[0] | 0, $this.$getRelativeY($mouseEvent, $this.$canvas) - $this.$touchY.data[0] | 0);
                $this.$touchX.data[0] = $this.$getRelativeX($mouseEvent, $this.$canvas);
                $this.$touchY.data[0] = $this.$getRelativeY($mouseEvent, $this.$canvas);
            } else {
                $this.$setDelta(0, $mouseEvent.movementX | 0, $mouseEvent.movementY | 0);
                var$9 = $this.$touchX.data;
                var$9[0] = var$9[0] + ($mouseEvent.movementX | 0) | 0;
                var$9 = $this.$touchY.data;
                var$9[0] = var$9[0] + ($mouseEvent.movementY | 0) | 0;
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            $this.$touched.data[0] = 0;
            if ($this.$processor !== null)
                $this.$processor.$touchUp0($this.$touchX.data[0], $this.$touchY.data[0], 0, cgxgbtu_KeyCodes_getButton($mouseEvent.button));
        } else if (!$type.$equals($rt_s(711))) {
            if ($type.$equals($rt_s(712))) {
                $wheel = $e;
                if ($this.$processor !== null) {
                    $wheelDelta = cgxgbt_TeaInput_getMouseWheelVelocity($wheel);
                    $this.$processor.$scrolled(0.0, $wheelDelta | 0);
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            } else if ($type.$equals($rt_s(713))) {
                $this.$justTouched = 1;
                $touchEvent = $e;
                $touches = $touchEvent.changedTouches;
                $i = 0;
                $j = $touches.length;
                while ($i < $j) {
                    $touch = otji_JSWrapper_maybeUnwrap($touches[$i]);
                    $real = $touch.identifier;
                    var$20 = $this.$touchMap;
                    var$21 = cgxgbt_TeaInput_getAvailablePointer($this);
                    var$20.$put13($real, jl_Integer_valueOf(var$21));
                    $this.$touched.data[var$21] = 1;
                    $this.$touchX.data[var$21] = $this.$getRelativeX0($touch, $this.$canvas);
                    $this.$touchY.data[var$21] = $this.$getRelativeY0($touch, $this.$canvas);
                    $this.$deltaX.data[var$21] = 0;
                    $this.$deltaY.data[var$21] = 0;
                    if ($this.$processor !== null)
                        $this.$processor.$touchDown0($this.$touchX.data[var$21], $this.$touchY.data[var$21], var$21, 0);
                    $i = $i + 1 | 0;
                }
                $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
                $e.preventDefault();
            }
        } else {
            $mouseEvent = $e;
            if (!$this.$isCursorCatched()) {
                $relativeX = $this.$getRelativeX($mouseEvent, $this.$canvas);
                $relativeY = $this.$getRelativeY($mouseEvent, $this.$canvas);
                $this.$setDelta(0, $relativeX - $this.$touchX.data[0] | 0, $relativeY - $this.$touchY.data[0] | 0);
                $this.$touchX.data[0] = $relativeX;
                $this.$touchY.data[0] = $relativeY;
            } else {
                $this.$setDelta(0, $mouseEvent.movementX | 0, $mouseEvent.movementY | 0);
                var$9 = $this.$touchX.data;
                var$9[0] = var$9[0] + ($mouseEvent.movementX | 0) | 0;
                var$9 = $this.$touchY.data;
                var$9[0] = var$9[0] + ($mouseEvent.movementY | 0) | 0;
            }
            $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
            if ($this.$processor !== null) {
                if (!$this.$touched.data[0])
                    $this.$processor.$mouseMoved($this.$touchX.data[0], $this.$touchY.data[0]);
                else
                    $this.$processor.$touchDragged0($this.$touchX.data[0], $this.$touchY.data[0], 0);
            }
        }
    }
    if ($type.$equals($rt_s(714))) {
        $touchEvent = $e;
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches.length;
        while ($i < $j) {
            $touch = otji_JSWrapper_maybeUnwrap($touches[$i]);
            $real = $touch.identifier;
            $touchId = ($this.$touchMap.$get($real)).$intValue();
            $this.$setDelta($touchId, $this.$getRelativeX0($touch, $this.$canvas) - $this.$touchX.data[$touchId] | 0, $this.$getRelativeY0($touch, $this.$canvas) - $this.$touchY.data[$touchId] | 0);
            $this.$touchX.data[$touchId] = $this.$getRelativeX0($touch, $this.$canvas);
            $this.$touchY.data[$touchId] = $this.$getRelativeY0($touch, $this.$canvas);
            if ($this.$processor !== null)
                $this.$processor.$touchDragged0($this.$touchX.data[$touchId], $this.$touchY.data[$touchId], $touchId);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $e.preventDefault();
    }
    if ($type.$equals($rt_s(715))) {
        $touchEvent = $e;
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches.length;
        while ($i < $j) {
            $touch = otji_JSWrapper_maybeUnwrap($touches[$i]);
            $real = $touch.identifier;
            $touchId = ($this.$touchMap.$get($real)).$intValue();
            $this.$touchMap.$remove1($real);
            $this.$touched.data[$touchId] = 0;
            $relativeX = $this.$getRelativeX0($touch, $this.$canvas);
            $relativeY = $this.$getRelativeY0($touch, $this.$canvas);
            $this.$setDelta($touchId, $relativeX - $this.$touchX.data[$touchId] | 0, $relativeY - $this.$touchY.data[$touchId] | 0);
            $this.$touchX.data[$touchId] = $relativeX;
            $this.$touchY.data[$touchId] = $relativeY;
            if ($this.$processor !== null)
                $this.$processor.$touchUp0($this.$touchX.data[$touchId], $this.$touchY.data[$touchId], $touchId, 0);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $e.preventDefault();
    }
    if ($type.$equals($rt_s(716))) {
        $touchEvent = $e;
        $touches = $touchEvent.changedTouches;
        $i = 0;
        $j = $touches.length;
        while ($i < $j) {
            $touch = otji_JSWrapper_maybeUnwrap($touches[$i]);
            $real = $touch.identifier;
            $touchId = ($this.$touchMap.$get($real)).$intValue();
            $this.$touchMap.$remove1($real);
            $this.$touched.data[$touchId] = 0;
            $relativeX = $this.$getRelativeX0($touch, $this.$canvas);
            $relativeY = $this.$getRelativeY0($touch, $this.$canvas);
            $this.$setDelta($touchId, $relativeX - $this.$touchX.data[$touchId] | 0, $relativeY - $this.$touchY.data[$touchId] | 0);
            $this.$touchX.data[$touchId] = $relativeX;
            $this.$touchY.data[$touchId] = $relativeY;
            if ($this.$processor !== null)
                $this.$processor.$touchUp0($this.$touchX.data[$touchId], $this.$touchY.data[$touchId], $touchId, 0);
            $i = $i + 1 | 0;
        }
        $this.$currentEventTimeStamp = cbgu_TimeUtils_nanoTime();
        $e.preventDefault();
    }
},
cgxgbt_TeaInput_handleKeyboardEvents = ($this, $e) => {
    let $type, $keyboardEvent, $c, $code, $keyChar;
    $type = $rt_str($e.type);
    if (!($type.$equals($rt_s(717)) && $this.$hasFocus)) {
        if ($type.$equals($rt_s(718)) && $this.$hasFocus) {
            $keyboardEvent = $e;
            $c = $keyboardEvent.charCode & 65535;
            if ($this.$processor !== null)
                $this.$processor.$keyTyped($c);
            if ($c == 9) {
                $e.preventDefault();
                $e.stopPropagation();
            }
        } else if ($type.$equals($rt_s(719)) && $this.$hasFocus) {
            $keyboardEvent = $e;
            $code = cgxgbtu_KeyCodes_keyForCode($keyboardEvent.keyCode);
            if ($this.$isCatchKey($code))
                $e.preventDefault();
            if ($this.$pressedKeys.data[$code]) {
                $this.$pressedKeyCount = $this.$pressedKeyCount - 1 | 0;
                $this.$pressedKeys.data[$code] = 0;
            }
            if ($this.$processor !== null)
                $this.$processor.$keyUp($code);
            if ($code == 61) {
                $e.preventDefault();
                $e.stopPropagation();
            }
        }
    } else {
        a: {
            $keyboardEvent = $e;
            $code = cgxgbtu_KeyCodes_keyForCode($keyboardEvent.keyCode);
            $keyChar = 0;
            switch ($code) {
                case 67:
                    $keyChar = 8;
                    break a;
                case 112:
                    $keyChar = 127;
                    break a;
                default:
            }
        }
        if ($this.$isCatchKey($code))
            $e.preventDefault();
        if (!($code != 67 && $code != 112)) {
            $e.preventDefault();
            if ($this.$processor !== null) {
                $this.$processor.$keyDown($code);
                $this.$processor.$keyTyped($keyChar);
            }
        } else if (!$this.$pressedKeys.data[$code]) {
            $this.$pressedKeyCount = $this.$pressedKeyCount + 1 | 0;
            $this.$pressedKeys.data[$code] = 1;
            $this.$keyJustPressed = 1;
            $this.$justPressedKeys.data[$code] = 1;
            if ($this.$processor !== null)
                $this.$processor.$keyDown($code);
        }
        if ($code == 61) {
            $e.preventDefault();
            $e.stopPropagation();
        }
    }
},
cgxgbt_TeaInput_getAvailablePointer = $this => {
    let $i;
    $i = 0;
    while (true) {
        if ($i >= 20)
            return (-1);
        if (!$this.$touchMap.$containsValue(jl_Integer_valueOf($i), 0))
            break;
        $i = $i + 1 | 0;
    }
    return $i;
},
cgxgbt_TeaInput_reset = $this => {
    let $i;
    a: {
        if ($this.$justTouched) {
            $this.$justTouched = 0;
            $i = 0;
            while (true) {
                if ($i >= $this.$justPressedButtons.data.length)
                    break a;
                $this.$justPressedButtons.data[$i] = 0;
                $i = $i + 1 | 0;
            }
        }
    }
    b: {
        if ($this.$keyJustPressed) {
            $this.$keyJustPressed = 0;
            $i = 0;
            while (true) {
                if ($i >= $this.$justPressedKeys.data.length)
                    break b;
                $this.$justPressedKeys.data[$i] = 0;
                $i = $i + 1 | 0;
            }
        }
    }
    $i = 0;
    while ($i < $this.$touchX.data.length) {
        $this.$deltaX.data[$i] = 0;
        $this.$deltaY.data[$i] = 0;
        $i = $i + 1 | 0;
    }
},
cgxgbt_TeaInput_setDelta = ($this, $touchId, $x, $y) => {
    $this.$deltaX.data[$touchId] = $x;
    $this.$deltaY.data[$touchId] = $y;
},
cgxgbt_TeaInput_getCompatMode = ($this, $element) => {
    let $doc, $compatMode, $isComp;
    $doc = $element;
    $compatMode = $rt_str($doc.compatMode);
    $isComp = $compatMode.$equals($rt_s(720));
    if ($isComp)
        $element = $element.documentElement;
    return $element;
},
cgxgbt_TeaInput_getScrollTop = ($this, $elem) => {
    let $val;
    $val = $elem.scrollTop;
    return cgxgbt_TeaInput_toInt32($val);
},
cgxgbt_TeaInput_getScrollTop0 = ($this, $target) => {
    let $element;
    $element = cgxgbt_TeaInput_getCompatMode($this, $target);
    return cgxgbt_TeaInput_getScrollTop($this, $element);
},
cgxgbt_TeaInput_getScrollLeft = ($this, $elem) => {
    let $val;
    $val = $elem.scrollLeft;
    return cgxgbt_TeaInput_toInt32($val);
},
cgxgbt_TeaInput_getScrollLeft0 = ($this, $target) => {
    let $element;
    $element = cgxgbt_TeaInput_getCompatMode($this, $target);
    return cgxgbt_TeaInput_getScrollLeft($this, $element);
},
cgxgbt_TeaInput_getRelativeX1 = ($this, $target, $touch) => {
    let var$3, var$4;
    var$3 = $touch.clientX - cgxgbt_TeaInput_getAbsoluteLeft($this, $target) + cgxgbt_TeaInput_getScrollLeft($this, $target);
    var$4 = var$3 + cgxgbt_TeaInput_getScrollLeft0($this, $target.ownerDocument) | 0;
    return var$4;
},
cgxgbt_TeaInput_getRelativeY0 = ($this, $target, $touch) => {
    let var$3, var$4;
    var$3 = $touch.clientY - cgxgbt_TeaInput_getAbsoluteTop($this, $target) + cgxgbt_TeaInput_getScrollTop($this, $target);
    var$4 = var$3 + cgxgbt_TeaInput_getScrollTop0($this, $target.ownerDocument) | 0;
    return var$4;
},
cgxgbt_TeaInput_getRelativeX = ($this, $e, $target) => {
    let $xScaleRatio, var$4;
    $xScaleRatio = $target.width * 1.0 / cgxgbt_TeaInput_getClientWidth($this, $target);
    var$4 = $xScaleRatio * ((($e.clientX - cgxgbt_TeaInput_getAbsoluteLeft($this, $target) | 0) + cgxgbt_TeaInput_getScrollLeft($this, $target) | 0) + cgxgbt_TeaInput_getScrollLeft0($this, $target.ownerDocument) | 0);
    return jl_Math_round(var$4);
},
cgxgbt_TeaInput_getRelativeY = ($this, $e, $target) => {
    let $yScaleRatio, var$4;
    $yScaleRatio = $target.height * 1.0 / cgxgbt_TeaInput_getClientHeight($this, $target);
    var$4 = $yScaleRatio * ((($e.clientY - cgxgbt_TeaInput_getAbsoluteTop($this, $target) | 0) + cgxgbt_TeaInput_getScrollTop($this, $target) | 0) + cgxgbt_TeaInput_getScrollTop0($this, $target.ownerDocument) | 0);
    return jl_Math_round(var$4);
},
cgxgbt_TeaInput_getRelativeX0 = ($this, $touch, $target) => {
    let $xScaleRatio;
    $xScaleRatio = $target.width * 1.0 / cgxgbt_TeaInput_getClientWidth($this, $target);
    return jl_Math_round($xScaleRatio * cgxgbt_TeaInput_getRelativeX1($this, $target, $touch));
},
cgxgbt_TeaInput_getRelativeY1 = ($this, $touch, $target) => {
    let $yScaleRatio;
    $yScaleRatio = $target.height * 1.0 / cgxgbt_TeaInput_getClientHeight($this, $target);
    return jl_Math_round($yScaleRatio * cgxgbt_TeaInput_getRelativeY0($this, $target, $touch));
},
cgxgbt_TeaInput_getClientWidth = ($this, $target) => {
    return $target.clientWidth;
},
cgxgbt_TeaInput_getClientHeight = ($this, $target) => {
    return $target.clientHeight;
},
cgxgbt_TeaInput_getAbsoluteTop = ($this, $target) => {
    return cgxgbt_TeaInput_toInt32(cgxgbt_TeaInput_getSubPixelAbsoluteTop($this, $target));
},
cgxgbt_TeaInput_getSubPixelAbsoluteTop = ($this, $elem) => {
    let $top, $curr;
    $top = 0.0;
    $curr = $elem;
    while ($curr.offsetParent !== null) {
        $top = $top - $curr.scrollTop;
        $curr = $curr.parentNode;
    }
    while ($elem !== null) {
        $top = $top + $elem.offsetTop;
        $elem = $curr.offsetParent;
    }
    return $top;
},
cgxgbt_TeaInput_getAbsoluteLeft = ($this, $target) => {
    return cgxgbt_TeaInput_toInt32(cgxgbt_TeaInput_getSubPixelAbsoluteLeft($this, $target));
},
cgxgbt_TeaInput_getSubPixelAbsoluteLeft = ($this, $elem) => {
    let $left, $curr;
    $left = 0.0;
    $curr = $elem;
    while ($curr.offsetParent !== null) {
        $left = $left - $curr.scrollLeft;
        $curr = $curr.parentNode;
    }
    while ($elem !== null) {
        $left = $left + $elem.offsetLeft;
        $elem = $curr.offsetParent;
    }
    return $left;
},
cgxgbt_TeaInput_toInt32 = $val => {
    return $val | 0;
},
cgxgbt_TeaInput_getX = $this => {
    return $this.$touchX.data[0];
},
cgxgbt_TeaInput_getY = $this => {
    return $this.$touchY.data[0];
},
cgxgbt_TeaInput_isTouched = ($this, $pointer) => {
    return $this.$touched.data[$pointer];
},
cgxgbt_TeaInput_getCurrentEventTime = $this => {
    return $this.$currentEventTimeStamp;
},
cgxgbt_TeaInput_setInputProcessor = ($this, $processor) => {
    $this.$processor = $processor;
},
cgxgbt_TeaInput_isCursorCatched = $this => {
    return cgxgbt_TeaInput_isCursorCatchedJSNI$js_body$_75($this.$canvas) ? 1 : 0;
},
cgxgbt_TeaInput_isCursorCatchedJSNI$js_body$_75 = var$1 => {
    if (document.pointerLockElement === var$1 || document.mozPointerLockElement === var$1) {
        return true;
    }
    return false;
},
cgxgbt_TeaInput_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
},
cbgggus_BoxShapeBuilder = $rt_classWithoutFields(cbgggus_BaseShapeBuilder),
cbgggus_BoxShapeBuilder_build = ($builder, $corner000, $corner010, $corner100, $corner110, $corner001, $corner011, $corner101, $corner111) => {
    let $i000, $i100, $i110, $i010, $i001, $i101, $i111, $i011, $primitiveType;
    $builder.$ensureVertices(8);
    $i000 = $builder.$vertex1($corner000);
    $i100 = $builder.$vertex1($corner100);
    $i110 = $builder.$vertex1($corner110);
    $i010 = $builder.$vertex1($corner010);
    $i001 = $builder.$vertex1($corner001);
    $i101 = $builder.$vertex1($corner101);
    $i111 = $builder.$vertex1($corner111);
    $i011 = $builder.$vertex1($corner011);
    $primitiveType = $builder.$getPrimitiveType();
    if ($primitiveType == 1) {
        $builder.$ensureIndices(24);
        $builder.$rect2($i000, $i100, $i110, $i010);
        $builder.$rect2($i101, $i001, $i011, $i111);
        $builder.$index0($i000, $i001, $i010, $i011, $i110, $i111, $i100, $i101);
    } else if (!$primitiveType) {
        $builder.$ensureRectangleIndices(2);
        $builder.$rect2($i000, $i100, $i110, $i010);
        $builder.$rect2($i101, $i001, $i011, $i111);
    } else {
        $builder.$ensureRectangleIndices(6);
        $builder.$rect2($i000, $i100, $i110, $i010);
        $builder.$rect2($i101, $i001, $i011, $i111);
        $builder.$rect2($i000, $i010, $i011, $i001);
        $builder.$rect2($i101, $i111, $i110, $i100);
        $builder.$rect2($i101, $i100, $i000, $i001);
        $builder.$rect2($i110, $i111, $i011, $i010);
    }
},
cbgggus_BoxShapeBuilder_build2 = ($builder, $corner000, $corner010, $corner100, $corner110, $corner001, $corner011, $corner101, $corner111) => {
    let var$10, var$11, var$12, var$13, var$14, var$15, var$16, var$17, var$18, var$19, $nor;
    if (Long_eq(Long_and(cbgg_VertexAttributes_getMask($builder.$getAttributes()), Long_fromInt(408)), Long_ZERO)) {
        cbgggus_BaseShapeBuilder_$callClinit();
        var$10 = cbgggus_BaseShapeBuilder_vertTmp1.$set30($corner000, null, null, null);
        var$11 = cbgggus_BaseShapeBuilder_vertTmp2.$set30($corner010, null, null, null);
        var$12 = cbgggus_BaseShapeBuilder_vertTmp3;
        var$13 = null;
        var$14 = null;
        var$15 = null;
        var$13 = var$12.$set30($corner100, var$13, var$14, var$15);
        var$14 = cbgggus_BaseShapeBuilder_vertTmp4.$set30($corner110, null, null, null);
        var$15 = cbgggus_BaseShapeBuilder_vertTmp5;
        var$16 = null;
        var$17 = null;
        var$12 = null;
        var$15 = var$15.$set30($corner001, var$16, var$17, var$12);
        var$16 = cbgggus_BaseShapeBuilder_vertTmp6.$set30($corner011, null, null, null);
        var$17 = cbgggus_BaseShapeBuilder_vertTmp7;
        var$18 = null;
        var$19 = null;
        var$12 = null;
        var$17 = var$17.$set30($corner101, var$18, var$19, var$12);
        var$12 = cbgggus_BaseShapeBuilder_vertTmp8.$set30($corner111, null, null, null);
        cbgggus_BoxShapeBuilder_build($builder, var$10, var$11, var$13, var$14, var$15, var$16, var$17, var$12);
    } else {
        $builder.$ensureVertices(24);
        $builder.$ensureRectangleIndices(6);
        cbgggus_BaseShapeBuilder_$callClinit();
        $nor = (((cbgggus_BaseShapeBuilder_tmpV1.$set7($corner000)).$lerp($corner110, 0.5)).$sub((cbgggus_BaseShapeBuilder_tmpV2.$set7($corner001)).$lerp($corner111, 0.5))).$nor0();
        $builder.$rect4($corner000, $corner010, $corner110, $corner100, $nor);
        $builder.$rect4($corner011, $corner001, $corner101, $corner111, $nor.$scl((-1.0)));
        var$10 = (((cbgggus_BaseShapeBuilder_tmpV1.$set7($corner000)).$lerp($corner101, 0.5)).$sub((cbgggus_BaseShapeBuilder_tmpV2.$set7($corner010)).$lerp($corner111, 0.5))).$nor0();
        $builder.$rect4($corner001, $corner000, $corner100, $corner101, var$10);
        $builder.$rect4($corner010, $corner011, $corner111, $corner110, var$10.$scl((-1.0)));
        var$10 = (((cbgggus_BaseShapeBuilder_tmpV1.$set7($corner000)).$lerp($corner011, 0.5)).$sub((cbgggus_BaseShapeBuilder_tmpV2.$set7($corner100)).$lerp($corner111, 0.5))).$nor0();
        $builder.$rect4($corner001, $corner011, $corner010, $corner000, var$10);
        $builder.$rect4($corner100, $corner110, $corner111, $corner101, var$10.$scl((-1.0)));
    }
},
cbgggus_BoxShapeBuilder_build1 = ($builder, $width, $height, $depth) => {
    cbgggus_BoxShapeBuilder_build0($builder, 0.0, 0.0, 0.0, $width, $height, $depth);
},
cbgggus_BoxShapeBuilder_build0 = ($builder, $x, $y, $z, $width, $height, $depth) => {
    let $hw, $hh, $hd, $x0, $y0, $z0, $x1, $y1, $z1, var$17, var$18, var$19, var$20, var$21, var$22, var$23, var$24;
    $hw = $width * 0.5;
    $hh = $height * 0.5;
    $hd = $depth * 0.5;
    $x0 = $x - $hw;
    $y0 = $y - $hh;
    $z0 = $z - $hd;
    $x1 = $x + $hw;
    $y1 = $y + $hh;
    $z1 = $z + $hd;
    var$17 = (cbgggus_BaseShapeBuilder_obtainV3()).$set8($x0, $y0, $z0);
    var$18 = (cbgggus_BaseShapeBuilder_obtainV3()).$set8($x0, $y1, $z0);
    var$19 = (cbgggus_BaseShapeBuilder_obtainV3()).$set8($x1, $y0, $z0);
    var$20 = (cbgggus_BaseShapeBuilder_obtainV3()).$set8($x1, $y1, $z0);
    var$21 = (cbgggus_BaseShapeBuilder_obtainV3()).$set8($x0, $y0, $z1);
    var$22 = (cbgggus_BaseShapeBuilder_obtainV3()).$set8($x0, $y1, $z1);
    var$23 = (cbgggus_BaseShapeBuilder_obtainV3()).$set8($x1, $y0, $z1);
    var$24 = (cbgggus_BaseShapeBuilder_obtainV3()).$set8($x1, $y1, $z1);
    cbgggus_BoxShapeBuilder_build2($builder, var$17, var$18, var$19, var$20, var$21, var$22, var$23, var$24);
    cbgggus_BaseShapeBuilder_freeAll();
},
jnc_BufferUnderflowException = $rt_classWithoutFields(jl_RuntimeException),
jnc_BufferUnderflowException__init_ = $this => {
    jl_RuntimeException__init_($this);
},
jnc_BufferUnderflowException__init_0 = () => {
    let var_0 = new jnc_BufferUnderflowException();
    jnc_BufferUnderflowException__init_(var_0);
    return var_0;
},
cbgss_Stage$setKeyboardFocus$lambda$_35_0 = $rt_classWithoutFields(),
cbgss_Stage$setKeyboardFocus$lambda$_35_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgss_Stage$setKeyboardFocus$lambda$_35_0__init_0 = () => {
    let var_0 = new cbgss_Stage$setKeyboardFocus$lambda$_35_0();
    cbgss_Stage$setKeyboardFocus$lambda$_35_0__init_(var_0);
    return var_0;
},
cbgss_Stage$setKeyboardFocus$lambda$_35_0_get0 = var$0 => {
    return cbgss_Stage$setKeyboardFocus$lambda$_35_0_get(var$0);
},
cbgss_Stage$setKeyboardFocus$lambda$_35_0_get = var$0 => {
    return cbgssu_FocusListener$FocusEvent__init_0();
},
cbgssu_Table$5 = $rt_classWithoutFields(cbgssu_Value);
let cbgssu_Table$5__init_ = $this => {
    cbgssu_Value__init_($this);
},
cbgssu_Table$5__init_0 = () => {
    let var_0 = new cbgssu_Table$5();
    cbgssu_Table$5__init_(var_0);
    return var_0;
},
cbgssu_Table$5_get = ($this, $context) => {
    let $background;
    $background = $context.$background;
    return $background !== null ? $background.$getRightWidth() : 0.0;
},
cbgssu_Table$4 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_Table$4__init_ = $this => {
    cbgssu_Value__init_($this);
},
cbgssu_Table$4__init_0 = () => {
    let var_0 = new cbgssu_Table$4();
    cbgssu_Table$4__init_(var_0);
    return var_0;
},
cbgssu_Table$4_get = ($this, $context) => {
    let $background;
    $background = $context.$background;
    return $background !== null ? $background.$getBottomHeight() : 0.0;
},
otcic_JSStderrPrintStream = $rt_classWithoutFields(otcic_JsConsolePrintStream),
otcic_JSStderrPrintStream__init_ = $this => {
    otcic_JsConsolePrintStream__init_($this);
},
otcic_JSStderrPrintStream__init_0 = () => {
    let var_0 = new otcic_JSStderrPrintStream();
    otcic_JSStderrPrintStream__init_(var_0);
    return var_0;
},
otcic_JSStderrPrintStream_print = ($this, $s) => {
    if ($s === null)
        $s = $rt_s(61);
    $rt_putStderr($rt_ustr($s));
},
cbgssu_Table$3 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_Table$3__init_ = $this => {
    cbgssu_Value__init_($this);
},
cbgssu_Table$3__init_0 = () => {
    let var_0 = new cbgssu_Table$3();
    cbgssu_Table$3__init_(var_0);
    return var_0;
},
cbgssu_Table$3_get = ($this, $context) => {
    let $background;
    $background = $context.$background;
    return $background !== null ? $background.$getLeftWidth() : 0.0;
},
cbgssu_Table$2 = $rt_classWithoutFields(cbgssu_Value),
cbgssu_Table$2__init_ = $this => {
    cbgssu_Value__init_($this);
},
cbgssu_Table$2__init_0 = () => {
    let var_0 = new cbgssu_Table$2();
    cbgssu_Table$2__init_(var_0);
    return var_0;
},
cbgssu_Table$2_get = ($this, $context) => {
    let $background;
    $background = $context.$background;
    return $background !== null ? $background.$getTopHeight() : 0.0;
},
cbgssu_Table$1 = $rt_classWithoutFields(cbgu_Pool),
cbgssu_Table$1__init_ = $this => {
    cbgu_Pool__init_0($this);
},
cbgssu_Table$1__init_0 = () => {
    let var_0 = new cbgssu_Table$1();
    cbgssu_Table$1__init_(var_0);
    return var_0;
},
cbgssu_Table$1_newObject0 = $this => {
    return cbgssu_Cell__init_0();
},
cbgssu_Table$1_newObject = $this => {
    return $this.$newObject1();
};
function cbgggu_ModelBuilder() {
    let a = this; jl_Object.call(a);
    a.$model = null;
    a.$node1 = null;
    a.$builders = null;
    a.$tmpTransform = null;
}
let cbgggu_ModelBuilder__init_ = $this => {
    jl_Object__init_($this);
    $this.$builders = cbgu_Array__init_();
    $this.$tmpTransform = cbgm_Matrix4__init_();
},
cbgggu_ModelBuilder__init_0 = () => {
    let var_0 = new cbgggu_ModelBuilder();
    cbgggu_ModelBuilder__init_(var_0);
    return var_0;
},
cbgggu_ModelBuilder_getBuilder = ($this, $attributes) => {
    let var$2, $result, $mb;
    var$2 = $this.$builders.$iterator();
    while (true) {
        if (!var$2.$hasNext()) {
            $result = cbgggu_MeshBuilder__init_0();
            $result.$begin6($attributes);
            $this.$builders.$add1($result);
            return $result;
        }
        $mb = var$2.$next();
        if (cbgg_VertexAttributes_equals($mb.$getAttributes(), $attributes) && $mb.$lastIndex() < 32768)
            break;
    }
    return $mb;
},
cbgggu_ModelBuilder_begin = $this => {
    if ($this.$model !== null)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(459)));
    $this.$node1 = null;
    $this.$model = cbggg_Model__init_0();
    $this.$builders.$clear();
},
cbgggu_ModelBuilder_end = $this => {
    let $result, var$2, $mb;
    if ($this.$model === null)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(461)));
    $result = $this.$model;
    cbgggu_ModelBuilder_endnode($this);
    $this.$model = null;
    var$2 = $this.$builders.$iterator();
    while (var$2.$hasNext()) {
        $mb = var$2.$next();
        $mb.$end3();
    }
    $this.$builders.$clear();
    cbgggu_ModelBuilder_rebuildReferences0($result);
    return $result;
},
cbgggu_ModelBuilder_endnode = $this => {
    if ($this.$node1 !== null)
        $this.$node1 = null;
},
cbgggu_ModelBuilder_node0 = ($this, $node) => {
    if ($this.$model === null)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(461)));
    cbgggu_ModelBuilder_endnode($this);
    $this.$model.$nodes0.$add1($node);
    $this.$node1 = $node;
    return $node;
},
cbgggu_ModelBuilder_node = $this => {
    let $node;
    $node = cbgggm_Node__init_();
    $this.$node($node);
    $node.$id = (((jl_StringBuilder__init_()).$append1($rt_s(721))).$append2($this.$model.$nodes0.$size0)).$toString();
    return $node;
},
cbgggu_ModelBuilder_part1 = ($this, $meshpart, $material) => {
    if ($this.$node1 === null)
        $this.$node0();
    $this.$node1.$parts.$add1(cbgggm_NodePart__init_2($meshpart, $material));
},
cbgggu_ModelBuilder_part = ($this, $id, $primitiveType, $attributes, $material) => {
    let $builder;
    $builder = cbgggu_ModelBuilder_getBuilder($this, $attributes);
    $this.$part0($builder.$part1($id, $primitiveType), $material);
    return $builder;
},
cbgggu_ModelBuilder_part0 = ($this, $id, $primitiveType, $attributes, $material) => {
    return $this.$part2($id, $primitiveType, cbgggu_MeshBuilder_createAttributes($attributes), $material);
},
cbgggu_ModelBuilder_createBox = ($this, $width, $height, $depth, $material, $attributes) => {
    return $this.$createBox1($width, $height, $depth, 4, $material, $attributes);
},
cbgggu_ModelBuilder_createBox0 = ($this, $width, $height, $depth, $primitiveType, $material, $attributes) => {
    $this.$begin();
    ($this.$part3($rt_s(722), $primitiveType, $attributes, $material)).$box0($width, $height, $depth);
    return $this.$end4();
},
cbgggu_ModelBuilder_rebuildReferences0 = $model => {
    let var$2, $node;
    $model.$materials0.$clear();
    $model.$meshes.$clear();
    $model.$meshParts.$clear();
    var$2 = $model.$nodes0.$iterator();
    while (var$2.$hasNext()) {
        $node = var$2.$next();
        cbgggu_ModelBuilder_rebuildReferences($model, $node);
    }
},
cbgggu_ModelBuilder_rebuildReferences = ($model, $node) => {
    let var$3, $mpm, $child;
    var$3 = $node.$parts.$iterator();
    while (var$3.$hasNext()) {
        $mpm = var$3.$next();
        if (!$model.$materials0.$contains2($mpm.$material0, 1))
            $model.$materials0.$add1($mpm.$material0);
        if (!$model.$meshParts.$contains2($mpm.$meshPart0, 1)) {
            $model.$meshParts.$add1($mpm.$meshPart0);
            if (!$model.$meshes.$contains2($mpm.$meshPart0.$mesh, 1))
                $model.$meshes.$add1($mpm.$meshPart0.$mesh);
            $model.$manageDisposable($mpm.$meshPart0.$mesh);
        }
    }
    var$3 = ($node.$getChildren0()).$iterator0();
    while (var$3.$hasNext()) {
        $child = var$3.$next();
        cbgggu_ModelBuilder_rebuildReferences($model, $child);
    }
},
oti_AsyncCallback = $rt_classWithoutFields(0),
otja_XMLHttpRequest = $rt_classWithoutFields(),
otja_XMLHttpRequest_onProgress$static = ($this, $eventListener) => {
    return otjde_EventTarget_onEvent$static($this, $rt_s(723), $eventListener);
};
function cbgggu_CameraInputController() {
    let a = this; cbgi_GestureDetector.call(a);
    a.$rotateButton = 0;
    a.$rotateAngle = 0.0;
    a.$translateButton = 0;
    a.$translateUnits = 0.0;
    a.$forwardButton = 0;
    a.$activateKey = 0;
    a.$activatePressed = 0;
    a.$alwaysScroll = 0;
    a.$scrollFactor = 0.0;
    a.$pinchZoomFactor = 0.0;
    a.$autoUpdate = 0;
    a.$target = null;
    a.$translateTarget = 0;
    a.$forwardTarget = 0;
    a.$scrollTarget = 0;
    a.$forwardKey = 0;
    a.$forwardPressed = 0;
    a.$backwardKey = 0;
    a.$backwardPressed = 0;
    a.$rotateRightKey = 0;
    a.$rotateRightPressed = 0;
    a.$rotateLeftKey = 0;
    a.$rotateLeftPressed = 0;
    a.$camera = null;
    a.$button = 0;
    a.$startX = 0.0;
    a.$startY = 0.0;
    a.$tmpV1 = null;
    a.$tmpV20 = null;
    a.$gestureListener = null;
    a.$touched0 = 0;
    a.$multiTouch = 0;
}
let cbgggu_CameraInputController__init_ = ($this, $gestureListener, $camera) => {
    cbgi_GestureDetector__init_0($this, $gestureListener);
    $this.$rotateButton = 0;
    $this.$rotateAngle = 360.0;
    $this.$translateButton = 1;
    $this.$translateUnits = 10.0;
    $this.$forwardButton = 2;
    $this.$activateKey = 0;
    $this.$alwaysScroll = 1;
    $this.$scrollFactor = (-0.10000000149011612);
    $this.$pinchZoomFactor = 10.0;
    $this.$autoUpdate = 1;
    $this.$target = cbgm_Vector3__init_();
    $this.$translateTarget = 1;
    $this.$forwardTarget = 1;
    $this.$scrollTarget = 0;
    $this.$forwardKey = 51;
    $this.$backwardKey = 47;
    $this.$rotateRightKey = 29;
    $this.$rotateLeftKey = 32;
    $this.$button = (-1);
    $this.$tmpV1 = cbgm_Vector3__init_();
    $this.$tmpV20 = cbgm_Vector3__init_();
    $this.$gestureListener = $gestureListener;
    $this.$gestureListener.$controller = $this;
    $this.$camera = $camera;
},
cbgggu_CameraInputController__init_2 = (var_0, var_1) => {
    let var_2 = new cbgggu_CameraInputController();
    cbgggu_CameraInputController__init_(var_2, var_0, var_1);
    return var_2;
},
cbgggu_CameraInputController__init_0 = ($this, $camera) => {
    cbgggu_CameraInputController__init_($this, cbgggu_CameraInputController$CameraGestureListener__init_0(), $camera);
},
cbgggu_CameraInputController__init_1 = var_0 => {
    let var_1 = new cbgggu_CameraInputController();
    cbgggu_CameraInputController__init_0(var_1, var_0);
    return var_1;
},
cbgggu_CameraInputController_touchDown = ($this, $screenX, $screenY, $pointer, $button) => {
    $this.$touched0 = $this.$touched0 | 1 << $pointer;
    $this.$multiTouch = cbgm_MathUtils_isPowerOfTwo($this.$touched0) ? 0 : 1;
    if ($this.$multiTouch)
        $this.$button = (-1);
    else if ($this.$button < 0 && !($this.$activateKey && !$this.$activatePressed)) {
        $this.$startX = $screenX;
        $this.$startY = $screenY;
        $this.$button = $button;
    }
    return !cbgi_GestureDetector_touchDown($this, $screenX, $screenY, $pointer, $button) && $this.$activateKey && !$this.$activatePressed ? 0 : 1;
},
cbgggu_CameraInputController_touchUp = ($this, $screenX, $screenY, $pointer, $button) => {
    $this.$touched0 = $this.$touched0 & ((-1) ^ 1 << $pointer);
    $this.$multiTouch = cbgm_MathUtils_isPowerOfTwo($this.$touched0) ? 0 : 1;
    if ($button == $this.$button)
        $this.$button = (-1);
    return !cbgi_GestureDetector_touchUp($this, $screenX, $screenY, $pointer, $button) && !$this.$activatePressed ? 0 : 1;
},
cbgggu_CameraInputController_process = ($this, $deltaX, $deltaY, $button) => {
    if ($button == $this.$rotateButton) {
        (($this.$tmpV1.$set7($this.$camera.$direction)).$crs($this.$camera.$up)).$y = 0.0;
        $this.$camera.$rotateAround($this.$target, $this.$tmpV1.$nor0(), $deltaY * $this.$rotateAngle);
        $this.$camera.$rotateAround($this.$target, cbgm_Vector3_Y, $deltaX *  -$this.$rotateAngle);
    } else if ($button == $this.$translateButton) {
        $this.$camera.$translate0(((($this.$tmpV1.$set7($this.$camera.$direction)).$crs($this.$camera.$up)).$nor0()).$scl( -$deltaX * $this.$translateUnits));
        $this.$camera.$translate0(($this.$tmpV20.$set7($this.$camera.$up)).$scl( -$deltaY * $this.$translateUnits));
        if ($this.$translateTarget)
            ($this.$target.$add5($this.$tmpV1)).$add5($this.$tmpV20);
    } else if ($button == $this.$forwardButton) {
        $this.$camera.$translate0(($this.$tmpV1.$set7($this.$camera.$direction)).$scl($deltaY * $this.$translateUnits));
        if ($this.$forwardTarget)
            $this.$target.$add5($this.$tmpV1);
    }
    if ($this.$autoUpdate)
        $this.$camera.$update0();
    return 1;
},
cbgggu_CameraInputController_touchDragged = ($this, $screenX, $screenY, $pointer) => {
    let $result, var$5, $deltaX, var$7, var$8, $deltaY;
    $result = cbgi_GestureDetector_touchDragged($this, $screenX, $screenY, $pointer);
    if (!$result && $this.$button >= 0) {
        var$5 = $screenX;
        $deltaX = (var$5 - $this.$startX) / cbg_Gdx_graphics.$getWidth0();
        var$7 = $this.$startY;
        var$8 = $screenY;
        $deltaY = (var$7 - var$8) / cbg_Gdx_graphics.$getHeight0();
        $this.$startX = var$5;
        $this.$startY = var$8;
        return $this.$process($deltaX, $deltaY, $this.$button);
    }
    return $result;
},
cbgggu_CameraInputController_scrolled = ($this, $amountX, $amountY) => {
    return $this.$zoom0($amountY * $this.$scrollFactor * $this.$translateUnits);
},
cbgggu_CameraInputController_zoom = ($this, $amount) => {
    if (!$this.$alwaysScroll && $this.$activateKey && !$this.$activatePressed)
        return 0;
    $this.$camera.$translate0(($this.$tmpV1.$set7($this.$camera.$direction)).$scl($amount));
    if ($this.$scrollTarget)
        $this.$target.$add5($this.$tmpV1);
    if ($this.$autoUpdate)
        $this.$camera.$update0();
    return 1;
},
cbgggu_CameraInputController_pinchZoom = ($this, $amount) => {
    return $this.$zoom0($this.$pinchZoomFactor * $amount);
},
cbgggu_CameraInputController_keyDown = ($this, $keycode) => {
    if ($keycode == $this.$activateKey)
        $this.$activatePressed = 1;
    if ($keycode == $this.$forwardKey)
        $this.$forwardPressed = 1;
    else if ($keycode == $this.$backwardKey)
        $this.$backwardPressed = 1;
    else if ($keycode == $this.$rotateRightKey)
        $this.$rotateRightPressed = 1;
    else if ($keycode == $this.$rotateLeftKey)
        $this.$rotateLeftPressed = 1;
    return 0;
},
cbgggu_CameraInputController_keyUp = ($this, $keycode) => {
    if ($keycode == $this.$activateKey) {
        $this.$activatePressed = 0;
        $this.$button = (-1);
    }
    if ($keycode == $this.$forwardKey)
        $this.$forwardPressed = 0;
    else if ($keycode == $this.$backwardKey)
        $this.$backwardPressed = 0;
    else if ($keycode == $this.$rotateRightKey)
        $this.$rotateRightPressed = 0;
    else if ($keycode == $this.$rotateLeftKey)
        $this.$rotateLeftPressed = 0;
    return 0;
},
jl_System = $rt_classWithoutFields(),
jl_System_outCache = null,
jl_System_errCache = null,
jl_System_properties = null,
jl_System_out = () => {
    if (jl_System_outCache === null)
        jl_System_outCache = otcic_JSStdoutPrintStream__init_0();
    return jl_System_outCache;
},
jl_System_err = () => {
    if (jl_System_errCache === null)
        jl_System_errCache = otcic_JSStderrPrintStream__init_0();
    return jl_System_errCache;
},
jl_System_arraycopy = ($src, $srcPos, $dest, $destPos, $length) => {
    let var$6, $srcType, $targetType, $srcArray, $i, var$11, var$12, $elem;
    if ($src !== null && $dest !== null) {
        if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src)) {
            var$6 = $destPos + $length | 0;
            if (var$6 <= jlr_Array_getLength($dest)) {
                a: {
                    b: {
                        if ($src !== $dest) {
                            $srcType = jl_Class_getComponentType(jl_Object_getClass($src));
                            $targetType = jl_Class_getComponentType(jl_Object_getClass($dest));
                            if ($srcType !== null && $targetType !== null) {
                                if ($srcType === $targetType)
                                    break b;
                                if (!jl_Class_isPrimitive($srcType) && !jl_Class_isPrimitive($targetType)) {
                                    $srcArray = $src;
                                    $i = 0;
                                    var$6 = $srcPos;
                                    while ($i < $length) {
                                        var$11 = $srcArray.data;
                                        var$12 = var$6 + 1 | 0;
                                        $elem = var$11[var$6];
                                        if (!jl_Class_isInstance($targetType, $elem)) {
                                            jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $i);
                                            $rt_throw(jl_ArrayStoreException__init_());
                                        }
                                        $i = $i + 1 | 0;
                                        var$6 = var$12;
                                    }
                                    jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                                    return;
                                }
                                if (!jl_Class_isPrimitive($srcType))
                                    break a;
                                if (jl_Class_isPrimitive($targetType))
                                    break b;
                                else
                                    break a;
                            }
                            $rt_throw(jl_ArrayStoreException__init_());
                        }
                    }
                    jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
                    return;
                }
                $rt_throw(jl_ArrayStoreException__init_());
            }
        }
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    }
    $rt_throw(jl_NullPointerException__init_1($rt_s(724)));
},
jl_System_fastArraycopy = ($src, $srcPos, $dest, $destPos, $length) => {
    let var$6;
    if ($srcPos >= 0 && $destPos >= 0 && $length >= 0 && ($srcPos + $length | 0) <= jlr_Array_getLength($src)) {
        var$6 = $destPos + $length | 0;
        if (var$6 <= jlr_Array_getLength($dest)) {
            jl_System_doArrayCopy($src, $srcPos, $dest, $destPos, $length);
            return;
        }
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_());
},
jl_System_doArrayCopy = (var$1, var$2, var$3, var$4, var$5) => {
    if (var$5 !== 0) {
        if (typeof var$1.data.buffer !== 'undefined') {
            var$3.data.set(var$1.data.subarray(var$2, var$2 + var$5), var$4);
        } else if (var$1 !== var$3 || var$4 < var$2) {
            for (let i = 0;i < var$5;i = i + 1 | 0) {
                var$3.data[var$4++] = var$1.data[var$2++];
            }
        } else {
            var$2 = var$2 + var$5 | 0;
            var$4 = var$4 + var$5 | 0;
            for (let i = 0;i < var$5;i = i + 1 | 0) {
                var$3.data[ --var$4] = var$1.data[ --var$2];
            }
        }
    }
},
jl_System_currentTimeMillis = () => {
    return Long_fromNumber((new Date()).getTime());
},
jl_System_initPropertiesIfNeeded = () => {
    let var$1;
    if (jl_System_properties === null) {
        var$1 = ju_Properties__init_1();
        var$1.$put($rt_s(725), $rt_s(726));
        var$1.$put($rt_s(673), $rt_s(727));
        var$1.$put($rt_s(728), $rt_s(32));
        var$1.$put($rt_s(729), $rt_s(730));
        var$1.$put($rt_s(731), jl_System_lineSeparator());
        var$1.$put($rt_s(732), jl_System_getTempDir());
        var$1.$put($rt_s(733), $rt_s(726));
        var$1.$put($rt_s(734), jl_System_getHomeDir());
        jl_System_properties = ju_Properties__init_2(var$1);
    }
},
jl_System_getTempDir = () => {
    return $rt_s(735);
},
jl_System_getHomeDir = () => {
    return $rt_s(32);
},
jl_System_setProperty = ($key, $value) => {
    jl_System_initPropertiesIfNeeded();
    return jl_System_properties.$put($key, $value);
},
jl_System_nanoTime = () => {
    return Long_fromNumber(performance.now() * 1000000.0);
},
jl_System_lineSeparator = () => {
    return $rt_s(573);
};
function jn_FloatBufferOverTypedArray() {
    let a = this; jn_FloatBufferImpl.call(a);
    a.$readOnly5 = 0;
    a.$data4 = null;
    a.$array7 = null;
}
let jn_FloatBufferOverTypedArray__init_0 = ($this, $position, $limit, $readOnly, $data, $array) => {
    jn_FloatBufferImpl__init_($this, $position, $limit);
    $this.$readOnly5 = $readOnly;
    $this.$data4 = $data;
    $this.$array7 = $array;
},
jn_FloatBufferOverTypedArray__init_ = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_FloatBufferOverTypedArray();
    jn_FloatBufferOverTypedArray__init_0(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_FloatBufferOverTypedArray_readOnly = $this => {
    return $this.$readOnly5;
},
jn_FloatBufferOverTypedArray_getElement = ($this, $index) => {
    return $this.$data4[$index];
},
jn_FloatBufferOverTypedArray_putElement = ($this, $index, $value) => {
    $this.$data4[$index] = $value;
},
jn_FloatBufferOverTypedArray_capacityImpl = $this => {
    return $this.$data4.length;
},
jn_FloatBufferOverTypedArray_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, var$6, $slice;
    var$5 = $src.data.buffer;
    var$6 = $offset * 4 | 0;
    $slice = new Float32Array(var$5, var$6, $length);
    $this.$data4.set($slice, $index);
},
jn_FloatBufferOverTypedArray_getArrayBufferView = $this => {
    return $this.$data4;
},
jur_AbstractCharClass$LazyXDigit = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyXDigit__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyXDigit__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyXDigit();
    jur_AbstractCharClass$LazyXDigit__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyXDigit_computeValue = $this => {
    return (((jur_CharClass__init_()).$add0(48, 57)).$add0(97, 102)).$add0(65, 70);
};
function cbgi_GestureDetector$VelocityTracker() {
    let a = this; jl_Object.call(a);
    a.$sampleSize = 0;
    a.$lastX = 0.0;
    a.$lastY = 0.0;
    a.$deltaX0 = 0.0;
    a.$deltaY0 = 0.0;
    a.$lastTime = Long_ZERO;
    a.$numSamples = 0;
    a.$meanX = null;
    a.$meanY = null;
    a.$meanTime = null;
}
let cbgi_GestureDetector$VelocityTracker__init_ = $this => {
    jl_Object__init_($this);
    $this.$sampleSize = 10;
    $this.$meanX = $rt_createFloatArray($this.$sampleSize);
    $this.$meanY = $rt_createFloatArray($this.$sampleSize);
    $this.$meanTime = $rt_createLongArray($this.$sampleSize);
},
cbgi_GestureDetector$VelocityTracker__init_0 = () => {
    let var_0 = new cbgi_GestureDetector$VelocityTracker();
    cbgi_GestureDetector$VelocityTracker__init_(var_0);
    return var_0;
},
cbgi_GestureDetector$VelocityTracker_start = ($this, $x, $y, $timeStamp) => {
    let $i;
    $this.$lastX = $x;
    $this.$lastY = $y;
    $this.$deltaX0 = 0.0;
    $this.$deltaY0 = 0.0;
    $this.$numSamples = 0;
    $i = 0;
    while ($i < $this.$sampleSize) {
        $this.$meanX.data[$i] = 0.0;
        $this.$meanY.data[$i] = 0.0;
        $this.$meanTime.data[$i] = Long_ZERO;
        $i = $i + 1 | 0;
    }
    $this.$lastTime = $timeStamp;
},
cbgi_GestureDetector$VelocityTracker_update = ($this, $x, $y, $currTime) => {
    let $deltaTime, $index;
    $this.$deltaX0 = $x - $this.$lastX;
    $this.$deltaY0 = $y - $this.$lastY;
    $this.$lastX = $x;
    $this.$lastY = $y;
    $deltaTime = Long_sub($currTime, $this.$lastTime);
    $this.$lastTime = $currTime;
    $index = $this.$numSamples % $this.$sampleSize | 0;
    $this.$meanX.data[$index] = $this.$deltaX0;
    $this.$meanY.data[$index] = $this.$deltaY0;
    $this.$meanTime.data[$index] = $deltaTime;
    $this.$numSamples = $this.$numSamples + 1 | 0;
},
cbgi_GestureDetector$VelocityTracker_getVelocityX = $this => {
    let $meanX, $meanTime;
    $meanX = cbgi_GestureDetector$VelocityTracker_getAverage0($this, $this.$meanX, $this.$numSamples);
    $meanTime = Long_toNumber(cbgi_GestureDetector$VelocityTracker_getAverage($this, $this.$meanTime, $this.$numSamples)) / 1.0E9;
    if ($meanTime !== 0.0)
        return $meanX / $meanTime;
    return 0.0;
},
cbgi_GestureDetector$VelocityTracker_getVelocityY = $this => {
    let $meanY, $meanTime;
    $meanY = cbgi_GestureDetector$VelocityTracker_getAverage0($this, $this.$meanY, $this.$numSamples);
    $meanTime = Long_toNumber(cbgi_GestureDetector$VelocityTracker_getAverage($this, $this.$meanTime, $this.$numSamples)) / 1.0E9;
    if ($meanTime !== 0.0)
        return $meanY / $meanTime;
    return 0.0;
},
cbgi_GestureDetector$VelocityTracker_getAverage0 = ($this, $values, $numSamples) => {
    let var$3, $sum, $i;
    var$3 = jl_Math_min($this.$sampleSize, $numSamples);
    $sum = 0.0;
    $i = 0;
    while ($i < var$3) {
        $sum = $sum + $values.data[$i];
        $i = $i + 1 | 0;
    }
    return $sum / var$3;
},
cbgi_GestureDetector$VelocityTracker_getAverage = ($this, $values, $numSamples) => {
    let var$3, $sum, $i;
    var$3 = jl_Math_min($this.$sampleSize, $numSamples);
    $sum = Long_ZERO;
    $i = 0;
    while ($i < var$3) {
        $sum = Long_add($sum, $values.data[$i]);
        $i = $i + 1 | 0;
    }
    if (!var$3)
        return Long_ZERO;
    return Long_div($sum, Long_fromInt(var$3));
};
function cbgi_GestureDetector$1() {
    cbgu_Timer$Task.call(this);
    this.$this$02 = null;
}
let cbgi_GestureDetector$1__init_ = ($this, $this$0) => {
    $this.$this$02 = $this$0;
    cbgu_Timer$Task__init_($this);
},
cbgi_GestureDetector$1__init_0 = var_0 => {
    let var_1 = new cbgi_GestureDetector$1();
    cbgi_GestureDetector$1__init_(var_1, var_0);
    return var_1;
},
cbgi_GestureDetector$1_run = $this => {
    if (!$this.$this$02.$longPressFired)
        $this.$this$02.$longPressFired = $this.$this$02.$listener.$longPress($this.$this$02.$pointer1.$x0, $this.$this$02.$pointer1.$y0);
};
function jur_Matcher() {
    let a = this; jl_Object.call(a);
    a.$pat = null;
    a.$start6 = null;
    a.$string1 = null;
    a.$matchResult = null;
    a.$leftBound = 0;
    a.$rightBound = 0;
    a.$appendPos = 0;
    a.$replacement0 = null;
    a.$processedRepl = null;
    a.$replacementParts = null;
}
let jur_Matcher_appendReplacement = ($this, $buffer, $replacement) => {
    $this.$processedRepl = jur_Matcher_processReplacement($this, $replacement);
    $buffer.$append28($this.$string1.$subSequence($this.$appendPos, jur_Matcher_start($this)));
    $buffer.$append29($this.$processedRepl);
    $this.$appendPos = jur_Matcher_end($this);
    return $this;
},
jur_Matcher_processReplacement = ($this, $replacement) => {
    let $sb, $i, $repl, $res, $index, $replacementPos, $nextBackSlashed, var$9, var$10, var$11, $gr, $group, $$je;
    if ($this.$replacement0 !== null && $this.$replacement0.$equals($replacement)) {
        if ($this.$replacementParts === null)
            return $this.$processedRepl;
        $sb = jl_StringBuilder__init_();
        $i = 0;
        while ($i < $this.$replacementParts.$size()) {
            $sb.$append($this.$replacementParts.$get($i));
            $i = $i + 1 | 0;
        }
        return $sb.$toString();
    }
    $this.$replacement0 = $replacement;
    $repl = $replacement.$toCharArray();
    $res = jl_StringBuilder__init_();
    $this.$replacementParts = null;
    $index = 0;
    $replacementPos = 0;
    $nextBackSlashed = 0;
    a: {
        b: while (true) {
            var$9 = $repl.data;
            var$10 = var$9.length;
            if ($index >= var$10) {
                if ($this.$replacementParts !== null && $replacementPos != $res.$length())
                    $this.$replacementParts.$add3($res.$subSequence($replacementPos, $res.$length()));
                return $res.$toString();
            }
            if (var$9[$index] == 92 && !$nextBackSlashed) {
                $nextBackSlashed = 1;
                $index = $index + 1 | 0;
            }
            c: {
                if ($nextBackSlashed) {
                    if ($index >= var$10)
                        break b;
                    $res.$append0(var$9[$index]);
                    $nextBackSlashed = 0;
                } else if (var$9[$index] != 36)
                    $res.$append0(var$9[$index]);
                else {
                    if ($this.$replacementParts === null)
                        $this.$replacementParts = ju_ArrayList__init_0();
                    d: {
                        try {
                            var$11 = new jl_String;
                            $index = $index + 1 | 0;
                            jl_String__init_2(var$11, $repl, $index, 1);
                            $gr = jl_Integer_parseInt(var$11);
                            if ($replacementPos == $res.$length())
                                break d;
                            $this.$replacementParts.$add3($res.$subSequence($replacementPos, $res.$length()));
                            $replacementPos = $res.$length();
                            break d;
                        } catch ($$e) {
                            $$je = $rt_wrapException($$e);
                            if ($$je instanceof jl_Exception) {
                                break a;
                            } else {
                                throw $$e;
                            }
                        }
                    }
                    try {
                        $this.$replacementParts.$add3(jur_Matcher$1__init_0($this, $gr));
                        $group = jur_Matcher_group($this, $gr);
                        $replacementPos = $replacementPos + $group.$length() | 0;
                        $res.$append1($group);
                        break c;
                    } catch ($$e) {
                        $$je = $rt_wrapException($$e);
                        if ($$je instanceof jl_Exception) {
                            break a;
                        } else {
                            throw $$e;
                        }
                    }
                }
            }
            $index = $index + 1 | 0;
        }
        $rt_throw(jl_IndexOutOfBoundsException__init_());
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(60)));
},
jur_Matcher_reset = $this => {
    $this.$leftBound = 0;
    $this.$rightBound = $this.$string1.$length();
    $this.$matchResult.$reset0($this.$string1, $this.$leftBound, $this.$rightBound);
    $this.$appendPos = 0;
    $this.$replacement0 = null;
    $this.$matchResult.$previousMatch = (-1);
    return $this;
},
jur_Matcher_appendTail = ($this, $buffer) => {
    return $buffer.$append28($this.$string1.$subSequence($this.$appendPos, $this.$string1.$length()));
},
jur_Matcher_replaceFirst = ($this, $replacement) => {
    let $sb;
    jur_Matcher_reset($this);
    if (!jur_Matcher_find($this))
        return $this.$string1.$toString();
    $sb = jl_StringBuffer__init_();
    jur_Matcher_appendReplacement($this, $sb, $replacement);
    return (jur_Matcher_appendTail($this, $sb)).$toString();
},
jur_Matcher_replaceAll = ($this, $replacement) => {
    let $sb;
    $sb = jl_StringBuffer__init_();
    jur_Matcher_reset($this);
    while (jur_Matcher_find($this)) {
        jur_Matcher_appendReplacement($this, $sb, $replacement);
    }
    return (jur_Matcher_appendTail($this, $sb)).$toString();
},
jur_Matcher_group = ($this, $group) => {
    return $this.$matchResult.$group($group);
},
jur_Matcher_find0 = ($this, $start) => {
    let $stringLength, var$3;
    $stringLength = $this.$string1.$length();
    if ($start >= 0 && $start <= $stringLength) {
        var$3 = jur_Matcher_findAt($this, $start);
        if (var$3 >= 0 && $this.$matchResult.$isValid()) {
            $this.$matchResult.$finalizeMatch();
            return 1;
        }
        $this.$matchResult.$startIndex = (-1);
        return 0;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_0(jl_String_valueOf0($start)));
},
jur_Matcher_findAt = ($this, $startIndex) => {
    let $foundIndex;
    $this.$matchResult.$reset2();
    $this.$matchResult.$setMode(1);
    $this.$matchResult.$setStartIndex($startIndex);
    $foundIndex = $this.$start6.$find($startIndex, $this.$string1, $this.$matchResult);
    if ($foundIndex == (-1))
        $this.$matchResult.$hitEnd = 1;
    return $foundIndex;
},
jur_Matcher_find = $this => {
    let $length, var$2;
    $length = $this.$string1.$length();
    if (!jur_Matcher_hasTransparentBounds($this))
        $length = $this.$rightBound;
    if ($this.$matchResult.$startIndex >= 0 && $this.$matchResult.$mode() == 1) {
        $this.$matchResult.$startIndex = $this.$matchResult.$end1();
        if ($this.$matchResult.$end1() == $this.$matchResult.$start2()) {
            var$2 = $this.$matchResult;
            var$2.$startIndex = var$2.$startIndex + 1 | 0;
        }
        return $this.$matchResult.$startIndex <= $length && jur_Matcher_find0($this, $this.$matchResult.$startIndex) ? 1 : 0;
    }
    return jur_Matcher_find0($this, $this.$leftBound);
},
jur_Matcher_start0 = ($this, $group) => {
    return $this.$matchResult.$start0($group);
},
jur_Matcher_end0 = ($this, $group) => {
    return $this.$matchResult.$end0($group);
},
jur_Matcher_start = $this => {
    return jur_Matcher_start0($this, 0);
},
jur_Matcher_end = $this => {
    return jur_Matcher_end0($this, 0);
},
jur_Matcher_hasTransparentBounds = $this => {
    return $this.$matchResult.$hasTransparentBounds();
},
jur_Matcher__init_ = ($this, $pat, $cs) => {
    let var$3, var$4, var$5, var$6, var$7;
    jl_Object__init_($this);
    $this.$leftBound = (-1);
    $this.$rightBound = (-1);
    $this.$pat = $pat;
    $this.$start6 = $pat.$start3;
    $this.$string1 = $cs;
    $this.$leftBound = 0;
    $this.$rightBound = $this.$string1.$length();
    var$3 = new jur_MatchResultImpl;
    var$4 = $this.$leftBound;
    var$5 = $this.$rightBound;
    var$6 = jur_Pattern_groupCount($pat);
    var$7 = jur_Pattern_compCount($pat);
    jur_MatchResultImpl__init_(var$3, $cs, var$4, var$5, var$6, var$7, jur_Pattern_consCount($pat));
    $this.$matchResult = var$3;
    $this.$matchResult.$useAnchoringBounds(1);
},
jur_Matcher__init_0 = (var_0, var_1) => {
    let var_2 = new jur_Matcher();
    jur_Matcher__init_(var_2, var_0, var_1);
    return var_2;
},
bbc_btPolyhedralConvexShape = $rt_classWithoutFields(bbc_btConvexInternalShape),
bbc_btPolyhedralConvexShape_NULL = null,
bbc_btPolyhedralConvexShape_T_01 = null,
bbc_btPolyhedralConvexShape_T_02 = null,
bbc_btPolyhedralConvexShape_T_03 = null,
bbc_btPolyhedralConvexShape_$callClinit = () => {
    bbc_btPolyhedralConvexShape_$callClinit = $rt_eraseClinit(bbc_btPolyhedralConvexShape);
    bbc_btPolyhedralConvexShape__clinit_();
},
bbc_btPolyhedralConvexShape__init_ = ($this, $b, $c) => {
    bbc_btPolyhedralConvexShape_$callClinit();
    bbc_btConvexInternalShape__init_($this, 1, 1);
},
bbc_btPolyhedralConvexShape__init_0 = (var_0, var_1) => {
    let var_2 = new bbc_btPolyhedralConvexShape();
    bbc_btPolyhedralConvexShape__init_(var_2, var_0, var_1);
    return var_2;
},
bbc_btPolyhedralConvexShape_native_new = () => {
    bbc_btPolyhedralConvexShape_$callClinit();
    return bbc_btPolyhedralConvexShape__init_0(0, 0);
},
bbc_btPolyhedralConvexShape__clinit_ = () => {
    bbc_btPolyhedralConvexShape_NULL = bbc_btPolyhedralConvexShape_native_new();
    bbc_btPolyhedralConvexShape_T_01 = bbc_btPolyhedralConvexShape_native_new();
    bbc_btPolyhedralConvexShape_T_02 = bbc_btPolyhedralConvexShape_native_new();
    bbc_btPolyhedralConvexShape_T_03 = bbc_btPolyhedralConvexShape_native_new();
},
jur_DotAllSet = $rt_classWithoutFields(jur_JointSet),
jur_DotAllSet__init_ = $this => {
    jur_JointSet__init_($this);
},
jur_DotAllSet__init_0 = () => {
    let var_0 = new jur_DotAllSet();
    jur_DotAllSet__init_(var_0);
    return var_0;
},
jur_DotAllSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, $high, var$7, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    if (var$5 > $strLength) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (jl_Character_isHighSurrogate($high)) {
        var$7 = $stringIndex + 2 | 0;
        if (var$7 <= $strLength) {
            $low = $testString.$charAt(var$5);
            if (jl_Character_isSurrogatePair($high, $low))
                return $this.$next1.$matches(var$7, $testString, $matchResult);
        }
    }
    return $this.$next1.$matches(var$5, $testString, $matchResult);
},
jur_DotAllSet_getName = $this => {
    return $rt_s(736);
},
jur_DotAllSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_DotAllSet_getType = $this => {
    return (-2147483602);
},
jur_DotAllSet_hasConsumed = ($this, $matchResult) => {
    return 1;
},
bbc_btBoxShape = $rt_classWithoutFields(bbc_btPolyhedralConvexShape),
bbc_btBoxShape_NULL = null,
bbc_btBoxShape_T_01 = null,
bbc_btBoxShape_T_02 = null,
bbc_btBoxShape_T_03 = null,
bbc_btBoxShape_$callClinit = () => {
    bbc_btBoxShape_$callClinit = $rt_eraseClinit(bbc_btBoxShape);
    bbc_btBoxShape__clinit_();
},
bbc_btBoxShape__init_ = ($this, $boxHalfExtents) => {
    let $addr;
    bbc_btBoxShape_$callClinit();
    bbc_btPolyhedralConvexShape__init_($this, 1, 1);
    $addr = bbc_btBoxShape_internal_native_create_btVector3$js_body$_1($boxHalfExtents.$native_address);
    bi_IDLBase_internal_reset($this, $addr, 1);
},
bbc_btBoxShape__init_2 = var_0 => {
    let var_1 = new bbc_btBoxShape();
    bbc_btBoxShape__init_(var_1, var_0);
    return var_1;
},
bbc_btBoxShape__init_0 = ($this, $b, $c) => {
    bbc_btBoxShape_$callClinit();
    bbc_btPolyhedralConvexShape__init_($this, 1, 1);
},
bbc_btBoxShape__init_1 = (var_0, var_1) => {
    let var_2 = new bbc_btBoxShape();
    bbc_btBoxShape__init_0(var_2, var_0, var_1);
    return var_2;
},
bbc_btBoxShape_native_new = () => {
    bbc_btBoxShape_$callClinit();
    return bbc_btBoxShape__init_1(0, 0);
},
bbc_btBoxShape__clinit_ = () => {
    bbc_btBoxShape_NULL = bbc_btBoxShape_native_new();
    bbc_btBoxShape_T_01 = bbc_btBoxShape_native_new();
    bbc_btBoxShape_T_02 = bbc_btBoxShape_native_new();
    bbc_btBoxShape_T_03 = bbc_btBoxShape_native_new();
},
bbc_btBoxShape_internal_native_create_btVector3$js_body$_1 = var$1 => {
    var jsObj = new bullet.btBoxShape(var$1);
    return bullet.getPointer(jsObj);
};
function jn_FloatBufferOverDataView() {
    let a = this; jn_FloatBufferImpl.call(a);
    a.$readOnly7 = 0;
    a.$data5 = null;
    a.$littleEndian = 0;
}
let jn_FloatBufferOverDataView__init_ = ($this, var$1, $limit, $readOnly, $data, $littleEndian) => {
    jn_FloatBufferImpl__init_($this, var$1, $limit);
    $this.$readOnly7 = $readOnly;
    $this.$data5 = $data;
    $this.$littleEndian = $littleEndian;
},
jn_FloatBufferOverDataView__init_0 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new jn_FloatBufferOverDataView();
    jn_FloatBufferOverDataView__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
jn_FloatBufferOverDataView_readOnly = $this => {
    return $this.$readOnly7;
},
jn_FloatBufferOverDataView_getElement = ($this, $index) => {
    return $this.$data5.getFloat32($index * 4 | 0, !!$this.$littleEndian);
},
jn_FloatBufferOverDataView_putElement = ($this, $index, $value) => {
    let var$3, var$4, var$5;
    var$3 = $this.$data5;
    var$4 = $index * 4 | 0;
    var$5 = $this.$littleEndian;
    var$3.setFloat32(var$4, $value, !!var$5);
},
jn_FloatBufferOverDataView_putImpl = ($this, $index, $src, $offset, $length) => {
    let var$5, var$6, var$7, var$8, var$9, var$10, var$11;
    var$5 = $index * 4 | 0;
    while (true) {
        var$6 = $length + (-1) | 0;
        if ($length <= 0)
            break;
        var$7 = $src.data;
        var$8 = $this.$data5;
        var$9 = $offset + 1 | 0;
        var$10 = var$7[$offset];
        var$11 = $this.$littleEndian;
        var$8.setFloat32(var$5, var$10, !!var$11);
        var$5 = var$5 + 4 | 0;
        $length = var$6;
        $offset = var$9;
    }
},
jn_FloatBufferOverDataView_capacityImpl = $this => {
    return $this.$data5.byteLength / 4 | 0;
},
jn_FloatBufferOverDataView_getArrayBufferView = $this => {
    return $this.$data5;
},
cbgss_Actor$clipBegin$lambda$_93_0 = $rt_classWithoutFields(),
cbgss_Actor$clipBegin$lambda$_93_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgss_Actor$clipBegin$lambda$_93_0__init_0 = () => {
    let var_0 = new cbgss_Actor$clipBegin$lambda$_93_0();
    cbgss_Actor$clipBegin$lambda$_93_0__init_(var_0);
    return var_0;
},
cbgss_Actor$clipBegin$lambda$_93_0_get0 = var$0 => {
    return cbgss_Actor$clipBegin$lambda$_93_0_get(var$0);
},
cbgss_Actor$clipBegin$lambda$_93_0_get = var$0 => {
    return cbgm_Rectangle__init_();
},
jur_AbstractCharClass$LazyJavaUpperCase = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaUpperCase__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaUpperCase__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaUpperCase();
    jur_AbstractCharClass$LazyJavaUpperCase__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaUpperCase_computeValue = $this => {
    let $chCl;
    $chCl = jur_AbstractCharClass$LazyJavaUpperCase$1__init_0($this);
    $chCl.$mayContainSupplCodepoints0 = 1;
    return $chCl;
};
function js_ScriptException() {
    let a = this; jl_Exception.call(a);
    a.$fileName = null;
    a.$lineNumber = 0;
    a.$columnNumber = 0;
}
let js_ScriptException__init_ = ($this, $s) => {
    jl_Exception__init_0($this, $s);
    $this.$fileName = null;
    $this.$lineNumber = (-1);
    $this.$columnNumber = (-1);
},
js_ScriptException__init_0 = var_0 => {
    let var_1 = new js_ScriptException();
    js_ScriptException__init_(var_1, var_0);
    return var_1;
},
js_ScriptException_getMessage = $this => {
    let $ret, var$2, var$3, var$4;
    $ret = jl_Throwable_getMessage($this);
    if ($this.$fileName !== null) {
        var$2 = $this.$fileName;
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$3, $ret), $rt_s(737)), var$2);
        $ret = jl_StringBuilder_toString(var$3);
        if ($this.$lineNumber != (-1)) {
            var$4 = $this.$lineNumber;
            var$2 = jl_StringBuilder__init_();
            jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $ret), $rt_s(738)), var$4);
            $ret = jl_StringBuilder_toString(var$2);
        }
        if ($this.$columnNumber != (-1)) {
            var$4 = $this.$columnNumber;
            var$2 = jl_StringBuilder__init_();
            jl_StringBuilder_append0(jl_StringBuilder_append(jl_StringBuilder_append(var$2, $ret), $rt_s(739)), var$4);
            $ret = jl_StringBuilder_toString(var$2);
        }
    }
    return $ret;
};
function jur_HangulDecomposedCharSet() {
    let a = this; jur_JointSet.call(a);
    a.$decomposedChar = null;
    a.$decomposedCharUTF160 = null;
    a.$decomposedCharLength = 0;
}
let jur_HangulDecomposedCharSet__init_ = ($this, $decomposedChar, $decomposedCharLength) => {
    jur_JointSet__init_($this);
    $this.$decomposedChar = $decomposedChar;
    $this.$decomposedCharLength = $decomposedCharLength;
},
jur_HangulDecomposedCharSet__init_0 = (var_0, var_1) => {
    let var_2 = new jur_HangulDecomposedCharSet();
    jur_HangulDecomposedCharSet__init_(var_2, var_0, var_1);
    return var_2;
},
jur_HangulDecomposedCharSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_HangulDecomposedCharSet_getDecomposedChar = $this => {
    if ($this.$decomposedCharUTF160 === null)
        $this.$decomposedCharUTF160 = jl_String__init_0($this.$decomposedChar);
    return $this.$decomposedCharUTF160;
},
jur_HangulDecomposedCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = jur_HangulDecomposedCharSet_getDecomposedChar($this);
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append(jl_StringBuilder_append(var$2, $rt_s(740)), var$1);
    return jl_StringBuilder_toString(var$2);
},
jur_HangulDecomposedCharSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $rightBound, $syllIndex, $decompSyllable, $vIndex, $tIndex, var$9, $curSymb, $decompCurSymb, var$12, $i, var$14, $lIndex, var$16, var$17;
    $rightBound = $matchResult.$getRightBound();
    $syllIndex = 0;
    $decompSyllable = $rt_createIntArray(3);
    $vIndex = (-1);
    $tIndex = (-1);
    if ($strIndex >= $rightBound)
        return (-1);
    var$9 = $strIndex + 1 | 0;
    $curSymb = $testString.$charAt($strIndex);
    $decompCurSymb = jur_Lexer_getHangulDecomposition($curSymb);
    if ($decompCurSymb !== null) {
        var$12 = $decompCurSymb.data;
        $i = 0;
        if (var$12.length != $this.$decomposedCharLength)
            return (-1);
        while (true) {
            if ($i >= $this.$decomposedCharLength)
                return $this.$next1.$matches(var$9, $testString, $matchResult);
            if (var$12[$i] != $this.$decomposedChar.data[$i])
                break;
            $i = $i + 1 | 0;
        }
        return (-1);
    }
    var$14 = $decompSyllable.data;
    var$14[$syllIndex] = $curSymb;
    $lIndex = $curSymb - 4352 | 0;
    if ($lIndex >= 0 && $lIndex < 19) {
        if (var$9 < $rightBound) {
            $curSymb = $testString.$charAt(var$9);
            $vIndex = $curSymb - 4449 | 0;
        }
        if ($vIndex >= 0 && $vIndex < 21) {
            var$16 = var$9 + 1 | 0;
            var$14[1] = $curSymb;
            if (var$16 < $rightBound) {
                $curSymb = $testString.$charAt(var$16);
                $tIndex = $curSymb - 4519 | 0;
            }
            if ($tIndex >= 0 && $tIndex < 28) {
                var$17 = var$16 + 1 | 0;
                var$14[2] = $curSymb;
                var$17 = $this.$decomposedCharLength == 3 && var$14[0] == $this.$decomposedChar.data[0] && var$14[1] == $this.$decomposedChar.data[1] && var$14[2] == $this.$decomposedChar.data[2] ? $this.$next1.$matches(var$17, $testString, $matchResult) : (-1);
                return var$17;
            }
            var$17 = $this.$decomposedCharLength == 2 && var$14[0] == $this.$decomposedChar.data[0] && var$14[1] == $this.$decomposedChar.data[1] ? $this.$next1.$matches(var$16, $testString, $matchResult) : (-1);
            return var$17;
        }
        return (-1);
    }
    return (-1);
},
jur_HangulDecomposedCharSet_first = ($this, $set) => {
    let var$2, var$3;
    a: {
        if ($set instanceof jur_HangulDecomposedCharSet) {
            var$2 = $set;
            if (!(jur_HangulDecomposedCharSet_getDecomposedChar(var$2)).$equals(jur_HangulDecomposedCharSet_getDecomposedChar($this))) {
                var$3 = 0;
                break a;
            }
        }
        var$3 = 1;
    }
    return var$3;
},
jur_HangulDecomposedCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function cbggg_GlyphLayout$GlyphRun() {
    let a = this; jl_Object.call(a);
    a.$glyphs = null;
    a.$xAdvances = null;
    a.$x4 = 0.0;
    a.$y4 = 0.0;
    a.$width6 = 0.0;
}
let cbggg_GlyphLayout$GlyphRun__init_ = $this => {
    jl_Object__init_($this);
    $this.$glyphs = cbgu_Array__init_();
    $this.$xAdvances = cbgu_FloatArray__init_();
},
cbggg_GlyphLayout$GlyphRun__init_0 = () => {
    let var_0 = new cbggg_GlyphLayout$GlyphRun();
    cbggg_GlyphLayout$GlyphRun__init_(var_0);
    return var_0;
},
cbggg_GlyphLayout$GlyphRun_appendRun = ($this, $run) => {
    let var$2;
    $this.$glyphs.$addAll1($run.$glyphs);
    if ($this.$xAdvances.$notEmpty()) {
        var$2 = $this.$xAdvances;
        var$2.$size2 = var$2.$size2 - 1 | 0;
    }
    $this.$xAdvances.$addAll3($run.$xAdvances);
},
cbggg_GlyphLayout$GlyphRun_reset = $this => {
    $this.$glyphs.$clear();
    $this.$xAdvances.$clear();
},
cbggg_GlyphLayout$GlyphRun_toString = $this => {
    let $buffer, $glyphs, $i, $n, $g;
    $buffer = jl_StringBuilder__init_0($this.$glyphs.$size0 + 32 | 0);
    $glyphs = $this.$glyphs;
    $i = 0;
    $n = $glyphs.$size0;
    while ($i < $n) {
        $g = $glyphs.$get($i);
        $buffer.$append0($g.$id0 & 65535);
        $i = $i + 1 | 0;
    }
    $buffer.$append1($rt_s(27));
    $buffer.$append20($this.$x4);
    $buffer.$append1($rt_s(27));
    $buffer.$append20($this.$y4);
    $buffer.$append1($rt_s(27));
    $buffer.$append20($this.$width6);
    return $buffer.$toString();
};
function cbggg_Model() {
    let a = this; jl_Object.call(a);
    a.$materials0 = null;
    a.$nodes0 = null;
    a.$animations0 = null;
    a.$meshes = null;
    a.$meshParts = null;
    a.$disposables = null;
    a.$nodePartBones = null;
}
let cbggg_Model__init_ = $this => {
    jl_Object__init_($this);
    $this.$materials0 = cbgu_Array__init_();
    $this.$nodes0 = cbgu_Array__init_();
    $this.$animations0 = cbgu_Array__init_();
    $this.$meshes = cbgu_Array__init_();
    $this.$meshParts = cbgu_Array__init_();
    $this.$disposables = cbgu_Array__init_();
    $this.$nodePartBones = cbgu_ObjectMap__init_();
},
cbggg_Model__init_0 = () => {
    let var_0 = new cbggg_Model();
    cbggg_Model__init_(var_0);
    return var_0;
},
cbggg_Model_manageDisposable = ($this, $disposable) => {
    if (!$this.$disposables.$contains2($disposable, 1))
        $this.$disposables.$add1($disposable);
};
function jur_WordBoundary() {
    jur_AbstractSet.call(this);
    this.$positive = 0;
}
let jur_WordBoundary__init_ = ($this, $positive) => {
    jur_AbstractSet__init_($this);
    $this.$positive = $positive;
},
jur_WordBoundary__init_0 = var_0 => {
    let var_1 = new jur_WordBoundary();
    jur_WordBoundary__init_(var_1, var_0);
    return var_1;
},
jur_WordBoundary_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $ch1, $ch2, $leftBound, $left, $right;
    $ch1 = $stringIndex < $matchResult.$getRightBound() ? $testString.$charAt($stringIndex) : 32;
    $ch2 = !$stringIndex ? 32 : $testString.$charAt($stringIndex - 1 | 0);
    $leftBound = !$matchResult.$hasTransparentBounds() ? $matchResult.$getLeftBound() : 0;
    $left = $ch1 != 32 && !jur_WordBoundary_isSpace($this, $ch1, $stringIndex, $leftBound, $testString) ? 0 : 1;
    $right = $ch2 != 32 && !jur_WordBoundary_isSpace($this, $ch2, $stringIndex - 1 | 0, $leftBound, $testString) ? 0 : 1;
    return $left ^ $right ^ $this.$positive ? (-1) : $this.$next1.$matches($stringIndex, $testString, $matchResult);
},
jur_WordBoundary_hasConsumed = ($this, $matchResult) => {
    return 0;
},
jur_WordBoundary_getName = $this => {
    return $rt_s(741);
},
jur_WordBoundary_isSpace = ($this, $ch, $index, $leftBound, $testString) => {
    let var$5;
    if (!jl_Character_isLetterOrDigit0($ch) && $ch != 95) {
        a: {
            if (jl_Character_getType0($ch) == 6)
                while (true) {
                    $index = $index + (-1) | 0;
                    if ($index < $leftBound)
                        break a;
                    var$5 = $testString.$charAt($index);
                    if (jl_Character_isLetterOrDigit0(var$5))
                        return 0;
                    if (jl_Character_getType0(var$5) != 6)
                        return 1;
                }
        }
        return 1;
    }
    return 0;
};
function cbggga_SpotLightsAttribute() {
    cbggg_Attribute.call(this);
    this.$lights1 = null;
}
let cbggga_SpotLightsAttribute_Type = Long_ZERO,
cbggga_SpotLightsAttribute_$callClinit = () => {
    cbggga_SpotLightsAttribute_$callClinit = $rt_eraseClinit(cbggga_SpotLightsAttribute);
    cbggga_SpotLightsAttribute__clinit_();
},
cbggga_SpotLightsAttribute__clinit_ = () => {
    cbggga_SpotLightsAttribute_Type = cbggg_Attribute_register($rt_s(742));
},
cbgggus_BaseShapeBuilder$2 = $rt_classWithoutFields(cbgu_FlushablePool),
cbgggus_BaseShapeBuilder$2__init_ = $this => {
    cbgu_FlushablePool__init_($this);
},
cbgggus_BaseShapeBuilder$2__init_0 = () => {
    let var_0 = new cbgggus_BaseShapeBuilder$2();
    cbgggus_BaseShapeBuilder$2__init_(var_0);
    return var_0;
},
cbgggus_BaseShapeBuilder$1 = $rt_classWithoutFields(cbgu_FlushablePool),
cbgggus_BaseShapeBuilder$1__init_ = $this => {
    cbgu_FlushablePool__init_($this);
},
cbgggus_BaseShapeBuilder$1__init_0 = () => {
    let var_0 = new cbgggus_BaseShapeBuilder$1();
    cbgggus_BaseShapeBuilder$1__init_(var_0);
    return var_0;
},
cbgggus_BaseShapeBuilder$1_newObject0 = $this => {
    return cbgm_Vector3__init_();
},
cbgggus_BaseShapeBuilder$1_newObject = $this => {
    return $this.$newObject2();
},
cbgu_BufferUtils = $rt_classWithoutFields(),
cbgu_BufferUtils_unsafeBuffers = null,
cbgu_BufferUtils_allocatedUnsafe = 0,
cbgu_BufferUtils_$callClinit = () => {
    cbgu_BufferUtils_$callClinit = $rt_eraseClinit(cbgu_BufferUtils);
    cbgu_BufferUtils__clinit_();
},
cbgu_BufferUtils_copy = ($src, $dst, $numFloats, $offset) => {
    let var$5, $floatBuffer;
    cbgu_BufferUtils_$callClinit();
    var$5 = $dst instanceof jn_ByteBuffer;
    if (var$5)
        $dst.$limit($numFloats << 2);
    else if ($dst instanceof jn_FloatBuffer)
        $dst.$limit($numFloats);
    $floatBuffer = cbgu_BufferUtils_asFloatBuffer($dst);
    jn_FloatBuffer_clear($floatBuffer);
    $dst.$position(0);
    $floatBuffer.$put3($src, $offset, $numFloats);
    $dst.$position(0);
    if (!var$5)
        $dst.$limit($numFloats);
    else
        $dst.$limit($numFloats << 2);
},
cbgu_BufferUtils_asFloatBuffer = $data => {
    let $buffer;
    cbgu_BufferUtils_$callClinit();
    $buffer = null;
    if ($data instanceof jn_ByteBuffer)
        $buffer = $data.$asFloatBuffer();
    else if ($data instanceof jn_FloatBuffer)
        $buffer = $data;
    if ($buffer !== null)
        return $buffer;
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(743)));
},
cbgu_BufferUtils_newFloatBuffer = $numFloats => {
    let $buffer;
    cbgu_BufferUtils_$callClinit();
    if (!cgxgbt_TeaTool_isProdMode())
        return jn_FloatBuffer_wrap($rt_createFloatArray($numFloats));
    $buffer = cbgu_BufferUtils_newByteBuffer($numFloats * 4 | 0);
    return $buffer.$asFloatBuffer();
},
cbgu_BufferUtils_newByteBuffer = $numBytes => {
    let $buffer;
    cbgu_BufferUtils_$callClinit();
    if (!cgxgbt_TeaTool_isProdMode())
        return jn_ByteBuffer_wrap($rt_createByteArray($numBytes));
    $buffer = jn_ByteBuffer_allocateDirect($numBytes);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer;
},
cbgu_BufferUtils_newShortBuffer = $numShorts => {
    let $buffer;
    cbgu_BufferUtils_$callClinit();
    if (!cgxgbt_TeaTool_isProdMode())
        return jn_ShortBuffer_wrap0($rt_createShortArray($numShorts));
    $buffer = cbgu_BufferUtils_newByteBuffer($numShorts * 2 | 0);
    return $buffer.$asShortBuffer();
},
cbgu_BufferUtils_newIntBuffer = $numInts => {
    let $buffer;
    cbgu_BufferUtils_$callClinit();
    if (!cgxgbt_TeaTool_isProdMode())
        return jn_IntBuffer_wrap0($rt_createIntArray($numInts));
    $buffer = cbgu_BufferUtils_newByteBuffer($numInts * 4 | 0);
    return $buffer.$asIntBuffer();
},
cbgu_BufferUtils_disposeUnsafeByteBuffer = $buffer => {
    let $size;
    cbgu_BufferUtils_$callClinit();
    $size = jn_Buffer_capacity($buffer);
    if (!cbgu_BufferUtils_unsafeBuffers.$removeValue($buffer, 1))
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(744)));
    cbgu_BufferUtils_allocatedUnsafe = cbgu_BufferUtils_allocatedUnsafe - $size | 0;
    cbgu_BufferUtils_freeMemory($buffer);
},
cbgu_BufferUtils_newUnsafeByteBuffer = $numBytes => {
    let $buffer;
    cbgu_BufferUtils_$callClinit();
    $buffer = cbgu_BufferUtils_newDisposableByteBuffer($numBytes);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    cbgu_BufferUtils_allocatedUnsafe = cbgu_BufferUtils_allocatedUnsafe + $numBytes | 0;
    cbgu_BufferUtils_unsafeBuffers.$add1($buffer);
    return $buffer;
},
cbgu_BufferUtils_newDisposableByteBuffer = $numBytes => {
    let $buffer;
    cbgu_BufferUtils_$callClinit();
    $buffer = jn_ByteBuffer_allocateDirect($numBytes);
    jn_ByteBuffer_order($buffer, jn_ByteOrder_nativeOrder());
    return $buffer;
},
cbgu_BufferUtils_freeMemory = $buffer => {
    cbgu_BufferUtils_$callClinit();
},
cbgu_BufferUtils__clinit_ = () => {
    cbgu_BufferUtils_unsafeBuffers = cbgu_Array__init_();
    cbgu_BufferUtils_allocatedUnsafe = 0;
},
bbd_btRigidBody = $rt_classWithoutFields(bbc_btCollisionObject),
bbd_btRigidBody_NULL = null,
bbd_btRigidBody_T_01 = null,
bbd_btRigidBody_T_02 = null,
bbd_btRigidBody_T_03 = null,
bbd_btRigidBody_$callClinit = () => {
    bbd_btRigidBody_$callClinit = $rt_eraseClinit(bbd_btRigidBody);
    bbd_btRigidBody__clinit_();
},
bbd_btRigidBody__init_0 = ($this, $mass, $motionState, $collisionShape, $localInertia) => {
    let $addr;
    bbd_btRigidBody_$callClinit();
    bbc_btCollisionObject__init_($this, 1, 1);
    $addr = bbd_btRigidBody_internal_native_create_float_btMotionState_btCollisionShape_btVector3$js_body$_3($mass, $motionState.$native_address, $collisionShape.$native_address, $localInertia.$native_address);
    bi_IDLBase_internal_reset($this, $addr, 1);
},
bbd_btRigidBody__init_2 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new bbd_btRigidBody();
    bbd_btRigidBody__init_0(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
bbd_btRigidBody__init_ = ($this, $b, $c) => {
    bbd_btRigidBody_$callClinit();
    bbc_btCollisionObject__init_($this, 1, 1);
},
bbd_btRigidBody__init_1 = (var_0, var_1) => {
    let var_2 = new bbd_btRigidBody();
    bbd_btRigidBody__init_(var_2, var_0, var_1);
    return var_2;
},
bbd_btRigidBody_native_new = () => {
    bbd_btRigidBody_$callClinit();
    return bbd_btRigidBody__init_1(0, 0);
},
bbd_btRigidBody_deleteNative = $this => {
    bbd_btRigidBody_internal_native_deleteNative$js_body$_9($this.$native_address);
},
bbd_btRigidBody__clinit_ = () => {
    bbd_btRigidBody_NULL = bbd_btRigidBody_native_new();
    bbd_btRigidBody_T_01 = bbd_btRigidBody_native_new();
    bbd_btRigidBody_T_02 = bbd_btRigidBody_native_new();
    bbd_btRigidBody_T_03 = bbd_btRigidBody_native_new();
},
bbd_btRigidBody_internal_native_create_float_btMotionState_btCollisionShape_btVector3$js_body$_3 = (var$1, var$2, var$3, var$4) => {
    var jsObj = new bullet.btRigidBody(var$1, var$2, var$3, var$4);
    return bullet.getPointer(jsObj);
},
bbd_btRigidBody_internal_native_deleteNative$js_body$_9 = var$1 => {
    var jsObj = bullet.wrapPointer(var$1, bullet.btRigidBody);
    bullet.destroy(jsObj);
},
cbg_ApplicationAdapter = $rt_classWithoutFields(),
cbg_ApplicationAdapter__init_ = $this => {
    jl_Object__init_($this);
},
cbg_ApplicationAdapter_pause = $this => {
    return;
},
cbg_ApplicationAdapter_resume = $this => {
    return;
};
function cgxgbt_TeaPreloadApplicationListener() {
    let a = this; cbg_ApplicationAdapter.call(a);
    a.$startupLogo = null;
    a.$animationSpeed = 0.0;
    a.$assetLoader0 = null;
    a.$initQueue = 0;
    a.$teaApplication = null;
    a.$preloadStep = null;
    a.$logoTexture = null;
    a.$stage = null;
    a.$logo = null;
    a.$progressBar = null;
    a.$table = null;
    a.$originalWidth = 0.0;
    a.$originalHeight = 0.0;
    a.$targetProgress = 0.0;
    a.$displayedProgress = 0.0;
    a.$assetsCount = 0;
    a.$isAnimation = 0;
    a.$initStage = 0;
}
let cgxgbt_TeaPreloadApplicationListener__init_ = $this => {
    cbg_ApplicationAdapter__init_($this);
    $this.$startupLogo = $rt_s(745);
    $this.$animationSpeed = 0.8999999761581421;
    $this.$initQueue = 0;
    cgxgbt_TeaPreloadApplicationListener$Step_$callClinit();
    $this.$preloadStep = cgxgbt_TeaPreloadApplicationListener$Step_PRELOAD_LOADING_ASSETS;
    $this.$targetProgress = 0.0;
    $this.$displayedProgress = 0.0;
    $this.$assetsCount = (-1);
    $this.$isAnimation = 0;
    $this.$initStage = 0;
},
cgxgbt_TeaPreloadApplicationListener__init_0 = () => {
    let var_0 = new cgxgbt_TeaPreloadApplicationListener();
    cgxgbt_TeaPreloadApplicationListener__init_(var_0);
    return var_0;
},
cgxgbt_TeaPreloadApplicationListener_create = $this => {
    $this.$teaApplication = cgxgbt_TeaApplication_get();
    $this.$assetLoader0 = cgxgbta_AssetInstance_getLoaderInstance();
    $this.$setupPreloadAssets();
},
cgxgbt_TeaPreloadApplicationListener_setupPreloadAssets = $this => {
    let var$1, var$2, var$3;
    cgxgbt_TeaPreloadApplicationListener_addQueue($this);
    var$1 = $this.$assetLoader0;
    var$2 = $this.$startupLogo;
    cgxgbta_AssetType_$callClinit();
    var$3 = cgxgbta_AssetType_Binary;
    cbg_Files$FileType_$callClinit();
    var$1.$loadAsset(var$2, var$3, cbg_Files$FileType_Internal, cgxgbt_TeaPreloadApplicationListener$1__init_0($this));
},
cgxgbt_TeaPreloadApplicationListener_setupStage = $this => {
    $this.$stage = $this.$createStage();
    $this.$stage.$setViewport(cbguv_ScreenViewport__init_0());
    ($this.$stage.$getViewport()).$update4(cbg_Gdx_graphics.$getWidth0(), cbg_Gdx_graphics.$getHeight0(), 1);
    cgxgbt_TeaPreloadApplicationListener_setupScene2d($this);
    $this.$assetLoader0.$preload($rt_s(746), cgxgbt_TeaPreloadApplicationListener$2__init_0($this));
},
cgxgbt_TeaPreloadApplicationListener_addQueue = $this => {
    $this.$initQueue = $this.$initQueue + 1 | 0;
},
cgxgbt_TeaPreloadApplicationListener_subtractQueue = $this => {
    $this.$initQueue = $this.$initQueue - 1 | 0;
},
cgxgbt_TeaPreloadApplicationListener_createTexture = ($this, $pixmap) => {
    return cbgg_Texture__init_7($pixmap);
},
cgxgbt_TeaPreloadApplicationListener_createTexture0 = ($this, $internal) => {
    return cbgg_Texture__init_5($internal);
},
cgxgbt_TeaPreloadApplicationListener_createStage = $this => {
    return cbgss_Stage__init_1();
},
cgxgbt_TeaPreloadApplicationListener_clearScreen = $this => {
    cbg_Gdx_gl.$glClearColor(0.0, 0.0, 0.0, 1.0);
    cbg_Gdx_gl.$glClear(16640);
},
cgxgbt_TeaPreloadApplicationListener_setupScene2d = $this => {
    let $internal, var$2, $pixmap, $whiteTexture, $borderDrawable, $fillDrawable, $style;
    $internal = cbg_Gdx_files.$internal($this.$startupLogo);
    $this.$logoTexture = $this.$createTexture($internal);
    var$2 = $this.$logoTexture;
    cbgg_Texture$TextureFilter_$callClinit();
    var$2.$setFilter(cbgg_Texture$TextureFilter_Linear, cbgg_Texture$TextureFilter_Linear);
    $this.$logo = cbgssu_Image__init_2($this.$logoTexture);
    var$2 = $this.$logo;
    cbgu_Scaling_$callClinit();
    var$2.$setScaling(cbgu_Scaling_fill);
    $this.$originalWidth = $this.$logoTexture.$getWidth0();
    $this.$originalHeight = $this.$logoTexture.$getHeight0();
    $pixmap = new cbgg_Pixmap;
    cbgg_Pixmap$Format_$callClinit();
    cbgg_Pixmap__init_0($pixmap, 1, 1, cbgg_Pixmap$Format_RGBA8888);
    cbgg_Color_$callClinit();
    $pixmap.$setColor(cbgg_Color_WHITE);
    $pixmap.$fill3();
    $whiteTexture = $this.$createTexture0($pixmap);
    $pixmap.$dispose();
    $borderDrawable = cgxgbt_TeaPreloadApplicationListener$BorderDrawable__init_0($whiteTexture);
    $borderDrawable.$setMinHeight(40.0);
    $fillDrawable = cbgssu_TextureRegionDrawable__init_(cbggg_TextureRegion__init_($whiteTexture));
    $fillDrawable.$setMinHeight($borderDrawable.$getMinHeight() - $borderDrawable.$getTopHeight() - $borderDrawable.$getBottomHeight());
    $style = cbgssu_ProgressBar$ProgressBarStyle__init_0();
    $style.$background0 = $borderDrawable;
    $style.$knob = $fillDrawable;
    $style.$knobBefore = $fillDrawable;
    $this.$progressBar = cbgssu_ProgressBar__init_0(0.0, 1.0, 0.009999999776482582, 0, $style);
    $this.$progressBar.$setHeight(20.0);
    $this.$progressBar.$setValue2(0.0);
    $this.$table = cbgssu_Table__init_1();
    $this.$table.$setFillParent(1);
    $this.$table.$align(1);
    $this.$stage.$addActor($this.$table);
    cgxgbt_TeaPreloadApplicationListener_updateTableLayout($this, cbg_Gdx_graphics.$getWidth0(), cbg_Gdx_graphics.$getHeight0());
},
cgxgbt_TeaPreloadApplicationListener_updateTableLayout = ($this, $width, $height) => {
    let $targetWidth, $logoAspectRatio, $targetHeight;
    $this.$table.$clear();
    $targetWidth = jl_Math_min0($this.$originalWidth, jl_Math_max0(50.0, $width * 0.800000011920929));
    $logoAspectRatio = $this.$originalHeight / $this.$originalWidth;
    $targetHeight = $targetWidth * $logoAspectRatio;
    (((($this.$table.$add16($this.$logo)).$width($targetWidth)).$height($targetHeight)).$padBottom(20.0)).$row();
    (($this.$table.$add16($this.$progressBar)).$width($targetWidth)).$height(40.0);
},
cgxgbt_TeaPreloadApplicationListener_render = $this => {
    let var$1, $deltaTime, $queue, $progress, $downloading, $progressDelta;
    $this.$clearScreen();
    if (!$this.$initQueue && !$this.$initStage)
        $this.$initStage = 1;
    var$1 = $this.$preloadStep;
    cgxgbt_TeaPreloadApplicationListener$Step_$callClinit();
    if (var$1 === cgxgbt_TeaPreloadApplicationListener$Step_PRELOAD_ASSETS) {
        $deltaTime = cbg_Gdx_graphics.$getDeltaTime();
        $this.$stage.$act1();
        $this.$stage.$draw8();
        if ($this.$assetsCount >= 0) {
            $queue = $this.$assetLoader0.$getQueue();
            $progress = ($this.$assetsCount - $queue | 0) / $this.$assetsCount;
            if (!$this.$isAnimation)
                $this.$targetProgress = $progress;
            $this.$progressBar.$setValue2($this.$displayedProgress);
            $downloading = $this.$assetLoader0.$isDownloading();
            if ($progress === 1.0 && !$downloading && $this.$displayedProgress === 1.0)
                $this.$teaApplication.$setPreloadReady();
            if ($this.$targetProgress <= $this.$displayedProgress)
                $this.$isAnimation = 0;
            else {
                $progressDelta = $this.$animationSpeed * $deltaTime;
                $this.$displayedProgress = jl_Math_min0($this.$targetProgress, $this.$displayedProgress + $progressDelta);
                $this.$progressBar.$setValue2($this.$displayedProgress);
                $this.$isAnimation = 1;
            }
        }
    }
    if ($this.$initStage == 1) {
        $this.$initStage = 2;
        $this.$preloadStep = cgxgbt_TeaPreloadApplicationListener$Step_PRELOAD_ASSETS;
        cgxgbt_TeaPreloadApplicationListener_setupStage($this);
    }
},
cgxgbt_TeaPreloadApplicationListener_resize = ($this, $width, $height) => {
    let var$3;
    var$3 = $this.$preloadStep;
    cgxgbt_TeaPreloadApplicationListener$Step_$callClinit();
    if (var$3 === cgxgbt_TeaPreloadApplicationListener$Step_PRELOAD_ASSETS) {
        ($this.$stage.$getViewport()).$update4($width, $height, 1);
        cgxgbt_TeaPreloadApplicationListener_updateTableLayout($this, $width, $height);
    }
},
cgxgbt_TeaPreloadApplicationListener_dispose = $this => {
    $this.$stage.$dispose();
    $this.$logoTexture.$dispose();
};
function cbgssu_Cell() {
    let a = this; jl_Object.call(a);
    a.$minWidth = null;
    a.$minHeight = null;
    a.$prefWidth = null;
    a.$prefHeight = null;
    a.$maxWidth = null;
    a.$maxHeight = null;
    a.$spaceTop = null;
    a.$spaceLeft = null;
    a.$spaceBottom = null;
    a.$spaceRight = null;
    a.$padTop = null;
    a.$padLeft = null;
    a.$padBottom0 = null;
    a.$padRight = null;
    a.$fillX = null;
    a.$fillY = null;
    a.$align0 = null;
    a.$expandX = null;
    a.$expandY = null;
    a.$colspan = null;
    a.$uniformX = null;
    a.$uniformY = null;
    a.$actor = null;
    a.$actorX = 0.0;
    a.$actorY = 0.0;
    a.$actorWidth = 0.0;
    a.$actorHeight = 0.0;
    a.$table1 = null;
    a.$endRow0 = 0;
    a.$column = 0;
    a.$row1 = 0;
    a.$cellAboveIndex = 0;
    a.$computedPadTop = 0.0;
    a.$computedPadLeft = 0.0;
    a.$computedPadBottom = 0.0;
    a.$computedPadRight = 0.0;
}
let cbgssu_Cell_zerof = null,
cbgssu_Cell_onef = null,
cbgssu_Cell_zeroi = null,
cbgssu_Cell_onei = null,
cbgssu_Cell_centeri = null,
cbgssu_Cell_topi = null,
cbgssu_Cell_bottomi = null,
cbgssu_Cell_lefti = null,
cbgssu_Cell_righti = null,
cbgssu_Cell_files = null,
cbgssu_Cell_defaults = null,
cbgssu_Cell_$callClinit = () => {
    cbgssu_Cell_$callClinit = $rt_eraseClinit(cbgssu_Cell);
    cbgssu_Cell__clinit_();
},
cbgssu_Cell__init_ = $this => {
    let $defaults;
    cbgssu_Cell_$callClinit();
    jl_Object__init_($this);
    $this.$cellAboveIndex = (-1);
    $defaults = cbgssu_Cell_defaults0();
    if ($defaults !== null)
        $this.$set3($defaults);
},
cbgssu_Cell__init_0 = () => {
    let var_0 = new cbgssu_Cell();
    cbgssu_Cell__init_(var_0);
    return var_0;
},
cbgssu_Cell_setTable = ($this, $table) => {
    $this.$table1 = $table;
},
cbgssu_Cell_width = ($this, $width) => {
    if ($width !== null) {
        $this.$minWidth = $width;
        $this.$prefWidth = $width;
        $this.$maxWidth = $width;
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(747)));
},
cbgssu_Cell_width0 = ($this, $width) => {
    $this.$width0(cbgssu_Value$Fixed_valueOf($width));
    return $this;
},
cbgssu_Cell_height = ($this, $height) => {
    if ($height !== null) {
        $this.$minHeight = $height;
        $this.$prefHeight = $height;
        $this.$maxHeight = $height;
        return $this;
    }
    $rt_throw(jl_IllegalArgumentException__init_($rt_s(748)));
},
cbgssu_Cell_height0 = ($this, $height) => {
    $this.$height0(cbgssu_Value$Fixed_valueOf($height));
    return $this;
},
cbgssu_Cell_padBottom = ($this, $padBottom) => {
    $this.$padBottom0 = cbgssu_Value$Fixed_valueOf($padBottom);
    return $this;
},
cbgssu_Cell_row = $this => {
    $this.$table1.$row0();
},
cbgssu_Cell_clear = $this => {
    $this.$minWidth = null;
    $this.$minHeight = null;
    $this.$prefWidth = null;
    $this.$prefHeight = null;
    $this.$maxWidth = null;
    $this.$maxHeight = null;
    $this.$spaceTop = null;
    $this.$spaceLeft = null;
    $this.$spaceBottom = null;
    $this.$spaceRight = null;
    $this.$padTop = null;
    $this.$padLeft = null;
    $this.$padBottom0 = null;
    $this.$padRight = null;
    $this.$fillX = null;
    $this.$fillY = null;
    $this.$align0 = null;
    $this.$expandX = null;
    $this.$expandY = null;
    $this.$colspan = null;
    $this.$uniformX = null;
    $this.$uniformY = null;
},
cbgssu_Cell_reset = $this => {
    $this.$actor = null;
    $this.$table1 = null;
    $this.$endRow0 = 0;
    $this.$cellAboveIndex = (-1);
    $this.$set3(cbgssu_Cell_defaults0());
},
cbgssu_Cell_set = ($this, $cell) => {
    $this.$minWidth = $cell.$minWidth;
    $this.$minHeight = $cell.$minHeight;
    $this.$prefWidth = $cell.$prefWidth;
    $this.$prefHeight = $cell.$prefHeight;
    $this.$maxWidth = $cell.$maxWidth;
    $this.$maxHeight = $cell.$maxHeight;
    $this.$spaceTop = $cell.$spaceTop;
    $this.$spaceLeft = $cell.$spaceLeft;
    $this.$spaceBottom = $cell.$spaceBottom;
    $this.$spaceRight = $cell.$spaceRight;
    $this.$padTop = $cell.$padTop;
    $this.$padLeft = $cell.$padLeft;
    $this.$padBottom0 = $cell.$padBottom0;
    $this.$padRight = $cell.$padRight;
    $this.$fillX = $cell.$fillX;
    $this.$fillY = $cell.$fillY;
    $this.$align0 = $cell.$align0;
    $this.$expandX = $cell.$expandX;
    $this.$expandY = $cell.$expandY;
    $this.$colspan = $cell.$colspan;
    $this.$uniformX = $cell.$uniformX;
    $this.$uniformY = $cell.$uniformY;
},
cbgssu_Cell_merge = ($this, $cell) => {
    if ($cell === null)
        return;
    if ($cell.$minWidth !== null)
        $this.$minWidth = $cell.$minWidth;
    if ($cell.$minHeight !== null)
        $this.$minHeight = $cell.$minHeight;
    if ($cell.$prefWidth !== null)
        $this.$prefWidth = $cell.$prefWidth;
    if ($cell.$prefHeight !== null)
        $this.$prefHeight = $cell.$prefHeight;
    if ($cell.$maxWidth !== null)
        $this.$maxWidth = $cell.$maxWidth;
    if ($cell.$maxHeight !== null)
        $this.$maxHeight = $cell.$maxHeight;
    if ($cell.$spaceTop !== null)
        $this.$spaceTop = $cell.$spaceTop;
    if ($cell.$spaceLeft !== null)
        $this.$spaceLeft = $cell.$spaceLeft;
    if ($cell.$spaceBottom !== null)
        $this.$spaceBottom = $cell.$spaceBottom;
    if ($cell.$spaceRight !== null)
        $this.$spaceRight = $cell.$spaceRight;
    if ($cell.$padTop !== null)
        $this.$padTop = $cell.$padTop;
    if ($cell.$padLeft !== null)
        $this.$padLeft = $cell.$padLeft;
    if ($cell.$padBottom0 !== null)
        $this.$padBottom0 = $cell.$padBottom0;
    if ($cell.$padRight !== null)
        $this.$padRight = $cell.$padRight;
    if ($cell.$fillX !== null)
        $this.$fillX = $cell.$fillX;
    if ($cell.$fillY !== null)
        $this.$fillY = $cell.$fillY;
    if ($cell.$align0 !== null)
        $this.$align0 = $cell.$align0;
    if ($cell.$expandX !== null)
        $this.$expandX = $cell.$expandX;
    if ($cell.$expandY !== null)
        $this.$expandY = $cell.$expandY;
    if ($cell.$colspan !== null)
        $this.$colspan = $cell.$colspan;
    if ($cell.$uniformX !== null)
        $this.$uniformX = $cell.$uniformX;
    if ($cell.$uniformY !== null)
        $this.$uniformY = $cell.$uniformY;
},
cbgssu_Cell_toString = $this => {
    return $this.$actor === null ? jl_Object_toString($this) : $this.$actor.$toString();
},
cbgssu_Cell_defaults0 = () => {
    let var$1;
    cbgssu_Cell_$callClinit();
    if (!(cbgssu_Cell_files !== null && cbgssu_Cell_files === cbg_Gdx_files)) {
        cbgssu_Cell_files = cbg_Gdx_files;
        cbgssu_Cell_defaults = cbgssu_Cell__init_0();
        var$1 = cbgssu_Cell_defaults;
        cbgssu_Value_$callClinit();
        var$1.$minWidth = cbgssu_Value_minWidth;
        cbgssu_Cell_defaults.$minHeight = cbgssu_Value_minHeight;
        cbgssu_Cell_defaults.$prefWidth = cbgssu_Value_prefWidth;
        cbgssu_Cell_defaults.$prefHeight = cbgssu_Value_prefHeight;
        cbgssu_Cell_defaults.$maxWidth = cbgssu_Value_maxWidth;
        cbgssu_Cell_defaults.$maxHeight = cbgssu_Value_maxHeight;
        cbgssu_Cell_defaults.$spaceTop = cbgssu_Value_zero;
        cbgssu_Cell_defaults.$spaceLeft = cbgssu_Value_zero;
        cbgssu_Cell_defaults.$spaceBottom = cbgssu_Value_zero;
        cbgssu_Cell_defaults.$spaceRight = cbgssu_Value_zero;
        cbgssu_Cell_defaults.$padTop = cbgssu_Value_zero;
        cbgssu_Cell_defaults.$padLeft = cbgssu_Value_zero;
        cbgssu_Cell_defaults.$padBottom0 = cbgssu_Value_zero;
        cbgssu_Cell_defaults.$padRight = cbgssu_Value_zero;
        cbgssu_Cell_defaults.$fillX = cbgssu_Cell_zerof;
        cbgssu_Cell_defaults.$fillY = cbgssu_Cell_zerof;
        cbgssu_Cell_defaults.$align0 = cbgssu_Cell_centeri;
        cbgssu_Cell_defaults.$expandX = cbgssu_Cell_zeroi;
        cbgssu_Cell_defaults.$expandY = cbgssu_Cell_zeroi;
        cbgssu_Cell_defaults.$colspan = cbgssu_Cell_onei;
        cbgssu_Cell_defaults.$uniformX = null;
        cbgssu_Cell_defaults.$uniformY = null;
    }
    return cbgssu_Cell_defaults;
},
cbgssu_Cell__clinit_ = () => {
    cbgssu_Cell_zerof = jl_Float_valueOf(0.0);
    cbgssu_Cell_onef = jl_Float_valueOf(1.0);
    cbgssu_Cell_zeroi = jl_Integer_valueOf(0);
    cbgssu_Cell_onei = jl_Integer_valueOf(1);
    cbgssu_Cell_centeri = cbgssu_Cell_onei;
    cbgssu_Cell_topi = jl_Integer_valueOf(2);
    cbgssu_Cell_bottomi = jl_Integer_valueOf(4);
    cbgssu_Cell_lefti = jl_Integer_valueOf(8);
    cbgssu_Cell_righti = jl_Integer_valueOf(16);
},
jur_IntHash = $rt_classWithoutFields();
function cbgss_Stage() {
    let a = this; cbg_InputAdapter.call(a);
    a.$viewport = null;
    a.$batch0 = null;
    a.$ownsBatch = 0;
    a.$root = null;
    a.$tempCoords = null;
    a.$pointerOverActors = null;
    a.$pointerTouched = null;
    a.$pointerScreenX = null;
    a.$pointerScreenY = null;
    a.$mouseScreenX = 0;
    a.$mouseScreenY = 0;
    a.$mouseOverActor = null;
    a.$keyboardFocus = null;
    a.$scrollFocus = null;
    a.$touchFocuses = null;
    a.$actionsRequestRendering = 0;
    a.$debugShapes = null;
    a.$debugAll1 = 0;
    a.$debugUnderMouse = 0;
    a.$debugParentUnderMouse = 0;
    a.$debugTableUnderMouse = null;
    a.$debugColor = null;
}
let cbgss_Stage_debug = 0,
cbgss_Stage__init_0 = $this => {
    let var$1;
    var$1 = new cbguv_ScalingViewport;
    cbgu_Scaling_$callClinit();
    cbguv_ScalingViewport__init_(var$1, cbgu_Scaling_stretch, cbg_Gdx_graphics.$getWidth0(), cbg_Gdx_graphics.$getHeight0(), cbgg_OrthographicCamera__init_0());
    cbgss_Stage__init_($this, var$1, cbggg_SpriteBatch__init_0());
    $this.$ownsBatch = 1;
},
cbgss_Stage__init_1 = () => {
    let var_0 = new cbgss_Stage();
    cbgss_Stage__init_0(var_0);
    return var_0;
},
cbgss_Stage__init_ = ($this, $viewport, $batch) => {
    cbg_InputAdapter__init_($this);
    $this.$tempCoords = cbgm_Vector2__init_();
    $this.$pointerOverActors = $rt_createArray(cbgss_Actor, 20);
    $this.$pointerTouched = $rt_createBooleanArray(20);
    $this.$pointerScreenX = $rt_createIntArray(20);
    $this.$pointerScreenY = $rt_createIntArray(20);
    $this.$touchFocuses = cbgu_SnapshotArray__init_1(1, 4, cbgss_Stage$_init_$lambda$_2_0__init_0());
    $this.$actionsRequestRendering = 1;
    cbgssu_Table$Debug_$callClinit();
    $this.$debugTableUnderMouse = cbgssu_Table$Debug_none;
    $this.$debugColor = cbgg_Color__init_0(0.0, 1.0, 0.0, 0.8500000238418579);
    if ($viewport === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(749)));
    if ($batch === null)
        $rt_throw(jl_IllegalArgumentException__init_($rt_s(750)));
    $this.$viewport = $viewport;
    $this.$batch0 = $batch;
    $this.$root = cbgss_Group__init_0();
    $this.$root.$setStage($this);
    $viewport.$update4(cbg_Gdx_graphics.$getWidth0(), cbg_Gdx_graphics.$getHeight0(), 1);
},
cbgss_Stage__init_2 = (var_0, var_1) => {
    let var_2 = new cbgss_Stage();
    cbgss_Stage__init_(var_2, var_0, var_1);
    return var_2;
},
cbgss_Stage_draw = $this => {
    let $camera, $batch;
    $camera = $this.$viewport.$getCamera();
    $camera.$update0();
    if (!$this.$root.$isVisible())
        return;
    $batch = $this.$batch0;
    $batch.$setProjectionMatrix($camera.$combined);
    $batch.$begin();
    $this.$root.$draw($batch, 1.0);
    $batch.$end();
    if (cbgss_Stage_debug)
        cbgss_Stage_drawDebug($this);
},
cbgss_Stage_drawDebug = $this => {
    let var$1, $actor;
    if ($this.$debugShapes === null) {
        $this.$debugShapes = cbggg_ShapeRenderer__init_2();
        $this.$debugShapes.$setAutoShapeType(1);
    }
    a: {
        if (!$this.$debugUnderMouse && !$this.$debugParentUnderMouse) {
            var$1 = $this.$debugTableUnderMouse;
            cbgssu_Table$Debug_$callClinit();
            if (var$1 === cbgssu_Table$Debug_none) {
                if (!$this.$debugAll1)
                    break a;
                $this.$root.$debugAll();
                break a;
            }
        }
        $this.$screenToStageCoordinates($this.$tempCoords.$set2(cbg_Gdx_input.$getX0(), cbg_Gdx_input.$getY0()));
        $actor = $this.$hit($this.$tempCoords.$x0, $this.$tempCoords.$y0, 1);
        if ($actor === null)
            return;
        if ($this.$debugParentUnderMouse && $actor.$parent0 !== null)
            $actor = $actor.$parent0;
        var$1 = $this.$debugTableUnderMouse;
        cbgssu_Table$Debug_$callClinit();
        if (var$1 === cbgssu_Table$Debug_none)
            $actor.$setDebug(1);
        else {
            b: {
                while (true) {
                    if ($actor === null)
                        break b;
                    if ($actor instanceof cbgssu_Table)
                        break;
                    $actor = $actor.$parent0;
                }
            }
            if ($actor === null)
                return;
            $actor.$debug($this.$debugTableUnderMouse);
        }
        if ($this.$debugAll1 && $actor instanceof cbgss_Group)
            $actor.$debugAll();
        cbgss_Stage_disableDebug($this, $this.$root, $actor);
    }
    cbg_Gdx_gl.$glEnable(3042);
    $this.$debugShapes.$setProjectionMatrix(($this.$viewport.$getCamera()).$combined);
    $this.$debugShapes.$begin();
    $this.$root.$drawDebug($this.$debugShapes);
    $this.$debugShapes.$end();
    cbg_Gdx_gl.$glDisable(3042);
},
cbgss_Stage_disableDebug = ($this, $actor, $except) => {
    let $children, $i, $n;
    if ($actor === $except)
        return;
    a: {
        $actor.$setDebug(0);
        if ($actor instanceof cbgss_Group) {
            $children = $actor.$children0;
            $i = 0;
            $n = $children.$size0;
            while (true) {
                if ($i >= $n)
                    break a;
                cbgss_Stage_disableDebug($this, $children.$get($i), $except);
                $i = $i + 1 | 0;
            }
        }
    }
},
cbgss_Stage_act = $this => {
    $this.$act0(jl_Math_min0(cbg_Gdx_graphics.$getDeltaTime(), 0.03333333507180214));
},
cbgss_Stage_act0 = ($this, $delta) => {
    let $pointer, $n, $overLast, $type;
    $pointer = 0;
    $n = $this.$pointerOverActors.data.length;
    while ($pointer < $n) {
        $overLast = $this.$pointerOverActors.data[$pointer];
        if ($this.$pointerTouched.data[$pointer])
            $this.$pointerOverActors.data[$pointer] = cbgss_Stage_fireEnterAndExit($this, $overLast, $this.$pointerScreenX.data[$pointer], $this.$pointerScreenY.data[$pointer], $pointer);
        else if ($overLast !== null) {
            $this.$pointerOverActors.data[$pointer] = null;
            cbgss_Stage_fireExit($this, $overLast, $this.$pointerScreenX.data[$pointer], $this.$pointerScreenY.data[$pointer], $pointer);
        }
        $pointer = $pointer + 1 | 0;
    }
    $type = cbg_Gdx_app.$getType1();
    cbg_Application$ApplicationType_$callClinit();
    if (!($type !== cbg_Application$ApplicationType_Desktop && $type !== cbg_Application$ApplicationType_Applet && $type !== cbg_Application$ApplicationType_WebGL))
        $this.$mouseOverActor = cbgss_Stage_fireEnterAndExit($this, $this.$mouseOverActor, $this.$mouseScreenX, $this.$mouseScreenY, (-1));
    $this.$root.$act0($delta);
},
cbgss_Stage_fireEnterAndExit = ($this, $overLast, $screenX, $screenY, $pointer) => {
    let $over, $event;
    $this.$screenToStageCoordinates($this.$tempCoords.$set2($screenX, $screenY));
    $over = $this.$hit($this.$tempCoords.$x0, $this.$tempCoords.$y0, 1);
    if ($over === $overLast)
        return $overLast;
    if ($overLast !== null) {
        $event = cbgu_Pools_obtain(cbgss_Stage$fireEnterAndExit$lambda$_8_0__init_0());
        cbgss_InputEvent$Type_$callClinit();
        $event.$setType0(cbgss_InputEvent$Type_exit);
        $event.$setStage($this);
        $event.$setStageX($this.$tempCoords.$x0);
        $event.$setStageY($this.$tempCoords.$y0);
        $event.$setPointer($pointer);
        $event.$setRelatedActor($over);
        $overLast.$fire0($event);
        cbgu_Pools_free($event);
    }
    if ($over !== null) {
        $event = cbgu_Pools_obtain(cbgss_Stage$fireEnterAndExit$lambda$_8_1__init_0());
        cbgss_InputEvent$Type_$callClinit();
        $event.$setType0(cbgss_InputEvent$Type_enter);
        $event.$setStage($this);
        $event.$setStageX($this.$tempCoords.$x0);
        $event.$setStageY($this.$tempCoords.$y0);
        $event.$setPointer($pointer);
        $event.$setRelatedActor($overLast);
        $over.$fire0($event);
        cbgu_Pools_free($event);
    }
    return $over;
},
cbgss_Stage_fireExit = ($this, $actor, $screenX, $screenY, $pointer) => {
    let $event;
    $this.$screenToStageCoordinates($this.$tempCoords.$set2($screenX, $screenY));
    $event = cbgu_Pools_obtain(cbgss_Stage$fireExit$lambda$_9_0__init_0());
    cbgss_InputEvent$Type_$callClinit();
    $event.$setType0(cbgss_InputEvent$Type_exit);
    $event.$setStage($this);
    $event.$setStageX($this.$tempCoords.$x0);
    $event.$setStageY($this.$tempCoords.$y0);
    $event.$setPointer($pointer);
    $event.$setRelatedActor($actor);
    $actor.$fire0($event);
    cbgu_Pools_free($event);
},
cbgss_Stage_cancelTouchFocus0 = ($this, $listenerActor) => {
    let $event, $touchFocuses, $items, $i, $n, $focus;
    $event = null;
    $touchFocuses = $this.$touchFocuses;
    $items = $touchFocuses.$begin0();
    $i = 0;
    $n = $touchFocuses.$size0;
    while ($i < $n) {
        $focus = $items.data[$i];
        if ($focus.$listenerActor === $listenerActor && $touchFocuses.$removeValue($focus, 1)) {
            if ($event === null) {
                $event = cbgu_Pools_obtain(cbgss_Stage$cancelTouchFocus$lambda$_21_0__init_0());
                cbgss_InputEvent$Type_$callClinit();
                $event.$setType0(cbgss_InputEvent$Type_touchUp);
                $event.$setStage($this);
                $event.$setStageX((-2.147483648E9));
                $event.$setStageY((-2.147483648E9));
            }
            $event.$setTarget($focus.$target0);
            $event.$setListenerActor($focus.$listenerActor);
            $event.$setPointer($focus.$pointer);
            $event.$setButton($focus.$button1);
            $focus.$listener0.$handle($event);
        }
        $i = $i + 1 | 0;
    }
    $touchFocuses.$end();
    if ($event !== null)
        cbgu_Pools_free($event);
},
cbgss_Stage_cancelTouchFocus = $this => {
    $this.$cancelTouchFocusExcept(null, null);
},
cbgss_Stage_cancelTouchFocusExcept = ($this, $exceptListener, $exceptActor) => {
    let $event, $touchFocuses, $items, $i, $n, $focus;
    $event = cbgu_Pools_obtain(cbgss_Stage$cancelTouchFocusExcept$lambda$_23_0__init_0());
    cbgss_InputEvent$Type_$callClinit();
    $event.$setType0(cbgss_InputEvent$Type_touchUp);
    $event.$setStage($this);
    $event.$setStageX((-2.147483648E9));
    $event.$setStageY((-2.147483648E9));
    $touchFocuses = $this.$touchFocuses;
    $items = $touchFocuses.$begin0();
    $i = 0;
    $n = $touchFocuses.$size0;
    while ($i < $n) {
        $focus = $items.data[$i];
        if (!($focus.$listener0 === $exceptListener && $focus.$listenerActor === $exceptActor) && $touchFocuses.$removeValue($focus, 1)) {
            $event.$setTarget($focus.$target0);
            $event.$setListenerActor($focus.$listenerActor);
            $event.$setPointer($focus.$pointer);
            $event.$setButton($focus.$button1);
            $focus.$listener0.$handle($event);
        }
        $i = $i + 1 | 0;
    }
    $touchFocuses.$end();
    cbgu_Pools_free($event);
},
cbgss_Stage_addActor = ($this, $actor) => {
    $this.$root.$addActor($actor);
},
cbgss_Stage_actorRemoved = ($this, $actor) => {
    let $pointer, $n;
    $pointer = 0;
    $n = $this.$pointerOverActors.data.length;
    while ($pointer < $n) {
        if ($actor === $this.$pointerOverActors.data[$pointer]) {
            $this.$pointerOverActors.data[$pointer] = null;
            cbgss_Stage_fireExit($this, $actor, $this.$pointerScreenX.data[$pointer], $this.$pointerScreenY.data[$pointer], $pointer);
        }
        $pointer = $pointer + 1 | 0;
    }
    if ($actor === $this.$mouseOverActor) {
        $this.$mouseOverActor = null;
        cbgss_Stage_fireExit($this, $actor, $this.$mouseScreenX, $this.$mouseScreenY, (-1));
    }
},
cbgss_Stage_clear = $this => {
    $this.$unfocusAll();
    $this.$root.$clear();
},
cbgss_Stage_unfocusAll = $this => {
    $this.$setScrollFocus(null);
    $this.$setKeyboardFocus(null);
    $this.$cancelTouchFocus();
},
cbgss_Stage_unfocus = ($this, $actor) => {
    $this.$cancelTouchFocus0($actor);
    if ($this.$scrollFocus !== null && $this.$scrollFocus.$isDescendantOf($actor))
        $this.$setScrollFocus(null);
    if ($this.$keyboardFocus !== null && $this.$keyboardFocus.$isDescendantOf($actor))
        $this.$setKeyboardFocus(null);
},
cbgss_Stage_setKeyboardFocus = ($this, $actor) => {
    let $event, $oldKeyboardFocus, $success;
    if ($this.$keyboardFocus === $actor)
        return 1;
    $event = cbgu_Pools_obtain(cbgss_Stage$setKeyboardFocus$lambda$_35_0__init_0());
    $event.$setStage($this);
    cbgssu_FocusListener$FocusEvent$Type_$callClinit();
    $event.$setType1(cbgssu_FocusListener$FocusEvent$Type_keyboard);
    $oldKeyboardFocus = $this.$keyboardFocus;
    if ($oldKeyboardFocus !== null) {
        $event.$setFocused(0);
        $event.$setRelatedActor($actor);
        $oldKeyboardFocus.$fire0($event);
    }
    $success = $event.$isCancelled() ? 0 : 1;
    if ($success) {
        $this.$keyboardFocus = $actor;
        if ($actor !== null) {
            $event.$setFocused(1);
            $event.$setRelatedActor($oldKeyboardFocus);
            $actor.$fire0($event);
            $success = $event.$isCancelled() ? 0 : 1;
            if (!$success)
                $this.$keyboardFocus = $oldKeyboardFocus;
        }
    }
    cbgu_Pools_free($event);
    return $success;
},
cbgss_Stage_setScrollFocus = ($this, $actor) => {
    let $event, $oldScrollFocus, $success;
    if ($this.$scrollFocus === $actor)
        return 1;
    $event = cbgu_Pools_obtain(cbgss_Stage$setScrollFocus$lambda$_37_0__init_0());
    $event.$setStage($this);
    cbgssu_FocusListener$FocusEvent$Type_$callClinit();
    $event.$setType1(cbgssu_FocusListener$FocusEvent$Type_scroll);
    $oldScrollFocus = $this.$scrollFocus;
    if ($oldScrollFocus !== null) {
        $event.$setFocused(0);
        $event.$setRelatedActor($actor);
        $oldScrollFocus.$fire0($event);
    }
    $success = $event.$isCancelled() ? 0 : 1;
    if ($success) {
        $this.$scrollFocus = $actor;
        if ($actor !== null) {
            $event.$setFocused(1);
            $event.$setRelatedActor($oldScrollFocus);
            $actor.$fire0($event);
            $success = $event.$isCancelled() ? 0 : 1;
            if (!$success)
                $this.$scrollFocus = $oldScrollFocus;
        }
    }
    cbgu_Pools_free($event);
    return $success;
},
cbgss_Stage_getViewport = $this => {
    return $this.$viewport;
},
cbgss_Stage_setViewport = ($this, $viewport) => {
    $this.$viewport = $viewport;
},
cbgss_Stage_getWidth = $this => {
    return $this.$viewport.$getWorldWidth();
},
cbgss_Stage_getHeight = $this => {
    return $this.$viewport.$getWorldHeight();
},
cbgss_Stage_getRoot = $this => {
    return $this.$root;
},
cbgss_Stage_hit = ($this, $stageX, $stageY, $touchable) => {
    $this.$root.$parentToLocalCoordinates($this.$tempCoords.$set2($stageX, $stageY));
    return $this.$root.$hit($this.$tempCoords.$x0, $this.$tempCoords.$y0, $touchable);
},
cbgss_Stage_screenToStageCoordinates = ($this, $screenCoords) => {
    $this.$viewport.$unproject0($screenCoords);
    return $screenCoords;
},
cbgss_Stage_calculateScissors = ($this, $localRect, $scissorRect) => {
    let $transformMatrix;
    $transformMatrix = $this.$debugShapes !== null && $this.$debugShapes.$isDrawing() ? $this.$debugShapes.$getTransformMatrix() : $this.$batch0.$getTransformMatrix();
    $this.$viewport.$calculateScissors1($transformMatrix, $localRect, $scissorRect);
},
cbgss_Stage_getActionsRequestRendering = $this => {
    return $this.$actionsRequestRendering;
},
cbgss_Stage_getDebugColor = $this => {
    return $this.$debugColor;
},
cbgss_Stage_dispose = $this => {
    $this.$clear();
    if ($this.$ownsBatch)
        $this.$batch0.$dispose();
    if ($this.$debugShapes !== null)
        $this.$debugShapes.$dispose();
},
cbgss_Stage_lambda$new$0 = $x$0 => {
    return $rt_createArray(cbgss_Stage$TouchFocus, $x$0);
},
jur_ReluctantAltQuantifierSet = $rt_classWithoutFields(jur_AltQuantifierSet),
jur_ReluctantAltQuantifierSet__init_ = ($this, $innerSet, $next, $type) => {
    jur_AltQuantifierSet__init_($this, $innerSet, $next, $type);
},
jur_ReluctantAltQuantifierSet__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new jur_ReluctantAltQuantifierSet();
    jur_ReluctantAltQuantifierSet__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
jur_ReluctantAltQuantifierSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $shift;
    $shift = $this.$next1.$matches($stringIndex, $testString, $matchResult);
    if ($shift >= 0)
        return $shift;
    return $this.$innerSet.$matches($stringIndex, $testString, $matchResult);
},
jur_AbstractCharClass$LazyJavaWhitespace = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaWhitespace__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaWhitespace__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaWhitespace();
    jur_AbstractCharClass$LazyJavaWhitespace__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaWhitespace_computeValue = $this => {
    return jur_AbstractCharClass$LazyJavaWhitespace$1__init_0($this);
};
function jur_Matcher$1() {
    let a = this; jl_Object.call(a);
    a.$grN = 0;
    a.$val$gr = 0;
    a.$this$026 = null;
}
let jur_Matcher$1__init_ = ($this, $this$0, var$2) => {
    $this.$this$026 = $this$0;
    $this.$val$gr = var$2;
    jl_Object__init_($this);
    $this.$grN = $this.$val$gr;
},
jur_Matcher$1__init_0 = (var_0, var_1) => {
    let var_2 = new jur_Matcher$1();
    jur_Matcher$1__init_(var_2, var_0, var_1);
    return var_2;
},
jur_Matcher$1_toString = $this => {
    return jur_Matcher_group($this.$this$026, $this.$grN);
};
function cbggg_Gdx2DPixmapNative() {
    let a = this; jl_Object.call(a);
    a.$basePtr = 0;
    a.$width4 = 0;
    a.$height5 = 0;
    a.$format = 0;
    a.$heapStartIndex = 0;
    a.$heapEndIndex = 0;
    a.$nativeData = null;
    a.$buffer5 = null;
}
let cbggg_Gdx2DPixmapNative__init_ = ($this, $encodedData, $offset, $len, $requestedFormat) => {
    jl_Object__init_($this);
    $this.$nativeData = cbggg_Gdx2DPixmapNative_loadNative$js_body$_26(otji_JS_wrap($encodedData), $offset, $len);
    cbggg_Gdx2DPixmapNative_updateNativeData($this);
    if ($requestedFormat && $requestedFormat != $this.$format)
        cbggg_Gdx2DPixmapNative_convert($this, $requestedFormat);
},
cbggg_Gdx2DPixmapNative__init_2 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbggg_Gdx2DPixmapNative();
    cbggg_Gdx2DPixmapNative__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbggg_Gdx2DPixmapNative__init_0 = ($this, $width, $height, $format) => {
    jl_Object__init_($this);
    $this.$nativeData = cbggg_Gdx2DPixmapNative_newPixmapNative$js_body$_27($width, $height, $format);
    cbggg_Gdx2DPixmapNative_updateNativeData($this);
},
cbggg_Gdx2DPixmapNative__init_1 = (var_0, var_1, var_2) => {
    let var_3 = new cbggg_Gdx2DPixmapNative();
    cbggg_Gdx2DPixmapNative__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbggg_Gdx2DPixmapNative_updateNativeData = $this => {
    $this.$basePtr = $this.$nativeData[0];
    $this.$width4 = $this.$nativeData[1];
    $this.$height5 = $this.$nativeData[2];
    $this.$format = $this.$nativeData[3];
    $this.$heapStartIndex = $this.$nativeData[4];
    $this.$heapEndIndex = $this.$nativeData[5];
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer($this);
},
cbggg_Gdx2DPixmapNative_copyHeapToBuffer = $this => {
    let $heapData, $length, var$3;
    $heapData = $this.$getHeapData(0);
    if ($this.$buffer5 === null) {
        $length = $heapData.length;
        $this.$buffer5 = jn_ByteBuffer_allocateDirect($length);
        var$3 = $this.$buffer5;
        jn_ByteOrder_$callClinit();
        jn_ByteBuffer_order(var$3, jn_ByteOrder_BIG_ENDIAN);
    }
    cgxgbtdt_TypedArrays_copy($heapData, $this.$buffer5);
},
cbggg_Gdx2DPixmapNative_convert = ($this, $requestedFormat) => {
    let $pixmap;
    $pixmap = cbggg_Gdx2DPixmapNative__init_1($this.$width4, $this.$height5, $requestedFormat);
    $pixmap.$setBlend(0);
    $pixmap.$drawPixmap1($this.$basePtr, 0, 0, 0, 0, $this.$width4, $this.$height5);
    $this.$dispose();
    $this.$basePtr = $pixmap.$basePtr;
    $this.$format = $pixmap.$format;
    $this.$width4 = $pixmap.$width4;
    $this.$height5 = $pixmap.$height5;
    $this.$nativeData = $pixmap.$nativeData;
    $this.$heapStartIndex = $pixmap.$heapStartIndex;
    $this.$heapEndIndex = $pixmap.$heapEndIndex;
},
cbggg_Gdx2DPixmapNative_dispose = $this => {
    Gdx.Gdx.prototype.g2d_free($this.$basePtr);
    if ($this.$buffer5 !== null) {
        otcin_Buffers_free($this.$buffer5);
        $this.$buffer5 = null;
    }
    $this.$nativeData = null;
},
cbggg_Gdx2DPixmapNative_clear = ($this, $color) => {
    Gdx.Gdx.prototype.g2d_clear($this.$basePtr, $color);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer($this);
},
cbggg_Gdx2DPixmapNative_drawPixmap0 = ($this, $basePtr, $srcX, $srcY, $dstX, $dstY, $width, $height) => {
    let var$8;
    var$8 = $this.$basePtr;
    Gdx.Gdx.prototype.g2d_draw_pixmap($basePtr, var$8, $srcX, $srcY, $width, $height, $dstX, $dstY, $width, $height);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer($this);
},
cbggg_Gdx2DPixmapNative_drawPixmap = ($this, $basePtr, $srcX, $srcY, $srcWidth, $srcHeight, $dstX, $dstY, $dstWidth, $dstHeight) => {
    let var$10;
    var$10 = $this.$basePtr;
    Gdx.Gdx.prototype.g2d_draw_pixmap($basePtr, var$10, $srcX, $srcY, $srcWidth, $srcHeight, $dstX, $dstY, $dstWidth, $dstHeight);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer($this);
},
cbggg_Gdx2DPixmapNative_setBlend = ($this, $blend) => {
    Gdx.Gdx.prototype.g2d_set_blend($this.$basePtr, $blend);
    cbggg_Gdx2DPixmapNative_copyHeapToBuffer($this);
},
cbggg_Gdx2DPixmapNative_getBuffer = $this => {
    return $this.$buffer5;
},
cbggg_Gdx2DPixmapNative_getHeapData = ($this, $shouldCopy) => {
    if (!$this.$heapStartIndex && !$this.$heapEndIndex)
        return null;
    return cbggg_Gdx2DPixmapNative_getHeapDataNative$js_body$_25(!!$shouldCopy, $this.$heapStartIndex, $this.$heapEndIndex);
},
cbggg_Gdx2DPixmapNative_getHeapDataNative$js_body$_25 = (var$1, var$2, var$3) => {
    var heapArray = Gdx.HEAP8.subarray(var$2, var$3);
    if (var$1) {
        var newArray = new Int8Array(heapArray);
        return newArray;
    }
    return heapArray;
},
cbggg_Gdx2DPixmapNative_loadNative$js_body$_26 = (var$1, var$2, var$3) => {
    var cBufferSize = var$1.length * Uint8Array.BYTES_PER_ELEMENT;
    var cBuffer = Gdx._malloc(cBufferSize);
    Gdx.writeArrayToMemory(var$1, cBuffer);
    var pixmap = Gdx.Gdx.prototype.g2d_load(cBuffer, var$2, var$3);
    Gdx._free(cBuffer);
    var pixels = Gdx.Gdx.prototype.g2d_get_pixels(pixmap);
    var pixmapAddr = Gdx.getPointer(pixmap);
    var format = pixmap.get_format();
    var width = pixmap.get_width();
    var height = pixmap.get_height();
    var bytesPerPixel = Gdx.Gdx.prototype.g2d_bytes_per_pixel(format);
    var bytesSize = width * height * bytesPerPixel;
    var startIndex = pixels;
    var endIndex = startIndex + bytesSize;
    var nativeData = new Int32Array(6);
    nativeData[0] = pixmapAddr;
    nativeData[1] = width;
    nativeData[2] = height;
    nativeData[3] = format;
    nativeData[4] = startIndex;
    nativeData[5] = endIndex;
    return nativeData;
},
cbggg_Gdx2DPixmapNative_newPixmapNative$js_body$_27 = (var$1, var$2, var$3) => {
    var pixmap = Gdx.Gdx.prototype.g2d_new(var$1, var$2, var$3);
    var pixels = Gdx.Gdx.prototype.g2d_get_pixels(pixmap);
    var pixmapAddr = Gdx.getPointer(pixmap);
    var var$3 = pixmap.get_format();
    var var$1 = pixmap.get_width();
    var var$2 = pixmap.get_height();
    var bytesPerPixel = Gdx.Gdx.prototype.g2d_bytes_per_pixel(var$3);
    var bytesSize = var$1 * var$2 * bytesPerPixel;
    var startIndex = pixels;
    var endIndex = startIndex + bytesSize;
    var nativeData = new Int32Array(6);
    nativeData[0] = pixmapAddr;
    nativeData[1] = var$1;
    nativeData[2] = var$2;
    nativeData[3] = var$3;
    nativeData[4] = startIndex;
    nativeData[5] = endIndex;
    return nativeData;
},
jl_NumberFormatException = $rt_classWithoutFields(jl_IllegalArgumentException),
jl_NumberFormatException__init_2 = $this => {
    jl_IllegalArgumentException__init_2($this);
},
jl_NumberFormatException__init_ = () => {
    let var_0 = new jl_NumberFormatException();
    jl_NumberFormatException__init_2(var_0);
    return var_0;
},
jl_NumberFormatException__init_0 = ($this, $message) => {
    jl_IllegalArgumentException__init_1($this, $message);
},
jl_NumberFormatException__init_1 = var_0 => {
    let var_1 = new jl_NumberFormatException();
    jl_NumberFormatException__init_0(var_1, var_0);
    return var_1;
};
function cgxgbt_TeaClipboard() {
    let a = this; jl_Object.call(a);
    a.$requestedWritePermissions = 0;
    a.$hasWritePermissions = 0;
    a.$writeHandler = null;
    a.$content = null;
}
let cgxgbt_TeaClipboard__init_ = $this => {
    let var$1, var$2;
    jl_Object__init_($this);
    $this.$requestedWritePermissions = 0;
    $this.$hasWritePermissions = 1;
    $this.$writeHandler = cgxgbt_TeaClipboard$ClipboardWriteHandler__init_0($this);
    $this.$content = $rt_s(60);
    var$1 = (cgxgbtdi_TeaWindow_get()).$getDocument();
    var$2 = cgxgbt_TeaClipboard$_init_$lambda$_0_0__init_0($this);
    var$1.addEventListener("copy", otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent"));
    var$1 = (cgxgbtdi_TeaWindow_get()).$getDocument();
    var$2 = cgxgbt_TeaClipboard$_init_$lambda$_0_1__init_0($this);
    var$1.addEventListener("cut", otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent"));
    var$1 = (cgxgbtdi_TeaWindow_get()).$getDocument();
    var$2 = cgxgbt_TeaClipboard$_init_$lambda$_0_2__init_0($this);
    var$1.addEventListener("paste", otji_JS_function(otji_JSWrapper_unwrap(var$2), "handleEvent"));
},
cgxgbt_TeaClipboard__init_0 = () => {
    let var_0 = new cgxgbt_TeaClipboard();
    cgxgbt_TeaClipboard__init_(var_0);
    return var_0;
},
cgxgbt_TeaClipboard_lambda$new$2 = ($this, $evt) => {
    let $event, $clipboardData;
    $event = $evt;
    $clipboardData = $event.clipboardData;
    if ($clipboardData !== null)
        $this.$content = $rt_str($clipboardData.getData("text/plain"));
    $evt.preventDefault();
},
cgxgbt_TeaClipboard_lambda$new$1 = ($this, $evt) => {
    let $event, $clipboardData;
    $event = $evt;
    $clipboardData = $event.clipboardData;
    if ($clipboardData !== null)
        $clipboardData.setData("text/plain", $rt_ustr($this.$content));
    $evt.preventDefault();
},
cgxgbt_TeaClipboard_lambda$new$0 = ($this, $evt) => {
    let $event, $clipboardData;
    $event = $evt;
    $clipboardData = $event.clipboardData;
    if ($clipboardData !== null)
        $clipboardData.setData("text/plain", $rt_ustr($this.$content));
    $evt.preventDefault();
},
cgxgbt_TeaClipboard_setContentNATIVE$js_body$_4 = var$1 => {
    if ("clipboard" in navigator) {
        navigator.clipboard.writeText(var$1);
    }
};
function cbgu_Array$ArrayIterator() {
    let a = this; jl_Object.call(a);
    a.$array4 = null;
    a.$allowRemove0 = 0;
    a.$index4 = 0;
    a.$valid = 0;
}
let cbgu_Array$ArrayIterator__init_0 = ($this, var$1, $allowRemove) => {
    jl_Object__init_($this);
    $this.$valid = 1;
    $this.$array4 = var$1;
    $this.$allowRemove0 = $allowRemove;
},
cbgu_Array$ArrayIterator__init_ = (var_0, var_1) => {
    let var_2 = new cbgu_Array$ArrayIterator();
    cbgu_Array$ArrayIterator__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgu_Array$ArrayIterator_hasNext = $this => {
    if (!$this.$valid)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(751)));
    return $this.$index4 >= $this.$array4.$size0 ? 0 : 1;
},
cbgu_Array$ArrayIterator_next = $this => {
    let var$1, var$2;
    if ($this.$index4 >= $this.$array4.$size0)
        $rt_throw(ju_NoSuchElementException__init_2(jl_String_valueOf0($this.$index4)));
    if (!$this.$valid)
        $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(751)));
    var$1 = $this.$array4.$items.data;
    var$2 = $this.$index4;
    $this.$index4 = var$2 + 1 | 0;
    return var$1[var$2];
},
jur_IntArrHash = $rt_classWithoutFields(),
jur_AbstractCharClass$LazyJavaMirrored = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaMirrored__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaMirrored__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaMirrored();
    jur_AbstractCharClass$LazyJavaMirrored__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaMirrored_computeValue = $this => {
    return jur_AbstractCharClass$LazyJavaMirrored$1__init_0($this);
},
jur_AbstractCharClass$LazyJavaISOControl = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazyJavaISOControl__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazyJavaISOControl__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazyJavaISOControl();
    jur_AbstractCharClass$LazyJavaISOControl__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazyJavaISOControl_computeValue = $this => {
    return jur_AbstractCharClass$LazyJavaISOControl$1__init_0($this);
};
function cbgggu_MeshPartBuilder$VertexInfo() {
    let a = this; jl_Object.call(a);
    a.$position12 = null;
    a.$hasPosition = 0;
    a.$normal0 = null;
    a.$hasNormal = 0;
    a.$color7 = null;
    a.$hasColor = 0;
    a.$uv = null;
    a.$hasUV = 0;
}
let cbgggu_MeshPartBuilder$VertexInfo__init_0 = $this => {
    jl_Object__init_($this);
    $this.$position12 = cbgm_Vector3__init_();
    $this.$normal0 = cbgm_Vector3__init_0(0.0, 1.0, 0.0);
    $this.$color7 = cbgg_Color__init_0(1.0, 1.0, 1.0, 1.0);
    $this.$uv = cbgm_Vector2__init_();
},
cbgggu_MeshPartBuilder$VertexInfo__init_ = () => {
    let var_0 = new cbgggu_MeshPartBuilder$VertexInfo();
    cbgggu_MeshPartBuilder$VertexInfo__init_0(var_0);
    return var_0;
},
cbgggu_MeshPartBuilder$VertexInfo_reset = $this => {
    $this.$position12.$set8(0.0, 0.0, 0.0);
    $this.$normal0.$set8(0.0, 1.0, 0.0);
    $this.$color7.$set12(1.0, 1.0, 1.0, 1.0);
    $this.$uv.$set2(0.0, 0.0);
},
cbgggu_MeshPartBuilder$VertexInfo_set = ($this, $pos, $nor, $col, $uv) => {
    $this.$reset2();
    $this.$hasPosition = $pos === null ? 0 : 1;
    if ($this.$hasPosition)
        $this.$position12.$set7($pos);
    $this.$hasNormal = $nor === null ? 0 : 1;
    if ($this.$hasNormal)
        $this.$normal0.$set7($nor);
    $this.$hasColor = $col === null ? 0 : 1;
    if ($this.$hasColor)
        $this.$color7.$set11($col);
    $this.$hasUV = $uv === null ? 0 : 1;
    if ($this.$hasUV)
        $this.$uv.$set5($uv);
    return $this;
},
cbgggu_MeshPartBuilder$VertexInfo_setUV = ($this, $u, $v) => {
    $this.$uv.$set2($u, $v);
    $this.$hasUV = 1;
    return $this;
};
function cbgggm_NodeKeyframe() {
    let a = this; jl_Object.call(a);
    a.$keytime = 0.0;
    a.$value3 = null;
}
let cbgggm_NodeKeyframe__init_0 = ($this, $t, $v) => {
    jl_Object__init_($this);
    $this.$keytime = $t;
    $this.$value3 = $v;
},
cbgggm_NodeKeyframe__init_ = (var_0, var_1) => {
    let var_2 = new cbgggm_NodeKeyframe();
    cbgggm_NodeKeyframe__init_0(var_2, var_0, var_1);
    return var_2;
};
function jur_HighSurrogateCharSet() {
    jur_JointSet.call(this);
    this.$high = 0;
}
let jur_HighSurrogateCharSet__init_ = ($this, $high) => {
    jur_JointSet__init_($this);
    $this.$high = $high;
},
jur_HighSurrogateCharSet__init_0 = var_0 => {
    let var_1 = new jur_HighSurrogateCharSet();
    jur_HighSurrogateCharSet__init_(var_1, var_0);
    return var_1;
},
jur_HighSurrogateCharSet_setNext = ($this, $next) => {
    $this.$next1 = $next;
},
jur_HighSurrogateCharSet_matches = ($this, $stringIndex, $testString, $matchResult) => {
    let $strLength, var$5, var$6, $high, $low;
    $strLength = $matchResult.$getRightBound();
    var$5 = $stringIndex + 1 | 0;
    var$6 = $rt_compare(var$5, $strLength);
    if (var$6 > 0) {
        $matchResult.$hitEnd = 1;
        return (-1);
    }
    $high = $testString.$charAt($stringIndex);
    if (var$6 < 0) {
        $low = $testString.$charAt(var$5);
        if (jl_Character_isLowSurrogate($low))
            return (-1);
    }
    if ($this.$high != $high)
        return (-1);
    return $this.$next1.$matches(var$5, $testString, $matchResult);
},
jur_HighSurrogateCharSet_find = ($this, $strIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$6;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_find($this, $strIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    while (true) {
        if ($strIndex >= $strLength)
            return (-1);
        var$6 = $testStr.$indexOf0($this.$high, $strIndex);
        if (var$6 < 0)
            return (-1);
        $strIndex = var$6 + 1 | 0;
        if ($strIndex < $strLength && jl_Character_isLowSurrogate($testStr.$charAt($strIndex))) {
            $strIndex = var$6 + 2 | 0;
            continue;
        }
        if ($this.$next1.$matches($strIndex, $testString, $matchResult) >= 0)
            break;
    }
    return var$6;
},
jur_HighSurrogateCharSet_findBack = ($this, $strIndex, $lastIndex, $testString, $matchResult) => {
    let $testStr, $strLength, var$7, var$8;
    if (!($testString instanceof jl_String))
        return jur_AbstractSet_findBack($this, $strIndex, $lastIndex, $testString, $matchResult);
    $testStr = $testString;
    $strLength = $matchResult.$getRightBound();
    a: {
        while (true) {
            if ($lastIndex < $strIndex)
                return (-1);
            var$7 = $testStr.$lastIndexOf1($this.$high, $lastIndex);
            if (var$7 < 0)
                break a;
            if (var$7 < $strIndex)
                break a;
            var$8 = var$7 + 1 | 0;
            if (var$8 < $strLength && jl_Character_isLowSurrogate($testStr.$charAt(var$8))) {
                $lastIndex = var$7 + (-1) | 0;
                continue;
            }
            if ($this.$next1.$matches(var$8, $testString, $matchResult) >= 0)
                break;
            $lastIndex = var$7 + (-1) | 0;
        }
        return var$7;
    }
    return (-1);
},
jur_HighSurrogateCharSet_getName = $this => {
    let var$1, var$2;
    var$1 = $this.$high;
    var$2 = jl_StringBuilder__init_();
    jl_StringBuilder_append1(var$2, var$1);
    return jl_StringBuilder_toString(var$2);
},
jur_HighSurrogateCharSet_first = ($this, $set) => {
    if ($set instanceof jur_CharSet)
        return 0;
    if ($set instanceof jur_RangeSet)
        return 0;
    if ($set instanceof jur_SupplRangeSet)
        return 0;
    if ($set instanceof jur_SupplCharSet)
        return 0;
    if ($set instanceof jur_LowSurrogateCharSet)
        return 0;
    if (!($set instanceof jur_HighSurrogateCharSet))
        return 1;
    return $set.$high != $this.$high ? 0 : 1;
},
jur_HighSurrogateCharSet_hasConsumed = ($this, $matchResult) => {
    return 1;
};
function cbgssu_Table$DebugRect() {
    cbgm_Rectangle.call(this);
    this.$color11 = null;
}
let cbgssu_Table$DebugRect_pool = null,
cbgssu_Table$DebugRect_$callClinit = () => {
    cbgssu_Table$DebugRect_$callClinit = $rt_eraseClinit(cbgssu_Table$DebugRect);
    cbgssu_Table$DebugRect__clinit_();
},
cbgssu_Table$DebugRect__init_ = $this => {
    cbgssu_Table$DebugRect_$callClinit();
    cbgm_Rectangle__init_0($this);
},
cbgssu_Table$DebugRect__init_0 = () => {
    let var_0 = new cbgssu_Table$DebugRect();
    cbgssu_Table$DebugRect__init_(var_0);
    return var_0;
},
cbgssu_Table$DebugRect__clinit_ = () => {
    cbgssu_Table$DebugRect_pool = cbgu_Pools_get(cbgssu_Table$DebugRect$_clinit_$lambda$_1_0__init_0());
};
function cgxgbta_TeaBlob() {
    let a = this; jl_Object.call(a);
    a.$response = null;
    a.$data11 = null;
}
let cgxgbta_TeaBlob__init_ = ($this, $response, $data) => {
    jl_Object__init_($this);
    $this.$data11 = $data;
    $this.$response = $response;
},
cgxgbta_TeaBlob__init_0 = (var_0, var_1) => {
    let var_2 = new cgxgbta_TeaBlob();
    cgxgbta_TeaBlob__init_(var_2, var_0, var_1);
    return var_2;
},
cgxgbta_TeaBlob_getData = $this => {
    return $this.$data11;
},
cbgm_Interpolation$ElasticIn = $rt_classWithoutFields(cbgm_Interpolation$Elastic),
cbgm_Interpolation$ElasticIn__init_ = ($this, $value, $power, $bounces, $scale) => {
    cbgm_Interpolation$Elastic__init_($this, $value, $power, $bounces, $scale);
},
cbgm_Interpolation$ElasticIn__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbgm_Interpolation$ElasticIn();
    cbgm_Interpolation$ElasticIn__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
};
function otpp_AsyncCallbackWrapper() {
    jl_Object.call(this);
    this.$realAsyncCallback = null;
}
let otpp_AsyncCallbackWrapper__init_ = ($this, $realAsyncCallback) => {
    jl_Object__init_($this);
    $this.$realAsyncCallback = $realAsyncCallback;
},
otpp_AsyncCallbackWrapper__init_0 = var_0 => {
    let var_1 = new otpp_AsyncCallbackWrapper();
    otpp_AsyncCallbackWrapper__init_(var_1, var_0);
    return var_1;
},
otpp_AsyncCallbackWrapper_create = $realAsyncCallback => {
    return otpp_AsyncCallbackWrapper__init_0($realAsyncCallback);
},
otpp_AsyncCallbackWrapper_complete = ($this, $result) => {
    $this.$realAsyncCallback.$complete($result);
},
otpp_AsyncCallbackWrapper_error = ($this, $e) => {
    $this.$realAsyncCallback.$error0($e);
};
function cbguv_ScalingViewport() {
    cbguv_Viewport.call(this);
    this.$scaling1 = null;
}
let cbguv_ScalingViewport__init_ = ($this, $scaling, $worldWidth, $worldHeight, $camera) => {
    cbguv_Viewport__init_($this);
    $this.$scaling1 = $scaling;
    $this.$setWorldSize($worldWidth, $worldHeight);
    $this.$setCamera($camera);
},
cbguv_ScalingViewport__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cbguv_ScalingViewport();
    cbguv_ScalingViewport__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cbguv_ScalingViewport_update = ($this, $screenWidth, $screenHeight, $centerCamera) => {
    let $scaled, $viewportWidth, $viewportHeight;
    $scaled = $this.$scaling1.$apply5($this.$getWorldWidth(), $this.$getWorldHeight(), $screenWidth, $screenHeight);
    $viewportWidth = jl_Math_round($scaled.$x0);
    $viewportHeight = jl_Math_round($scaled.$y0);
    $this.$setScreenBounds(($screenWidth - $viewportWidth | 0) / 2 | 0, ($screenHeight - $viewportHeight | 0) / 2 | 0, $viewportWidth, $viewportHeight);
    $this.$apply4($centerCamera);
};
function cbgu_IntArray() {
    let a = this; jl_Object.call(a);
    a.$items1 = null;
    a.$size1 = 0;
    a.$ordered0 = 0;
}
let cbgu_IntArray__init_2 = $this => {
    cbgu_IntArray__init_0($this, 1, 16);
},
cbgu_IntArray__init_ = () => {
    let var_0 = new cbgu_IntArray();
    cbgu_IntArray__init_2(var_0);
    return var_0;
},
cbgu_IntArray__init_3 = ($this, $capacity) => {
    cbgu_IntArray__init_0($this, 1, $capacity);
},
cbgu_IntArray__init_1 = var_0 => {
    let var_1 = new cbgu_IntArray();
    cbgu_IntArray__init_3(var_1, var_0);
    return var_1;
},
cbgu_IntArray__init_0 = ($this, $ordered, $capacity) => {
    jl_Object__init_($this);
    $this.$ordered0 = $ordered;
    $this.$items1 = $rt_createIntArray($capacity);
},
cbgu_IntArray__init_4 = (var_0, var_1) => {
    let var_2 = new cbgu_IntArray();
    cbgu_IntArray__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgu_IntArray_add = ($this, $value) => {
    let $items, var$3, var$4;
    $items = $this.$items1;
    var$3 = $items.data;
    if ($this.$size1 == var$3.length)
        $items = $this.$resize4(jl_Math_max(8, $this.$size1 * 1.75 | 0));
    var$3 = $items.data;
    var$4 = $this.$size1;
    $this.$size1 = var$4 + 1 | 0;
    var$3[var$4] = $value;
},
cbgu_IntArray_add0 = ($this, $value1, $value2) => {
    let $items, var$4;
    $items = $this.$items1;
    var$4 = $items.data;
    if (($this.$size1 + 1 | 0) >= var$4.length)
        $items = $this.$resize4(jl_Math_max(8, $this.$size1 * 1.75 | 0));
    var$4 = $items.data;
    var$4[$this.$size1] = $value1;
    var$4[$this.$size1 + 1 | 0] = $value2;
    $this.$size1 = $this.$size1 + 2 | 0;
},
cbgu_IntArray_get = ($this, $index) => {
    if ($index < $this.$size1)
        return $this.$items1.data[$index];
    $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(17))).$append2($index)).$append1($rt_s(18))).$append2($this.$size1)).$toString()));
},
cbgu_IntArray_set = ($this, $index, $value) => {
    if ($index < $this.$size1) {
        $this.$items1.data[$index] = $value;
        return;
    }
    $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(17))).$append2($index)).$append1($rt_s(18))).$append2($this.$size1)).$toString()));
},
cbgu_IntArray_insert = ($this, $index, $value) => {
    let $items, var$4;
    if ($index > $this.$size1)
        $rt_throw(jl_IndexOutOfBoundsException__init_0((((((jl_StringBuilder__init_()).$append1($rt_s(19))).$append2($index)).$append1($rt_s(20))).$append2($this.$size1)).$toString()));
    $items = $this.$items1;
    var$4 = $items.data;
    if ($this.$size1 == var$4.length)
        $items = $this.$resize4(jl_Math_max(8, $this.$size1 * 1.75 | 0));
    if (!$this.$ordered0) {
        var$4 = $items.data;
        var$4[$this.$size1] = var$4[$index];
    } else
        jl_System_fastArraycopy($items, $index, $items, $index + 1 | 0, $this.$size1 - $index | 0);
    var$4 = $items.data;
    $this.$size1 = $this.$size1 + 1 | 0;
    var$4[$index] = $value;
},
cbgu_IntArray_pop = $this => {
    let var$1, var$2;
    var$1 = $this.$items1.data;
    var$2 = $this.$size1 - 1 | 0;
    $this.$size1 = var$2;
    return var$1[var$2];
},
cbgu_IntArray_peek = $this => {
    return $this.$items1.data[$this.$size1 - 1 | 0];
},
cbgu_IntArray_clear = $this => {
    $this.$size1 = 0;
},
cbgu_IntArray_shrink = $this => {
    if ($this.$items1.data.length != $this.$size1)
        $this.$resize4($this.$size1);
    return $this.$items1;
},
cbgu_IntArray_ensureCapacity = ($this, $additionalCapacity) => {
    let $sizeNeeded;
    if ($additionalCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(24))).$append2($additionalCapacity)).$toString()));
    $sizeNeeded = $this.$size1 + $additionalCapacity | 0;
    if ($sizeNeeded > $this.$items1.data.length)
        $this.$resize4(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size1 * 1.75 | 0));
    return $this.$items1;
},
cbgu_IntArray_resize = ($this, $newSize) => {
    let $newItems, var$3, $items;
    $newItems = $rt_createIntArray($newSize);
    var$3 = $newItems.data;
    $items = $this.$items1;
    jl_System_fastArraycopy($items, 0, $newItems, 0, jl_Math_min($this.$size1, var$3.length));
    $this.$items1 = $newItems;
    return $newItems;
},
cbgu_IntArray_hashCode = $this => {
    let $items, $h, $i, $n, var$5;
    if (!$this.$ordered0)
        return jl_Object_hashCode($this);
    $items = $this.$items1;
    $h = 1;
    $i = 0;
    $n = $this.$size1;
    while ($i < $n) {
        var$5 = $items.data;
        $h = ($h * 31 | 0) + var$5[$i] | 0;
        $i = $i + 1 | 0;
    }
    return $h;
},
cbgu_IntArray_equals = ($this, $object) => {
    let $array, $n, $items1, $items2, $i, var$7;
    if ($object === $this)
        return 1;
    if (!$this.$ordered0)
        return 0;
    if (!($object instanceof cbgu_IntArray))
        return 0;
    $array = $object;
    if (!$array.$ordered0)
        return 0;
    $n = $this.$size1;
    if ($n != $array.$size1)
        return 0;
    $items1 = $this.$items1;
    $items2 = $array.$items1;
    $i = 0;
    while ($i < $n) {
        var$7 = $items2.data;
        if ($items1.data[$i] != var$7[$i])
            return 0;
        $i = $i + 1 | 0;
    }
    return 1;
},
cbgu_IntArray_toString = $this => {
    let $items, var$2, $buffer, $i;
    if (!$this.$size1)
        return $rt_s(26);
    $items = $this.$items1;
    var$2 = $items.data;
    $buffer = cbgu_StringBuilder__init_(32);
    $buffer.$append4(91);
    $buffer.$append30(var$2[0]);
    $i = 1;
    while ($i < $this.$size1) {
        $buffer.$append6($rt_s(27));
        $buffer.$append30(var$2[$i]);
        $i = $i + 1 | 0;
    }
    $buffer.$append4(93);
    return $buffer.$toString();
};
function cbgu_OrderedMap() {
    cbgu_ObjectMap.call(this);
    this.$keys0 = null;
}
let cbgu_OrderedMap__init_ = $this => {
    cbgu_ObjectMap__init_0($this);
    $this.$keys0 = cbgu_Array__init_();
},
cbgu_OrderedMap__init_0 = () => {
    let var_0 = new cbgu_OrderedMap();
    cbgu_OrderedMap__init_(var_0);
    return var_0;
},
cbgu_OrderedMap_put = ($this, $key, $value) => {
    let $i, $oldValue, var$5;
    $i = $this.$locateKey0($key);
    if ($i >= 0) {
        $oldValue = $this.$valueTable.data[$i];
        $this.$valueTable.data[$i] = $value;
        return $oldValue;
    }
    var$5 =  -($i + 1 | 0) | 0;
    $this.$keyTable.data[var$5] = $key;
    $this.$valueTable.data[var$5] = $value;
    $this.$keys0.$add1($key);
    var$5 = $this.$size8 + 1 | 0;
    $this.$size8 = var$5;
    if (var$5 >= $this.$threshold)
        cbgu_ObjectMap_resize($this, $this.$keyTable.data.length << 1);
    return null;
},
cbgu_OrderedMap_remove = ($this, $key) => {
    $this.$keys0.$removeValue($key, 0);
    return cbgu_ObjectMap_remove($this, $key);
};
function cbgggs_DefaultShader() {
    let a = this; cbgggs_BaseShader.call(a);
    a.$u_projTrans = 0;
    a.$u_viewTrans = 0;
    a.$u_projViewTrans = 0;
    a.$u_cameraPosition = 0;
    a.$u_cameraDirection = 0;
    a.$u_cameraUp = 0;
    a.$u_cameraNearFar = 0;
    a.$u_time = 0;
    a.$u_worldTrans = 0;
    a.$u_viewWorldTrans = 0;
    a.$u_projViewWorldTrans = 0;
    a.$u_normalMatrix = 0;
    a.$u_bones = 0;
    a.$u_shininess = 0;
    a.$u_opacity = 0;
    a.$u_diffuseColor = 0;
    a.$u_diffuseTexture = 0;
    a.$u_diffuseUVTransform = 0;
    a.$u_specularColor = 0;
    a.$u_specularTexture = 0;
    a.$u_specularUVTransform = 0;
    a.$u_emissiveColor = 0;
    a.$u_emissiveTexture = 0;
    a.$u_emissiveUVTransform = 0;
    a.$u_reflectionColor = 0;
    a.$u_reflectionTexture = 0;
    a.$u_reflectionUVTransform = 0;
    a.$u_normalTexture = 0;
    a.$u_normalUVTransform = 0;
    a.$u_ambientTexture = 0;
    a.$u_ambientUVTransform = 0;
    a.$u_alphaTest = 0;
    a.$u_ambientCubemap = 0;
    a.$u_environmentCubemap = 0;
    a.$u_dirLights0color = 0;
    a.$u_dirLights0direction = 0;
    a.$u_dirLights1color = 0;
    a.$u_pointLights0color = 0;
    a.$u_pointLights0position = 0;
    a.$u_pointLights0intensity = 0;
    a.$u_pointLights1color = 0;
    a.$u_spotLights0color = 0;
    a.$u_spotLights0position = 0;
    a.$u_spotLights0intensity = 0;
    a.$u_spotLights0direction = 0;
    a.$u_spotLights0cutoffAngle = 0;
    a.$u_spotLights0exponent = 0;
    a.$u_spotLights1color = 0;
    a.$u_fogColor = 0;
    a.$u_shadowMapProjViewTrans = 0;
    a.$u_shadowTexture = 0;
    a.$u_shadowPCFOffset = 0;
    a.$dirLightsLoc = 0;
    a.$dirLightsColorOffset = 0;
    a.$dirLightsDirectionOffset = 0;
    a.$dirLightsSize = 0;
    a.$pointLightsLoc = 0;
    a.$pointLightsColorOffset = 0;
    a.$pointLightsPositionOffset = 0;
    a.$pointLightsIntensityOffset = 0;
    a.$pointLightsSize = 0;
    a.$spotLightsLoc = 0;
    a.$spotLightsColorOffset = 0;
    a.$spotLightsPositionOffset = 0;
    a.$spotLightsDirectionOffset = 0;
    a.$spotLightsIntensityOffset = 0;
    a.$spotLightsCutoffAngleOffset = 0;
    a.$spotLightsExponentOffset = 0;
    a.$spotLightsSize = 0;
    a.$lighting = 0;
    a.$environmentCubemap = 0;
    a.$shadowMap0 = 0;
    a.$ambientCubemap = null;
    a.$directionalLights = null;
    a.$pointLights = null;
    a.$spotLights = null;
    a.$renderable = null;
    a.$attributesMask = Long_ZERO;
    a.$vertexMask = Long_ZERO;
    a.$textureCoordinates0 = 0;
    a.$boneWeightsLocations = null;
    a.$config0 = null;
    a.$normalMatrix = null;
    a.$time1 = 0.0;
    a.$lightsSet = 0;
    a.$tmpV11 = null;
}
let cbgggs_DefaultShader_defaultVertexShader = null,
cbgggs_DefaultShader_defaultFragmentShader = null,
cbgggs_DefaultShader_implementedFlags = Long_ZERO,
cbgggs_DefaultShader_defaultCullFace = 0,
cbgggs_DefaultShader_defaultDepthFunc = 0,
cbgggs_DefaultShader_optionalAttributes = Long_ZERO,
cbgggs_DefaultShader_tmpAttributes = null,
cbgggs_DefaultShader_$callClinit = () => {
    cbgggs_DefaultShader_$callClinit = $rt_eraseClinit(cbgggs_DefaultShader);
    cbgggs_DefaultShader__clinit_();
},
cbgggs_DefaultShader_getDefaultVertexShader = () => {
    cbgggs_DefaultShader_$callClinit();
    if (cbgggs_DefaultShader_defaultVertexShader === null)
        cbgggs_DefaultShader_defaultVertexShader = (cbg_Gdx_files.$classpath($rt_s(752))).$readString0();
    return cbgggs_DefaultShader_defaultVertexShader;
},
cbgggs_DefaultShader_getDefaultFragmentShader = () => {
    cbgggs_DefaultShader_$callClinit();
    if (cbgggs_DefaultShader_defaultFragmentShader === null)
        cbgggs_DefaultShader_defaultFragmentShader = (cbg_Gdx_files.$classpath($rt_s(753))).$readString0();
    return cbgggs_DefaultShader_defaultFragmentShader;
},
cbgggs_DefaultShader__init_2 = ($this, $renderable, $config) => {
    cbgggs_DefaultShader_$callClinit();
    cbgggs_DefaultShader__init_0($this, $renderable, $config, cbgggs_DefaultShader_createPrefix($renderable, $config));
},
cbgggs_DefaultShader__init_3 = (var_0, var_1) => {
    let var_2 = new cbgggs_DefaultShader();
    cbgggs_DefaultShader__init_2(var_2, var_0, var_1);
    return var_2;
},
cbgggs_DefaultShader__init_0 = ($this, $renderable, $config, $prefix) => {
    let var$4, var$5;
    cbgggs_DefaultShader_$callClinit();
    var$4 = $config.$vertexShader === null ? cbgggs_DefaultShader_getDefaultVertexShader() : $config.$vertexShader;
    var$5 = $config.$fragmentShader === null ? cbgggs_DefaultShader_getDefaultFragmentShader() : $config.$fragmentShader;
    cbgggs_DefaultShader__init_($this, $renderable, $config, $prefix, var$4, var$5);
},
cbgggs_DefaultShader__init_6 = (var_0, var_1, var_2) => {
    let var_3 = new cbgggs_DefaultShader();
    cbgggs_DefaultShader__init_0(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgggs_DefaultShader__init_ = ($this, $renderable, $config, $prefix, $vertexShader, $fragmentShader) => {
    cbgggs_DefaultShader_$callClinit();
    cbgggs_DefaultShader__init_1($this, $renderable, $config, cbggg_ShaderProgram__init_((((jl_StringBuilder__init_()).$append1($prefix)).$append1($vertexShader)).$toString(), (((jl_StringBuilder__init_()).$append1($prefix)).$append1($fragmentShader)).$toString()));
},
cbgggs_DefaultShader__init_5 = (var_0, var_1, var_2, var_3, var_4) => {
    let var_5 = new cbgggs_DefaultShader();
    cbgggs_DefaultShader__init_(var_5, var_0, var_1, var_2, var_3, var_4);
    return var_5;
},
cbgggs_DefaultShader__init_1 = ($this, $renderable, $config, $shaderProgram) => {
    let $attributes, var$5, var$6, $i, $boneWeights, var$9;
    cbgggs_DefaultShader_$callClinit();
    cbgggs_BaseShader__init_($this);
    $this.$u_dirLights0color = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(754)));
    $this.$u_dirLights0direction = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(755)));
    $this.$u_dirLights1color = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(756)));
    $this.$u_pointLights0color = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(757)));
    $this.$u_pointLights0position = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(758)));
    $this.$u_pointLights0intensity = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(759)));
    $this.$u_pointLights1color = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(760)));
    $this.$u_spotLights0color = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(761)));
    $this.$u_spotLights0position = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(762)));
    $this.$u_spotLights0intensity = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(763)));
    $this.$u_spotLights0direction = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(764)));
    $this.$u_spotLights0cutoffAngle = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(765)));
    $this.$u_spotLights0exponent = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(766)));
    $this.$u_spotLights1color = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(767)));
    $this.$u_fogColor = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(768)));
    $this.$u_shadowMapProjViewTrans = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(769)));
    $this.$u_shadowTexture = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(770)));
    $this.$u_shadowPCFOffset = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(771)));
    $this.$ambientCubemap = cbggge_AmbientCubemap__init_();
    $this.$normalMatrix = cbgm_Matrix3__init_();
    $this.$tmpV11 = cbgm_Vector3__init_();
    $attributes = cbgggs_DefaultShader_combineAttributes($renderable);
    $this.$config0 = $config;
    $this.$program = $shaderProgram;
    var$5 = $renderable.$environment === null ? 0 : 1;
    a: {
        b: {
            $this.$lighting = var$5;
            cbggga_CubemapAttribute_$callClinit();
            if (!cbggg_Attributes_has($attributes, cbggga_CubemapAttribute_EnvironmentMap)) {
                if (!$this.$lighting)
                    break b;
                var$6 = cbggga_CubemapAttribute_EnvironmentMap;
                if (!cbggg_Attributes_has($attributes, var$6))
                    break b;
            }
            var$5 = 1;
            break a;
        }
        var$5 = 0;
    }
    $this.$environmentCubemap = var$5;
    $this.$shadowMap0 = $this.$lighting && $renderable.$environment.$shadowMap !== null ? 1 : 0;
    $this.$renderable = $renderable;
    $this.$attributesMask = Long_or(cbggg_Attributes_getMask($attributes), cbgggs_DefaultShader_optionalAttributes);
    $this.$vertexMask = cbgg_VertexAttributes_getMaskWithSizePacked($renderable.$meshPart.$mesh.$getVertexAttributes());
    $this.$textureCoordinates0 = cbgg_VertexAttributes_getTextureCoordinates($renderable.$meshPart.$mesh.$getVertexAttributes());
    var$5 = $this.$lighting && $config.$numDirectionalLights > 0 ? $config.$numDirectionalLights : 0;
    $this.$directionalLights = $rt_createArray(cbggge_DirectionalLight, var$5);
    $i = 0;
    while ($i < $this.$directionalLights.data.length) {
        $this.$directionalLights.data[$i] = cbggge_DirectionalLight__init_();
        $i = $i + 1 | 0;
    }
    $this.$pointLights = $rt_createArray(cbggge_PointLight, $this.$lighting && $config.$numPointLights > 0 ? $config.$numPointLights : 0);
    $i = 0;
    while ($i < $this.$pointLights.data.length) {
        $this.$pointLights.data[$i] = cbggge_PointLight__init_0();
        $i = $i + 1 | 0;
    }
    $this.$spotLights = $rt_createArray(cbggge_SpotLight, $this.$lighting && $config.$numSpotLights > 0 ? $config.$numSpotLights : 0);
    $i = 0;
    while ($i < $this.$spotLights.data.length) {
        $this.$spotLights.data[$i] = cbggge_SpotLight__init_0();
        $i = $i + 1 | 0;
    }
    if (!$config.$ignoreUnimplemented && Long_ne(Long_and(cbgggs_DefaultShader_implementedFlags, $this.$attributesMask), $this.$attributesMask))
        $rt_throw(cbgu_GdxRuntimeException__init_(((((jl_StringBuilder__init_()).$append1($rt_s(772))).$append31($this.$attributesMask)).$append1($rt_s(486))).$toString()));
    if ($renderable.$bones !== null && $renderable.$bones.data.length > $config.$numBones)
        $rt_throw(cbgu_GdxRuntimeException__init_((((((jl_StringBuilder__init_()).$append1($rt_s(773))).$append2($renderable.$bones.data.length)).$append1($rt_s(774))).$append2($config.$numBones)).$toString()));
    $boneWeights = cbgg_VertexAttributes_getBoneWeights($renderable.$meshPart.$mesh.$getVertexAttributes());
    if ($boneWeights > $config.$numBoneWeights)
        $rt_throw(cbgu_GdxRuntimeException__init_((((((jl_StringBuilder__init_()).$append1($rt_s(775))).$append2($boneWeights)).$append1($rt_s(774))).$append2($config.$numBoneWeights)).$toString()));
    if ($renderable.$bones !== null)
        $this.$boneWeightsLocations = $rt_createIntArray($config.$numBoneWeights);
    cbgggs_DefaultShader$Inputs_$callClinit();
    var$9 = cbgggs_DefaultShader$Inputs_projTrans;
    cbgggs_DefaultShader$Setters_$callClinit();
    $this.$u_projTrans = $this.$register0(var$9, cbgggs_DefaultShader$Setters_projTrans);
    $this.$u_viewTrans = $this.$register0(cbgggs_DefaultShader$Inputs_viewTrans, cbgggs_DefaultShader$Setters_viewTrans);
    $this.$u_projViewTrans = $this.$register0(cbgggs_DefaultShader$Inputs_projViewTrans, cbgggs_DefaultShader$Setters_projViewTrans);
    $this.$u_cameraPosition = $this.$register0(cbgggs_DefaultShader$Inputs_cameraPosition, cbgggs_DefaultShader$Setters_cameraPosition);
    $this.$u_cameraDirection = $this.$register0(cbgggs_DefaultShader$Inputs_cameraDirection, cbgggs_DefaultShader$Setters_cameraDirection);
    $this.$u_cameraUp = $this.$register0(cbgggs_DefaultShader$Inputs_cameraUp, cbgggs_DefaultShader$Setters_cameraUp);
    $this.$u_cameraNearFar = $this.$register0(cbgggs_DefaultShader$Inputs_cameraNearFar, cbgggs_DefaultShader$Setters_cameraNearFar);
    $this.$u_time = $this.$register2(cbgggs_BaseShader$Uniform__init_($rt_s(776)));
    $this.$u_worldTrans = $this.$register0(cbgggs_DefaultShader$Inputs_worldTrans, cbgggs_DefaultShader$Setters_worldTrans);
    $this.$u_viewWorldTrans = $this.$register0(cbgggs_DefaultShader$Inputs_viewWorldTrans, cbgggs_DefaultShader$Setters_viewWorldTrans);
    $this.$u_projViewWorldTrans = $this.$register0(cbgggs_DefaultShader$Inputs_projViewWorldTrans, cbgggs_DefaultShader$Setters_projViewWorldTrans);
    $this.$u_normalMatrix = $this.$register0(cbgggs_DefaultShader$Inputs_normalMatrix, cbgggs_DefaultShader$Setters_normalMatrix);
    var$5 = $renderable.$bones !== null && $config.$numBones > 0 ? $this.$register0(cbgggs_DefaultShader$Inputs_bones, cbgggs_DefaultShader$Setters$Bones__init_0($config.$numBones)) : (-1);
    $this.$u_bones = var$5;
    $this.$u_shininess = $this.$register0(cbgggs_DefaultShader$Inputs_shininess, cbgggs_DefaultShader$Setters_shininess);
    $this.$u_opacity = $this.$register2(cbgggs_DefaultShader$Inputs_opacity);
    $this.$u_diffuseColor = $this.$register0(cbgggs_DefaultShader$Inputs_diffuseColor, cbgggs_DefaultShader$Setters_diffuseColor);
    $this.$u_diffuseTexture = $this.$register0(cbgggs_DefaultShader$Inputs_diffuseTexture, cbgggs_DefaultShader$Setters_diffuseTexture);
    $this.$u_diffuseUVTransform = $this.$register0(cbgggs_DefaultShader$Inputs_diffuseUVTransform, cbgggs_DefaultShader$Setters_diffuseUVTransform);
    $this.$u_specularColor = $this.$register0(cbgggs_DefaultShader$Inputs_specularColor, cbgggs_DefaultShader$Setters_specularColor);
    $this.$u_specularTexture = $this.$register0(cbgggs_DefaultShader$Inputs_specularTexture, cbgggs_DefaultShader$Setters_specularTexture);
    $this.$u_specularUVTransform = $this.$register0(cbgggs_DefaultShader$Inputs_specularUVTransform, cbgggs_DefaultShader$Setters_specularUVTransform);
    $this.$u_emissiveColor = $this.$register0(cbgggs_DefaultShader$Inputs_emissiveColor, cbgggs_DefaultShader$Setters_emissiveColor);
    $this.$u_emissiveTexture = $this.$register0(cbgggs_DefaultShader$Inputs_emissiveTexture, cbgggs_DefaultShader$Setters_emissiveTexture);
    $this.$u_emissiveUVTransform = $this.$register0(cbgggs_DefaultShader$Inputs_emissiveUVTransform, cbgggs_DefaultShader$Setters_emissiveUVTransform);
    $this.$u_reflectionColor = $this.$register0(cbgggs_DefaultShader$Inputs_reflectionColor, cbgggs_DefaultShader$Setters_reflectionColor);
    $this.$u_reflectionTexture = $this.$register0(cbgggs_DefaultShader$Inputs_reflectionTexture, cbgggs_DefaultShader$Setters_reflectionTexture);
    $this.$u_reflectionUVTransform = $this.$register0(cbgggs_DefaultShader$Inputs_reflectionUVTransform, cbgggs_DefaultShader$Setters_reflectionUVTransform);
    $this.$u_normalTexture = $this.$register0(cbgggs_DefaultShader$Inputs_normalTexture, cbgggs_DefaultShader$Setters_normalTexture);
    $this.$u_normalUVTransform = $this.$register0(cbgggs_DefaultShader$Inputs_normalUVTransform, cbgggs_DefaultShader$Setters_normalUVTransform);
    $this.$u_ambientTexture = $this.$register0(cbgggs_DefaultShader$Inputs_ambientTexture, cbgggs_DefaultShader$Setters_ambientTexture);
    $this.$u_ambientUVTransform = $this.$register0(cbgggs_DefaultShader$Inputs_ambientUVTransform, cbgggs_DefaultShader$Setters_ambientUVTransform);
    $this.$u_alphaTest = $this.$register2(cbgggs_DefaultShader$Inputs_alphaTest);
    var$5 = !$this.$lighting ? (-1) : $this.$register0(cbgggs_DefaultShader$Inputs_ambientCube, cbgggs_DefaultShader$Setters$ACubemap__init_0($config.$numDirectionalLights, $config.$numPointLights));
    $this.$u_ambientCubemap = var$5;
    $this.$u_environmentCubemap = !$this.$environmentCubemap ? (-1) : $this.$register0(cbgggs_DefaultShader$Inputs_environmentCubemap, cbgggs_DefaultShader$Setters_environmentCubemap);
},
cbgggs_DefaultShader__init_4 = (var_0, var_1, var_2) => {
    let var_3 = new cbgggs_DefaultShader();
    cbgggs_DefaultShader__init_1(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgggs_DefaultShader_init = $this => {
    let $program, $i;
    $program = $this.$program;
    $this.$program = null;
    $this.$init1($program, $this.$renderable);
    $this.$renderable = null;
    $this.$dirLightsLoc = cbgggs_BaseShader_loc($this, $this.$u_dirLights0color);
    $this.$dirLightsColorOffset = cbgggs_BaseShader_loc($this, $this.$u_dirLights0color) - $this.$dirLightsLoc | 0;
    $this.$dirLightsDirectionOffset = cbgggs_BaseShader_loc($this, $this.$u_dirLights0direction) - $this.$dirLightsLoc | 0;
    $this.$dirLightsSize = cbgggs_BaseShader_loc($this, $this.$u_dirLights1color) - $this.$dirLightsLoc | 0;
    if ($this.$dirLightsSize < 0)
        $this.$dirLightsSize = 0;
    $this.$pointLightsLoc = cbgggs_BaseShader_loc($this, $this.$u_pointLights0color);
    $this.$pointLightsColorOffset = cbgggs_BaseShader_loc($this, $this.$u_pointLights0color) - $this.$pointLightsLoc | 0;
    $this.$pointLightsPositionOffset = cbgggs_BaseShader_loc($this, $this.$u_pointLights0position) - $this.$pointLightsLoc | 0;
    $this.$pointLightsIntensityOffset = !cbgggs_BaseShader_has($this, $this.$u_pointLights0intensity) ? (-1) : cbgggs_BaseShader_loc($this, $this.$u_pointLights0intensity) - $this.$pointLightsLoc | 0;
    $this.$pointLightsSize = cbgggs_BaseShader_loc($this, $this.$u_pointLights1color) - $this.$pointLightsLoc | 0;
    if ($this.$pointLightsSize < 0)
        $this.$pointLightsSize = 0;
    $this.$spotLightsLoc = cbgggs_BaseShader_loc($this, $this.$u_spotLights0color);
    $this.$spotLightsColorOffset = cbgggs_BaseShader_loc($this, $this.$u_spotLights0color) - $this.$spotLightsLoc | 0;
    $this.$spotLightsPositionOffset = cbgggs_BaseShader_loc($this, $this.$u_spotLights0position) - $this.$spotLightsLoc | 0;
    $this.$spotLightsDirectionOffset = cbgggs_BaseShader_loc($this, $this.$u_spotLights0direction) - $this.$spotLightsLoc | 0;
    $this.$spotLightsIntensityOffset = !cbgggs_BaseShader_has($this, $this.$u_spotLights0intensity) ? (-1) : cbgggs_BaseShader_loc($this, $this.$u_spotLights0intensity) - $this.$spotLightsLoc | 0;
    $this.$spotLightsCutoffAngleOffset = cbgggs_BaseShader_loc($this, $this.$u_spotLights0cutoffAngle) - $this.$spotLightsLoc | 0;
    $this.$spotLightsExponentOffset = cbgggs_BaseShader_loc($this, $this.$u_spotLights0exponent) - $this.$spotLightsLoc | 0;
    $this.$spotLightsSize = cbgggs_BaseShader_loc($this, $this.$u_spotLights1color) - $this.$spotLightsLoc | 0;
    if ($this.$spotLightsSize < 0)
        $this.$spotLightsSize = 0;
    a: {
        if ($this.$boneWeightsLocations !== null) {
            $i = 0;
            while (true) {
                if ($i >= $this.$boneWeightsLocations.data.length)
                    break a;
                $this.$boneWeightsLocations.data[$i] = $program.$getAttributeLocation((((jl_StringBuilder__init_()).$append1($rt_s(777))).$append2($i)).$toString());
                $i = $i + 1 | 0;
            }
        }
    }
},
cbgggs_DefaultShader_and = ($mask, $flag) => {
    cbgggs_DefaultShader_$callClinit();
    return Long_ne(Long_and($mask, $flag), $flag) ? 0 : 1;
},
cbgggs_DefaultShader_or = ($mask, $flag) => {
    cbgggs_DefaultShader_$callClinit();
    return Long_eq(Long_and($mask, $flag), Long_ZERO) ? 0 : 1;
},
cbgggs_DefaultShader_combineAttributes = $renderable => {
    cbgggs_DefaultShader_$callClinit();
    cbgggs_DefaultShader_tmpAttributes.$clear();
    if ($renderable.$environment !== null)
        cbggg_Attributes_set0(cbgggs_DefaultShader_tmpAttributes, $renderable.$environment);
    if ($renderable.$material !== null)
        cbggg_Attributes_set0(cbgggs_DefaultShader_tmpAttributes, $renderable.$material);
    return cbgggs_DefaultShader_tmpAttributes;
},
cbgggs_DefaultShader_combineAttributeMasks = $renderable => {
    let $mask;
    cbgggs_DefaultShader_$callClinit();
    $mask = Long_ZERO;
    if ($renderable.$environment !== null)
        $mask = Long_or($mask, cbggg_Attributes_getMask($renderable.$environment));
    if ($renderable.$material !== null)
        $mask = Long_or($mask, cbggg_Attributes_getMask($renderable.$material));
    return $mask;
},
cbgggs_DefaultShader_createPrefix = ($renderable, $config) => {
    let $attributes, $prefix, $attributesMask, $vertexMask, var$7, $n, $i, $attr;
    cbgggs_DefaultShader_$callClinit();
    $attributes = cbgggs_DefaultShader_combineAttributes($renderable);
    $prefix = $rt_s(60);
    $attributesMask = cbggg_Attributes_getMask($attributes);
    $vertexMask = cbgg_VertexAttributes_getMask($renderable.$meshPart.$mesh.$getVertexAttributes());
    if (cbgggs_DefaultShader_and($vertexMask, Long_fromInt(1)))
        $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(778))).$toString();
    if (cbgggs_DefaultShader_or($vertexMask, Long_fromInt(6)))
        $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(779))).$toString();
    if (cbgggs_DefaultShader_and($vertexMask, Long_fromInt(256)))
        $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(780))).$toString();
    if (cbgggs_DefaultShader_and($vertexMask, Long_fromInt(128)))
        $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(781))).$toString();
    if (cbgggs_DefaultShader_and($vertexMask, Long_fromInt(8)))
        $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(782))).$toString();
    if (!(!cbgggs_DefaultShader_and($vertexMask, Long_fromInt(8)) && !cbgggs_DefaultShader_and($vertexMask, Long_fromInt(384))) && $renderable.$environment !== null) {
        var$7 = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(783))).$toString();
        var$7 = (((jl_StringBuilder__init_()).$append1(var$7)).$append1($rt_s(784))).$toString();
        var$7 = (((((jl_StringBuilder__init_()).$append1(var$7)).$append1($rt_s(785))).$append2($config.$numDirectionalLights)).$append1($rt_s(573))).$toString();
        var$7 = (((((jl_StringBuilder__init_()).$append1(var$7)).$append1($rt_s(786))).$append2($config.$numPointLights)).$append1($rt_s(573))).$toString();
        $prefix = (((((jl_StringBuilder__init_()).$append1(var$7)).$append1($rt_s(787))).$append2($config.$numSpotLights)).$append1($rt_s(573))).$toString();
        cbggga_ColorAttribute_$callClinit();
        if (cbggg_Attributes_has($attributes, cbggga_ColorAttribute_Fog))
            $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(788))).$toString();
        if ($renderable.$environment.$shadowMap !== null)
            $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(789))).$toString();
        cbggga_CubemapAttribute_$callClinit();
        if (cbggg_Attributes_has($attributes, cbggga_CubemapAttribute_EnvironmentMap))
            $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(790))).$toString();
    }
    $n = cbgg_VertexAttributes_size($renderable.$meshPart.$mesh.$getVertexAttributes());
    $i = 0;
    while ($i < $n) {
        $attr = cbgg_VertexAttributes_get($renderable.$meshPart.$mesh.$getVertexAttributes(), $i);
        if ($attr.$usage == 16)
            $prefix = (((((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(791))).$append2($attr.$unit)).$append1($rt_s(792))).$toString();
        $i = $i + 1 | 0;
    }
    if ($renderable.$bones !== null) {
        $i = 0;
        while ($i < $config.$numBoneWeights) {
            $prefix = (((((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(793))).$append2($i)).$append1($rt_s(792))).$toString();
            $i = $i + 1 | 0;
        }
    }
    cbggga_BlendingAttribute_$callClinit();
    if (Long_eq(Long_and($attributesMask, cbggga_BlendingAttribute_Type), cbggga_BlendingAttribute_Type))
        $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(794))).$toString();
    cbggga_TextureAttribute_$callClinit();
    if (Long_eq(Long_and($attributesMask, cbggga_TextureAttribute_Diffuse), cbggga_TextureAttribute_Diffuse)) {
        var$7 = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(795))).$toString();
        $prefix = (((jl_StringBuilder__init_()).$append1(var$7)).$append1($rt_s(796))).$toString();
    }
    if (Long_eq(Long_and($attributesMask, cbggga_TextureAttribute_Specular), cbggga_TextureAttribute_Specular)) {
        var$7 = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(797))).$toString();
        $prefix = (((jl_StringBuilder__init_()).$append1(var$7)).$append1($rt_s(798))).$toString();
    }
    if (Long_eq(Long_and($attributesMask, cbggga_TextureAttribute_Normal), cbggga_TextureAttribute_Normal)) {
        var$7 = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(799))).$toString();
        $prefix = (((jl_StringBuilder__init_()).$append1(var$7)).$append1($rt_s(800))).$toString();
    }
    if (Long_eq(Long_and($attributesMask, cbggga_TextureAttribute_Emissive), cbggga_TextureAttribute_Emissive)) {
        var$7 = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(801))).$toString();
        $prefix = (((jl_StringBuilder__init_()).$append1(var$7)).$append1($rt_s(802))).$toString();
    }
    if (Long_eq(Long_and($attributesMask, cbggga_TextureAttribute_Reflection), cbggga_TextureAttribute_Reflection)) {
        var$7 = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(803))).$toString();
        $prefix = (((jl_StringBuilder__init_()).$append1(var$7)).$append1($rt_s(804))).$toString();
    }
    if (Long_eq(Long_and($attributesMask, cbggga_TextureAttribute_Ambient), cbggga_TextureAttribute_Ambient)) {
        var$7 = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(805))).$toString();
        $prefix = (((jl_StringBuilder__init_()).$append1(var$7)).$append1($rt_s(806))).$toString();
    }
    cbggga_ColorAttribute_$callClinit();
    if (Long_eq(Long_and($attributesMask, cbggga_ColorAttribute_Diffuse), cbggga_ColorAttribute_Diffuse))
        $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(807))).$toString();
    if (Long_eq(Long_and($attributesMask, cbggga_ColorAttribute_Specular), cbggga_ColorAttribute_Specular))
        $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(808))).$toString();
    if (Long_eq(Long_and($attributesMask, cbggga_ColorAttribute_Emissive), cbggga_ColorAttribute_Emissive))
        $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(809))).$toString();
    if (Long_eq(Long_and($attributesMask, cbggga_ColorAttribute_Reflection), cbggga_ColorAttribute_Reflection))
        $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(810))).$toString();
    cbggga_FloatAttribute_$callClinit();
    if (Long_eq(Long_and($attributesMask, cbggga_FloatAttribute_Shininess), cbggga_FloatAttribute_Shininess))
        $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(811))).$toString();
    if (Long_eq(Long_and($attributesMask, cbggga_FloatAttribute_AlphaTest), cbggga_FloatAttribute_AlphaTest))
        $prefix = (((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(812))).$toString();
    if ($renderable.$bones !== null && $config.$numBones > 0)
        $prefix = (((((jl_StringBuilder__init_()).$append1($prefix)).$append1($rt_s(813))).$append2($config.$numBones)).$append1($rt_s(573))).$toString();
    return $prefix;
},
cbgggs_DefaultShader_canRender = ($this, $renderable) => {
    let $renderableMask, var$3, var$4, var$5;
    if ($renderable.$bones !== null) {
        if ($renderable.$bones.data.length > $this.$config0.$numBones)
            return 0;
        if (cbgg_VertexAttributes_getBoneWeights($renderable.$meshPart.$mesh.$getVertexAttributes()) > $this.$config0.$numBoneWeights)
            return 0;
    }
    if (cbgg_VertexAttributes_getTextureCoordinates($renderable.$meshPart.$mesh.$getVertexAttributes()) != $this.$textureCoordinates0)
        return 0;
    a: {
        $renderableMask = cbgggs_DefaultShader_combineAttributeMasks($renderable);
        if (Long_eq($this.$attributesMask, Long_or($renderableMask, cbgggs_DefaultShader_optionalAttributes))) {
            var$3 = $this.$vertexMask;
            var$4 = $renderable.$meshPart.$mesh;
            if (Long_eq(var$3, cbgg_VertexAttributes_getMaskWithSizePacked(var$4.$getVertexAttributes())) && ($renderable.$environment === null ? 0 : 1) == $this.$lighting) {
                var$5 = 1;
                break a;
            }
        }
        var$5 = 0;
    }
    return var$5;
},
cbgggs_DefaultShader_equals0 = ($this, $obj) => {
    return $obj instanceof cbgggs_DefaultShader && $this.$equals4($obj) ? 1 : 0;
},
cbgggs_DefaultShader_equals = ($this, $obj) => {
    return $obj !== $this ? 0 : 1;
},
cbgggs_DefaultShader_begin = ($this, $camera, $context) => {
    let var$3, var$4, var$5, $dirLight, $pointLight, $spotLight, var$9, $location;
    cbgggs_BaseShader_begin($this, $camera, $context);
    var$3 = $this.$directionalLights.data;
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $dirLight = var$3[var$5];
        $dirLight.$set40(0.0, 0.0, 0.0, 0.0, (-1.0), 0.0);
        var$5 = var$5 + 1 | 0;
    }
    var$3 = $this.$pointLights.data;
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $pointLight = var$3[var$5];
        $pointLight.$set45(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0);
        var$5 = var$5 + 1 | 0;
    }
    var$3 = $this.$spotLights.data;
    var$4 = var$3.length;
    var$5 = 0;
    while (var$5 < var$4) {
        $spotLight = var$3[var$5];
        $spotLight.$set46(0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, (-1.0), 0.0, 0.0, 1.0, 0.0);
        var$5 = var$5 + 1 | 0;
    }
    $this.$lightsSet = 0;
    if (cbgggs_BaseShader_has($this, $this.$u_time)) {
        var$4 = $this.$u_time;
        var$9 = $this.$time1 + cbg_Gdx_graphics.$getDeltaTime();
        $this.$time1 = var$9;
        cbgggs_BaseShader_set2($this, var$4, var$9);
    }
    a: {
        if ($this.$boneWeightsLocations !== null) {
            var$3 = $this.$boneWeightsLocations.data;
            var$4 = var$3.length;
            var$5 = 0;
            while (true) {
                if (var$5 >= var$4)
                    break a;
                $location = var$3[var$5];
                if ($location >= 0)
                    cbg_Gdx_gl.$glVertexAttrib2f($location, 0.0, 0.0);
                var$5 = var$5 + 1 | 0;
            }
        }
    }
},
cbgggs_DefaultShader_render = ($this, $renderable, $combinedAttributes) => {
    cbggga_BlendingAttribute_$callClinit();
    if (!cbggg_Attributes_has($combinedAttributes, cbggga_BlendingAttribute_Type))
        $this.$context.$setBlending0(0, 770, 771);
    $this.$bindMaterial($combinedAttributes);
    if ($this.$lighting)
        $this.$bindLights($renderable, $combinedAttributes);
    cbgggs_BaseShader_render($this, $renderable, $combinedAttributes);
},
cbgggs_DefaultShader_end = $this => {
    cbgggs_BaseShader_end($this);
},
cbgggs_DefaultShader_bindMaterial = ($this, $attributes) => {
    let $cullFace, $depthFunc, $depthRangeNear, $depthRangeFar, $depthMask, var$7, $attr, $t, var$10, var$11, $dta;
    if ($this.$config0.$defaultCullFace != (-1))
        $cullFace = $this.$config0.$defaultCullFace;
    else {
        cbgggs_DefaultShader_$callClinit();
        $cullFace = cbgggs_DefaultShader_defaultCullFace;
    }
    if ($this.$config0.$defaultDepthFunc != (-1))
        $depthFunc = $this.$config0.$defaultDepthFunc;
    else {
        cbgggs_DefaultShader_$callClinit();
        $depthFunc = cbgggs_DefaultShader_defaultDepthFunc;
    }
    $depthRangeNear = 0.0;
    $depthRangeFar = 1.0;
    $depthMask = 1;
    var$7 = cbggg_Attributes_iterator($attributes);
    while (var$7.$hasNext()) {
        $attr = var$7.$next();
        $t = $attr.$type1;
        if (cbggga_BlendingAttribute_is($t)) {
            var$10 = $this.$context;
            var$11 = $attr;
            var$10.$setBlending0(1, var$11.$sourceFunction, var$11.$destFunction);
            cbgggs_BaseShader_set2($this, $this.$u_opacity, var$11.$opacity);
        } else {
            cbggga_IntAttribute_$callClinit();
            if (Long_eq(Long_and($t, cbggga_IntAttribute_CullFace), cbggga_IntAttribute_CullFace))
                $cullFace = $attr.$value8;
            else {
                cbggga_FloatAttribute_$callClinit();
                if (Long_eq(Long_and($t, cbggga_FloatAttribute_AlphaTest), cbggga_FloatAttribute_AlphaTest))
                    cbgggs_BaseShader_set2($this, $this.$u_alphaTest, $attr.$value2);
                else {
                    cbggga_DepthTestAttribute_$callClinit();
                    if (Long_eq(Long_and($t, cbggga_DepthTestAttribute_Type), cbggga_DepthTestAttribute_Type)) {
                        $dta = $attr;
                        $depthFunc = $dta.$depthFunc0;
                        $depthRangeNear = $dta.$depthRangeNear0;
                        $depthRangeFar = $dta.$depthRangeFar0;
                        $depthMask = $dta.$depthMask0;
                    } else if (!$this.$config0.$ignoreUnimplemented)
                        $rt_throw(cbgu_GdxRuntimeException__init_((((jl_StringBuilder__init_()).$append1($rt_s(814))).$append1($attr.$toString())).$toString()));
                }
            }
        }
    }
    $this.$context.$setCullFace($cullFace);
    $this.$context.$setDepthTest($depthFunc, $depthRangeNear, $depthRangeFar);
    $this.$context.$setDepthMask($depthMask);
},
cbgggs_DefaultShader_bindLights = ($this, $renderable, $attributes) => {
    let $lights, $dla, $dirs, $pla, $points, $sla, $spots, $i, $idx;
    $lights = $renderable.$environment;
    cbggga_DirectionalLightsAttribute_$callClinit();
    $dla = cbggg_Attributes_get0($attributes, $rt_cls(cbggga_DirectionalLightsAttribute), cbggga_DirectionalLightsAttribute_Type);
    $dirs = $dla !== null ? $dla.$lights : null;
    cbggga_PointLightsAttribute_$callClinit();
    $pla = cbggg_Attributes_get0($attributes, $rt_cls(cbggga_PointLightsAttribute), cbggga_PointLightsAttribute_Type);
    $points = $pla !== null ? $pla.$lights0 : null;
    cbggga_SpotLightsAttribute_$callClinit();
    $sla = cbggg_Attributes_get0($attributes, $rt_cls(cbggga_SpotLightsAttribute), cbggga_SpotLightsAttribute_Type);
    $spots = $sla !== null ? $sla.$lights1 : null;
    a: {
        if ($this.$dirLightsLoc >= 0) {
            $i = 0;
            b: while (true) {
                if ($i >= $this.$directionalLights.data.length)
                    break a;
                c: {
                    if ($dirs !== null && $i < $dirs.$size0) {
                        if ($this.$lightsSet && $this.$directionalLights.data[$i].$equals3($dirs.$get($i)))
                            break c;
                        $this.$directionalLights.data[$i].$set47($dirs.$get($i));
                    } else {
                        if ($this.$lightsSet && $this.$directionalLights.data[$i].$color2.$r === 0.0 && $this.$directionalLights.data[$i].$color2.$g === 0.0 && $this.$directionalLights.data[$i].$color2.$b === 0.0)
                            break c;
                        $this.$directionalLights.data[$i].$color2.$set12(0.0, 0.0, 0.0, 1.0);
                    }
                    $idx = $this.$dirLightsLoc + $rt_imul($i, $this.$dirLightsSize) | 0;
                    $this.$program.$setUniformf4($idx + $this.$dirLightsColorOffset | 0, $this.$directionalLights.data[$i].$color2.$r, $this.$directionalLights.data[$i].$color2.$g, $this.$directionalLights.data[$i].$color2.$b);
                    $this.$program.$setUniformf4($idx + $this.$dirLightsDirectionOffset | 0, $this.$directionalLights.data[$i].$direction0.$x, $this.$directionalLights.data[$i].$direction0.$y, $this.$directionalLights.data[$i].$direction0.$z);
                    if ($this.$dirLightsSize <= 0)
                        break b;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    d: {
        if ($this.$pointLightsLoc >= 0) {
            $i = 0;
            e: while (true) {
                if ($i >= $this.$pointLights.data.length)
                    break d;
                f: {
                    if ($points !== null && $i < $points.$size0) {
                        if ($this.$lightsSet && $this.$pointLights.data[$i].$equals5($points.$get($i)))
                            break f;
                        $this.$pointLights.data[$i].$set48($points.$get($i));
                    } else {
                        if ($this.$lightsSet && $this.$pointLights.data[$i].$intensity === 0.0)
                            break f;
                        $this.$pointLights.data[$i].$intensity = 0.0;
                    }
                    $idx = $this.$pointLightsLoc + $rt_imul($i, $this.$pointLightsSize) | 0;
                    $this.$program.$setUniformf4($idx + $this.$pointLightsColorOffset | 0, $this.$pointLights.data[$i].$color2.$r * $this.$pointLights.data[$i].$intensity, $this.$pointLights.data[$i].$color2.$g * $this.$pointLights.data[$i].$intensity, $this.$pointLights.data[$i].$color2.$b * $this.$pointLights.data[$i].$intensity);
                    $this.$program.$setUniformf4($idx + $this.$pointLightsPositionOffset | 0, $this.$pointLights.data[$i].$position9.$x, $this.$pointLights.data[$i].$position9.$y, $this.$pointLights.data[$i].$position9.$z);
                    if ($this.$pointLightsIntensityOffset >= 0)
                        $this.$program.$setUniformf1($idx + $this.$pointLightsIntensityOffset | 0, $this.$pointLights.data[$i].$intensity);
                    if ($this.$pointLightsSize <= 0)
                        break e;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    g: {
        if ($this.$spotLightsLoc >= 0) {
            $i = 0;
            h: while (true) {
                if ($i >= $this.$spotLights.data.length)
                    break g;
                i: {
                    if ($spots !== null && $i < $spots.$size0) {
                        if ($this.$lightsSet && $this.$spotLights.data[$i].$equals6($spots.$get($i)))
                            break i;
                        $this.$spotLights.data[$i].$set49($spots.$get($i));
                    } else {
                        if ($this.$lightsSet && $this.$spotLights.data[$i].$intensity0 === 0.0)
                            break i;
                        $this.$spotLights.data[$i].$intensity0 = 0.0;
                    }
                    $idx = $this.$spotLightsLoc + $rt_imul($i, $this.$spotLightsSize) | 0;
                    $this.$program.$setUniformf4($idx + $this.$spotLightsColorOffset | 0, $this.$spotLights.data[$i].$color2.$r * $this.$spotLights.data[$i].$intensity0, $this.$spotLights.data[$i].$color2.$g * $this.$spotLights.data[$i].$intensity0, $this.$spotLights.data[$i].$color2.$b * $this.$spotLights.data[$i].$intensity0);
                    $this.$program.$setUniformf($idx + $this.$spotLightsPositionOffset | 0, $this.$spotLights.data[$i].$position10);
                    $this.$program.$setUniformf($idx + $this.$spotLightsDirectionOffset | 0, $this.$spotLights.data[$i].$direction1);
                    $this.$program.$setUniformf1($idx + $this.$spotLightsCutoffAngleOffset | 0, $this.$spotLights.data[$i].$cutoffAngle);
                    $this.$program.$setUniformf1($idx + $this.$spotLightsExponentOffset | 0, $this.$spotLights.data[$i].$exponent);
                    if ($this.$spotLightsIntensityOffset >= 0)
                        $this.$program.$setUniformf1($idx + $this.$spotLightsIntensityOffset | 0, $this.$spotLights.data[$i].$intensity0);
                    if ($this.$spotLightsSize <= 0)
                        break h;
                }
                $i = $i + 1 | 0;
            }
        }
    }
    cbggga_ColorAttribute_$callClinit();
    if (cbggg_Attributes_has($attributes, cbggga_ColorAttribute_Fog))
        cbgggs_BaseShader_set3($this, $this.$u_fogColor, (cbggg_Attributes_get($attributes, cbggga_ColorAttribute_Fog)).$color4);
    if ($lights !== null && $lights.$shadowMap !== null) {
        cbgggs_BaseShader_set1($this, $this.$u_shadowMapProjViewTrans, $lights.$shadowMap.$getProjViewTrans());
        cbgggs_BaseShader_set7($this, $this.$u_shadowTexture, $lights.$shadowMap.$getDepthMap());
        cbgggs_BaseShader_set2($this, $this.$u_shadowPCFOffset, 1.0 / (2.0 * ($lights.$shadowMap.$getDepthMap()).$texture.$getWidth0()));
    }
    $this.$lightsSet = 1;
},
cbgggs_DefaultShader__clinit_ = () => {
    let var$1, var$2;
    cbgggs_DefaultShader_defaultVertexShader = null;
    cbgggs_DefaultShader_defaultFragmentShader = null;
    cbggga_BlendingAttribute_$callClinit();
    var$1 = cbggga_BlendingAttribute_Type;
    cbggga_TextureAttribute_$callClinit();
    var$2 = Long_or(var$1, cbggga_TextureAttribute_Diffuse);
    cbggga_ColorAttribute_$callClinit();
    var$2 = Long_or(Long_or(var$2, cbggga_ColorAttribute_Diffuse), cbggga_ColorAttribute_Specular);
    cbggga_FloatAttribute_$callClinit();
    cbgggs_DefaultShader_implementedFlags = Long_or(var$2, cbggga_FloatAttribute_Shininess);
    cbgggs_DefaultShader_defaultCullFace = 1029;
    cbgggs_DefaultShader_defaultDepthFunc = 515;
    cbggga_IntAttribute_$callClinit();
    var$2 = cbggga_IntAttribute_CullFace;
    cbggga_DepthTestAttribute_$callClinit();
    cbgggs_DefaultShader_optionalAttributes = Long_or(var$2, cbggga_DepthTestAttribute_Type);
    cbgggs_DefaultShader_tmpAttributes = cbggg_Attributes__init_0();
};
function cbggge_SpotLight() {
    let a = this; cbggge_BaseLight.call(a);
    a.$position10 = null;
    a.$direction1 = null;
    a.$intensity0 = 0.0;
    a.$cutoffAngle = 0.0;
    a.$exponent = 0.0;
}
let cbggge_SpotLight__init_ = $this => {
    cbggge_BaseLight__init_($this);
    $this.$position10 = cbgm_Vector3__init_();
    $this.$direction1 = cbgm_Vector3__init_();
},
cbggge_SpotLight__init_0 = () => {
    let var_0 = new cbggge_SpotLight();
    cbggge_SpotLight__init_(var_0);
    return var_0;
},
cbggge_SpotLight_set = ($this, $copyFrom) => {
    return $this.$set51($copyFrom.$color2, $copyFrom.$position10, $copyFrom.$direction1, $copyFrom.$intensity0, $copyFrom.$cutoffAngle, $copyFrom.$exponent);
},
cbggge_SpotLight_set0 = ($this, $color, $position, $direction, $intensity, $cutoffAngle, $exponent) => {
    if ($color !== null)
        $this.$color2.$set11($color);
    if ($position !== null)
        $this.$position10.$set7($position);
    if ($direction !== null)
        ($this.$direction1.$set7($direction)).$nor0();
    $this.$intensity0 = $intensity;
    $this.$cutoffAngle = $cutoffAngle;
    $this.$exponent = $exponent;
    return $this;
},
cbggge_SpotLight_set1 = ($this, $r, $g, $b, $posX, $posY, $posZ, $dirX, $dirY, $dirZ, $intensity, $cutoffAngle, $exponent) => {
    $this.$color2.$set12($r, $g, $b, 1.0);
    $this.$position10.$set8($posX, $posY, $posZ);
    ($this.$direction1.$set8($dirX, $dirY, $dirZ)).$nor0();
    $this.$intensity0 = $intensity;
    $this.$cutoffAngle = $cutoffAngle;
    $this.$exponent = $exponent;
    return $this;
},
cbggge_SpotLight_equals = ($this, $other) => {
    let var$2, var$3, var$4, var$5, var$6;
    a: {
        b: {
            if ($other !== null) {
                if ($other === $this)
                    break b;
                if ($this.$color2.$equals($other.$color2) && $this.$position10.$equals($other.$position10)) {
                    var$2 = $this.$direction1;
                    var$3 = $other.$direction1;
                    if (var$2.$equals(var$3) && cbgm_MathUtils_isEqual($this.$intensity0, $other.$intensity0)) {
                        var$4 = $this.$cutoffAngle;
                        var$5 = $other.$cutoffAngle;
                        if (cbgm_MathUtils_isEqual(var$4, var$5) && cbgm_MathUtils_isEqual($this.$exponent, $other.$exponent))
                            break b;
                    }
                }
            }
            var$6 = 0;
            break a;
        }
        var$6 = 1;
    }
    return var$6;
},
cgxgbta_AssetInstance = $rt_classWithoutFields(),
cgxgbta_AssetInstance_downloaderInstance = null,
cgxgbta_AssetInstance_instance = null,
cgxgbta_AssetInstance_setInstance0 = $instance => {
    cgxgbta_AssetInstance_instance = $instance;
},
cgxgbta_AssetInstance_setInstance = $instance => {
    cgxgbta_AssetInstance_downloaderInstance = $instance;
},
cgxgbta_AssetInstance_getLoaderInstance = () => {
    return cgxgbta_AssetInstance_instance;
};
function cgxgbta_AssetDownloadImpl$1() {
    let a = this; jl_Object.call(a);
    a.$val$listener = null;
    a.$this$012 = null;
}
let cgxgbta_AssetDownloadImpl$1__init_ = ($this, $this$0, var$2) => {
    $this.$this$012 = $this$0;
    $this.$val$listener = var$2;
    jl_Object__init_($this);
},
cgxgbta_AssetDownloadImpl$1__init_0 = (var_0, var_1) => {
    let var_2 = new cgxgbta_AssetDownloadImpl$1();
    cgxgbta_AssetDownloadImpl$1__init_(var_2, var_0, var_1);
    return var_2;
},
cgxgbta_AssetDownloadImpl$1_onSuccess0 = ($this, $url, $result) => {
    let var$3, var$4;
    if ($this.$this$012.$showLogs) {
        var$3 = jl_System_out();
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(815)), $url);
        var$3.$println1(jl_StringBuilder_toString(var$4));
    }
    $this.$val$listener.$onSuccess($url, $result);
},
cgxgbta_AssetDownloadImpl$1_onFailure = ($this, $url) => {
    let var$2, var$3;
    if ($this.$this$012.$showLogs) {
        var$2 = jl_System_err();
        var$3 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$3, $rt_s(816)), $url);
        var$2.$println1(jl_StringBuilder_toString(var$3));
    }
},
cgxgbta_AssetDownloadImpl$1_onProgress = ($this, $total, $loaded) => {
    if ($this.$val$listener !== null)
        $this.$val$listener.$onProgress($total, $loaded);
},
cgxgbta_AssetDownloadImpl$1_onSuccess = ($this, var$1, var$2) => {
    $this.$onSuccess1(var$1, var$2);
};
function cgxgbta_AssetDownloadImpl$2() {
    let a = this; jl_Object.call(a);
    a.$val$url = null;
    a.$val$listener1 = null;
    a.$this$018 = null;
}
let cgxgbta_AssetDownloadImpl$2__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$018 = $this$0;
    $this.$val$url = var$2;
    $this.$val$listener1 = var$3;
    jl_Object__init_($this);
},
cgxgbta_AssetDownloadImpl$2__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbta_AssetDownloadImpl$2();
    cgxgbta_AssetDownloadImpl$2__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbta_AssetDownloadImpl$2_handleEvent = ($this, $event) => {
    let var$2, var$3, var$4;
    if ($this.$this$018.$showLogs) {
        var$2 = jl_System_out();
        var$3 = $this.$val$url;
        var$4 = jl_StringBuilder__init_();
        jl_StringBuilder_append(jl_StringBuilder_append(var$4, $rt_s(817)), var$3);
        var$2.$println1(jl_StringBuilder_toString(var$4));
    }
    if ($this.$val$listener1 !== null)
        $this.$val$listener1.$onSuccess($this.$val$url, $rt_s(60));
},
cgxgbta_AssetDownloadImpl$2_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
};
function cbgu_ShortArray() {
    let a = this; jl_Object.call(a);
    a.$items2 = null;
    a.$size4 = 0;
    a.$ordered2 = 0;
}
let cbgu_ShortArray__init_0 = $this => {
    cbgu_ShortArray__init_($this, 1, 16);
},
cbgu_ShortArray__init_1 = () => {
    let var_0 = new cbgu_ShortArray();
    cbgu_ShortArray__init_0(var_0);
    return var_0;
},
cbgu_ShortArray__init_ = ($this, $ordered, $capacity) => {
    jl_Object__init_($this);
    $this.$ordered2 = $ordered;
    $this.$items2 = $rt_createShortArray($capacity);
},
cbgu_ShortArray__init_2 = (var_0, var_1) => {
    let var_2 = new cbgu_ShortArray();
    cbgu_ShortArray__init_(var_2, var_0, var_1);
    return var_2;
},
cbgu_ShortArray_add = ($this, $value) => {
    let $items, var$3, var$4;
    $items = $this.$items2;
    var$3 = $items.data;
    if ($this.$size4 == var$3.length)
        $items = $this.$resize5(jl_Math_max(8, $this.$size4 * 1.75 | 0));
    var$3 = $items.data;
    var$4 = $this.$size4;
    $this.$size4 = var$4 + 1 | 0;
    var$3[var$4] = $value;
},
cbgu_ShortArray_clear = $this => {
    $this.$size4 = 0;
},
cbgu_ShortArray_ensureCapacity = ($this, $additionalCapacity) => {
    let $sizeNeeded;
    if ($additionalCapacity < 0)
        $rt_throw(jl_IllegalArgumentException__init_((((jl_StringBuilder__init_()).$append1($rt_s(24))).$append2($additionalCapacity)).$toString()));
    $sizeNeeded = $this.$size4 + $additionalCapacity | 0;
    if ($sizeNeeded > $this.$items2.data.length)
        $this.$resize5(jl_Math_max(jl_Math_max(8, $sizeNeeded), $this.$size4 * 1.75 | 0));
    return $this.$items2;
},
cbgu_ShortArray_resize = ($this, $newSize) => {
    let $newItems, var$3, $items;
    $newItems = $rt_createShortArray($newSize);
    var$3 = $newItems.data;
    $items = $this.$items2;
    jl_System_fastArraycopy($items, 0, $newItems, 0, jl_Math_min($this.$size4, var$3.length));
    $this.$items2 = $newItems;
    return $newItems;
},
cgxgbta_AssetDownloadImpl$3 = $rt_classWithoutFields(),
cgxgbta_AssetDownloadImpl$3_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$assetloader$AssetType = null,
cgxgbta_AssetDownloadImpl$3_$callClinit = () => {
    cgxgbta_AssetDownloadImpl$3_$callClinit = $rt_eraseClinit(cgxgbta_AssetDownloadImpl$3);
    cgxgbta_AssetDownloadImpl$3__clinit_();
},
cgxgbta_AssetDownloadImpl$3__clinit_ = () => {
    cgxgbta_AssetDownloadImpl$3_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$assetloader$AssetType = $rt_createIntArray((cgxgbta_AssetType_values()).data.length);
    cgxgbta_AssetDownloadImpl$3_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$assetloader$AssetType.data[jl_Enum_ordinal(cgxgbta_AssetType_Binary)] = 1;
    cgxgbta_AssetDownloadImpl$3_$SwitchMap$com$github$xpenatan$gdx$backends$teavm$assetloader$AssetType.data[jl_Enum_ordinal(cgxgbta_AssetType_Directory)] = 2;
};
function beb_BulletInitScreen$show$lambda$_1_0() {
    jl_Object.call(this);
    this.$_06 = null;
}
let beb_BulletInitScreen$show$lambda$_1_0__init_ = (var$0, var$1) => {
    jl_Object__init_(var$0);
    var$0.$_06 = var$1;
},
beb_BulletInitScreen$show$lambda$_1_0__init_0 = var_0 => {
    let var_1 = new beb_BulletInitScreen$show$lambda$_1_0();
    beb_BulletInitScreen$show$lambda$_1_0__init_(var_1, var_0);
    return var_1;
},
beb_BulletInitScreen$show$lambda$_1_0_onLoad = (var$0, var$1, var$2) => {
    beb_BulletInitScreen_lambda$show$0(var$0.$_06, var$1, var$2);
},
cbgu_NumberUtils = $rt_classWithoutFields(),
cbgu_NumberUtils_floatToIntBits = $value => {
    return jl_Float_floatToIntBits($value);
},
cbgu_NumberUtils_floatToRawIntBits = $value => {
    return $rt_floatToRawIntBits($value);
},
cbgu_NumberUtils_floatToIntColor = $value => {
    let $intBits, var$3;
    $intBits = $rt_floatToRawIntBits($value);
    var$3 = $intBits | (($intBits >>> 24 | 0) * 1.003937005996704 | 0) << 24;
    return var$3;
},
cbgu_NumberUtils_intToFloatColor = $value => {
    return $rt_intBitsToFloat($value & (-16777217));
},
cbgggm_NodePart$set$lambda$_4_1 = $rt_classWithoutFields(),
cbgggm_NodePart$set$lambda$_4_1__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgggm_NodePart$set$lambda$_4_1__init_0 = () => {
    let var_0 = new cbgggm_NodePart$set$lambda$_4_1();
    cbgggm_NodePart$set$lambda$_4_1__init_(var_0);
    return var_0;
},
cbgggm_NodePart$set$lambda$_4_1_get0 = (var$0, var$1) => {
    return cbgggm_NodePart$set$lambda$_4_1_get(var$0, var$1);
},
cbgggm_NodePart$set$lambda$_4_1_get = (var$0, var$1) => {
    return cbgggm_NodePart_lambda$set$1(var$1);
},
cbgggm_NodePart$set$lambda$_4_0 = $rt_classWithoutFields(),
cbgggm_NodePart$set$lambda$_4_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
cbgggm_NodePart$set$lambda$_4_0__init_0 = () => {
    let var_0 = new cbgggm_NodePart$set$lambda$_4_0();
    cbgggm_NodePart$set$lambda$_4_0__init_(var_0);
    return var_0;
},
cbgggm_NodePart$set$lambda$_4_0_get0 = (var$0, var$1) => {
    return cbgggm_NodePart$set$lambda$_4_0_get(var$0, var$1);
},
cbgggm_NodePart$set$lambda$_4_0_get = (var$0, var$1) => {
    return cbgggm_NodePart_lambda$set$0(var$1);
};
function jur_UMultiLineEOLSet() {
    jur_AbstractSet.call(this);
    this.$consCounter2 = 0;
}
let jur_UMultiLineEOLSet__init_ = ($this, $counter) => {
    jur_AbstractSet__init_($this);
    $this.$consCounter2 = $counter;
},
jur_UMultiLineEOLSet__init_0 = var_0 => {
    let var_1 = new jur_UMultiLineEOLSet();
    jur_UMultiLineEOLSet__init_(var_1, var_0);
    return var_1;
},
jur_UMultiLineEOLSet_matches = ($this, $strIndex, $testString, $matchResult) => {
    let $strDif;
    $strDif = !$matchResult.$hasAnchoringBounds() ? $testString.$length() - $strIndex | 0 : $matchResult.$getRightBound() - $strIndex | 0;
    if ($strDif <= 0) {
        $matchResult.$setConsumed($this.$consCounter2, 0);
        return $this.$next1.$matches($strIndex, $testString, $matchResult);
    }
    if ($testString.$charAt($strIndex) != 10)
        return (-1);
    $matchResult.$setConsumed($this.$consCounter2, 1);
    return $this.$next1.$matches($strIndex + 1 | 0, $testString, $matchResult);
},
jur_UMultiLineEOLSet_hasConsumed = ($this, $matchResult) => {
    let $res;
    $res = !$matchResult.$getConsumed($this.$consCounter2) ? 0 : 1;
    $matchResult.$setConsumed($this.$consCounter2, (-1));
    return $res;
},
jur_UMultiLineEOLSet_getName = $this => {
    return $rt_s(818);
};
function cbggga_TextureAttribute() {
    let a = this; cbggg_Attribute.call(a);
    a.$textureDescription = null;
    a.$offsetU = 0.0;
    a.$offsetV = 0.0;
    a.$scaleU = 0.0;
    a.$scaleV = 0.0;
    a.$uvIndex = 0;
}
let cbggga_TextureAttribute_Diffuse = Long_ZERO,
cbggga_TextureAttribute_Specular = Long_ZERO,
cbggga_TextureAttribute_Bump = Long_ZERO,
cbggga_TextureAttribute_Normal = Long_ZERO,
cbggga_TextureAttribute_Ambient = Long_ZERO,
cbggga_TextureAttribute_Emissive = Long_ZERO,
cbggga_TextureAttribute_Reflection = Long_ZERO,
cbggga_TextureAttribute_Mask = Long_ZERO,
cbggga_TextureAttribute_$callClinit = () => {
    cbggga_TextureAttribute_$callClinit = $rt_eraseClinit(cbggga_TextureAttribute);
    cbggga_TextureAttribute__clinit_();
},
cbggga_TextureAttribute_is = $mask => {
    cbggga_TextureAttribute_$callClinit();
    return Long_eq(Long_and($mask, cbggga_TextureAttribute_Mask), Long_ZERO) ? 0 : 1;
},
cbggga_TextureAttribute_createDiffuse = $texture => {
    cbggga_TextureAttribute_$callClinit();
    return cbggga_TextureAttribute__init_4(cbggga_TextureAttribute_Diffuse, $texture);
},
cbggga_TextureAttribute__init_ = ($this, $type) => {
    cbggga_TextureAttribute_$callClinit();
    cbggg_Attribute__init_($this, $type);
    $this.$offsetU = 0.0;
    $this.$offsetV = 0.0;
    $this.$scaleU = 1.0;
    $this.$scaleV = 1.0;
    $this.$uvIndex = 0;
    if (cbggga_TextureAttribute_is($type)) {
        $this.$textureDescription = cbgggu_TextureDescriptor__init_();
        return;
    }
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(648)));
},
cbggga_TextureAttribute__init_6 = var_0 => {
    let var_1 = new cbggga_TextureAttribute();
    cbggga_TextureAttribute__init_(var_1, var_0);
    return var_1;
},
cbggga_TextureAttribute__init_0 = ($this, $type, $textureDescription) => {
    cbggga_TextureAttribute_$callClinit();
    cbggga_TextureAttribute__init_($this, $type);
    $this.$textureDescription.$set52($textureDescription);
},
cbggga_TextureAttribute__init_7 = (var_0, var_1) => {
    let var_2 = new cbggga_TextureAttribute();
    cbggga_TextureAttribute__init_0(var_2, var_0, var_1);
    return var_2;
},
cbggga_TextureAttribute__init_1 = ($this, $type, $textureDescription, $offsetU, $offsetV, $scaleU, $scaleV, $uvIndex) => {
    cbggga_TextureAttribute_$callClinit();
    cbggga_TextureAttribute__init_0($this, $type, $textureDescription);
    $this.$offsetU = $offsetU;
    $this.$offsetV = $offsetV;
    $this.$scaleU = $scaleU;
    $this.$scaleV = $scaleV;
    $this.$uvIndex = $uvIndex;
},
cbggga_TextureAttribute__init_8 = (var_0, var_1, var_2, var_3, var_4, var_5, var_6) => {
    let var_7 = new cbggga_TextureAttribute();
    cbggga_TextureAttribute__init_1(var_7, var_0, var_1, var_2, var_3, var_4, var_5, var_6);
    return var_7;
},
cbggga_TextureAttribute__init_2 = ($this, $type, $texture) => {
    cbggga_TextureAttribute_$callClinit();
    cbggga_TextureAttribute__init_($this, $type);
    $this.$textureDescription.$texture = $texture;
},
cbggga_TextureAttribute__init_4 = (var_0, var_1) => {
    let var_2 = new cbggga_TextureAttribute();
    cbggga_TextureAttribute__init_2(var_2, var_0, var_1);
    return var_2;
},
cbggga_TextureAttribute__init_3 = ($this, $copyFrom) => {
    cbggga_TextureAttribute_$callClinit();
    cbggga_TextureAttribute__init_1($this, $copyFrom.$type1, $copyFrom.$textureDescription, $copyFrom.$offsetU, $copyFrom.$offsetV, $copyFrom.$scaleU, $copyFrom.$scaleV, $copyFrom.$uvIndex);
},
cbggga_TextureAttribute__init_5 = var_0 => {
    let var_1 = new cbggga_TextureAttribute();
    cbggga_TextureAttribute__init_3(var_1, var_0);
    return var_1;
},
cbggga_TextureAttribute_copy = $this => {
    return cbggga_TextureAttribute__init_5($this);
},
cbggga_TextureAttribute_hashCode = $this => {
    let $result, var$2;
    $result = cbggg_Attribute_hashCode($this);
    var$2 = (991 * $result | 0) + $this.$textureDescription.$hashCode0() | 0;
    var$2 = (991 * var$2 | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$offsetU) | 0;
    var$2 = (991 * var$2 | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$offsetV) | 0;
    var$2 = (991 * var$2 | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$scaleU) | 0;
    var$2 = (991 * var$2 | 0) + cbgu_NumberUtils_floatToRawIntBits($this.$scaleV) | 0;
    var$2 = (991 * var$2 | 0) + $this.$uvIndex | 0;
    return var$2;
},
cbggga_TextureAttribute__clinit_ = () => {
    cbggga_TextureAttribute_Diffuse = cbggg_Attribute_register($rt_s(819));
    cbggga_TextureAttribute_Specular = cbggg_Attribute_register($rt_s(820));
    cbggga_TextureAttribute_Bump = cbggg_Attribute_register($rt_s(821));
    cbggga_TextureAttribute_Normal = cbggg_Attribute_register($rt_s(822));
    cbggga_TextureAttribute_Ambient = cbggg_Attribute_register($rt_s(823));
    cbggga_TextureAttribute_Emissive = cbggg_Attribute_register($rt_s(824));
    cbggga_TextureAttribute_Reflection = cbggg_Attribute_register($rt_s(825));
    cbggga_TextureAttribute_Mask = Long_or(Long_or(Long_or(Long_or(Long_or(Long_or(cbggga_TextureAttribute_Diffuse, cbggga_TextureAttribute_Specular), cbggga_TextureAttribute_Bump), cbggga_TextureAttribute_Normal), cbggga_TextureAttribute_Ambient), cbggga_TextureAttribute_Emissive), cbggga_TextureAttribute_Reflection);
},
cbgggs_DefaultShader$Inputs = $rt_classWithoutFields(),
cbgggs_DefaultShader$Inputs_projTrans = null,
cbgggs_DefaultShader$Inputs_viewTrans = null,
cbgggs_DefaultShader$Inputs_projViewTrans = null,
cbgggs_DefaultShader$Inputs_cameraPosition = null,
cbgggs_DefaultShader$Inputs_cameraDirection = null,
cbgggs_DefaultShader$Inputs_cameraUp = null,
cbgggs_DefaultShader$Inputs_cameraNearFar = null,
cbgggs_DefaultShader$Inputs_worldTrans = null,
cbgggs_DefaultShader$Inputs_viewWorldTrans = null,
cbgggs_DefaultShader$Inputs_projViewWorldTrans = null,
cbgggs_DefaultShader$Inputs_normalMatrix = null,
cbgggs_DefaultShader$Inputs_bones = null,
cbgggs_DefaultShader$Inputs_shininess = null,
cbgggs_DefaultShader$Inputs_opacity = null,
cbgggs_DefaultShader$Inputs_diffuseColor = null,
cbgggs_DefaultShader$Inputs_diffuseTexture = null,
cbgggs_DefaultShader$Inputs_diffuseUVTransform = null,
cbgggs_DefaultShader$Inputs_specularColor = null,
cbgggs_DefaultShader$Inputs_specularTexture = null,
cbgggs_DefaultShader$Inputs_specularUVTransform = null,
cbgggs_DefaultShader$Inputs_emissiveColor = null,
cbgggs_DefaultShader$Inputs_emissiveTexture = null,
cbgggs_DefaultShader$Inputs_emissiveUVTransform = null,
cbgggs_DefaultShader$Inputs_reflectionColor = null,
cbgggs_DefaultShader$Inputs_reflectionTexture = null;
let cbgggs_DefaultShader$Inputs_reflectionUVTransform = null,
cbgggs_DefaultShader$Inputs_normalTexture = null,
cbgggs_DefaultShader$Inputs_normalUVTransform = null,
cbgggs_DefaultShader$Inputs_ambientTexture = null,
cbgggs_DefaultShader$Inputs_ambientUVTransform = null,
cbgggs_DefaultShader$Inputs_alphaTest = null,
cbgggs_DefaultShader$Inputs_ambientCube = null,
cbgggs_DefaultShader$Inputs_dirLights = null,
cbgggs_DefaultShader$Inputs_pointLights = null,
cbgggs_DefaultShader$Inputs_spotLights = null,
cbgggs_DefaultShader$Inputs_environmentCubemap = null,
cbgggs_DefaultShader$Inputs_$callClinit = () => {
    cbgggs_DefaultShader$Inputs_$callClinit = $rt_eraseClinit(cbgggs_DefaultShader$Inputs);
    cbgggs_DefaultShader$Inputs__clinit_();
},
cbgggs_DefaultShader$Inputs__clinit_ = () => {
    let var$1;
    cbgggs_DefaultShader$Inputs_projTrans = cbgggs_BaseShader$Uniform__init_($rt_s(358));
    cbgggs_DefaultShader$Inputs_viewTrans = cbgggs_BaseShader$Uniform__init_($rt_s(826));
    cbgggs_DefaultShader$Inputs_projViewTrans = cbgggs_BaseShader$Uniform__init_($rt_s(827));
    cbgggs_DefaultShader$Inputs_cameraPosition = cbgggs_BaseShader$Uniform__init_($rt_s(828));
    cbgggs_DefaultShader$Inputs_cameraDirection = cbgggs_BaseShader$Uniform__init_($rt_s(829));
    cbgggs_DefaultShader$Inputs_cameraUp = cbgggs_BaseShader$Uniform__init_($rt_s(830));
    cbgggs_DefaultShader$Inputs_cameraNearFar = cbgggs_BaseShader$Uniform__init_($rt_s(831));
    cbgggs_DefaultShader$Inputs_worldTrans = cbgggs_BaseShader$Uniform__init_($rt_s(832));
    cbgggs_DefaultShader$Inputs_viewWorldTrans = cbgggs_BaseShader$Uniform__init_($rt_s(833));
    cbgggs_DefaultShader$Inputs_projViewWorldTrans = cbgggs_BaseShader$Uniform__init_($rt_s(834));
    cbgggs_DefaultShader$Inputs_normalMatrix = cbgggs_BaseShader$Uniform__init_($rt_s(835));
    cbgggs_DefaultShader$Inputs_bones = cbgggs_BaseShader$Uniform__init_($rt_s(836));
    var$1 = new cbgggs_BaseShader$Uniform;
    cbggga_FloatAttribute_$callClinit();
    cbgggs_BaseShader$Uniform__init_1(var$1, $rt_s(837), cbggga_FloatAttribute_Shininess);
    cbgggs_DefaultShader$Inputs_shininess = var$1;
    var$1 = new cbgggs_BaseShader$Uniform;
    cbggga_BlendingAttribute_$callClinit();
    cbgggs_BaseShader$Uniform__init_1(var$1, $rt_s(838), cbggga_BlendingAttribute_Type);
    cbgggs_DefaultShader$Inputs_opacity = var$1;
    var$1 = new cbgggs_BaseShader$Uniform;
    cbggga_ColorAttribute_$callClinit();
    cbgggs_BaseShader$Uniform__init_1(var$1, $rt_s(839), cbggga_ColorAttribute_Diffuse);
    cbgggs_DefaultShader$Inputs_diffuseColor = var$1;
    var$1 = new cbgggs_BaseShader$Uniform;
    cbggga_TextureAttribute_$callClinit();
    cbgggs_BaseShader$Uniform__init_1(var$1, $rt_s(840), cbggga_TextureAttribute_Diffuse);
    cbgggs_DefaultShader$Inputs_diffuseTexture = var$1;
    cbgggs_DefaultShader$Inputs_diffuseUVTransform = cbgggs_BaseShader$Uniform__init_0($rt_s(841), cbggga_TextureAttribute_Diffuse);
    cbgggs_DefaultShader$Inputs_specularColor = cbgggs_BaseShader$Uniform__init_0($rt_s(842), cbggga_ColorAttribute_Specular);
    cbgggs_DefaultShader$Inputs_specularTexture = cbgggs_BaseShader$Uniform__init_0($rt_s(843), cbggga_TextureAttribute_Specular);
    cbgggs_DefaultShader$Inputs_specularUVTransform = cbgggs_BaseShader$Uniform__init_0($rt_s(844), cbggga_TextureAttribute_Specular);
    cbgggs_DefaultShader$Inputs_emissiveColor = cbgggs_BaseShader$Uniform__init_0($rt_s(845), cbggga_ColorAttribute_Emissive);
    cbgggs_DefaultShader$Inputs_emissiveTexture = cbgggs_BaseShader$Uniform__init_0($rt_s(846), cbggga_TextureAttribute_Emissive);
    cbgggs_DefaultShader$Inputs_emissiveUVTransform = cbgggs_BaseShader$Uniform__init_0($rt_s(847), cbggga_TextureAttribute_Emissive);
    cbgggs_DefaultShader$Inputs_reflectionColor = cbgggs_BaseShader$Uniform__init_0($rt_s(848), cbggga_ColorAttribute_Reflection);
    cbgggs_DefaultShader$Inputs_reflectionTexture = cbgggs_BaseShader$Uniform__init_0($rt_s(849), cbggga_TextureAttribute_Reflection);
    cbgggs_DefaultShader$Inputs_reflectionUVTransform = cbgggs_BaseShader$Uniform__init_0($rt_s(850), cbggga_TextureAttribute_Reflection);
    cbgggs_DefaultShader$Inputs_normalTexture = cbgggs_BaseShader$Uniform__init_0($rt_s(851), cbggga_TextureAttribute_Normal);
    cbgggs_DefaultShader$Inputs_normalUVTransform = cbgggs_BaseShader$Uniform__init_0($rt_s(852), cbggga_TextureAttribute_Normal);
    cbgggs_DefaultShader$Inputs_ambientTexture = cbgggs_BaseShader$Uniform__init_0($rt_s(853), cbggga_TextureAttribute_Ambient);
    cbgggs_DefaultShader$Inputs_ambientUVTransform = cbgggs_BaseShader$Uniform__init_0($rt_s(854), cbggga_TextureAttribute_Ambient);
    cbgggs_DefaultShader$Inputs_alphaTest = cbgggs_BaseShader$Uniform__init_($rt_s(855));
    cbgggs_DefaultShader$Inputs_ambientCube = cbgggs_BaseShader$Uniform__init_($rt_s(856));
    cbgggs_DefaultShader$Inputs_dirLights = cbgggs_BaseShader$Uniform__init_($rt_s(857));
    cbgggs_DefaultShader$Inputs_pointLights = cbgggs_BaseShader$Uniform__init_($rt_s(858));
    cbgggs_DefaultShader$Inputs_spotLights = cbgggs_BaseShader$Uniform__init_($rt_s(859));
    cbgggs_DefaultShader$Inputs_environmentCubemap = cbgggs_BaseShader$Uniform__init_($rt_s(860));
},
cbgggs_DefaultShader$Setters$1 = $rt_classWithoutFields(cbgggs_BaseShader$GlobalSetter),
cbgggs_DefaultShader$Setters$1__init_ = $this => {
    cbgggs_BaseShader$GlobalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$1__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$1();
    cbgggs_DefaultShader$Setters$1__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$1_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set1($shader, $inputID, $shader.$camera0.$projection);
},
cbgggs_DefaultShader$Setters$3 = $rt_classWithoutFields(cbgggs_BaseShader$GlobalSetter),
cbgggs_DefaultShader$Setters$3__init_ = $this => {
    cbgggs_BaseShader$GlobalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$3__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$3();
    cbgggs_DefaultShader$Setters$3__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$3_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set1($shader, $inputID, $shader.$camera0.$combined);
},
cbgggs_DefaultShader$Setters$2 = $rt_classWithoutFields(cbgggs_BaseShader$GlobalSetter),
cbgggs_DefaultShader$Setters$2__init_ = $this => {
    cbgggs_BaseShader$GlobalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$2__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$2();
    cbgggs_DefaultShader$Setters$2__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$2_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set1($shader, $inputID, $shader.$camera0.$view);
},
cbgggs_DefaultShader$Setters$5 = $rt_classWithoutFields(cbgggs_BaseShader$GlobalSetter),
cbgggs_DefaultShader$Setters$5__init_ = $this => {
    cbgggs_BaseShader$GlobalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$5__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$5();
    cbgggs_DefaultShader$Setters$5__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$5_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set4($shader, $inputID, $shader.$camera0.$direction);
},
cbgggs_DefaultShader$Setters$4 = $rt_classWithoutFields(cbgggs_BaseShader$GlobalSetter),
cbgggs_DefaultShader$Setters$4__init_ = $this => {
    cbgggs_BaseShader$GlobalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$4__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$4();
    cbgggs_DefaultShader$Setters$4__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$4_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set($shader, $inputID, $shader.$camera0.$position8.$x, $shader.$camera0.$position8.$y, $shader.$camera0.$position8.$z, 1.188099980354309 / ($shader.$camera0.$far * $shader.$camera0.$far));
},
cbgggs_DefaultShader$Setters$7 = $rt_classWithoutFields(cbgggs_BaseShader$GlobalSetter),
cbgggs_DefaultShader$Setters$7__init_ = $this => {
    cbgggs_BaseShader$GlobalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$7__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$7();
    cbgggs_DefaultShader$Setters$7__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$7_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set6($shader, $inputID, $shader.$camera0.$near, $shader.$camera0.$far);
},
cgxgbt_TeaFileHandle$1 = $rt_classWithoutFields(),
cgxgbt_TeaFileHandle$1_$SwitchMap$com$badlogic$gdx$Files$FileType = null,
cgxgbt_TeaFileHandle$1_$callClinit = () => {
    cgxgbt_TeaFileHandle$1_$callClinit = $rt_eraseClinit(cgxgbt_TeaFileHandle$1);
    cgxgbt_TeaFileHandle$1__clinit_();
},
cgxgbt_TeaFileHandle$1__clinit_ = () => {
    cgxgbt_TeaFileHandle$1_$SwitchMap$com$badlogic$gdx$Files$FileType = $rt_createIntArray((cbg_Files$FileType_values()).data.length);
    cgxgbt_TeaFileHandle$1_$SwitchMap$com$badlogic$gdx$Files$FileType.data[jl_Enum_ordinal(cbg_Files$FileType_Internal)] = 1;
    cgxgbt_TeaFileHandle$1_$SwitchMap$com$badlogic$gdx$Files$FileType.data[jl_Enum_ordinal(cbg_Files$FileType_Classpath)] = 2;
};
function cbgggu_DefaultTextureBinder() {
    let a = this; jl_Object.call(a);
    a.$offset1 = 0;
    a.$count0 = 0;
    a.$textures = null;
    a.$unitsLRU = null;
    a.$method = 0;
    a.$reused = 0;
    a.$reuseCount = 0;
    a.$bindCount = 0;
    a.$tempDesc = null;
    a.$currentTexture = 0;
}
let cbgggu_DefaultTextureBinder__init_0 = ($this, $method, $offset) => {
    cbgggu_DefaultTextureBinder__init_($this, $method, $offset, (-1));
},
cbgggu_DefaultTextureBinder__init_1 = (var_0, var_1) => {
    let var_2 = new cbgggu_DefaultTextureBinder();
    cbgggu_DefaultTextureBinder__init_0(var_2, var_0, var_1);
    return var_2;
},
cbgggu_DefaultTextureBinder__init_ = ($this, $method, $offset, $count) => {
    let $max;
    jl_Object__init_($this);
    $this.$reuseCount = 0;
    $this.$bindCount = 0;
    $this.$tempDesc = cbgggu_TextureDescriptor__init_();
    $this.$currentTexture = 0;
    $max = jl_Math_min(cbgggu_DefaultTextureBinder_getMaxTextureUnits(), 32);
    if ($count < 0)
        $count = $max - $offset | 0;
    if ($offset >= 0 && $count >= 0 && ($offset + $count | 0) <= $max) {
        $this.$method = $method;
        $this.$offset1 = $offset;
        $this.$count0 = $count;
        $this.$textures = $rt_createArray(cbgg_GLTexture, $count);
        $this.$unitsLRU = $method == 1 ? $rt_createIntArray($count) : null;
        return;
    }
    $rt_throw(cbgu_GdxRuntimeException__init_($rt_s(861)));
},
cbgggu_DefaultTextureBinder__init_2 = (var_0, var_1, var_2) => {
    let var_3 = new cbgggu_DefaultTextureBinder();
    cbgggu_DefaultTextureBinder__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cbgggu_DefaultTextureBinder_getMaxTextureUnits = () => {
    let $buffer;
    $buffer = cbgu_BufferUtils_newIntBuffer(16);
    cbg_Gdx_gl.$glGetIntegerv(34930, $buffer);
    return $buffer.$get1(0);
},
cbgggu_DefaultTextureBinder_begin = $this => {
    let $i;
    $i = 0;
    while ($i < $this.$count0) {
        $this.$textures.data[$i] = null;
        if ($this.$unitsLRU !== null)
            $this.$unitsLRU.data[$i] = $i;
        $i = $i + 1 | 0;
    }
},
cbgggu_DefaultTextureBinder_end = $this => {
    cbg_Gdx_gl.$glActiveTexture(33984);
},
cbgggu_DefaultTextureBinder_bind = ($this, $textureDesc) => {
    return cbgggu_DefaultTextureBinder_bindTexture($this, $textureDesc, 0);
},
cbgggu_DefaultTextureBinder_bindTexture = ($this, $textureDesc, $rebind) => {
    let $texture, $result;
    a: {
        $texture = $textureDesc.$texture;
        $this.$reused = 0;
        switch ($this.$method) {
            case 0:
                $result = $this.$offset1 + cbgggu_DefaultTextureBinder_bindTextureRoundRobin($this, $texture) | 0;
                break a;
            case 1:
                $result = $this.$offset1 + cbgggu_DefaultTextureBinder_bindTextureLRU($this, $texture) | 0;
                break a;
            default:
        }
        return (-1);
    }
    if (!$this.$reused)
        $this.$bindCount = $this.$bindCount + 1 | 0;
    else {
        $this.$reuseCount = $this.$reuseCount + 1 | 0;
        if ($rebind)
            $texture.$bind4($result);
        else
            cbg_Gdx_gl.$glActiveTexture(33984 + $result | 0);
    }
    $texture.$unsafeSetWrap0($textureDesc.$uWrap, $textureDesc.$vWrap);
    $texture.$unsafeSetFilter0($textureDesc.$minFilter0, $textureDesc.$magFilter0);
    return $result;
},
cbgggu_DefaultTextureBinder_bindTextureRoundRobin = ($this, $texture) => {
    let $i, $idx;
    $i = 0;
    while (true) {
        if ($i >= $this.$count0) {
            $this.$currentTexture = ($this.$currentTexture + 1 | 0) % $this.$count0 | 0;
            $this.$textures.data[$this.$currentTexture] = $texture;
            $texture.$bind4($this.$offset1 + $this.$currentTexture | 0);
            return $this.$currentTexture;
        }
        $idx = ($this.$currentTexture + $i | 0) % $this.$count0 | 0;
        if ($this.$textures.data[$idx] === $texture)
            break;
        $i = $i + 1 | 0;
    }
    $this.$reused = 1;
    return $idx;
},
cbgggu_DefaultTextureBinder_bindTextureLRU = ($this, $texture) => {
    let $i, $idx;
    $i = 0;
    a: {
        while (true) {
            if ($i >= $this.$count0)
                break a;
            $idx = $this.$unitsLRU.data[$i];
            if ($this.$textures.data[$idx] === $texture) {
                $this.$reused = 1;
                break a;
            }
            if ($this.$textures.data[$idx] === null)
                break;
            $i = $i + 1 | 0;
        }
    }
    if ($i >= $this.$count0)
        $i = $this.$count0 - 1 | 0;
    $idx = $this.$unitsLRU.data[$i];
    while ($i > 0) {
        $this.$unitsLRU.data[$i] = $this.$unitsLRU.data[$i - 1 | 0];
        $i = $i + (-1) | 0;
    }
    $this.$unitsLRU.data[0] = $idx;
    if (!$this.$reused) {
        $this.$textures.data[$idx] = $texture;
        $texture.$bind4($this.$offset1 + $idx | 0);
    }
    return $idx;
},
cbgggs_DefaultShader$Setters$6 = $rt_classWithoutFields(cbgggs_BaseShader$GlobalSetter),
cbgggs_DefaultShader$Setters$6__init_ = $this => {
    cbgggs_BaseShader$GlobalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$6__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$6();
    cbgggs_DefaultShader$Setters$6__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$6_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set4($shader, $inputID, $shader.$camera0.$up);
};
function cbgggs_DefaultShader$Setters$9() {
    cbgggs_BaseShader$LocalSetter.call(this);
    this.$temp0 = null;
}
let cbgggs_DefaultShader$Setters$9__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
    $this.$temp0 = cbgm_Matrix4__init_();
},
cbgggs_DefaultShader$Setters$9__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$9();
    cbgggs_DefaultShader$Setters$9__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$9_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set1($shader, $inputID, ($this.$temp0.$set1($shader.$camera0.$view)).$mul1($renderable.$worldTransform));
},
cbgggs_DefaultShader$Setters$8 = $rt_classWithoutFields(cbgggs_BaseShader$LocalSetter),
cbgggs_DefaultShader$Setters$8__init_ = $this => {
    cbgggs_BaseShader$LocalSetter__init_($this);
},
cbgggs_DefaultShader$Setters$8__init_0 = () => {
    let var_0 = new cbgggs_DefaultShader$Setters$8();
    cbgggs_DefaultShader$Setters$8__init_(var_0);
    return var_0;
},
cbgggs_DefaultShader$Setters$8_set = ($this, $shader, $inputID, $renderable, $combinedAttributes) => {
    cbgggs_BaseShader_set1($shader, $inputID, $renderable.$worldTransform);
},
jur_AbstractCharClass$LazySpecialsBlock = $rt_classWithoutFields(jur_AbstractCharClass$LazyCharClass),
jur_AbstractCharClass$LazySpecialsBlock__init_ = $this => {
    jur_AbstractCharClass$LazyCharClass__init_($this);
},
jur_AbstractCharClass$LazySpecialsBlock__init_0 = () => {
    let var_0 = new jur_AbstractCharClass$LazySpecialsBlock();
    jur_AbstractCharClass$LazySpecialsBlock__init_(var_0);
    return var_0;
},
jur_AbstractCharClass$LazySpecialsBlock_computeValue = $this => {
    return ((jur_CharClass__init_()).$add0(65279, 65279)).$add0(65520, 65533);
};
function cbgss_Stage$TouchFocus() {
    let a = this; jl_Object.call(a);
    a.$listener0 = null;
    a.$listenerActor = null;
    a.$target0 = null;
    a.$pointer = 0;
    a.$button1 = 0;
}
let otji_JSWrapper$Helper$_clinit_$lambda$_3_1 = $rt_classWithoutFields(),
otji_JSWrapper$Helper$_clinit_$lambda$_3_1__init_ = var$0 => {
    jl_Object__init_(var$0);
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_1__init_0 = () => {
    let var_0 = new otji_JSWrapper$Helper$_clinit_$lambda$_3_1();
    otji_JSWrapper$Helper$_clinit_$lambda$_3_1__init_(var_0);
    return var_0;
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_1_accept = (var$0, var$1) => {
    otji_JSWrapper$Helper_lambda$static$1(var$1);
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_1_accept$exported$0 = (var$1, var$2) => {
    var$1.$accept(var$2);
};
function cgxgbta_AssetLoadImpl$6() {
    let a = this; jl_Object.call(a);
    a.$val$assetPath = null;
    a.$val$listener0 = null;
    a.$val$fileHandle = null;
    a.$this$08 = null;
}
let cgxgbta_AssetLoadImpl$6__init_ = ($this, $this$0, var$2, var$3, var$4) => {
    $this.$this$08 = $this$0;
    $this.$val$assetPath = var$2;
    $this.$val$listener0 = var$3;
    $this.$val$fileHandle = var$4;
    jl_Object__init_($this);
},
cgxgbta_AssetLoadImpl$6__init_0 = (var_0, var_1, var_2, var_3) => {
    let var_4 = new cgxgbta_AssetLoadImpl$6();
    cgxgbta_AssetLoadImpl$6__init_(var_4, var_0, var_1, var_2, var_3);
    return var_4;
},
cgxgbta_AssetLoadImpl$6_onSuccess0 = ($this, $url, $result) => {
    let $data, $byteArray, $output, $ex, var$7, var$8, var$9, var$10, $$je;
    $this.$this$08.$assetDownloading.$remove4($this.$val$assetPath);
    $data = cgxgbta_TeaBlob_getData($result);
    $byteArray = cgxgbtdt_TypedArrays_toByteArray($data);
    $output = $this.$val$fileHandle.$write2(0, 4096);
    a: {
        b: {
            try {
                $output.$write1($byteArray);
            } catch ($$e) {
                $$je = $rt_wrapException($$e);
                if ($$je instanceof ji_IOException) {
                    $ex = $$je;
                    break b;
                } else{
                    var$7 = $$je;
                    break a;
                }
            }
            cbgu_StreamUtils_closeQuietly($output);
            if ($this.$val$listener0 !== null)
                $this.$val$listener0.$onSuccess($this.$val$assetPath, $result);
            cgxgbta_AssetLoadImpl_downloadMultiAssets($this.$this$08, $this.$val$listener0);
            return;
        }
        try {
            var$7 = new cbgu_GdxRuntimeException;
            var$8 = jl_String_valueOf($this.$val$fileHandle);
            var$9 = jl_String_valueOf($this.$val$fileHandle.$type());
            var$10 = jl_StringBuilder__init_();
            jl_StringBuilder_append1(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(jl_StringBuilder_append(var$10, $rt_s(862)), var$8), $rt_s(59)), var$9), 41);
            cbgu_GdxRuntimeException__init_1(var$7, jl_StringBuilder_toString(var$10), $ex);
            $rt_throw(var$7);
        } catch ($$e) {
            $$je = $rt_wrapException($$e);
            var$7 = $$je;

        }
    }
    cbgu_StreamUtils_closeQuietly($output);
    $rt_throw(var$7);
},
cgxgbta_AssetLoadImpl$6_onSuccess = ($this, var$1, var$2) => {
    $this.$onSuccess1(var$1, var$2);
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_0 = $rt_classWithoutFields(),
otji_JSWrapper$Helper$_clinit_$lambda$_3_0__init_ = var$0 => {
    jl_Object__init_(var$0);
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_0__init_0 = () => {
    let var_0 = new otji_JSWrapper$Helper$_clinit_$lambda$_3_0();
    otji_JSWrapper$Helper$_clinit_$lambda$_3_0__init_(var_0);
    return var_0;
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_0_accept = (var$0, var$1) => {
    otji_JSWrapper$Helper_lambda$static$0(var$1);
},
otji_JSWrapper$Helper$_clinit_$lambda$_3_0_accept$exported$0 = (var$1, var$2) => {
    var$1.$accept(var$2);
};
function cgxgbta_AssetLoadImpl$5() {
    let a = this; jl_Object.call(a);
    a.$val$assetFileUrl = null;
    a.$val$preloadListener = null;
    a.$this$04 = null;
}
let cgxgbta_AssetLoadImpl$5__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$04 = $this$0;
    $this.$val$assetFileUrl = var$2;
    $this.$val$preloadListener = var$3;
    jl_Object__init_($this);
},
cgxgbta_AssetLoadImpl$5__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbta_AssetLoadImpl$5();
    cgxgbta_AssetLoadImpl$5__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbta_AssetLoadImpl$5_onSuccess0 = ($this, $url, $result) => {
    let $data, $byteArray, $assets, $lines, var$7, var$8, var$9, var$10, $line, $tokens, var$13, var$14, var$15, $fileTypeStr, $assetTypeStr, $assetUrl, $shouldOverwriteLocalData, $fileType, $assetType;
    $this.$this$04.$assetDownloading.$remove4($this.$val$assetFileUrl);
    $data = cgxgbta_TeaBlob_getData($result);
    $byteArray = cgxgbtdt_TypedArrays_toByteArray($data);
    $assets = jl_String__init_8($byteArray);
    $lines = $assets.$split1($rt_s(573));
    var$7 = $lines.data;
    var$8 = $this.$this$04;
    var$9 = var$7.length;
    var$8.$assetTotal = var$9;
    var$10 = 0;
    while (var$10 < var$9) {
        $line = var$7[var$10];
        $tokens = $line.$split1($rt_s(730));
        var$13 = $tokens.data;
        var$14 = var$13.length;
        if (var$14 != 5) {
            var$8 = new cbgu_GdxRuntimeException;
            var$15 = jl_StringBuilder__init_();
            jl_StringBuilder_append(jl_StringBuilder_append1(jl_StringBuilder_append0(jl_StringBuilder_append(var$15, $rt_s(863)), var$14), 32), $line);
            cbgu_GdxRuntimeException__init_0(var$8, jl_StringBuilder_toString(var$15));
            $rt_throw(var$8);
        }
        $fileTypeStr = var$13[0];
        $assetTypeStr = var$13[1];
        $assetUrl = var$13[2].$trim();
        $shouldOverwriteLocalData = var$13[4].$equals($rt_s(864));
        var$8 = $assetUrl.$trim();
        if (!var$8.$isEmpty()) {
            cbg_Files$FileType_$callClinit();
            $fileType = cbg_Files$FileType_Internal;
            if ($fileTypeStr.$equals($rt_s(865)))
                $fileType = cbg_Files$FileType_Classpath;
            else if ($fileTypeStr.$equals($rt_s(866)))
                $fileType = cbg_Files$FileType_Local;
            cgxgbta_AssetType_$callClinit();
            $assetType = cgxgbta_AssetType_Binary;
            if ($assetTypeStr.$equals($rt_s(99)))
                $assetType = cgxgbta_AssetType_Directory;
            cgxgbta_AssetLoadImpl_addAssetToQueue($this.$this$04, var$8, $assetType, $fileType, $shouldOverwriteLocalData);
        }
        var$10 = var$10 + 1 | 0;
    }
    $this.$val$preloadListener.$onSuccess($this.$val$assetFileUrl, null);
    cgxgbta_AssetLoadImpl_downloadMultiAssets($this.$this$04, null);
},
cgxgbta_AssetLoadImpl$5_onSuccess = ($this, var$1, var$2) => {
    $this.$onSuccess1(var$1, var$2);
};
function cgxgbta_AssetLoadImpl$4() {
    let a = this; jl_Object.call(a);
    a.$val$name = null;
    a.$val$resolve = null;
    a.$this$047 = null;
}
let cgxgbta_AssetLoadImpl$4__init_ = ($this, $this$0, var$2, var$3) => {
    $this.$this$047 = $this$0;
    $this.$val$name = var$2;
    $this.$val$resolve = var$3;
    jl_Object__init_($this);
},
cgxgbta_AssetLoadImpl$4__init_0 = (var_0, var_1, var_2) => {
    let var_3 = new cgxgbta_AssetLoadImpl$4();
    cgxgbta_AssetLoadImpl$4__init_(var_3, var_0, var_1, var_2);
    return var_3;
},
cgxgbta_AssetLoadImpl$4_handleEvent = ($this, $evt) => {
    let var$2, $arrayBuffer, $data, $bytes, $fielData;
    var$2 = $evt.target;
    $arrayBuffer = var$2.result;
    $data = new Int8Array($arrayBuffer);
    $bytes = cgxgbtdt_TypedArrays_toByteArray($data);
    $fielData = cgxgbtf_FileData__init_2($this.$val$name, $bytes);
    $this.$val$resolve.accept(otji_JSWrapper_javaToJs($fielData));
},
cgxgbta_AssetLoadImpl$4_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
};
function cgxgbta_AssetLoadImpl$3() {
    let a = this; jl_Object.call(a);
    a.$val$config = null;
    a.$this$013 = null;
}
let cgxgbta_AssetLoadImpl$3__init_ = ($this, $this$0, var$2) => {
    $this.$this$013 = $this$0;
    $this.$val$config = var$2;
    jl_Object__init_($this);
},
cgxgbta_AssetLoadImpl$3__init_0 = (var_0, var_1) => {
    let var_2 = new cgxgbta_AssetLoadImpl$3();
    cgxgbta_AssetLoadImpl$3__init_(var_2, var_0, var_1);
    return var_2;
},
cgxgbta_AssetLoadImpl$3_handleEvent = ($this, $event) => {
    let $dataTransfer, $files;
    $event.preventDefault();
    $dataTransfer = $event.dataTransfer;
    $files = $dataTransfer.files;
    cgxgbta_AssetLoadImpl_downloadDroppedFile($this.$this$013, $this.$val$config, $files);
},
cgxgbta_AssetLoadImpl$3_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
};
function cgxgbta_AssetLoadImpl$2() {
    jl_Object.call(this);
    this.$this$058 = null;
}
let cgxgbta_AssetLoadImpl$2__init_ = ($this, $this$0) => {
    $this.$this$058 = $this$0;
    jl_Object__init_($this);
},
cgxgbta_AssetLoadImpl$2__init_0 = var_0 => {
    let var_1 = new cgxgbta_AssetLoadImpl$2();
    cgxgbta_AssetLoadImpl$2__init_(var_1, var_0);
    return var_1;
},
cgxgbta_AssetLoadImpl$2_handleEvent = ($this, $evt) => {
    $evt.preventDefault();
},
cgxgbta_AssetLoadImpl$2_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
};
function cgxgbta_AssetLoadImpl$1() {
    jl_Object.call(this);
    this.$this$046 = null;
}
let cgxgbta_AssetLoadImpl$1__init_ = ($this, $this$0) => {
    $this.$this$046 = $this$0;
    jl_Object__init_($this);
},
cgxgbta_AssetLoadImpl$1__init_0 = var_0 => {
    let var_1 = new cgxgbta_AssetLoadImpl$1();
    cgxgbta_AssetLoadImpl$1__init_(var_1, var_0);
    return var_1;
},
cgxgbta_AssetLoadImpl$1_handleEvent = ($this, $evt) => {
    $evt.preventDefault();
},
cgxgbta_AssetLoadImpl$1_handleEvent$exported$0 = (var$1, var$2) => {
    var$1.$handleEvent1(var$2);
};
$rt_packages([-1, "com", 0, "github", 1, "xpenatan", 2, "gdx", 3, "backends", 4, "teavm", 5, "assetloader", 5, "filesystem", 7, "types", 0, "badlogic", 9, "gdx", 10, "input", 10, "utils", 10, "scenes", 13, "scene2d", 14, "ui", 14, "utils", 10, "math", 10, "graphics", 18, "glutils", 18, "g2d", 18, "g3d", 21, "environment", 21, "shaders", 21, "utils", 21, "attributes", 21, "model", -1, "java", 27, "util", 28, "regex", 27, "nio", 30, "charset", 31, "impl", 27, "io", 27, "lang", -1, "javax", 35, "script", -1, "org",
37, "teavm", 38, "classlib", 39, "impl", 40, "unicode", -1, "bullet", 42, "examples", 43, "basic", 42, "bulletdynamics", 45, "dynamics"
]);
$rt_metadata([jl_Object, "Object", 34, 0, [], 0, 3, 0, 0, ["$isEmptyMonitor", $rt_wrapFunction0(jl_Object_isEmptyMonitor), "$getClass0", $rt_wrapFunction0(jl_Object_getClass), "$hashCode0", $rt_wrapFunction0(jl_Object_hashCode), "$equals", $rt_wrapFunction1(jl_Object_equals), "$toString", $rt_wrapFunction0(jl_Object_toString), "$identity", $rt_wrapFunction0(jl_Object_identity), "$clone0", $rt_wrapFunction0(jl_Object_clone)],
jur_AbstractCharClass$LazyCharClass, 0, jl_Object, [], 1, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyCharClass__init_), "$getValue", $rt_wrapFunction1(jur_AbstractCharClass$LazyCharClass_getValue)],
jur_AbstractCharClass$LazyBlank, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyBlank__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyBlank_computeValue)],
jur_AbstractCharClass$LazyCntrl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyCntrl__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCntrl_computeValue)],
cbgss_Actor, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_Actor__init_), "$act0", $rt_wrapFunction1(cbgss_Actor_act), "$fire0", $rt_wrapFunction1(cbgss_Actor_fire), "$notify", $rt_wrapFunction2(cbgss_Actor_notify), "$hit", $rt_wrapFunction3(cbgss_Actor_hit), "$remove", $rt_wrapFunction0(cbgss_Actor_remove), "$clearActions", $rt_wrapFunction0(cbgss_Actor_clearActions), "$clearListeners", $rt_wrapFunction0(cbgss_Actor_clearListeners), "$clear", $rt_wrapFunction0(cbgss_Actor_clear), "$getStage",
$rt_wrapFunction0(cbgss_Actor_getStage), "$setStage", $rt_wrapFunction1(cbgss_Actor_setStage), "$getParent", $rt_wrapFunction0(cbgss_Actor_getParent), "$setParent", $rt_wrapFunction1(cbgss_Actor_setParent), "$getTouchable", $rt_wrapFunction0(cbgss_Actor_getTouchable), "$setTouchable", $rt_wrapFunction1(cbgss_Actor_setTouchable), "$isVisible", $rt_wrapFunction0(cbgss_Actor_isVisible), "$getX", $rt_wrapFunction0(cbgss_Actor_getX), "$getY", $rt_wrapFunction0(cbgss_Actor_getY), "$getWidth", $rt_wrapFunction0(cbgss_Actor_getWidth),
"$getHeight", $rt_wrapFunction0(cbgss_Actor_getHeight), "$setHeight", $rt_wrapFunction1(cbgss_Actor_setHeight), "$positionChanged", $rt_wrapFunction0(cbgss_Actor_positionChanged), "$setSize", $rt_wrapFunction2(cbgss_Actor_setSize), "$setBounds", $rt_wrapFunction4(cbgss_Actor_setBounds), "$getOriginX", $rt_wrapFunction0(cbgss_Actor_getOriginX), "$getOriginY", $rt_wrapFunction0(cbgss_Actor_getOriginY), "$getScaleX", $rt_wrapFunction0(cbgss_Actor_getScaleX), "$getScaleY", $rt_wrapFunction0(cbgss_Actor_getScaleY),
"$getRotation", $rt_wrapFunction0(cbgss_Actor_getRotation), "$getColor", $rt_wrapFunction0(cbgss_Actor_getColor), "$getName", $rt_wrapFunction0(cbgss_Actor_getName), "$clipBegin", $rt_wrapFunction4(cbgss_Actor_clipBegin), "$clipEnd", $rt_wrapFunction0(cbgss_Actor_clipEnd), "$parentToLocalCoordinates", $rt_wrapFunction1(cbgss_Actor_parentToLocalCoordinates), "$drawDebug", $rt_wrapFunction1(cbgss_Actor_drawDebug), "$drawDebugBounds", $rt_wrapFunction1(cbgss_Actor_drawDebugBounds), "$setDebug", $rt_wrapFunction1(cbgss_Actor_setDebug),
"$getDebug", $rt_wrapFunction0(cbgss_Actor_getDebug), "$toString", $rt_wrapFunction0(cbgss_Actor_toString)],
cbgssu_Cullable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgss_Group, "Group", 14, cbgss_Actor, [cbgssu_Cullable], 0, 3, 0, cbgss_Group_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgss_Group__init_), "$act0", $rt_wrapFunction1(cbgss_Group_act), "$draw", $rt_wrapFunction2(cbgss_Group_draw), "$drawChildren", $rt_wrapFunction2(cbgss_Group_drawChildren), "$drawDebug", $rt_wrapFunction1(cbgss_Group_drawDebug), "$drawDebugChildren", $rt_wrapFunction1(cbgss_Group_drawDebugChildren), "$computeTransform", $rt_wrapFunction0(cbgss_Group_computeTransform), "$applyTransform",
$rt_wrapFunction2(cbgss_Group_applyTransform0), "$resetTransform", $rt_wrapFunction1(cbgss_Group_resetTransform), "$applyTransform0", $rt_wrapFunction2(cbgss_Group_applyTransform), "$resetTransform0", $rt_wrapFunction1(cbgss_Group_resetTransform0), "$hit", $rt_wrapFunction3(cbgss_Group_hit), "$childrenChanged", $rt_wrapFunction0(cbgss_Group_childrenChanged), "$addActor", $rt_wrapFunction1(cbgss_Group_addActor), "$removeActor", $rt_wrapFunction2(cbgss_Group_removeActor), "$removeActorAt", $rt_wrapFunction2(cbgss_Group_removeActorAt),
"$clearChildren", $rt_wrapFunction1(cbgss_Group_clearChildren), "$clear", $rt_wrapFunction0(cbgss_Group_clear), "$setStage", $rt_wrapFunction1(cbgss_Group_setStage), "$getChildren", $rt_wrapFunction0(cbgss_Group_getChildren), "$setTransform", $rt_wrapFunction1(cbgss_Group_setTransform), "$isTransform", $rt_wrapFunction0(cbgss_Group_isTransform), "$setDebug0", $rt_wrapFunction2(cbgss_Group_setDebug), "$debugAll", $rt_wrapFunction0(cbgss_Group_debugAll), "$toString", $rt_wrapFunction0(cbgss_Group_toString), "$toString0",
$rt_wrapFunction2(cbgss_Group_toString0)],
cbgssu_Layout, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_WidgetGroup, 0, cbgss_Group, [cbgssu_Layout], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_WidgetGroup__init_), "$validate", $rt_wrapFunction0(cbgssu_WidgetGroup_validate), "$invalidate", $rt_wrapFunction0(cbgssu_WidgetGroup_invalidate), "$invalidateHierarchy", $rt_wrapFunction0(cbgssu_WidgetGroup_invalidateHierarchy), "$childrenChanged", $rt_wrapFunction0(cbgssu_WidgetGroup_childrenChanged), "$sizeChanged", $rt_wrapFunction0(cbgssu_WidgetGroup_sizeChanged), "$setFillParent", $rt_wrapFunction1(cbgssu_WidgetGroup_setFillParent),
"$hit", $rt_wrapFunction3(cbgssu_WidgetGroup_hit), "$draw", $rt_wrapFunction2(cbgssu_WidgetGroup_draw)],
cbgssu_Table, "Table", 15, cbgssu_WidgetGroup, [], 0, 3, 0, cbgssu_Table_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgssu_Table__init_0), "$_init_7", $rt_wrapFunction1(cbgssu_Table__init_), "$draw", $rt_wrapFunction2(cbgssu_Table_draw), "$drawBackground", $rt_wrapFunction4(cbgssu_Table_drawBackground), "$hit", $rt_wrapFunction3(cbgssu_Table_hit), "$invalidate", $rt_wrapFunction0(cbgssu_Table_invalidate), "$add16", $rt_wrapFunction1(cbgssu_Table_add), "$removeActor", $rt_wrapFunction2(cbgssu_Table_removeActor),
"$removeActorAt", $rt_wrapFunction2(cbgssu_Table_removeActorAt), "$clearChildren", $rt_wrapFunction1(cbgssu_Table_clearChildren), "$row0", $rt_wrapFunction0(cbgssu_Table_row), "$getCell", $rt_wrapFunction1(cbgssu_Table_getCell), "$align", $rt_wrapFunction1(cbgssu_Table_align), "$setDebug", $rt_wrapFunction1(cbgssu_Table_setDebug), "$debugAll0", $rt_wrapFunction0(cbgssu_Table_debugAll), "$debug", $rt_wrapFunction1(cbgssu_Table_debug), "$layout", $rt_wrapFunction0(cbgssu_Table_layout), "$drawDebug", $rt_wrapFunction1(cbgssu_Table_drawDebug),
"$drawDebugBounds", $rt_wrapFunction1(cbgssu_Table_drawDebugBounds), "$debugAll", $rt_wrapFunction0(cbgssu_Table_debugAll0)],
cbgm_Interpolation, 0, jl_Object, [], 1, 3, 0, cbgm_Interpolation_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation__init_), "$apply3", $rt_wrapFunction3(cbgm_Interpolation_apply)],
cbgm_Interpolation$BounceOut, 0, cbgm_Interpolation, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgm_Interpolation$BounceOut__init_)],
jnci_BufferedEncoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_76", $rt_wrapFunction2(jnci_BufferedEncoder$Controller__init_), "$hasMoreInput", $rt_wrapFunction0(jnci_BufferedEncoder$Controller_hasMoreInput), "$hasMoreOutput", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_hasMoreOutput), "$setInPosition", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_setInPosition), "$setOutPosition", $rt_wrapFunction1(jnci_BufferedEncoder$Controller_setOutPosition)],
cbgur_ClassReflection, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgssu_Drawable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_BaseDrawable, 0, jl_Object, [cbgssu_Drawable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_BaseDrawable__init_), "$getMinWidth", $rt_wrapFunction0(cbgssu_BaseDrawable_getMinWidth), "$setMinWidth", $rt_wrapFunction1(cbgssu_BaseDrawable_setMinWidth), "$getMinHeight", $rt_wrapFunction0(cbgssu_BaseDrawable_getMinHeight), "$setMinHeight", $rt_wrapFunction1(cbgssu_BaseDrawable_setMinHeight), "$toString", $rt_wrapFunction0(cbgssu_BaseDrawable_toString)],
ji_Serializable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Number, 0, jl_Object, [ji_Serializable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_Number__init_)],
jl_Comparable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Integer, 0, jl_Number, [jl_Comparable], 0, 3, 0, jl_Integer_$callClinit, ["$_init_3", $rt_wrapFunction1(jl_Integer__init_), "$intValue", $rt_wrapFunction0(jl_Integer_intValue), "$hashCode0", $rt_wrapFunction0(jl_Integer_hashCode), "$equals", $rt_wrapFunction1(jl_Integer_equals)],
jl_Iterable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgu_Array, "Array", 12, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Array__init_5), "$_init_3", $rt_wrapFunction1(cbgu_Array__init_3), "$_init_11", $rt_wrapFunction2(cbgu_Array__init_2), "$_init_6", $rt_wrapFunction3(cbgu_Array__init_1), "$_init_15", $rt_wrapFunction1(cbgu_Array__init_7), "$_init_12", $rt_wrapFunction4(cbgu_Array__init_4), "$add1", $rt_wrapFunction1(cbgu_Array_add), "$addAll1", $rt_wrapFunction1(cbgu_Array_addAll2), "$addAll5", $rt_wrapFunction3(cbgu_Array_addAll),
"$addAll2", $rt_wrapFunction1(cbgu_Array_addAll1), "$addAll", $rt_wrapFunction3(cbgu_Array_addAll0), "$get", $rt_wrapFunction1(cbgu_Array_get), "$set13", $rt_wrapFunction2(cbgu_Array_set), "$insert21", $rt_wrapFunction2(cbgu_Array_insert), "$contains2", $rt_wrapFunction2(cbgu_Array_contains), "$indexOf", $rt_wrapFunction2(cbgu_Array_indexOf), "$removeValue", $rt_wrapFunction2(cbgu_Array_removeValue), "$removeIndex", $rt_wrapFunction1(cbgu_Array_removeIndex), "$removeRange", $rt_wrapFunction2(cbgu_Array_removeRange),
"$pop0", $rt_wrapFunction0(cbgu_Array_pop), "$peek", $rt_wrapFunction0(cbgu_Array_peek), "$first1", $rt_wrapFunction0(cbgu_Array_first), "$clear", $rt_wrapFunction0(cbgu_Array_clear), "$ensureCapacity1", $rt_wrapFunction1(cbgu_Array_ensureCapacity), "$resize", $rt_wrapFunction1(cbgu_Array_resize), "$sort0", $rt_wrapFunction1(cbgu_Array_sort), "$iterator", $rt_wrapFunction0(cbgu_Array_iterator0), "$truncate0", $rt_wrapFunction1(cbgu_Array_truncate), "$hashCode0", $rt_wrapFunction0(cbgu_Array_hashCode), "$equals",
$rt_wrapFunction1(cbgu_Array_equals), "$toString", $rt_wrapFunction0(cbgu_Array_toString), "$iterator0", $rt_wrapFunction0(cbgu_Array_iterator)],
cbgu_DelayedRemovalArray, 0, cbgu_Array, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgu_DelayedRemovalArray__init_), "$begin", $rt_wrapFunction0(cbgu_DelayedRemovalArray_begin), "$end", $rt_wrapFunction0(cbgu_DelayedRemovalArray_end), "$removeIndex", $rt_wrapFunction1(cbgu_DelayedRemovalArray_removeIndex), "$clear", $rt_wrapFunction0(cbgu_DelayedRemovalArray_clear)],
otj_JSObject, 0, jl_Object, [], 3, 3, 0, 0, 0,
bl_btMotionState$setWorldTransform, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
jur_AbstractCharClass$LazyAlpha, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlpha__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlpha_computeValue)],
cbgggs_DefaultShader$Setters, 0, jl_Object, [], 0, 3, 0, cbgggs_DefaultShader$Setters_$callClinit, 0,
cgxgbta_AssetLoader, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl, 0, jl_Object, [cgxgbta_AssetLoader], 0, 3, 0, 0, ["$_init_210", $rt_wrapFunction3(cgxgbta_AssetLoadImpl__init_), "$setupFileDrop", $rt_wrapFunction2(cgxgbta_AssetLoadImpl_setupFileDrop), "$getAssetUrl", $rt_wrapFunction0(cgxgbta_AssetLoadImpl_getAssetUrl), "$getScriptUrl", $rt_wrapFunction0(cgxgbta_AssetLoadImpl_getScriptUrl), "$preload", $rt_wrapFunction2(cgxgbta_AssetLoadImpl_preload), "$loadAsset", $rt_wrapFunction4(cgxgbta_AssetLoadImpl_loadAsset), "$loadScript1", $rt_wrapFunction2(cgxgbta_AssetLoadImpl_loadScript),
"$getQueue", $rt_wrapFunction0(cgxgbta_AssetLoadImpl_getQueue), "$getDownloadingCount", $rt_wrapFunction0(cgxgbta_AssetLoadImpl_getDownloadingCount), "$isDownloading", $rt_wrapFunction0(cgxgbta_AssetLoadImpl_isDownloading)],
jur_AbstractCharClass$LazyWord, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyWord__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyWord_computeValue)],
jur_AbstractCharClass$LazyNonWord, 0, jur_AbstractCharClass$LazyWord, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonWord__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonWord_computeValue)],
jl_Enum, 0, jl_Object, [jl_Comparable, ji_Serializable], 1, 3, 0, 0, ["$_init_23", $rt_wrapFunction2(jl_Enum__init_), "$ordinal", $rt_wrapFunction0(jl_Enum_ordinal), "$toString", $rt_wrapFunction0(jl_Enum_toString)],
cbg_Application$ApplicationType, 0, jl_Enum, [], 12, 3, 0, cbg_Application$ApplicationType_$callClinit, 0,
jur_AbstractSet, 0, jl_Object, [], 1, 0, 0, jur_AbstractSet_$callClinit, ["$_init_0", $rt_wrapFunction0(jur_AbstractSet__init_), "$_init_24", $rt_wrapFunction1(jur_AbstractSet__init_0), "$find", $rt_wrapFunction3(jur_AbstractSet_find), "$findBack", $rt_wrapFunction4(jur_AbstractSet_findBack), "$setType", $rt_wrapFunction1(jur_AbstractSet_setType), "$getType0", $rt_wrapFunction0(jur_AbstractSet_getType), "$getQualifiedName", $rt_wrapFunction0(jur_AbstractSet_getQualifiedName), "$toString", $rt_wrapFunction0(jur_AbstractSet_toString),
"$getNext", $rt_wrapFunction0(jur_AbstractSet_getNext), "$setNext", $rt_wrapFunction1(jur_AbstractSet_setNext), "$first", $rt_wrapFunction1(jur_AbstractSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_AbstractSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_AbstractSet_processSecondPass)],
jur_LeafSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$_init_24", $rt_wrapFunction1(jur_LeafSet__init_0), "$_init_0", $rt_wrapFunction0(jur_LeafSet__init_), "$matches", $rt_wrapFunction3(jur_LeafSet_matches), "$charCount", $rt_wrapFunction0(jur_LeafSet_charCount), "$hasConsumed", $rt_wrapFunction1(jur_LeafSet_hasConsumed)],
jur_CISequenceSet, "CISequenceSet", 29, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_180", $rt_wrapFunction1(jur_CISequenceSet__init_), "$accepts", $rt_wrapFunction2(jur_CISequenceSet_accepts), "$getName", $rt_wrapFunction0(jur_CISequenceSet_getName)],
cbg_InputProcessor, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_InputAdapter, 0, jl_Object, [cbg_InputProcessor], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbg_InputAdapter__init_), "$keyTyped", $rt_wrapFunction1(cbg_InputAdapter_keyTyped), "$mouseMoved", $rt_wrapFunction2(cbg_InputAdapter_mouseMoved)],
cbgi_GestureDetector, 0, cbg_InputAdapter, [], 0, 3, 0, 0, ["$_init_219", $rt_wrapFunction1(cbgi_GestureDetector__init_0), "$_init_25", function(var_1, var_2, var_3, var_4, var_5) { cbgi_GestureDetector__init_1(this, var_1, var_2, var_3, var_4, var_5); }, "$_init_26", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbgi_GestureDetector__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$touchDown0", $rt_wrapFunction4(cbgi_GestureDetector_touchDown), "$touchDown", $rt_wrapFunction4(cbgi_GestureDetector_touchDown0),
"$touchDragged0", $rt_wrapFunction3(cbgi_GestureDetector_touchDragged), "$touchDragged", $rt_wrapFunction3(cbgi_GestureDetector_touchDragged0), "$touchUp0", $rt_wrapFunction4(cbgi_GestureDetector_touchUp), "$touchUp", $rt_wrapFunction4(cbgi_GestureDetector_touchUp0)],
jl_CharSequence, 0, jl_Object, [], 3, 3, 0, 0, 0,
bl_btMotionState$getWorldTransform, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cbgu_Pools, 0, jl_Object, [], 0, 3, 0, cbgu_Pools_$callClinit, 0,
cbgm_Interpolation$SwingOut, 0, cbgm_Interpolation, [], 0, 3, 0, 0, ["$_init_10", $rt_wrapFunction1(cbgm_Interpolation$SwingOut__init_)],
jur_AbstractCharClass$LazyCategory, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_38", $rt_wrapFunction2(jur_AbstractCharClass$LazyCategory__init_0), "$_init_39", $rt_wrapFunction3(jur_AbstractCharClass$LazyCategory__init_1), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategory_computeValue)],
cbgm_Interpolation$Exp, 0, cbgm_Interpolation, [], 0, 3, 0, 0, ["$_init_8", $rt_wrapFunction2(cbgm_Interpolation$Exp__init_)],
otji_JSWrapper$Helper, 0, jl_Object, [], 0, 0, 0, otji_JSWrapper$Helper_$callClinit, 0,
jur_FSet, "FSet", 29, jur_AbstractSet, [], 0, 0, 0, jur_FSet_$callClinit, ["$_init_3", $rt_wrapFunction1(jur_FSet__init_), "$matches", $rt_wrapFunction3(jur_FSet_matches), "$getGroupIndex", $rt_wrapFunction0(jur_FSet_getGroupIndex), "$getName", $rt_wrapFunction0(jur_FSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet_hasConsumed)],
jur_BehindFSet, "BehindFSet", 29, jur_FSet, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_BehindFSet__init_), "$matches", $rt_wrapFunction3(jur_BehindFSet_matches), "$getName", $rt_wrapFunction0(jur_BehindFSet_getName)],
jur_JointSet, "JointSet", 29, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_JointSet__init_), "$_init_41", $rt_wrapFunction2(jur_JointSet__init_0), "$matches", $rt_wrapFunction3(jur_JointSet_matches), "$setNext", $rt_wrapFunction1(jur_JointSet_setNext), "$getName", $rt_wrapFunction0(jur_JointSet_getName), "$first", $rt_wrapFunction1(jur_JointSet_first), "$hasConsumed", $rt_wrapFunction1(jur_JointSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_JointSet_processSecondPass)],
jur_LowHighSurrogateRangeSet, 0, jur_JointSet, [], 0, 0, 0, 0, ["$_init_136", $rt_wrapFunction1(jur_LowHighSurrogateRangeSet__init_), "$setNext", $rt_wrapFunction1(jur_LowHighSurrogateRangeSet_setNext), "$matches", $rt_wrapFunction3(jur_LowHighSurrogateRangeSet_matches), "$getName", $rt_wrapFunction0(jur_LowHighSurrogateRangeSet_getName)]]);
$rt_metadata([jl_AutoCloseable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_Closeable, 0, jl_Object, [jl_AutoCloseable], 3, 3, 0, 0, 0,
ji_Flushable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ji_OutputStream, 0, jl_Object, [ji_Closeable, ji_Flushable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_OutputStream__init_), "$write1", $rt_wrapFunction1(ji_OutputStream_write)],
ji_ByteArrayOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(ji_ByteArrayOutputStream__init_), "$write", $rt_wrapFunction3(ji_ByteArrayOutputStream_write), "$toByteArray0", $rt_wrapFunction0(ji_ByteArrayOutputStream_toByteArray)],
cbg_Gdx, 0, jl_Object, [], 0, 3, 0, 0, 0,
jl_Throwable, 0, jl_Object, [], 0, 3, 0, 0, ["$fillInStackTrace", $rt_wrapFunction0(jl_Throwable_fillInStackTrace), "$getMessage", $rt_wrapFunction0(jl_Throwable_getMessage), "$getLocalizedMessage", $rt_wrapFunction0(jl_Throwable_getLocalizedMessage), "$getCause", $rt_wrapFunction0(jl_Throwable_getCause), "$printStackTrace0", $rt_wrapFunction0(jl_Throwable_printStackTrace0), "$printStackTrace", $rt_wrapFunction1(jl_Throwable_printStackTrace)],
jl_Exception, 0, jl_Throwable, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_Exception__init_), "$_init_5", $rt_wrapFunction2(jl_Exception__init_1), "$_init_", $rt_wrapFunction1(jl_Exception__init_0)],
jl_RuntimeException, "RuntimeException", 34, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_RuntimeException__init_), "$_init_5", $rt_wrapFunction2(jl_RuntimeException__init_2), "$_init_", $rt_wrapFunction1(jl_RuntimeException__init_0)],
jl_ClassCastException, "ClassCastException", 34, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_ClassCastException__init_)],
jur_QuantifierSet, 0, jur_AbstractSet, [], 1, 0, 0, 0, ["$_init_29", $rt_wrapFunction3(jur_QuantifierSet__init_), "$getInnerSet", $rt_wrapFunction0(jur_QuantifierSet_getInnerSet), "$first", $rt_wrapFunction1(jur_QuantifierSet_first), "$hasConsumed", $rt_wrapFunction1(jur_QuantifierSet_hasConsumed), "$processSecondPass", $rt_wrapFunction0(jur_QuantifierSet_processSecondPass)],
jur_GroupQuantifierSet, "GroupQuantifierSet", 29, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_29", $rt_wrapFunction3(jur_GroupQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_GroupQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_GroupQuantifierSet_getName)],
jur_PosPlusGroupQuantifierSet, "PosPlusGroupQuantifierSet", 29, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_29", $rt_wrapFunction3(jur_PosPlusGroupQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_PosPlusGroupQuantifierSet_matches)],
cbgf_FileHandle, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgf_FileHandle__init_), "$readString", $rt_wrapFunction1(cbgf_FileHandle_readString), "$readBytes", $rt_wrapFunction0(cbgf_FileHandle_readBytes)],
cgxgbt_TeaFileHandle, "TeaFileHandle", 5, cbgf_FileHandle, [], 0, 3, 0, 0, ["$_init_32", $rt_wrapFunction3(cgxgbt_TeaFileHandle__init_), "$path", $rt_wrapFunction0(cgxgbt_TeaFileHandle_path), "$name", $rt_wrapFunction0(cgxgbt_TeaFileHandle_name), "$nameWithoutExtension", $rt_wrapFunction0(cgxgbt_TeaFileHandle_nameWithoutExtension), "$type", $rt_wrapFunction0(cgxgbt_TeaFileHandle_type), "$read", $rt_wrapFunction0(cgxgbt_TeaFileHandle_read), "$readString0", $rt_wrapFunction0(cgxgbt_TeaFileHandle_readString0),
"$readString", $rt_wrapFunction1(cgxgbt_TeaFileHandle_readString), "$write2", $rt_wrapFunction2(cgxgbt_TeaFileHandle_write), "$child", $rt_wrapFunction1(cgxgbt_TeaFileHandle_child), "$parent", $rt_wrapFunction0(cgxgbt_TeaFileHandle_parent), "$mkdirsInternal", $rt_wrapFunction0(cgxgbt_TeaFileHandle_mkdirsInternal), "$exists", $rt_wrapFunction0(cgxgbt_TeaFileHandle_exists), "$length0", $rt_wrapFunction0(cgxgbt_TeaFileHandle_length), "$toString", $rt_wrapFunction0(cgxgbt_TeaFileHandle_toString)],
cbgggus_BaseShapeBuilder, 0, jl_Object, [], 0, 3, 0, cbgggus_BaseShapeBuilder_$callClinit, 0,
jl_AbstractStringBuilder, 0, jl_Object, [ji_Serializable, jl_CharSequence], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_AbstractStringBuilder__init_0), "$_init_3", $rt_wrapFunction1(jl_AbstractStringBuilder__init_), "$append23", $rt_wrapFunction1(jl_AbstractStringBuilder_append7), "$append10", $rt_wrapFunction1(jl_AbstractStringBuilder_append), "$insert1", $rt_wrapFunction2(jl_AbstractStringBuilder_insert0), "$append24", $rt_wrapFunction1(jl_AbstractStringBuilder_append3), "$append3", $rt_wrapFunction2(jl_AbstractStringBuilder_append10),
"$insert2", $rt_wrapFunction3(jl_AbstractStringBuilder_insert8), "$append25", $rt_wrapFunction1(jl_AbstractStringBuilder_append8), "$insert3", $rt_wrapFunction2(jl_AbstractStringBuilder_insert4), "$insert4", $rt_wrapFunction3(jl_AbstractStringBuilder_insert7), "$append26", $rt_wrapFunction1(jl_AbstractStringBuilder_append6), "$insert5", $rt_wrapFunction2(jl_AbstractStringBuilder_insert6), "$append11", $rt_wrapFunction1(jl_AbstractStringBuilder_append0), "$insert6", $rt_wrapFunction2(jl_AbstractStringBuilder_insert1),
"$insert0", $rt_wrapFunction2(jl_AbstractStringBuilder_insert3), "$append27", $rt_wrapFunction1(jl_AbstractStringBuilder_append5), "$insert7", $rt_wrapFunction2(jl_AbstractStringBuilder_insert2), "$ensureCapacity", $rt_wrapFunction1(jl_AbstractStringBuilder_ensureCapacity), "$toString", $rt_wrapFunction0(jl_AbstractStringBuilder_toString), "$length", $rt_wrapFunction0(jl_AbstractStringBuilder_length), "$charAt", $rt_wrapFunction1(jl_AbstractStringBuilder_charAt), "$isEmpty", $rt_wrapFunction0(jl_AbstractStringBuilder_isEmpty),
"$append8", $rt_wrapFunction3(jl_AbstractStringBuilder_append4), "$insert8", $rt_wrapFunction4(jl_AbstractStringBuilder_insert5), "$append13", $rt_wrapFunction1(jl_AbstractStringBuilder_append9), "$append9", $rt_wrapFunction3(jl_AbstractStringBuilder_append2), "$insert9", $rt_wrapFunction4(jl_AbstractStringBuilder_insert), "$append12", $rt_wrapFunction1(jl_AbstractStringBuilder_append1), "$subSequence", $rt_wrapFunction2(jl_AbstractStringBuilder_subSequence), "$setLength", $rt_wrapFunction1(jl_AbstractStringBuilder_setLength),
"$deleteCharAt0", $rt_wrapFunction1(jl_AbstractStringBuilder_deleteCharAt), "$delete1", $rt_wrapFunction2(jl_AbstractStringBuilder_delete), "$substring", $rt_wrapFunction2(jl_AbstractStringBuilder_substring)],
jl_Appendable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_StringBuffer, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_StringBuffer__init_0), "$append29", $rt_wrapFunction1(jl_StringBuffer_append), "$append21", $rt_wrapFunction1(jl_StringBuffer_append1), "$append14", $rt_wrapFunction3(jl_StringBuffer_append2), "$append22", $rt_wrapFunction1(jl_StringBuffer_append0), "$append15", $rt_wrapFunction3(jl_StringBuffer_append3), "$append28", $rt_wrapFunction1(jl_StringBuffer_append6), "$insert11", $rt_wrapFunction4(jl_StringBuffer_insert2),
"$insert10", $rt_wrapFunction4(jl_StringBuffer_insert3), "$insert12", $rt_wrapFunction2(jl_StringBuffer_insert6), "$insert13", $rt_wrapFunction2(jl_StringBuffer_insert4), "$insert9", $rt_wrapFunction4(jl_StringBuffer_insert), "$append9", $rt_wrapFunction3(jl_StringBuffer_append4), "$insert8", $rt_wrapFunction4(jl_StringBuffer_insert1), "$append8", $rt_wrapFunction3(jl_StringBuffer_append5), "$charAt", $rt_wrapFunction1(jl_StringBuffer_charAt), "$length", $rt_wrapFunction0(jl_StringBuffer_length), "$toString",
$rt_wrapFunction0(jl_StringBuffer_toString), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuffer_ensureCapacity), "$insert6", $rt_wrapFunction2(jl_StringBuffer_insert5), "$insert1", $rt_wrapFunction2(jl_StringBuffer_insert0)],
cbgu_Pool$Poolable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jn_Buffer, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_Buffer__init_), "$capacity", $rt_wrapFunction0(jn_Buffer_capacity), "$position1", $rt_wrapFunction0(jn_Buffer_position), "$position", $rt_wrapFunction1(jn_Buffer_position0), "$limit0", $rt_wrapFunction0(jn_Buffer_limit), "$limit", $rt_wrapFunction1(jn_Buffer_limit0), "$clear0", $rt_wrapFunction0(jn_Buffer_clear), "$flip", $rt_wrapFunction0(jn_Buffer_flip), "$remaining", $rt_wrapFunction0(jn_Buffer_remaining), "$hasRemaining", $rt_wrapFunction0(jn_Buffer_hasRemaining)],
jur_SpecialToken, 0, jl_Object, [], 1, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_SpecialToken__init_)],
jur_AbstractCharClass, 0, jur_SpecialToken, [], 1, 0, 0, jur_AbstractCharClass_$callClinit, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass__init_), "$getBits", $rt_wrapFunction0(jur_AbstractCharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getLowHighSurrogates), "$hasLowHighSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_hasLowHighSurrogates), "$mayContainSupplCodepoints", $rt_wrapFunction0(jur_AbstractCharClass_mayContainSupplCodepoints), "$getInstance", $rt_wrapFunction0(jur_AbstractCharClass_getInstance),
"$getSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getSurrogates), "$getWithoutSurrogates", $rt_wrapFunction0(jur_AbstractCharClass_getWithoutSurrogates), "$hasUCI", $rt_wrapFunction0(jur_AbstractCharClass_hasUCI), "$setNegative", $rt_wrapFunction1(jur_AbstractCharClass_setNegative), "$isNegative", $rt_wrapFunction0(jur_AbstractCharClass_isNegative)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierPart$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_177", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart$1_contains)],
jur_AbstractCharClass$PredefinedCharacterClasses, 0, jl_Object, [], 4, 0, 0, jur_AbstractCharClass$PredefinedCharacterClasses_$callClinit, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$PredefinedCharacterClasses__init_), "$getObject", $rt_wrapFunction1(jur_AbstractCharClass$PredefinedCharacterClasses_getObject)],
cbg_Input, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_PixmapNativeInterface, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgmc_BoundingBox, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_BoundingBox_$callClinit, ["$getCenter", $rt_wrapFunction1(cbgmc_BoundingBox_getCenter), "$getDimensions", $rt_wrapFunction1(cbgmc_BoundingBox_getDimensions), "$_init_0", $rt_wrapFunction0(cbgmc_BoundingBox__init_), "$set9", $rt_wrapFunction2(cbgmc_BoundingBox_set), "$update0", $rt_wrapFunction0(cbgmc_BoundingBox_update), "$inf", $rt_wrapFunction0(cbgmc_BoundingBox_inf), "$clr", $rt_wrapFunction0(cbgmc_BoundingBox_clr), "$ext", $rt_wrapFunction3(cbgmc_BoundingBox_ext)],
jur_AbstractCharClass$LazyDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyDigit__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyDigit_computeValue)],
jur_AbstractCharClass$LazyJavaLetter, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetter__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetter_computeValue)],
cbgu_TimeUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgm_Interpolation$1, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$1__init_), "$apply", $rt_wrapFunction1(cbgm_Interpolation$1_apply)],
cbgm_Interpolation$2, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$2__init_)],
jur_AheadFSet, "AheadFSet", 29, jur_FSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AheadFSet__init_), "$matches", $rt_wrapFunction3(jur_AheadFSet_matches), "$getName", $rt_wrapFunction0(jur_AheadFSet_getName)],
cbgm_Interpolation$5, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$5__init_)],
cbgm_Interpolation$Pow, 0, cbgm_Interpolation, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgm_Interpolation$Pow__init_0)],
cbgm_Interpolation$6, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$6__init_)],
cbgggs_BaseShader$Validator, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgm_Interpolation$3, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$3__init_)],
cbgm_Interpolation$4, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$4__init_)],
cbgm_Interpolation$9, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$9__init_)],
cbgm_Interpolation$7, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$7__init_)],
cbgm_Interpolation$8, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$8__init_)],
cbgu_DefaultPool$PoolSupplier, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgss_Stage$fireEnterAndExit$lambda$_8_1, "Stage$fireEnterAndExit$lambda$_8_1", 14, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_Stage$fireEnterAndExit$lambda$_8_1__init_), "$get3", $rt_wrapFunction0(cbgss_Stage$fireEnterAndExit$lambda$_8_1_get0), "$get6", $rt_wrapFunction0(cbgss_Stage$fireEnterAndExit$lambda$_8_1_get)],
cbgss_Stage$fireEnterAndExit$lambda$_8_0, "Stage$fireEnterAndExit$lambda$_8_0", 14, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_Stage$fireEnterAndExit$lambda$_8_0__init_), "$get3", $rt_wrapFunction0(cbgss_Stage$fireEnterAndExit$lambda$_8_0_get0), "$get6", $rt_wrapFunction0(cbgss_Stage$fireEnterAndExit$lambda$_8_0_get)],
jur_NonCapJointSet, "NonCapJointSet", 29, jur_JointSet, [], 0, 0, 0, 0, ["$_init_41", $rt_wrapFunction2(jur_NonCapJointSet__init_), "$matches", $rt_wrapFunction3(jur_NonCapJointSet_matches), "$getName", $rt_wrapFunction0(jur_NonCapJointSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapJointSet_hasConsumed)],
jur_AtomicJointSet, "AtomicJointSet", 29, jur_NonCapJointSet, [], 0, 0, 0, 0, ["$_init_41", $rt_wrapFunction2(jur_AtomicJointSet__init_), "$matches", $rt_wrapFunction3(jur_AtomicJointSet_matches), "$setNext", $rt_wrapFunction1(jur_AtomicJointSet_setNext), "$getName", $rt_wrapFunction0(jur_AtomicJointSet_getName)],
jur_PositiveLookAhead, "PositiveLookAhead", 29, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_41", $rt_wrapFunction2(jur_PositiveLookAhead__init_), "$matches", $rt_wrapFunction3(jur_PositiveLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookAhead_hasConsumed), "$getName", $rt_wrapFunction0(jur_PositiveLookAhead_getName)],
jur_NegativeLookAhead, "NegativeLookAhead", 29, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_41", $rt_wrapFunction2(jur_NegativeLookAhead__init_), "$matches", $rt_wrapFunction3(jur_NegativeLookAhead_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookAhead_hasConsumed), "$getName", $rt_wrapFunction0(jur_NegativeLookAhead_getName)]]);
$rt_metadata([jl_Readable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jn_CharBuffer, 0, jn_Buffer, [jl_Comparable, jl_Appendable, jl_CharSequence, jl_Readable], 1, 3, 0, 0, ["$_init_37", $rt_wrapFunction2(jn_CharBuffer__init_), "$get7", $rt_wrapFunction3(jn_CharBuffer_get), "$get13", $rt_wrapFunction1(jn_CharBuffer_get0), "$put6", $rt_wrapFunction3(jn_CharBuffer_put1), "$put0", $rt_wrapFunction3(jn_CharBuffer_put0), "$put5", $rt_wrapFunction1(jn_CharBuffer_put), "$hasArray", $rt_wrapFunction0(jn_CharBuffer_hasArray), "$array0", $rt_wrapFunction0(jn_CharBuffer_array), "$flip2",
$rt_wrapFunction0(jn_CharBuffer_flip), "$position0", $rt_wrapFunction1(jn_CharBuffer_position)],
jn_CharBufferImpl, 0, jn_CharBuffer, [], 1, 0, 0, 0, ["$_init_37", $rt_wrapFunction2(jn_CharBufferImpl__init_), "$compact", $rt_wrapFunction0(jn_CharBufferImpl_compact), "$isReadOnly", $rt_wrapFunction0(jn_CharBufferImpl_isReadOnly)],
jn_ArrayBufferViewProvider, 0, jl_Object, [], 3, 3, 0, 0, 0,
jn_CharBufferOverTypedArray, 0, jn_CharBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$_init_42", function(var_1, var_2, var_3, var_4, var_5) { jn_CharBufferOverTypedArray__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$readOnly", $rt_wrapFunction0(jn_CharBufferOverTypedArray_readOnly), "$getChar", $rt_wrapFunction1(jn_CharBufferOverTypedArray_getChar), "$putChar", $rt_wrapFunction2(jn_CharBufferOverTypedArray_putChar), "$isArrayPresent", $rt_wrapFunction0(jn_CharBufferOverTypedArray_isArrayPresent),
"$getArray", $rt_wrapFunction0(jn_CharBufferOverTypedArray_getArray), "$capacityImpl", $rt_wrapFunction0(jn_CharBufferOverTypedArray_capacityImpl), "$getImpl", $rt_wrapFunction4(jn_CharBufferOverTypedArray_getImpl), "$putImpl", $rt_wrapFunction4(jn_CharBufferOverTypedArray_putImpl0), "$putImpl0", $rt_wrapFunction4(jn_CharBufferOverTypedArray_putImpl)],
otjt_ArrayBufferView, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otjt_TypedArray, 0, otjt_ArrayBufferView, [], 1, 3, 0, 0, 0,
jl_UnsupportedOperationException, "UnsupportedOperationException", 34, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_UnsupportedOperationException__init_)],
jn_ReadOnlyBufferException, "ReadOnlyBufferException", 30, jl_UnsupportedOperationException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_ReadOnlyBufferException__init_0)],
cgxgbt_TeaPermissions$TeaPermissionResult, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaClipboard$ClipboardWriteHandler, 0, jl_Object, [cgxgbt_TeaPermissions$TeaPermissionResult], 0, 0, 0, 0, ["$granted", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_granted), "$denied", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_denied), "$prompt", $rt_wrapFunction0(cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt)],
cgxgbta_AssetType, 0, jl_Enum, [], 12, 3, 0, cgxgbta_AssetType_$callClinit, 0,
jlr_Array, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggge_BaseLight, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggge_BaseLight__init_)],
cbggge_PointLight, 0, cbggge_BaseLight, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggge_PointLight__init_), "$set48", $rt_wrapFunction1(cbggge_PointLight_set0), "$set10", $rt_wrapFunction3(cbggge_PointLight_set1), "$set45", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return cbggge_PointLight_set(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$equals5", $rt_wrapFunction1(cbggge_PointLight_equals)],
cbg_Files, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaFiles, 0, jl_Object, [cbg_Files], 0, 3, 0, 0, ["$_init_212", $rt_wrapFunction2(cgxgbt_TeaFiles__init_), "$getFileDB", $rt_wrapFunction1(cgxgbt_TeaFiles_getFileDB), "$getFileHandle", $rt_wrapFunction2(cgxgbt_TeaFiles_getFileHandle), "$classpath", $rt_wrapFunction1(cgxgbt_TeaFiles_classpath), "$internal", $rt_wrapFunction1(cgxgbt_TeaFiles_internal), "$local", $rt_wrapFunction1(cgxgbt_TeaFiles_local)],
jur_AbstractCharClass$LazyJavaDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDigit__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDigit_computeValue)],
cbgssu_TransformDrawable, 0, jl_Object, [cbgssu_Drawable], 3, 3, 0, 0, 0,
cbgggs_BaseShader$Setter, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggs_BaseShader$LocalSetter, 0, jl_Object, [cbgggs_BaseShader$Setter], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_BaseShader$LocalSetter__init_), "$isGlobal", $rt_wrapFunction2(cbgggs_BaseShader$LocalSetter_isGlobal)],
otjb_TimerHandler, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtu_Timer$1, 0, jl_Object, [otjb_TimerHandler], 0, 0, 0, 0, ["$_init_137", $rt_wrapFunction2(cgxgbtu_Timer$1__init_), "$onTimer", $rt_wrapFunction0(cgxgbtu_Timer$1_onTimer)],
otji_JS, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1, "AbstractCharClass$LazyJavaUnicodeIdentifierStart$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_85", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart$1_contains)],
jnc_Charset, 0, jl_Object, [jl_Comparable], 1, 3, 0, 0, ["$_init_46", $rt_wrapFunction2(jnc_Charset__init_), "$name", $rt_wrapFunction0(jnc_Charset_name), "$decode", $rt_wrapFunction1(jnc_Charset_decode), "$encode", $rt_wrapFunction1(jnc_Charset_encode)],
jnci_UTF16Charset, "UTF16Charset", 32, jnc_Charset, [], 0, 3, 0, 0, ["$_init_174", $rt_wrapFunction3(jnci_UTF16Charset__init_0), "$newDecoder", $rt_wrapFunction0(jnci_UTF16Charset_newDecoder)],
cgxgbt_TeaPreloadApplicationListener$BorderDrawable, 0, cbgssu_BaseDrawable, [], 0, 0, 0, 0, ["$_init_104", $rt_wrapFunction1(cgxgbt_TeaPreloadApplicationListener$BorderDrawable__init_), "$draw0", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaPreloadApplicationListener$BorderDrawable_draw(this, var_1, var_2, var_3, var_4, var_5); }, "$getLeftWidth", $rt_wrapFunction0(cgxgbt_TeaPreloadApplicationListener$BorderDrawable_getLeftWidth), "$getRightWidth", $rt_wrapFunction0(cgxgbt_TeaPreloadApplicationListener$BorderDrawable_getRightWidth),
"$getTopHeight", $rt_wrapFunction0(cgxgbt_TeaPreloadApplicationListener$BorderDrawable_getTopHeight), "$getBottomHeight", $rt_wrapFunction0(cgxgbt_TeaPreloadApplicationListener$BorderDrawable_getBottomHeight), "$getMinHeight", $rt_wrapFunction0(cgxgbt_TeaPreloadApplicationListener$BorderDrawable_getMinHeight)],
otciu_UnicodeHelper, 0, jl_Object, [], 4, 3, 0, 0, 0,
otp_PlatformRunnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Object$monitorEnterWait$lambda$_6_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$_init_1", $rt_wrapFunction4(jl_Object$monitorEnterWait$lambda$_6_0__init_), "$run", $rt_wrapFunction0(jl_Object$monitorEnterWait$lambda$_6_0_run)],
jur_AbstractCharClass$LazyAlnum, 0, jur_AbstractCharClass$LazyAlpha, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlnum__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyAlnum_computeValue)],
jur_AbstractCharClass$LazyGraph, 0, jur_AbstractCharClass$LazyAlnum, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyGraph__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyGraph_computeValue)],
jur_AbstractCharClass$LazyPrint, 0, jur_AbstractCharClass$LazyGraph, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyPrint__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPrint_computeValue)],
jur_AbstractCharClass$LazyJavaSpaceChar, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaSpaceChar__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaSpaceChar_computeValue)],
otjc_JSUndefined, 0, jl_Object, [otj_JSObject], 0, 3, 0, 0, 0,
jur_PositiveLookBehind, "PositiveLookBehind", 29, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_41", $rt_wrapFunction2(jur_PositiveLookBehind__init_), "$matches", $rt_wrapFunction3(jur_PositiveLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_PositiveLookBehind_hasConsumed), "$getName", $rt_wrapFunction0(jur_PositiveLookBehind_getName)],
jnc_CharsetEncoder, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_52", $rt_wrapFunction4(jnc_CharsetEncoder__init_0), "$_init_75", $rt_wrapFunction3(jnc_CharsetEncoder__init_), "$onMalformedInput0", $rt_wrapFunction1(jnc_CharsetEncoder_onMalformedInput), "$implOnMalformedInput", $rt_wrapFunction1(jnc_CharsetEncoder_implOnMalformedInput), "$onUnmappableCharacter0", $rt_wrapFunction1(jnc_CharsetEncoder_onUnmappableCharacter), "$implOnUnmappableCharacter", $rt_wrapFunction1(jnc_CharsetEncoder_implOnUnmappableCharacter),
"$encode0", $rt_wrapFunction3(jnc_CharsetEncoder_encode), "$encode", $rt_wrapFunction1(jnc_CharsetEncoder_encode0), "$flush0", $rt_wrapFunction1(jnc_CharsetEncoder_flush), "$implFlush", $rt_wrapFunction1(jnc_CharsetEncoder_implFlush), "$reset", $rt_wrapFunction0(jnc_CharsetEncoder_reset), "$implReset", $rt_wrapFunction0(jnc_CharsetEncoder_implReset)],
cbgu_StringBuilder, 0, jl_Object, [jl_Appendable, jl_CharSequence], 0, 3, 0, cbgu_StringBuilder_$callClinit, ["$_init_3", $rt_wrapFunction1(cbgu_StringBuilder__init_0), "$appendNull", $rt_wrapFunction0(cbgu_StringBuilder_appendNull), "$append00", $rt_wrapFunction1(cbgu_StringBuilder_append0), "$append01", $rt_wrapFunction1(cbgu_StringBuilder_append00), "$toString", $rt_wrapFunction0(cbgu_StringBuilder_toString), "$append4", $rt_wrapFunction1(cbgu_StringBuilder_append2), "$append30", $rt_wrapFunction1(cbgu_StringBuilder_append3),
"$append16", $rt_wrapFunction2(cbgu_StringBuilder_append1), "$append17", $rt_wrapFunction3(cbgu_StringBuilder_append), "$append5", $rt_wrapFunction1(cbgu_StringBuilder_append5), "$append6", $rt_wrapFunction1(cbgu_StringBuilder_append4)],
jnci_AsciiCharset, "AsciiCharset", 32, jnc_Charset, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnci_AsciiCharset__init_), "$newDecoder", $rt_wrapFunction0(jnci_AsciiCharset_newDecoder)],
jl_ArrayStoreException, "ArrayStoreException", 34, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_ArrayStoreException__init_0)],
jur_MatchResult, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_MatchResultImpl, 0, jl_Object, [jur_MatchResult], 0, 0, 0, 0, ["$_init_223", function(var_1, var_2, var_3, var_4, var_5, var_6) { jur_MatchResultImpl__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setConsumed", $rt_wrapFunction2(jur_MatchResultImpl_setConsumed), "$getConsumed", $rt_wrapFunction1(jur_MatchResultImpl_getConsumed), "$end1", $rt_wrapFunction0(jur_MatchResultImpl_end0), "$end0", $rt_wrapFunction1(jur_MatchResultImpl_end), "$setStart", $rt_wrapFunction2(jur_MatchResultImpl_setStart),
"$setEnd", $rt_wrapFunction2(jur_MatchResultImpl_setEnd), "$getStart", $rt_wrapFunction1(jur_MatchResultImpl_getStart), "$getEnd", $rt_wrapFunction1(jur_MatchResultImpl_getEnd), "$group", $rt_wrapFunction1(jur_MatchResultImpl_group), "$getGroupNoCheck", $rt_wrapFunction1(jur_MatchResultImpl_getGroupNoCheck), "$start2", $rt_wrapFunction0(jur_MatchResultImpl_start0), "$start0", $rt_wrapFunction1(jur_MatchResultImpl_start), "$finalizeMatch", $rt_wrapFunction0(jur_MatchResultImpl_finalizeMatch), "$getEnterCounter",
$rt_wrapFunction1(jur_MatchResultImpl_getEnterCounter), "$setEnterCounter", $rt_wrapFunction2(jur_MatchResultImpl_setEnterCounter), "$setValid", $rt_wrapFunction0(jur_MatchResultImpl_setValid), "$isValid", $rt_wrapFunction0(jur_MatchResultImpl_isValid), "$reset0", $rt_wrapFunction3(jur_MatchResultImpl_reset0), "$reset2", $rt_wrapFunction0(jur_MatchResultImpl_reset), "$setStartIndex", $rt_wrapFunction1(jur_MatchResultImpl_setStartIndex), "$getLeftBound", $rt_wrapFunction0(jur_MatchResultImpl_getLeftBound), "$getRightBound",
$rt_wrapFunction0(jur_MatchResultImpl_getRightBound), "$setMode", $rt_wrapFunction1(jur_MatchResultImpl_setMode), "$mode", $rt_wrapFunction0(jur_MatchResultImpl_mode), "$useAnchoringBounds", $rt_wrapFunction1(jur_MatchResultImpl_useAnchoringBounds), "$hasAnchoringBounds", $rt_wrapFunction0(jur_MatchResultImpl_hasAnchoringBounds), "$hasTransparentBounds", $rt_wrapFunction0(jur_MatchResultImpl_hasTransparentBounds), "$getPreviousMatchEnd", $rt_wrapFunction0(jur_MatchResultImpl_getPreviousMatchEnd)],
cbgu_Disposable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_Screen, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbg_ScreenAdapter, 0, jl_Object, [cbg_Screen], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbg_ScreenAdapter__init_), "$resize1", $rt_wrapFunction2(cbg_ScreenAdapter_resize), "$hide", $rt_wrapFunction0(cbg_ScreenAdapter_hide), "$pause", $rt_wrapFunction0(cbg_ScreenAdapter_pause), "$resume", $rt_wrapFunction0(cbg_ScreenAdapter_resume)],
beb_BulletInitScreen, 0, cbg_ScreenAdapter, [], 0, 3, 0, 0, ["$_init_189", $rt_wrapFunction1(beb_BulletInitScreen__init_), "$show", $rt_wrapFunction0(beb_BulletInitScreen_show), "$render4", $rt_wrapFunction1(beb_BulletInitScreen_render)],
cbggg_Renderable, "Renderable", 21, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_Renderable__init_)],
cbggg_BitmapFont$Glyph, "BitmapFont$Glyph", 20, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_BitmapFont$Glyph__init_0), "$getKerning", $rt_wrapFunction1(cbggg_BitmapFont$Glyph_getKerning), "$setKerning", $rt_wrapFunction2(cbggg_BitmapFont$Glyph_setKerning), "$toString", $rt_wrapFunction0(cbggg_BitmapFont$Glyph_toString)],
otji_EventHandler, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0]);
$rt_metadata([cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, ["$_init_151", $rt_wrapFunction2(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0__init_), "$handleEvent", $rt_wrapFunction0(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0_handleEvent)],
otjf_JSMapping, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1, 0, jl_Object, [otjf_JSMapping], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1__init_), "$apply1", $rt_wrapFunction1(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1_apply0), "$apply0", $rt_wrapFunction1(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1_apply)],
otjf_JSSupplier, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2, 0, jl_Object, [otjf_JSSupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2__init_), "$get3", $rt_wrapFunction0(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2_get)],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1, "AbstractCharClass$LazyJavaJavaIdentifierPart$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_62", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierPart$1_contains)],
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, ["$_init_44", $rt_wrapFunction1(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2__init_), "$handleEvent", $rt_wrapFunction0(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2_handleEvent)],
cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, ["$_init_44", $rt_wrapFunction1(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1__init_), "$handleEvent", $rt_wrapFunction0(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1_handleEvent)],
cbgg_GLTexture, 0, jl_Object, [cbgu_Disposable], 1, 3, 0, cbgg_GLTexture_$callClinit, ["$_init_37", $rt_wrapFunction2(cbgg_GLTexture__init_), "$bind", $rt_wrapFunction0(cbgg_GLTexture_bind0), "$bind4", $rt_wrapFunction1(cbgg_GLTexture_bind), "$getTextureObjectHandle", $rt_wrapFunction0(cbgg_GLTexture_getTextureObjectHandle), "$unsafeSetWrap0", $rt_wrapFunction2(cbgg_GLTexture_unsafeSetWrap0), "$unsafeSetWrap", $rt_wrapFunction3(cbgg_GLTexture_unsafeSetWrap), "$unsafeSetFilter0", $rt_wrapFunction2(cbgg_GLTexture_unsafeSetFilter0),
"$unsafeSetFilter", $rt_wrapFunction3(cbgg_GLTexture_unsafeSetFilter), "$setFilter", $rt_wrapFunction2(cbgg_GLTexture_setFilter), "$unsafeSetAnisotropicFilter", $rt_wrapFunction2(cbgg_GLTexture_unsafeSetAnisotropicFilter), "$delete", $rt_wrapFunction0(cbgg_GLTexture_delete)],
cbgg_Texture, "Texture", 18, cbgg_GLTexture, [], 0, 3, 0, cbgg_Texture_$callClinit, ["$_init_123", $rt_wrapFunction1(cbgg_Texture__init_4), "$_init_103", $rt_wrapFunction2(cbgg_Texture__init_6), "$_init_57", $rt_wrapFunction3(cbgg_Texture__init_0), "$_init_226", $rt_wrapFunction1(cbgg_Texture__init_3), "$_init_58", $rt_wrapFunction1(cbgg_Texture__init_), "$_init_60", $rt_wrapFunction3(cbgg_Texture__init_1), "$load0", $rt_wrapFunction1(cbgg_Texture_load), "$getWidth0", $rt_wrapFunction0(cbgg_Texture_getWidth),
"$getHeight0", $rt_wrapFunction0(cbgg_Texture_getHeight), "$dispose", $rt_wrapFunction0(cbgg_Texture_dispose), "$toString", $rt_wrapFunction0(cbgg_Texture_toString)],
cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0, 0, jl_Object, [otjf_JSMapping], 0, 3, 0, 0, ["$_init_19", $rt_wrapFunction1(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0__init_), "$apply1", $rt_wrapFunction1(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0_apply0), "$apply2", $rt_wrapFunction1(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0_apply)],
cbgu_GdxRuntimeException, "GdxRuntimeException", 12, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(cbgu_GdxRuntimeException__init_0), "$_init_5", $rt_wrapFunction2(cbgu_GdxRuntimeException__init_1)],
bl_btIDebugDraw$drawLine, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
jur_DecomposedCharSet, "DecomposedCharSet", 29, jur_JointSet, [], 0, 0, 0, 0, ["$_init_167", $rt_wrapFunction2(jur_DecomposedCharSet__init_), "$setNext", $rt_wrapFunction1(jur_DecomposedCharSet_setNext), "$matches", $rt_wrapFunction3(jur_DecomposedCharSet_matches), "$getName", $rt_wrapFunction0(jur_DecomposedCharSet_getName), "$codePointAt", $rt_wrapFunction3(jur_DecomposedCharSet_codePointAt), "$first", $rt_wrapFunction1(jur_DecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_DecomposedCharSet_hasConsumed)],
jl_IllegalArgumentException, "IllegalArgumentException", 34, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalArgumentException__init_2), "$_init_", $rt_wrapFunction1(jl_IllegalArgumentException__init_1)],
jnc_IllegalCharsetNameException, "IllegalCharsetNameException", 31, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jnc_IllegalCharsetNameException__init_0)],
cbgssu_Table$DebugRect$_clinit_$lambda$_1_0, "Table$DebugRect$<clinit>$lambda$_1_0", 15, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Table$DebugRect$_clinit_$lambda$_1_0__init_), "$get3", $rt_wrapFunction0(cbgssu_Table$DebugRect$_clinit_$lambda$_1_0_get0), "$get9", $rt_wrapFunction0(cbgssu_Table$DebugRect$_clinit_$lambda$_1_0_get)],
ji_FilterOutputStream, 0, ji_OutputStream, [], 0, 3, 0, 0, ["$_init_61", $rt_wrapFunction1(ji_FilterOutputStream__init_)],
ji_PrintStream, 0, ji_FilterOutputStream, [jl_Appendable], 0, 3, 0, 0, ["$_init_172", $rt_wrapFunction3(ji_PrintStream__init_)],
bl_btIDebugDraw$drawContactPoint, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
bl_btIDebugDraw$2, 0, jl_Object, [bl_btIDebugDraw$drawContactPoint], 0, 0, 0, 0, ["$_init_128", $rt_wrapFunction1(bl_btIDebugDraw$2__init_), "$drawContactPoint", function(var_1, var_2, var_3, var_4, var_5) { bl_btIDebugDraw$2_drawContactPoint(this, var_1, var_2, var_3, var_4, var_5); }],
jur_NegativeLookBehind, "NegativeLookBehind", 29, jur_AtomicJointSet, [], 0, 0, 0, 0, ["$_init_41", $rt_wrapFunction2(jur_NegativeLookBehind__init_), "$matches", $rt_wrapFunction3(jur_NegativeLookBehind_matches), "$hasConsumed", $rt_wrapFunction1(jur_NegativeLookBehind_hasConsumed), "$getName", $rt_wrapFunction0(jur_NegativeLookBehind_getName)],
bl_btIDebugDraw$1, 0, jl_Object, [bl_btIDebugDraw$drawLine], 0, 0, 0, 0, ["$_init_128", $rt_wrapFunction1(bl_btIDebugDraw$1__init_), "$drawLine", $rt_wrapFunction3(bl_btIDebugDraw$1_drawLine)],
bl_btIDebugDraw$getDebugMode, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
bl_btIDebugDraw$6, 0, jl_Object, [bl_btIDebugDraw$getDebugMode], 0, 0, 0, 0, ["$_init_128", $rt_wrapFunction1(bl_btIDebugDraw$6__init_), "$getDebugMode", $rt_wrapFunction0(bl_btIDebugDraw$6_getDebugMode)],
bl_btIDebugDraw$setDebugMode, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
bl_btIDebugDraw$5, 0, jl_Object, [bl_btIDebugDraw$setDebugMode], 0, 0, 0, 0, ["$_init_128", $rt_wrapFunction1(bl_btIDebugDraw$5__init_), "$setDebugMode", $rt_wrapFunction1(bl_btIDebugDraw$5_setDebugMode)],
bl_btIDebugDraw$draw3dText, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
bl_btIDebugDraw$4, 0, jl_Object, [bl_btIDebugDraw$draw3dText], 0, 0, 0, 0, ["$_init_128", $rt_wrapFunction1(bl_btIDebugDraw$4__init_), "$draw3dText", $rt_wrapFunction2(bl_btIDebugDraw$4_draw3dText)],
bl_btIDebugDraw$reportErrorWarning, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
bl_btIDebugDraw$3, 0, jl_Object, [bl_btIDebugDraw$reportErrorWarning], 0, 0, 0, 0, ["$_init_128", $rt_wrapFunction1(bl_btIDebugDraw$3__init_), "$reportErrorWarning", $rt_wrapFunction1(bl_btIDebugDraw$3_reportErrorWarning)],
jur_AbstractCharClass$LazyJavaJavaIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierPart__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierPart_computeValue)],
bi_IDLBase, 0, jl_Object, [], 0, 3, 0, bi_IDLBase_$callClinit, ["$internal_reset", $rt_wrapFunction2(bi_IDLBase_internal_reset), "$_init_0", $rt_wrapFunction0(bi_IDLBase__init_), "$_init_63", $rt_wrapFunction2(bi_IDLBase__init_0), "$dispose", $rt_wrapFunction0(bi_IDLBase_dispose), "$toString", $rt_wrapFunction0(bi_IDLBase_toString), "$onNativeAddressChanged", $rt_wrapFunction0(bi_IDLBase_onNativeAddressChanged), "$onNativeDispose", $rt_wrapFunction0(bi_IDLBase_onNativeDispose), "$equals", $rt_wrapFunction1(bi_IDLBase_equals)],
bbc_btCollisionObject, 0, bi_IDLBase, [], 0, 3, 0, bbc_btCollisionObject_$callClinit, ["$_init_63", $rt_wrapFunction2(bbc_btCollisionObject__init_), "$setRestitution", $rt_wrapFunction1(bbc_btCollisionObject_setRestitution)],
cbgg_Color, "Color", 18, jl_Object, [], 0, 3, 0, cbgg_Color_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgg_Color__init_4), "$_init_3", $rt_wrapFunction1(cbgg_Color__init_5), "$_init_4", $rt_wrapFunction4(cbgg_Color__init_2), "$_init_145", $rt_wrapFunction1(cbgg_Color__init_3), "$set11", $rt_wrapFunction1(cbgg_Color_set), "$mul3", $rt_wrapFunction1(cbgg_Color_mul), "$clamp", $rt_wrapFunction0(cbgg_Color_clamp), "$set12", $rt_wrapFunction4(cbgg_Color_set0), "$equals", $rt_wrapFunction1(cbgg_Color_equals), "$hashCode0",
$rt_wrapFunction0(cbgg_Color_hashCode), "$toFloatBits", $rt_wrapFunction0(cbgg_Color_toFloatBits0), "$toIntBits", $rt_wrapFunction0(cbgg_Color_toIntBits), "$toString", $rt_wrapFunction0(cbgg_Color_toString)],
cbgg_VertexAttribute, "VertexAttribute", 18, jl_Object, [], 4, 3, 0, 0, ["$_init_86", $rt_wrapFunction3(cbgg_VertexAttribute__init_2), "$_init_64", $rt_wrapFunction4(cbgg_VertexAttribute__init_1), "$_init_65", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbgg_VertexAttribute__init_0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$equals", $rt_wrapFunction1(cbgg_VertexAttribute_equals0), "$equals0", $rt_wrapFunction1(cbgg_VertexAttribute_equals), "$getKey", $rt_wrapFunction0(cbgg_VertexAttribute_getKey),
"$getSizeInBytes", $rt_wrapFunction0(cbgg_VertexAttribute_getSizeInBytes), "$hashCode0", $rt_wrapFunction0(cbgg_VertexAttribute_hashCode)],
b_Bullet, 0, jl_Object, [], 0, 3, 0, 0, 0,
bl_btMotionState, 0, bi_IDLBase, [], 0, 3, 0, bl_btMotionState_$callClinit, ["$_init_63", $rt_wrapFunction2(bl_btMotionState__init_0), "$_init_0", $rt_wrapFunction0(bl_btMotionState__init_)],
beb_TestMotionState, 0, bl_btMotionState, [], 0, 3, 0, 0, ["$_init_204", $rt_wrapFunction1(beb_TestMotionState__init_), "$getWorldTransform", $rt_wrapFunction1(beb_TestMotionState_getWorldTransform), "$setWorldTransform", $rt_wrapFunction1(beb_TestMotionState_setWorldTransform)],
jur_LeafQuantifierSet, "LeafQuantifierSet", 29, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_67", $rt_wrapFunction3(jur_LeafQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_LeafQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_LeafQuantifierSet_getName)],
jur_UnifiedQuantifierSet, "UnifiedQuantifierSet", 29, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_183", $rt_wrapFunction1(jur_UnifiedQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_UnifiedQuantifierSet_matches), "$find", $rt_wrapFunction3(jur_UnifiedQuantifierSet_find)],
jlr_AnnotatedElement, 0, jl_Object, [], 3, 3, 0, 0, 0,
jlr_Type, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_Class, "Class", 34, jl_Object, [jlr_AnnotatedElement, jlr_Type], 4, 3, 0, 0, ["$toString", $rt_wrapFunction0(jl_Class_toString), "$getPlatformClass", $rt_wrapFunction0(jl_Class_getPlatformClass), "$isInstance0", $rt_wrapFunction1(jl_Class_isInstance), "$isAssignableFrom", $rt_wrapFunction1(jl_Class_isAssignableFrom), "$getName", $rt_wrapFunction0(jl_Class_getName), "$getSimpleName", $rt_wrapFunction0(jl_Class_getSimpleName), "$isPrimitive", $rt_wrapFunction0(jl_Class_isPrimitive), "$isArray", $rt_wrapFunction0(jl_Class_isArray),
"$isInterface", $rt_wrapFunction0(jl_Class_isInterface), "$getComponentType", $rt_wrapFunction0(jl_Class_getComponentType), "$cast", $rt_wrapFunction1(jl_Class_cast), "$getEnclosingClass", $rt_wrapFunction0(jl_Class_getEnclosingClass)],
otjt_Int16Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
jl_Cloneable, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_BitSet, 0, jl_Object, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_BitSet__init_0), "$_init_3", $rt_wrapFunction1(ju_BitSet__init_), "$set17", $rt_wrapFunction1(ju_BitSet_set0), "$set6", $rt_wrapFunction2(ju_BitSet_set), "$clear3", $rt_wrapFunction1(ju_BitSet_clear0), "$clear4", $rt_wrapFunction2(ju_BitSet_clear), "$get16", $rt_wrapFunction1(ju_BitSet_get), "$nextSetBit", $rt_wrapFunction1(ju_BitSet_nextSetBit), "$nextClearBit", $rt_wrapFunction1(ju_BitSet_nextClearBit),
"$intersects", $rt_wrapFunction1(ju_BitSet_intersects), "$and", $rt_wrapFunction1(ju_BitSet_and), "$andNot", $rt_wrapFunction1(ju_BitSet_andNot), "$or", $rt_wrapFunction1(ju_BitSet_or), "$xor", $rt_wrapFunction1(ju_BitSet_xor), "$isEmpty", $rt_wrapFunction0(ju_BitSet_isEmpty)],
jl_Float, 0, jl_Number, [jl_Comparable], 0, 3, 0, jl_Float_$callClinit, ["$_init_10", $rt_wrapFunction1(jl_Float__init_), "$floatValue", $rt_wrapFunction0(jl_Float_floatValue)],
jur_CharSet, "CharSet", 29, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_182", $rt_wrapFunction1(jur_CharSet__init_0), "$charCount", $rt_wrapFunction0(jur_CharSet_charCount), "$accepts", $rt_wrapFunction2(jur_CharSet_accepts), "$find", $rt_wrapFunction3(jur_CharSet_find), "$findBack", $rt_wrapFunction4(jur_CharSet_findBack), "$getName", $rt_wrapFunction0(jur_CharSet_getName), "$getChar0", $rt_wrapFunction0(jur_CharSet_getChar), "$first", $rt_wrapFunction1(jur_CharSet_first)],
cgxgbtu_TeaBaseUrlProvider, 0, jl_Object, [], 3, 3, 0, 0, 0]);
$rt_metadata([cgxgbtu_TeaDefaultBaseUrlProvider, 0, jl_Object, [cgxgbtu_TeaBaseUrlProvider], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbtu_TeaDefaultBaseUrlProvider__init_), "$getBaseUrl", $rt_wrapFunction0(cgxgbtu_TeaDefaultBaseUrlProvider_getBaseUrl)],
otjb_AnimationFrameCallback, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cbgssu_ProgressBar$ProgressBarStyle, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_ProgressBar$ProgressBarStyle__init_)],
cbggg_VertexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cgxjl_JParserLibraryLoader, 0, jl_Object, [], 0, 3, 0, cgxjl_JParserLibraryLoader_$callClinit, 0,
cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_10_0, 0, jl_Object, [otjb_TimerHandler], 0, 3, 0, 0, ["$_init_143", function(var_1, var_2, var_3, var_4, var_5) { cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_10_0__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$onTimer", $rt_wrapFunction0(cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_10_0_onTimer)],
jur_AbstractCharClass$LazyCategoryScope, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_38", $rt_wrapFunction2(jur_AbstractCharClass$LazyCategoryScope__init_0), "$_init_39", $rt_wrapFunction3(jur_AbstractCharClass$LazyCategoryScope__init_1), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyCategoryScope_computeValue)],
jur_AbstractCharClass$LazyJavaTitleCase$1, "AbstractCharClass$LazyJavaTitleCase$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_130", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaTitleCase$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaTitleCase$1_contains)],
ju_Comparator, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_Attributes, 0, jl_Object, [jl_Iterable, ju_Comparator, jl_Comparable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_Attributes__init_), "$sort1", $rt_wrapFunction0(cbggg_Attributes_sort), "$getMask", $rt_wrapFunction0(cbggg_Attributes_getMask), "$get11", $rt_wrapFunction1(cbggg_Attributes_get), "$get32", $rt_wrapFunction2(cbggg_Attributes_get0), "$clear", $rt_wrapFunction0(cbggg_Attributes_clear), "$set14", $rt_wrapFunction1(cbggg_Attributes_set), "$set15", $rt_wrapFunction1(cbggg_Attributes_set1),
"$set19", $rt_wrapFunction1(cbggg_Attributes_set0), "$has", $rt_wrapFunction1(cbggg_Attributes_has), "$indexOf2", $rt_wrapFunction1(cbggg_Attributes_indexOf), "$same", $rt_wrapFunction2(cbggg_Attributes_same), "$compare", $rt_wrapFunction2(cbggg_Attributes_compare), "$iterator0", $rt_wrapFunction0(cbggg_Attributes_iterator), "$attributesHash", $rt_wrapFunction0(cbggg_Attributes_attributesHash), "$hashCode0", $rt_wrapFunction0(cbggg_Attributes_hashCode), "$equals", $rt_wrapFunction1(cbggg_Attributes_equals),
"$compare0", $rt_wrapFunction2(cbggg_Attributes_compare0)],
cbggg_Material, "Material", 21, cbggg_Attributes, [], 0, 3, 0, cbggg_Material_$callClinit, ["$_init_0", $rt_wrapFunction0(cbggg_Material__init_1), "$_init_", $rt_wrapFunction1(cbggg_Material__init_), "$_init_201", $rt_wrapFunction1(cbggg_Material__init_0), "$_init_74", $rt_wrapFunction1(cbggg_Material__init_3), "$_init_73", $rt_wrapFunction2(cbggg_Material__init_2), "$copy2", $rt_wrapFunction0(cbggg_Material_copy), "$hashCode0", $rt_wrapFunction0(cbggg_Material_hashCode), "$equals", $rt_wrapFunction1(cbggg_Material_equals)],
bl_btVector3, 0, bi_IDLBase, [], 0, 3, 0, bl_btVector3_$callClinit, ["$_init_0", $rt_wrapFunction0(bl_btVector3__init_), "$_init_134", $rt_wrapFunction3(bl_btVector3__init_1), "$_init_63", $rt_wrapFunction2(bl_btVector3__init_0), "$getX", $rt_wrapFunction0(bl_btVector3_getX), "$getY", $rt_wrapFunction0(bl_btVector3_getY), "$getZ", $rt_wrapFunction0(bl_btVector3_getZ)],
cbggg_MipMapGenerator, 0, jl_Object, [], 0, 3, 0, cbggg_MipMapGenerator_$callClinit, 0,
jnc_UnsupportedCharsetException, "UnsupportedCharsetException", 31, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jnc_UnsupportedCharsetException__init_)],
cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0__init_), "$handleEvent", $rt_wrapFunction0(cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0_handleEvent)],
jur_AbstractCharClass$LazyJavaISOControl$1, "AbstractCharClass$LazyJavaISOControl$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_233", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaISOControl$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaISOControl$1_contains)],
cbgm_Interpolation$BounceIn, 0, cbgm_Interpolation$BounceOut, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgm_Interpolation$BounceIn__init_)],
jur_AtomicFSet, "AtomicFSet", 29, jur_FSet, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_AtomicFSet__init_), "$matches", $rt_wrapFunction3(jur_AtomicFSet_matches), "$getIndex", $rt_wrapFunction0(jur_AtomicFSet_getIndex), "$getName", $rt_wrapFunction0(jur_AtomicFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_AtomicFSet_hasConsumed)],
cbggg_IndexData, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
jur_LowSurrogateCharSet, "LowSurrogateCharSet", 29, jur_JointSet, [], 0, 0, 0, 0, ["$_init_182", $rt_wrapFunction1(jur_LowSurrogateCharSet__init_), "$setNext", $rt_wrapFunction1(jur_LowSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_LowSurrogateCharSet_matches), "$find", $rt_wrapFunction3(jur_LowSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_LowSurrogateCharSet_findBack), "$getName", $rt_wrapFunction0(jur_LowSurrogateCharSet_getName), "$first", $rt_wrapFunction1(jur_LowSurrogateCharSet_first),
"$hasConsumed", $rt_wrapFunction1(jur_LowSurrogateCharSet_hasConsumed)],
jn_JSBufferHelper, 0, jl_Object, [], 4, 3, 0, 0, 0,
jl_Error, 0, jl_Throwable, [], 0, 3, 0, 0, ["$_init_5", $rt_wrapFunction2(jl_Error__init_), "$_init_53", $rt_wrapFunction1(jl_Error__init_0)],
jl_AssertionError, "AssertionError", 34, jl_Error, [], 0, 3, 0, 0, ["$_init_5", $rt_wrapFunction2(jl_AssertionError__init_)],
cbgm_MathUtils$Sin, 0, jl_Object, [], 0, 0, 0, cbgm_MathUtils$Sin_$callClinit, 0,
cbggg_Batch, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
otcit_FloatSynthesizer, 0, jl_Object, [], 4, 3, 0, otcit_FloatSynthesizer_$callClinit, 0,
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, ["$_init_150", $rt_wrapFunction2(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2__init_), "$handleEvent", $rt_wrapFunction0(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2_handleEvent)],
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, ["$_init_149", $rt_wrapFunction3(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1__init_), "$handleEvent", $rt_wrapFunction0(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1_handleEvent)],
otjde_EventListener, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, ["$_init_148", $rt_wrapFunction1(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0_handleEvent0), "$handleEvent0", $rt_wrapFunction1(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0_handleEvent)],
jur_CompositeQuantifierSet, "CompositeQuantifierSet", 29, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_109", $rt_wrapFunction4(jur_CompositeQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_CompositeQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_CompositeQuantifierSet_getName)],
cbgss_Actor$fire$lambda$_3_0, "Actor$fire$lambda$_3_0", 14, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_Actor$fire$lambda$_3_0__init_), "$get3", $rt_wrapFunction0(cbgss_Actor$fire$lambda$_3_0_get0), "$get12", $rt_wrapFunction0(cbgss_Actor$fire$lambda$_3_0_get)],
jur_SupplRangeSet, "SupplRangeSet", 29, jur_JointSet, [], 0, 0, 0, 0, ["$_init_136", $rt_wrapFunction1(jur_SupplRangeSet__init_), "$matches", $rt_wrapFunction3(jur_SupplRangeSet_matches), "$getName", $rt_wrapFunction0(jur_SupplRangeSet_getName), "$contains", $rt_wrapFunction1(jur_SupplRangeSet_contains), "$first", $rt_wrapFunction1(jur_SupplRangeSet_first), "$getChars0", $rt_wrapFunction0(jur_SupplRangeSet_getChars), "$setNext", $rt_wrapFunction1(jur_SupplRangeSet_setNext), "$hasConsumed", $rt_wrapFunction1(jur_SupplRangeSet_hasConsumed)],
jl_String, "String", 34, jl_Object, [ji_Serializable, jl_Comparable, jl_CharSequence], 0, 3, 0, jl_String_$callClinit, ["$_init_0", $rt_wrapFunction0(jl_String__init_3), "$_init_48", $rt_wrapFunction1(jl_String__init_1), "$_init_2", $rt_wrapFunction1(jl_String__init_4), "$_init_33", $rt_wrapFunction3(jl_String__init_2), "$_init_118", $rt_wrapFunction1(jl_String__init_7), "$charAt", $rt_wrapFunction1(jl_String_charAt), "$length", $rt_wrapFunction0(jl_String_length), "$isEmpty", $rt_wrapFunction0(jl_String_isEmpty),
"$getChars", $rt_wrapFunction4(jl_String_getChars), "$compareTo", $rt_wrapFunction1(jl_String_compareTo), "$startsWith0", $rt_wrapFunction2(jl_String_startsWith0), "$startsWith", $rt_wrapFunction1(jl_String_startsWith), "$endsWith", $rt_wrapFunction1(jl_String_endsWith), "$indexOf0", $rt_wrapFunction2(jl_String_indexOf1), "$indexOf1", $rt_wrapFunction1(jl_String_indexOf0), "$lastIndexOf1", $rt_wrapFunction2(jl_String_lastIndexOf2), "$lastIndexOf", $rt_wrapFunction1(jl_String_lastIndexOf1), "$indexOf3", $rt_wrapFunction2(jl_String_indexOf),
"$indexOf4", $rt_wrapFunction1(jl_String_indexOf2), "$lastIndexOf2", $rt_wrapFunction2(jl_String_lastIndexOf), "$lastIndexOf0", $rt_wrapFunction1(jl_String_lastIndexOf0), "$substring", $rt_wrapFunction2(jl_String_substring), "$substring0", $rt_wrapFunction1(jl_String_substring0), "$subSequence", $rt_wrapFunction2(jl_String_subSequence), "$replace0", $rt_wrapFunction2(jl_String_replace0), "$contains0", $rt_wrapFunction1(jl_String_contains), "$replace", $rt_wrapFunction2(jl_String_replace), "$trim", $rt_wrapFunction0(jl_String_trim),
"$toString", $rt_wrapFunction0(jl_String_toString), "$toCharArray", $rt_wrapFunction0(jl_String_toCharArray), "$equals", $rt_wrapFunction1(jl_String_equals), "$equalsIgnoreCase", $rt_wrapFunction1(jl_String_equalsIgnoreCase), "$getBytes0", $rt_wrapFunction0(jl_String_getBytes), "$getBytes", $rt_wrapFunction1(jl_String_getBytes0), "$hashCode0", $rt_wrapFunction0(jl_String_hashCode), "$split1", $rt_wrapFunction1(jl_String_split0), "$split2", $rt_wrapFunction2(jl_String_split), "$replaceAll0", $rt_wrapFunction2(jl_String_replaceAll),
"$replaceFirst0", $rt_wrapFunction2(jl_String_replaceFirst)],
cbgss_Event, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_Event__init_), "$handle0", $rt_wrapFunction0(cbgss_Event_handle), "$reset2", $rt_wrapFunction0(cbgss_Event_reset), "$getTarget", $rt_wrapFunction0(cbgss_Event_getTarget), "$setTarget", $rt_wrapFunction1(cbgss_Event_setTarget), "$setListenerActor", $rt_wrapFunction1(cbgss_Event_setListenerActor), "$getBubbles", $rt_wrapFunction0(cbgss_Event_getBubbles), "$isStopped", $rt_wrapFunction0(cbgss_Event_isStopped), "$isCancelled",
$rt_wrapFunction0(cbgss_Event_isCancelled), "$setCapture", $rt_wrapFunction1(cbgss_Event_setCapture), "$setStage", $rt_wrapFunction1(cbgss_Event_setStage), "$getStage", $rt_wrapFunction0(cbgss_Event_getStage)],
cbgssu_ChangeListener$ChangeEvent, "ChangeListener$ChangeEvent", 16, cbgss_Event, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_ChangeListener$ChangeEvent__init_)],
cbgu_ArraySupplier, 0, jl_Object, [], 3, 3, 0, cbgu_ArraySupplier_$callClinit, 0,
cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, ["$_init_142", $rt_wrapFunction1(cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0_handleEvent0), "$handleEvent2", $rt_wrapFunction1(cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0_handleEvent)],
cbgss_InputEvent$Type, 0, jl_Enum, [], 12, 3, 0, cbgss_InputEvent$Type_$callClinit, 0,
jnci_BufferedEncoder, 0, jnc_CharsetEncoder, [], 1, 3, 0, 0, ["$_init_75", $rt_wrapFunction3(jnci_BufferedEncoder__init_), "$encodeLoop", $rt_wrapFunction2(jnci_BufferedEncoder_encodeLoop)],
jnci_UTF8Encoder, 0, jnci_BufferedEncoder, [], 0, 3, 0, 0, ["$_init_54", $rt_wrapFunction1(jnci_UTF8Encoder__init_), "$arrayEncode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF8Encoder_arrayEncode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
cgxjl_JParserLibraryLoaderListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxjl_JParserLibraryLoader$loadWasm$lambda$_10_0, 0, jl_Object, [cgxjl_JParserLibraryLoaderListener], 0, 3, 0, 0, ["$_init_70", $rt_wrapFunction4(cgxjl_JParserLibraryLoader$loadWasm$lambda$_10_0__init_), "$onLoad", $rt_wrapFunction2(cgxjl_JParserLibraryLoader$loadWasm$lambda$_10_0_onLoad)],
ju_Dictionary, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Dictionary__init_)],
ju_Map, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Hashtable, 0, ju_Dictionary, [ju_Map, jl_Cloneable, ji_Serializable], 0, 3, 0, ju_Hashtable_$callClinit, ["$_init_0", $rt_wrapFunction0(ju_Hashtable__init_), "$_init_3", $rt_wrapFunction1(ju_Hashtable__init_0), "$put", $rt_wrapFunction2(ju_Hashtable_put), "$rehash", $rt_wrapFunction0(ju_Hashtable_rehash)],
ju_Properties, 0, ju_Hashtable, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Properties__init_0), "$_init_221", $rt_wrapFunction1(ju_Properties__init_)],
cbgggs_DefaultShader$Setters$Bones, "DefaultShader$Setters$Bones", 23, cbgggs_BaseShader$LocalSetter, [], 0, 3, 0, cbgggs_DefaultShader$Setters$Bones_$callClinit, ["$_init_3", $rt_wrapFunction1(cbgggs_DefaultShader$Setters$Bones__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$Bones_set)],
cbgm_Interpolation$Elastic, 0, cbgm_Interpolation, [], 0, 3, 0, 0, ["$_init_9", $rt_wrapFunction4(cbgm_Interpolation$Elastic__init_)],
cbgm_Interpolation$ElasticOut, 0, cbgm_Interpolation$Elastic, [], 0, 3, 0, 0, ["$_init_9", $rt_wrapFunction4(cbgm_Interpolation$ElasticOut__init_)]]);
$rt_metadata([cbgssu_Table$Debug, 0, jl_Enum, [], 12, 3, 0, cbgssu_Table$Debug_$callClinit, 0,
cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_4_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, ["$_init_141", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_4_0__init_(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$handleEvent1", $rt_wrapFunction1(cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_4_0_handleEvent)],
jnci_UTF8Charset, "UTF8Charset", 32, jnc_Charset, [], 0, 3, 0, jnci_UTF8Charset_$callClinit, ["$newDecoder", $rt_wrapFunction0(jnci_UTF8Charset_newDecoder), "$newEncoder", $rt_wrapFunction0(jnci_UTF8Charset_newEncoder)],
jur_MultiLineEOLSet, "MultiLineEOLSet", 29, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_MultiLineEOLSet__init_), "$matches", $rt_wrapFunction3(jur_MultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_MultiLineEOLSet_getName)],
ji_Reader, 0, jl_Object, [ji_Closeable, jl_Readable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_Reader__init_), "$_init_2", $rt_wrapFunction1(ji_Reader__init_0), "$read0", $rt_wrapFunction1(ji_Reader_read)],
ji_BufferedReader, 0, ji_Reader, [], 0, 3, 0, 0, ["$_init_131", $rt_wrapFunction2(ji_BufferedReader__init_), "$close", $rt_wrapFunction0(ji_BufferedReader_close), "$readLine", $rt_wrapFunction0(ji_BufferedReader_readLine)],
cbgssu_TextureRegionDrawable, "TextureRegionDrawable", 16, cbgssu_BaseDrawable, [cbgssu_TransformDrawable], 0, 3, [0,0,0], 0, ["$_init_192", $rt_wrapFunction1(cbgssu_TextureRegionDrawable__init_0), "$draw0", function(var_1, var_2, var_3, var_4, var_5) { cbgssu_TextureRegionDrawable_draw0(this, var_1, var_2, var_3, var_4, var_5); }, "$draw6", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10) { cbgssu_TextureRegionDrawable_draw(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7,
var_8, var_9, var_10); }, "$setRegion", $rt_wrapFunction1(cbgssu_TextureRegionDrawable_setRegion)],
cbgss_Action, 0, jl_Object, [cbgu_Pool$Poolable], 1, 3, 0, 0, 0,
jl_Object$Monitor, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_Object$Monitor__init_)],
cbggg_ShapeRenderer, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_ShapeRenderer__init_1), "$_init_3", $rt_wrapFunction1(cbggg_ShapeRenderer__init_0), "$_init_78", $rt_wrapFunction2(cbggg_ShapeRenderer__init_), "$setColor", $rt_wrapFunction1(cbggg_ShapeRenderer_setColor0), "$setColor0", $rt_wrapFunction4(cbggg_ShapeRenderer_setColor), "$setProjectionMatrix", $rt_wrapFunction1(cbggg_ShapeRenderer_setProjectionMatrix), "$setTransformMatrix", $rt_wrapFunction1(cbggg_ShapeRenderer_setTransformMatrix),
"$getTransformMatrix", $rt_wrapFunction0(cbggg_ShapeRenderer_getTransformMatrix), "$setAutoShapeType", $rt_wrapFunction1(cbggg_ShapeRenderer_setAutoShapeType), "$begin", $rt_wrapFunction0(cbggg_ShapeRenderer_begin), "$begin1", $rt_wrapFunction1(cbggg_ShapeRenderer_begin0), "$set", $rt_wrapFunction1(cbggg_ShapeRenderer_set), "$point", $rt_wrapFunction3(cbggg_ShapeRenderer_point), "$line", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbggg_ShapeRenderer_line0(this, var_1, var_2, var_3, var_4, var_5, var_6);
}, "$line1", $rt_wrapFunction2(cbggg_ShapeRenderer_line), "$line0", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8) { cbggg_ShapeRenderer_line1(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$rect0", $rt_wrapFunction4(cbggg_ShapeRenderer_rect), "$rect", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cbggg_ShapeRenderer_rect0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$rect1", function(var_1, var_2, var_3, var_4, var_5,
var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13) { cbggg_ShapeRenderer_rect1(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13); }, "$rectLine", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { cbggg_ShapeRenderer_rectLine(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$box", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbggg_ShapeRenderer_box(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$check", $rt_wrapFunction3(cbggg_ShapeRenderer_check),
"$end", $rt_wrapFunction0(cbggg_ShapeRenderer_end), "$flush", $rt_wrapFunction0(cbggg_ShapeRenderer_flush), "$isDrawing", $rt_wrapFunction0(cbggg_ShapeRenderer_isDrawing), "$dispose", $rt_wrapFunction0(cbggg_ShapeRenderer_dispose)],
cbggg_VertexBufferObjectSubData, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$_init_127", $rt_wrapFunction3(cbggg_VertexBufferObjectSubData__init_), "$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_getNumVertices), "$getNumMaxVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_getNumMaxVertices), "$setVertices0", $rt_wrapFunction3(cbggg_VertexBufferObjectSubData_setVertices), "$bind2", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_bind),
"$unbind1", $rt_wrapFunction2(cbggg_VertexBufferObjectSubData_unbind), "$dispose", $rt_wrapFunction0(cbggg_VertexBufferObjectSubData_dispose)],
otji_JSWrapper$Helper$FinalizationRegistryConsumer, 0, jl_Object, [otj_JSObject], 3, 0, 0, 0, 0,
cbgssu_ScissorStack, 0, jl_Object, [], 0, 3, 0, cbgssu_ScissorStack_$callClinit, 0,
cbgggm_MeshPart, "MeshPart", 26, jl_Object, [], 0, 3, 0, cbgggm_MeshPart_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgggm_MeshPart__init_0), "$_init_107", $rt_wrapFunction1(cbgggm_MeshPart__init_), "$set16", $rt_wrapFunction1(cbgggm_MeshPart_set0), "$set38", function(var_1, var_2, var_3, var_4, var_5) { return cbgggm_MeshPart_set(this, var_1, var_2, var_3, var_4, var_5); }, "$equals2", $rt_wrapFunction1(cbgggm_MeshPart_equals0), "$equals", $rt_wrapFunction1(cbgggm_MeshPart_equals), "$render2", $rt_wrapFunction2(cbgggm_MeshPart_render)],
cgxgbtu_KeyCodes, 0, jl_Object, [], 0, 3, 0, 0, 0,
bbc_btCollisionShape, 0, bi_IDLBase, [], 0, 3, 0, bbc_btCollisionShape_$callClinit, ["$_init_63", $rt_wrapFunction2(bbc_btCollisionShape__init_), "$calculateLocalInertia", $rt_wrapFunction2(bbc_btCollisionShape_calculateLocalInertia)],
cbgm_Vector, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgu_Pool, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Pool__init_0), "$_init_37", $rt_wrapFunction2(cbgu_Pool__init_), "$obtain0", $rt_wrapFunction0(cbgu_Pool_obtain), "$free", $rt_wrapFunction1(cbgu_Pool_free), "$reset1", $rt_wrapFunction1(cbgu_Pool_reset), "$discard", $rt_wrapFunction1(cbgu_Pool_discard), "$freeAll", $rt_wrapFunction1(cbgu_Pool_freeAll)],
cbgu_DefaultPool, "DefaultPool", 12, cbgu_Pool, [], 0, 3, 0, 0, ["$_init_28", $rt_wrapFunction3(cbgu_DefaultPool__init_), "$newObject", $rt_wrapFunction0(cbgu_DefaultPool_newObject)],
ju_Collection, 0, jl_Object, [jl_Iterable], 3, 3, 0, 0, 0,
ju_SequencedCollection, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, 0,
ju_List, 0, jl_Object, [ju_SequencedCollection], 3, 3, 0, 0, 0,
cbgggu_MeshPartBuilder, 0, jl_Object, [], 3, 3, 0, 0, 0,
bl_btMatrix3x3, 0, bi_IDLBase, [], 0, 3, 0, bl_btMatrix3x3_$callClinit, ["$_init_63", $rt_wrapFunction2(bl_btMatrix3x3__init_), "$getRow", $rt_wrapFunction1(bl_btMatrix3x3_getRow)],
otjde_EventTarget, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbt_TeaTool, 0, jl_Object, [], 0, 3, 0, cgxgbt_TeaTool_$callClinit, 0,
cbggg_GLVersion, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_114", $rt_wrapFunction4(cbggg_GLVersion__init_)],
cbg_Graphics$DisplayMode, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_188", $rt_wrapFunction4(cbg_Graphics$DisplayMode__init_)],
jn_BufferOverflowException, "BufferOverflowException", 30, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_BufferOverflowException__init_0)],
ju_AbstractCollection, 0, jl_Object, [ju_Collection], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_AbstractCollection__init_), "$toArray", $rt_wrapFunction1(ju_AbstractCollection_toArray)],
ju_Set, 0, jl_Object, [ju_Collection], 3, 3, 0, 0, 0,
ju_AbstractSet, 0, ju_AbstractCollection, [ju_Set], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_AbstractSet__init_)],
jn_ShortBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_37", $rt_wrapFunction2(jn_ShortBuffer__init_), "$put9", $rt_wrapFunction3(jn_ShortBuffer_put), "$clear1", $rt_wrapFunction0(jn_ShortBuffer_clear), "$flip1", $rt_wrapFunction0(jn_ShortBuffer_flip), "$limit1", $rt_wrapFunction1(jn_ShortBuffer_limit), "$position3", $rt_wrapFunction1(jn_ShortBuffer_position0), "$flip", $rt_wrapFunction0(jn_ShortBuffer_flip0), "$clear0", $rt_wrapFunction0(jn_ShortBuffer_clear0), "$limit", $rt_wrapFunction1(jn_ShortBuffer_limit0),
"$position", $rt_wrapFunction1(jn_ShortBuffer_position)],
jn_IntBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_37", $rt_wrapFunction2(jn_IntBuffer__init_), "$clear2", $rt_wrapFunction0(jn_IntBuffer_clear), "$flip4", $rt_wrapFunction0(jn_IntBuffer_flip), "$position5", $rt_wrapFunction1(jn_IntBuffer_position), "$clear0", $rt_wrapFunction0(jn_IntBuffer_clear0)],
jn_IntBufferImpl, 0, jn_IntBuffer, [], 1, 0, 0, 0, ["$_init_37", $rt_wrapFunction2(jn_IntBufferImpl__init_), "$get19", $rt_wrapFunction0(jn_IntBufferImpl_get0), "$put10", $rt_wrapFunction1(jn_IntBufferImpl_put), "$get1", $rt_wrapFunction1(jn_IntBufferImpl_get), "$put7", $rt_wrapFunction2(jn_IntBufferImpl_put0), "$isReadOnly", $rt_wrapFunction0(jn_IntBufferImpl_isReadOnly)],
jur_AbstractCharClass$LazyJavaLetterOrDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetterOrDigit__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLetterOrDigit_computeValue)],
otciu_UnicodeHelper$Range, "UnicodeHelper$Range", 41, jl_Object, [], 0, 3, 0, 0, ["$_init_50", $rt_wrapFunction3(otciu_UnicodeHelper$Range__init_0)],
jur_AbstractLineTerminator, 0, jl_Object, [], 1, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractLineTerminator__init_)],
jur_AbstractLineTerminator$2, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractLineTerminator$2__init_), "$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$2_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$2_isAfterLineTerminator)],
otciu_CharMapping, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_49", $rt_wrapFunction2(otciu_CharMapping__init_)],
jur_AbstractLineTerminator$1, 0, jur_AbstractLineTerminator, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractLineTerminator$1__init_), "$isLineTerminator", $rt_wrapFunction1(jur_AbstractLineTerminator$1_isLineTerminator), "$isAfterLineTerminator", $rt_wrapFunction2(jur_AbstractLineTerminator$1_isAfterLineTerminator)],
jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierStart_computeValue)],
otjc_JSWeakRef, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
otci_CharFlow, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_48", $rt_wrapFunction1(otci_CharFlow__init_0)],
cbgssu_Widget, 0, cbgss_Actor, [cbgssu_Layout], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Widget__init_), "$getMinWidth", $rt_wrapFunction0(cbgssu_Widget_getMinWidth), "$getMinHeight", $rt_wrapFunction0(cbgssu_Widget_getMinHeight), "$getMaxWidth", $rt_wrapFunction0(cbgssu_Widget_getMaxWidth), "$getMaxHeight", $rt_wrapFunction0(cbgssu_Widget_getMaxHeight), "$validate", $rt_wrapFunction0(cbgssu_Widget_validate), "$invalidate", $rt_wrapFunction0(cbgssu_Widget_invalidate), "$invalidateHierarchy", $rt_wrapFunction0(cbgssu_Widget_invalidateHierarchy),
"$sizeChanged", $rt_wrapFunction0(cbgssu_Widget_sizeChanged), "$layout", $rt_wrapFunction0(cbgssu_Widget_layout)],
cbgssu_Disableable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_Styleable, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_ProgressBar, "ProgressBar", 15, cbgssu_Widget, [cbgssu_Disableable, cbgssu_Styleable], 0, 3, 0, 0, ["$_init_227", function(var_1, var_2, var_3, var_4, var_5) { cbgssu_ProgressBar__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$setStyle", $rt_wrapFunction1(cbgssu_ProgressBar_setStyle), "$act0", $rt_wrapFunction1(cbgssu_ProgressBar_act), "$draw", $rt_wrapFunction2(cbgssu_ProgressBar_draw), "$getVisualValue", $rt_wrapFunction0(cbgssu_ProgressBar_getVisualValue), "$getVisualPercent", $rt_wrapFunction0(cbgssu_ProgressBar_getVisualPercent),
"$getBackgroundDrawable", $rt_wrapFunction0(cbgssu_ProgressBar_getBackgroundDrawable), "$getKnobDrawable", $rt_wrapFunction0(cbgssu_ProgressBar_getKnobDrawable), "$getKnobBeforeDrawable", $rt_wrapFunction0(cbgssu_ProgressBar_getKnobBeforeDrawable), "$getKnobAfterDrawable", $rt_wrapFunction0(cbgssu_ProgressBar_getKnobAfterDrawable), "$setValue2", $rt_wrapFunction1(cbgssu_ProgressBar_setValue), "$round0", $rt_wrapFunction1(cbgssu_ProgressBar_round), "$clamp1", $rt_wrapFunction1(cbgssu_ProgressBar_clamp), "$getPrefWidth",
$rt_wrapFunction0(cbgssu_ProgressBar_getPrefWidth), "$getPrefHeight", $rt_wrapFunction0(cbgssu_ProgressBar_getPrefHeight)],
jur_RangeSet, "RangeSet", 29, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_136", $rt_wrapFunction1(jur_RangeSet__init_), "$accepts", $rt_wrapFunction2(jur_RangeSet_accepts), "$getName", $rt_wrapFunction0(jur_RangeSet_getName), "$first", $rt_wrapFunction1(jur_RangeSet_first), "$getChars0", $rt_wrapFunction0(jur_RangeSet_getChars)],
cbggg_SpriteBatch, 0, jl_Object, [cbggg_Batch], 0, 3, 0, cbggg_SpriteBatch_$callClinit, ["$_init_0", $rt_wrapFunction0(cbggg_SpriteBatch__init_1), "$_init_78", $rt_wrapFunction2(cbggg_SpriteBatch__init_), "$begin", $rt_wrapFunction0(cbggg_SpriteBatch_begin), "$end", $rt_wrapFunction0(cbggg_SpriteBatch_end), "$setColor0", $rt_wrapFunction4(cbggg_SpriteBatch_setColor), "$draw1", function(var_1, var_2, var_3, var_4, var_5) { cbggg_SpriteBatch_draw2(this, var_1, var_2, var_3, var_4, var_5); }, "$draw5", $rt_wrapFunction4(cbggg_SpriteBatch_draw1),
"$draw2", function(var_1, var_2, var_3, var_4, var_5) { cbggg_SpriteBatch_draw(this, var_1, var_2, var_3, var_4, var_5); }, "$draw3", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10) { cbggg_SpriteBatch_draw0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10); }, "$flush", $rt_wrapFunction0(cbggg_SpriteBatch_flush), "$dispose", $rt_wrapFunction0(cbggg_SpriteBatch_dispose), "$getTransformMatrix", $rt_wrapFunction0(cbggg_SpriteBatch_getTransformMatrix),
"$setProjectionMatrix", $rt_wrapFunction1(cbggg_SpriteBatch_setProjectionMatrix), "$setTransformMatrix", $rt_wrapFunction1(cbggg_SpriteBatch_setTransformMatrix), "$setupMatrices", $rt_wrapFunction0(cbggg_SpriteBatch_setupMatrices), "$switchTexture", $rt_wrapFunction1(cbggg_SpriteBatch_switchTexture), "$isBlendingEnabled", $rt_wrapFunction0(cbggg_SpriteBatch_isBlendingEnabled)]]);
$rt_metadata([cbgg_Mesh$1, 0, jl_Object, [], 32, 0, 0, cbgg_Mesh$1_$callClinit, 0,
otjt_Float32Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
cbggg_RenderableProvider, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_ModelInstance, "ModelInstance", 21, jl_Object, [cbggg_RenderableProvider], 0, 3, 0, cbggg_ModelInstance_$callClinit, ["$_init_203", $rt_wrapFunction1(cbggg_ModelInstance__init_1), "$_init_89", $rt_wrapFunction2(cbggg_ModelInstance__init_), "$_init_90", $rt_wrapFunction3(cbggg_ModelInstance__init_0), "$copyAnimations", $rt_wrapFunction2(cbggg_ModelInstance_copyAnimations), "$copyAnimation", $rt_wrapFunction2(cbggg_ModelInstance_copyAnimation), "$getRenderables0", $rt_wrapFunction2(cbggg_ModelInstance_getRenderables0),
"$getRenderable", $rt_wrapFunction3(cbggg_ModelInstance_getRenderable), "$getRenderables", $rt_wrapFunction3(cbggg_ModelInstance_getRenderables), "$calculateTransforms", $rt_wrapFunction0(cbggg_ModelInstance_calculateTransforms), "$getNode", $rt_wrapFunction1(cbggg_ModelInstance_getNode), "$getNode0", $rt_wrapFunction2(cbggg_ModelInstance_getNode0), "$getNode1", $rt_wrapFunction3(cbggg_ModelInstance_getNode1)],
jur_CharClass, "CharClass", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_CharClass__init_1), "$_init_92", $rt_wrapFunction2(jur_CharClass__init_0), "$_init_186", $rt_wrapFunction3(jur_CharClass__init_2), "$add", $rt_wrapFunction1(jur_CharClass_add), "$add12", $rt_wrapFunction1(jur_CharClass_add1), "$add0", $rt_wrapFunction2(jur_CharClass_add0), "$union", $rt_wrapFunction1(jur_CharClass_union), "$intersection", $rt_wrapFunction1(jur_CharClass_intersection), "$contains", $rt_wrapFunction1(jur_CharClass_contains),
"$getBits", $rt_wrapFunction0(jur_CharClass_getBits), "$getLowHighSurrogates", $rt_wrapFunction0(jur_CharClass_getLowHighSurrogates), "$getInstance", $rt_wrapFunction0(jur_CharClass_getInstance), "$toString", $rt_wrapFunction0(jur_CharClass_toString), "$hasUCI", $rt_wrapFunction0(jur_CharClass_hasUCI)],
cgxjl_JParserLibraryLoader$OnInitFunction, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_17_0, 0, jl_Object, [cgxjl_JParserLibraryLoader$OnInitFunction], 0, 3, 0, 0, ["$_init_72", $rt_wrapFunction2(cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_17_0__init_), "$onInit", $rt_wrapFunction0(cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_17_0_onInit)],
jn_BufferUnderflowException, "BufferUnderflowException", 30, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_BufferUnderflowException__init_0)],
cbgi_GestureDetector$GestureListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgi_GestureDetector$GestureAdapter, 0, jl_Object, [cbgi_GestureDetector$GestureListener], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgi_GestureDetector$GestureAdapter__init_), "$panStop", $rt_wrapFunction4(cbgi_GestureDetector$GestureAdapter_panStop), "$pinchStop", $rt_wrapFunction0(cbgi_GestureDetector$GestureAdapter_pinchStop)],
cbgggu_CameraInputController$CameraGestureListener, 0, cbgi_GestureDetector$GestureAdapter, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggu_CameraInputController$CameraGestureListener__init_), "$touchDown", $rt_wrapFunction4(cbgggu_CameraInputController$CameraGestureListener_touchDown), "$tap", $rt_wrapFunction4(cbgggu_CameraInputController$CameraGestureListener_tap), "$longPress", $rt_wrapFunction2(cbgggu_CameraInputController$CameraGestureListener_longPress), "$fling", $rt_wrapFunction3(cbgggu_CameraInputController$CameraGestureListener_fling),
"$pan", $rt_wrapFunction4(cbgggu_CameraInputController$CameraGestureListener_pan), "$zoom", $rt_wrapFunction2(cbgggu_CameraInputController$CameraGestureListener_zoom), "$pinch", $rt_wrapFunction4(cbgggu_CameraInputController$CameraGestureListener_pinch)],
cbgss_EventListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
bih_IDLArrayBase, 0, bi_IDLBase, [], 0, 3, 0, 0, ["$onNativeAddressChanged", $rt_wrapFunction0(bih_IDLArrayBase_onNativeAddressChanged), "$_init_63", $rt_wrapFunction2(bih_IDLArrayBase__init_), "$getPointer", $rt_wrapFunction0(bih_IDLArrayBase_getPointer)],
bih_IDLFloatArray, 0, bih_IDLArrayBase, [], 0, 3, 0, bih_IDLFloatArray_$callClinit, ["$_init_63", $rt_wrapFunction2(bih_IDLFloatArray__init_), "$_init_3", $rt_wrapFunction1(bih_IDLFloatArray__init_0), "$setValue", $rt_wrapFunction2(bih_IDLFloatArray_setValue)],
cbggg_Shader, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbgggs_BaseShader, 0, jl_Object, [cbggg_Shader], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_BaseShader__init_), "$register", $rt_wrapFunction3(cbgggs_BaseShader_register), "$register0", $rt_wrapFunction2(cbgggs_BaseShader_register1), "$register2", $rt_wrapFunction1(cbgggs_BaseShader_register0), "$getUniformID", $rt_wrapFunction1(cbgggs_BaseShader_getUniformID), "$init1", $rt_wrapFunction2(cbgggs_BaseShader_init), "$begin5", $rt_wrapFunction2(cbgggs_BaseShader_begin), "$render7", $rt_wrapFunction1(cbgggs_BaseShader_render0),
"$render1", $rt_wrapFunction2(cbgggs_BaseShader_render), "$end", $rt_wrapFunction0(cbgggs_BaseShader_end), "$has0", $rt_wrapFunction1(cbgggs_BaseShader_has), "$loc", $rt_wrapFunction1(cbgggs_BaseShader_loc), "$set26", $rt_wrapFunction2(cbgggs_BaseShader_set1), "$set27", $rt_wrapFunction2(cbgggs_BaseShader_set5), "$set53", $rt_wrapFunction2(cbgggs_BaseShader_set4), "$set25", $rt_wrapFunction2(cbgggs_BaseShader_set3), "$set29", $rt_wrapFunction2(cbgggs_BaseShader_set2), "$set54", $rt_wrapFunction3(cbgggs_BaseShader_set6),
"$set24", function(var_1, var_2, var_3, var_4, var_5) { return cbgggs_BaseShader_set(this, var_1, var_2, var_3, var_4, var_5); }, "$set23", $rt_wrapFunction2(cbgggs_BaseShader_set0), "$set50", $rt_wrapFunction2(cbgggs_BaseShader_set7)],
ji_IOException, "IOException", 33, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_IOException__init_0), "$_init_", $rt_wrapFunction1(ji_IOException__init_)],
jnc_CharacterCodingException, 0, ji_IOException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnc_CharacterCodingException__init_)],
jnc_MalformedInputException, "MalformedInputException", 31, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(jnc_MalformedInputException__init_), "$getMessage", $rt_wrapFunction0(jnc_MalformedInputException_getMessage)],
cbgg_Pixmap$Filter, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Filter_$callClinit, 0,
cbggg_Attribute, 0, jl_Object, [jl_Comparable], 1, 3, 0, cbggg_Attribute_$callClinit, ["$_init_99", $rt_wrapFunction1(cbggg_Attribute__init_), "$equals1", $rt_wrapFunction1(cbggg_Attribute_equals0), "$equals", $rt_wrapFunction1(cbggg_Attribute_equals), "$toString", $rt_wrapFunction0(cbggg_Attribute_toString), "$hashCode0", $rt_wrapFunction0(cbggg_Attribute_hashCode)],
cbggga_FloatAttribute, "FloatAttribute", 25, cbggg_Attribute, [], 0, 3, 0, cbggga_FloatAttribute_$callClinit, ["$_init_98", $rt_wrapFunction2(cbggga_FloatAttribute__init_), "$copy", $rt_wrapFunction0(cbggga_FloatAttribute_copy), "$hashCode0", $rt_wrapFunction0(cbggga_FloatAttribute_hashCode)],
jl_CloneNotSupportedException, "CloneNotSupportedException", 34, jl_Exception, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_CloneNotSupportedException__init_)],
cbgm_Interpolation$PowIn, 0, cbgm_Interpolation$Pow, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgm_Interpolation$PowIn__init_0)],
jur_RandomGenerator, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_Random, 0, jl_Object, [jur_RandomGenerator, ji_Serializable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Random__init_), "$nextInt", $rt_wrapFunction0(ju_Random_nextInt), "$nextLong", $rt_wrapFunction0(ju_Random_nextLong), "$nextDouble", $rt_wrapFunction0(ju_Random_nextDouble)],
cbgm_RandomXS128, 0, ju_Random, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_RandomXS128__init_), "$setSeed", $rt_wrapFunction1(cbgm_RandomXS128_setSeed), "$setState", $rt_wrapFunction2(cbgm_RandomXS128_setState)],
bbc_btCollisionWorld, 0, bi_IDLBase, [], 0, 3, 0, bbc_btCollisionWorld_$callClinit, ["$_init_63", $rt_wrapFunction2(bbc_btCollisionWorld__init_), "$setDebugDrawer", $rt_wrapFunction1(bbc_btCollisionWorld_setDebugDrawer), "$debugDrawWorld", $rt_wrapFunction0(bbc_btCollisionWorld_debugDrawWorld)],
bbd_btDynamicsWorld, 0, bbc_btCollisionWorld, [], 0, 3, 0, bbd_btDynamicsWorld_$callClinit, ["$_init_63", $rt_wrapFunction2(bbd_btDynamicsWorld__init_), "$stepSimulation", $rt_wrapFunction1(bbd_btDynamicsWorld_stepSimulation), "$addRigidBody", $rt_wrapFunction1(bbd_btDynamicsWorld_addRigidBody), "$removeRigidBody", $rt_wrapFunction1(bbd_btDynamicsWorld_removeRigidBody), "$setGravity", $rt_wrapFunction1(bbd_btDynamicsWorld_setGravity)],
bbd_btDiscreteDynamicsWorld, 0, bbd_btDynamicsWorld, [], 0, 3, 0, bbd_btDiscreteDynamicsWorld_$callClinit, ["$_init_200", $rt_wrapFunction4(bbd_btDiscreteDynamicsWorld__init_0), "$_init_63", $rt_wrapFunction2(bbd_btDiscreteDynamicsWorld__init_)],
jur_AbstractCharClass$LazyNonDigit, 0, jur_AbstractCharClass$LazyDigit, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonDigit__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonDigit_computeValue)],
cbguv_Viewport, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbguv_Viewport__init_), "$apply4", $rt_wrapFunction1(cbguv_Viewport_apply), "$unproject0", $rt_wrapFunction1(cbguv_Viewport_unproject), "$calculateScissors1", $rt_wrapFunction3(cbguv_Viewport_calculateScissors), "$getCamera", $rt_wrapFunction0(cbguv_Viewport_getCamera), "$setCamera", $rt_wrapFunction1(cbguv_Viewport_setCamera), "$getWorldWidth", $rt_wrapFunction0(cbguv_Viewport_getWorldWidth), "$getWorldHeight", $rt_wrapFunction0(cbguv_Viewport_getWorldHeight),
"$setWorldSize", $rt_wrapFunction2(cbguv_Viewport_setWorldSize), "$setScreenBounds", $rt_wrapFunction4(cbguv_Viewport_setScreenBounds)],
cbguv_ScreenViewport, 0, cbguv_Viewport, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbguv_ScreenViewport__init_1), "$_init_100", $rt_wrapFunction1(cbguv_ScreenViewport__init_), "$update4", $rt_wrapFunction3(cbguv_ScreenViewport_update)],
cbgu_ArrayMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_108", $rt_wrapFunction4(cbgu_ArrayMap__init_), "$putAll0", $rt_wrapFunction1(cbgu_ArrayMap_putAll), "$putAll", $rt_wrapFunction3(cbgu_ArrayMap_putAll0), "$clear", $rt_wrapFunction0(cbgu_ArrayMap_clear), "$resize0", $rt_wrapFunction1(cbgu_ArrayMap_resize)],
cbggg_BitmapFont, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_BitmapFont__init_2), "$_init_101", $rt_wrapFunction4(cbggg_BitmapFont__init_), "$_init_102", $rt_wrapFunction3(cbggg_BitmapFont__init_0), "$_init_105", $rt_wrapFunction3(cbggg_BitmapFont__init_1), "$load1", $rt_wrapFunction1(cbggg_BitmapFont_load), "$draw7", $rt_wrapFunction4(cbggg_BitmapFont_draw), "$setColor0", $rt_wrapFunction4(cbggg_BitmapFont_setColor), "$getRegions", $rt_wrapFunction0(cbggg_BitmapFont_getRegions),
"$newFontCache", $rt_wrapFunction0(cbggg_BitmapFont_newFontCache)],
jur_CIBackReferenceSet, "CIBackReferenceSet", 29, jur_JointSet, [], 0, 0, 0, 0, ["$_init_37", $rt_wrapFunction2(jur_CIBackReferenceSet__init_), "$matches", $rt_wrapFunction3(jur_CIBackReferenceSet_matches), "$setNext", $rt_wrapFunction1(jur_CIBackReferenceSet_setNext), "$getString", $rt_wrapFunction1(jur_CIBackReferenceSet_getString), "$getName", $rt_wrapFunction0(jur_CIBackReferenceSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CIBackReferenceSet_hasConsumed)],
jur_AbstractCharClass$1, "AbstractCharClass$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_34", $rt_wrapFunction2(jur_AbstractCharClass$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$1_contains)],
cbgggm_NodePart, "NodePart", 26, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggm_NodePart__init_), "$_init_218", $rt_wrapFunction2(cbgggm_NodePart__init_0), "$setRenderable", $rt_wrapFunction1(cbgggm_NodePart_setRenderable), "$copy4", $rt_wrapFunction0(cbgggm_NodePart_copy), "$set20", $rt_wrapFunction1(cbgggm_NodePart_set)],
jur_AbstractCharClass$2, "AbstractCharClass$2", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_35", $rt_wrapFunction3(jur_AbstractCharClass$2__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$2_contains)],
cbgu_FlushablePool, 0, cbgu_Pool, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_FlushablePool__init_), "$obtain0", $rt_wrapFunction0(cbgu_FlushablePool_obtain), "$flush", $rt_wrapFunction0(cbgu_FlushablePool_flush)],
jur_PossessiveCompositeQuantifierSet, "PossessiveCompositeQuantifierSet", 29, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$_init_109", $rt_wrapFunction4(jur_PossessiveCompositeQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_PossessiveCompositeQuantifierSet_matches)],
cgxjc_JMultiplatform, 0, jl_Object, [], 4, 3, 0, 0, ["$getMap", $rt_wrapFunction0(cgxjc_JMultiplatform_getMap)],
cbgu_IntIntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_IntIntMap__init_1), "$_init_110", $rt_wrapFunction2(cbgu_IntIntMap__init_), "$place", $rt_wrapFunction1(cbgu_IntIntMap_place), "$put4", $rt_wrapFunction2(cbgu_IntIntMap_put), "$get17", $rt_wrapFunction2(cbgu_IntIntMap_get)],
cbgggs_DefaultShader$Setters$ACubemap, "DefaultShader$Setters$ACubemap", 23, cbgggs_BaseShader$LocalSetter, [], 0, 3, 0, cbgggs_DefaultShader$Setters$ACubemap_$callClinit, ["$_init_37", $rt_wrapFunction2(cbgggs_DefaultShader$Setters$ACubemap__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$ACubemap_set)],
cbggg_BitmapFontCache, 0, jl_Object, [], 0, 3, 0, cbggg_BitmapFontCache_$callClinit, ["$_init_106", $rt_wrapFunction2(cbggg_BitmapFontCache__init_), "$getColor", $rt_wrapFunction0(cbggg_BitmapFontCache_getColor), "$draw4", $rt_wrapFunction1(cbggg_BitmapFontCache_draw), "$clear", $rt_wrapFunction0(cbggg_BitmapFontCache_clear), "$addText", $rt_wrapFunction3(cbggg_BitmapFontCache_addText0), "$addText0", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { return cbggg_BitmapFontCache_addText1(this,
var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$addText1", $rt_wrapFunction3(cbggg_BitmapFontCache_addText)],
otci_Base46, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_UCISequenceSet, "UCISequenceSet", 29, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_180", $rt_wrapFunction1(jur_UCISequenceSet__init_), "$accepts", $rt_wrapFunction2(jur_UCISequenceSet_accepts), "$getName", $rt_wrapFunction0(jur_UCISequenceSet_getName)],
jur_AbstractCharClass$LazyJavaDefined$1, "AbstractCharClass$LazyJavaDefined$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_178", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDefined$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDefined$1_contains)],
otjt_Int8Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
cbggge_DirectionalLight, "DirectionalLight", 22, cbggge_BaseLight, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggge_DirectionalLight__init_0), "$set47", $rt_wrapFunction1(cbggge_DirectionalLight_set), "$set22", $rt_wrapFunction2(cbggge_DirectionalLight_set0), "$set40", function(var_1, var_2, var_3, var_4, var_5, var_6) { return cbggge_DirectionalLight_set1(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$equals", $rt_wrapFunction1(cbggge_DirectionalLight_equals), "$equals3", $rt_wrapFunction1(cbggge_DirectionalLight_equals0)]]);
$rt_metadata([cbggg_HdpiUtils, 0, jl_Object, [], 0, 3, 0, cbggg_HdpiUtils_$callClinit, 0,
jur_CompositeRangeSet, "CompositeRangeSet", 29, jur_JointSet, [], 0, 0, 0, 0, ["$_init_187", $rt_wrapFunction2(jur_CompositeRangeSet__init_0), "$matches", $rt_wrapFunction3(jur_CompositeRangeSet_matches), "$setNext", $rt_wrapFunction1(jur_CompositeRangeSet_setNext), "$getName", $rt_wrapFunction0(jur_CompositeRangeSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_CompositeRangeSet_hasConsumed), "$first", $rt_wrapFunction1(jur_CompositeRangeSet_first)],
ju_Map$Entry, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_MapEntry, 0, jl_Object, [ju_Map$Entry, jl_Cloneable], 0, 0, 0, 0, ["$_init_77", $rt_wrapFunction2(ju_MapEntry__init_)],
ju_Hashtable$Entry, 0, ju_MapEntry, [], 0, 0, 0, 0, ["$_init_77", $rt_wrapFunction2(ju_Hashtable$Entry__init_), "$getKeyHash", $rt_wrapFunction0(ju_Hashtable$Entry_getKeyHash), "$equalsKey", $rt_wrapFunction2(ju_Hashtable$Entry_equalsKey)],
jur_FinalSet, "FinalSet", 29, jur_FSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_FinalSet__init_), "$matches", $rt_wrapFunction3(jur_FinalSet_matches), "$getName", $rt_wrapFunction0(jur_FinalSet_getName)],
bl_btMotionState$2, 0, jl_Object, [bl_btMotionState$setWorldTransform], 0, 0, 0, 0, ["$_init_66", $rt_wrapFunction1(bl_btMotionState$2__init_), "$setWorldTransform0", $rt_wrapFunction1(bl_btMotionState$2_setWorldTransform)],
bl_btMotionState$1, 0, jl_Object, [bl_btMotionState$getWorldTransform], 0, 0, 0, 0, ["$_init_66", $rt_wrapFunction1(bl_btMotionState$1__init_), "$getWorldTransform0", $rt_wrapFunction1(bl_btMotionState$1_getWorldTransform)],
jur_EmptySet, "EmptySet", 29, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_24", $rt_wrapFunction1(jur_EmptySet__init_0), "$accepts", $rt_wrapFunction2(jur_EmptySet_accepts), "$find", $rt_wrapFunction3(jur_EmptySet_find), "$findBack", $rt_wrapFunction4(jur_EmptySet_findBack), "$getName", $rt_wrapFunction0(jur_EmptySet_getName), "$hasConsumed", $rt_wrapFunction1(jur_EmptySet_hasConsumed)],
cbggga_IntAttribute, 0, cbggg_Attribute, [], 0, 3, 0, cbggga_IntAttribute_$callClinit, 0,
cgxjl_JParserLibraryLoader$1, 0, jl_Object, [cgxjl_JParserLibraryLoaderListener], 0, 0, 0, 0, ["$_init_69", $rt_wrapFunction1(cgxjl_JParserLibraryLoader$1__init_), "$onLoad", $rt_wrapFunction2(cgxjl_JParserLibraryLoader$1_onLoad)],
ju_Enumeration, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_StringTokenizer, 0, jl_Object, [ju_Enumeration], 0, 3, 0, 0, ["$_init_88", $rt_wrapFunction2(ju_StringTokenizer__init_1), "$_init_111", $rt_wrapFunction3(ju_StringTokenizer__init_0), "$hasMoreTokens", $rt_wrapFunction0(ju_StringTokenizer_hasMoreTokens), "$nextToken", $rt_wrapFunction0(ju_StringTokenizer_nextToken)],
cbggg_TextureRegion, "TextureRegion", 20, jl_Object, [], 0, 3, 0, 0, ["$_init_104", $rt_wrapFunction1(cbggg_TextureRegion__init_0), "$setRegion0", $rt_wrapFunction4(cbggg_TextureRegion_setRegion0), "$setRegion1", $rt_wrapFunction4(cbggg_TextureRegion_setRegion), "$getTexture", $rt_wrapFunction0(cbggg_TextureRegion_getTexture), "$getRegionWidth", $rt_wrapFunction0(cbggg_TextureRegion_getRegionWidth), "$getRegionHeight", $rt_wrapFunction0(cbggg_TextureRegion_getRegionHeight)],
cbggg_TextureAtlas$AtlasRegion, 0, cbggg_TextureRegion, [], 0, 3, 0, 0, 0,
cbg_Graphics, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaGraphics, 0, jl_Object, [cbg_Graphics], 0, 3, 0, 0, ["$_init_19", $rt_wrapFunction1(cgxgbt_TeaGraphics__init_), "$render8", $rt_wrapFunction1(cgxgbt_TeaGraphics_render), "$resize3", $rt_wrapFunction3(cgxgbt_TeaGraphics_resize), "$update0", $rt_wrapFunction0(cgxgbt_TeaGraphics_update), "$getGL20", $rt_wrapFunction0(cgxgbt_TeaGraphics_getGL20), "$getGL30", $rt_wrapFunction0(cgxgbt_TeaGraphics_getGL30), "$getWidth0", $rt_wrapFunction0(cgxgbt_TeaGraphics_getWidth), "$getHeight0", $rt_wrapFunction0(cgxgbt_TeaGraphics_getHeight),
"$getBackBufferWidth", $rt_wrapFunction0(cgxgbt_TeaGraphics_getBackBufferWidth), "$getBackBufferHeight", $rt_wrapFunction0(cgxgbt_TeaGraphics_getBackBufferHeight), "$getDeltaTime", $rt_wrapFunction0(cgxgbt_TeaGraphics_getDeltaTime), "$getFramesPerSecond", $rt_wrapFunction0(cgxgbt_TeaGraphics_getFramesPerSecond), "$getDisplayMode", $rt_wrapFunction0(cgxgbt_TeaGraphics_getDisplayMode), "$setFullscreenMode", $rt_wrapFunction1(cgxgbt_TeaGraphics_setFullscreenMode), "$setWindowedMode", $rt_wrapFunction2(cgxgbt_TeaGraphics_setWindowedMode),
"$setCanvasSize", $rt_wrapFunction3(cgxgbt_TeaGraphics_setCanvasSize), "$supportsExtension", $rt_wrapFunction1(cgxgbt_TeaGraphics_supportsExtension), "$requestRendering", $rt_wrapFunction0(cgxgbt_TeaGraphics_requestRendering), "$getNativeScreenDensity", $rt_wrapFunction0(cgxgbt_TeaGraphics_getNativeScreenDensity), "$enterFullscreen", $rt_wrapFunction3(cgxgbt_TeaGraphics_enterFullscreen), "$exitFullscreen", $rt_wrapFunction0(cgxgbt_TeaGraphics_exitFullscreen), "$isFullscreen", $rt_wrapFunction0(cgxgbt_TeaGraphics_isFullscreen)],
bbc_btCollisionConfiguration, 0, bi_IDLBase, [], 0, 3, 0, bbc_btCollisionConfiguration_$callClinit, ["$_init_63", $rt_wrapFunction2(bbc_btCollisionConfiguration__init_)],
bbc_btDefaultCollisionConfiguration, 0, bbc_btCollisionConfiguration, [], 0, 3, 0, bbc_btDefaultCollisionConfiguration_$callClinit, ["$_init_198", $rt_wrapFunction1(bbc_btDefaultCollisionConfiguration__init_0), "$_init_63", $rt_wrapFunction2(bbc_btDefaultCollisionConfiguration__init_)],
cgxgbtf_FileDB, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbtf_FileDB__init_), "$write0", $rt_wrapFunction3(cgxgbtf_FileDB_write)],
cgxgbtf_MemoryFileStorage, 0, cgxgbtf_FileDB, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbtf_MemoryFileStorage__init_), "$read1", $rt_wrapFunction1(cgxgbtf_MemoryFileStorage_read), "$writeInternal", $rt_wrapFunction4(cgxgbtf_MemoryFileStorage_writeInternal), "$mkdirs", $rt_wrapFunction1(cgxgbtf_MemoryFileStorage_mkdirs), "$exists0", $rt_wrapFunction1(cgxgbtf_MemoryFileStorage_exists), "$length1", $rt_wrapFunction1(cgxgbtf_MemoryFileStorage_length), "$putFile", $rt_wrapFunction2(cgxgbtf_MemoryFileStorage_putFile),
"$removeFile", $rt_wrapFunction1(cgxgbtf_MemoryFileStorage_removeFile), "$getInternal", $rt_wrapFunction1(cgxgbtf_MemoryFileStorage_getInternal), "$putFileInternal", $rt_wrapFunction2(cgxgbtf_MemoryFileStorage_putFileInternal0), "$putFileInternal0", $rt_wrapFunction3(cgxgbtf_MemoryFileStorage_putFileInternal), "$putFolderInternal", $rt_wrapFunction1(cgxgbtf_MemoryFileStorage_putFolderInternal), "$putFolderInternal0", $rt_wrapFunction2(cgxgbtf_MemoryFileStorage_putFolderInternal0), "$removeInternal", $rt_wrapFunction1(cgxgbtf_MemoryFileStorage_removeInternal),
"$removeInternal0", $rt_wrapFunction2(cgxgbtf_MemoryFileStorage_removeInternal0), "$containsKeyInternal", $rt_wrapFunction1(cgxgbtf_MemoryFileStorage_containsKeyInternal), "$fixPath", $rt_wrapFunction1(cgxgbtf_MemoryFileStorage_fixPath)],
jl_IndexOutOfBoundsException, "IndexOutOfBoundsException", 34, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IndexOutOfBoundsException__init_2), "$_init_", $rt_wrapFunction1(jl_IndexOutOfBoundsException__init_1)],
jl_ArrayIndexOutOfBoundsException, "ArrayIndexOutOfBoundsException", 34, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(jl_ArrayIndexOutOfBoundsException__init_)],
ji_InputStreamReader, 0, ji_Reader, [], 0, 3, 0, 0, ["$_init_30", $rt_wrapFunction2(ji_InputStreamReader__init_1), "$_init_120", $rt_wrapFunction2(ji_InputStreamReader__init_), "$_init_31", $rt_wrapFunction1(ji_InputStreamReader__init_0), "$_init_121", $rt_wrapFunction2(ji_InputStreamReader__init_2), "$close", $rt_wrapFunction0(ji_InputStreamReader_close), "$read2", $rt_wrapFunction3(ji_InputStreamReader_read), "$ready", $rt_wrapFunction0(ji_InputStreamReader_ready)],
cbgss_Stage$fireExit$lambda$_9_0, "Stage$fireExit$lambda$_9_0", 14, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_Stage$fireExit$lambda$_9_0__init_), "$get3", $rt_wrapFunction0(cbgss_Stage$fireExit$lambda$_9_0_get0), "$get6", $rt_wrapFunction0(cbgss_Stage$fireExit$lambda$_9_0_get)],
cbgg_TextureData$Factory, 0, jl_Object, [], 0, 3, 0, 0, 0,
ju_Iterator, 0, jl_Object, [], 3, 3, 0, 0, 0,
ju_AbstractList$1, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, ["$_init_152", $rt_wrapFunction1(ju_AbstractList$1__init_), "$hasNext", $rt_wrapFunction0(ju_AbstractList$1_hasNext), "$next", $rt_wrapFunction0(ju_AbstractList$1_next)],
jn_IntBufferOverTypedArray, 0, jn_IntBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$_init_83", function(var_1, var_2, var_3, var_4, var_5) { jn_IntBufferOverTypedArray__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$readOnly", $rt_wrapFunction0(jn_IntBufferOverTypedArray_readOnly), "$getElement", $rt_wrapFunction1(jn_IntBufferOverTypedArray_getElement), "$putElement", $rt_wrapFunction2(jn_IntBufferOverTypedArray_putElement), "$capacityImpl", $rt_wrapFunction0(jn_IntBufferOverTypedArray_capacityImpl)],
cbgggs_DefaultShader$Setters$20, "DefaultShader$Setters$20", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$20__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$20_set)],
cbgggs_DefaultShader$Setters$21, "DefaultShader$Setters$21", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$21__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$21_set)],
cbgggs_DefaultShader$Setters$24, "DefaultShader$Setters$24", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$24__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$24_set)],
cgxgbt_TeaPreloadApplicationListener$Step, 0, jl_Enum, [], 12, 0, 0, cgxgbt_TeaPreloadApplicationListener$Step_$callClinit, 0,
cbgggs_DefaultShader$Setters$25, "DefaultShader$Setters$25", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$25__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$25_set)],
cbgggs_DefaultShader$Setters$22, "DefaultShader$Setters$22", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$22__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$22_set)],
cbgu_Scaling, 0, jl_Object, [], 1, 3, 0, cbgu_Scaling_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgu_Scaling__init_)],
cbgggs_DefaultShader$Setters$23, "DefaultShader$Setters$23", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$23__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$23_set)],
cgxgbtft_LocalDBStorage$putFile$lambda$_2_0, 0, jl_Object, [otji_EventHandler], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(cgxgbtft_LocalDBStorage$putFile$lambda$_2_0__init_), "$handleEvent", $rt_wrapFunction0(cgxgbtft_LocalDBStorage$putFile$lambda$_2_0_handleEvent)],
jl_Runnable, 0, jl_Object, [], 3, 3, 0, 0, 0,
jnc_CharsetDecoder, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_75", $rt_wrapFunction3(jnc_CharsetDecoder__init_), "$onMalformedInput", $rt_wrapFunction1(jnc_CharsetDecoder_onMalformedInput), "$implOnMalformedInput", $rt_wrapFunction1(jnc_CharsetDecoder_implOnMalformedInput), "$onUnmappableCharacter", $rt_wrapFunction1(jnc_CharsetDecoder_onUnmappableCharacter), "$implOnUnmappableCharacter", $rt_wrapFunction1(jnc_CharsetDecoder_implOnUnmappableCharacter), "$decode1", $rt_wrapFunction3(jnc_CharsetDecoder_decode), "$flush1",
$rt_wrapFunction1(jnc_CharsetDecoder_flush), "$reset3", $rt_wrapFunction0(jnc_CharsetDecoder_reset), "$decode", $rt_wrapFunction1(jnc_CharsetDecoder_decode0), "$implFlush0", $rt_wrapFunction1(jnc_CharsetDecoder_implFlush), "$implReset", $rt_wrapFunction0(jnc_CharsetDecoder_implReset)],
jnci_BufferedDecoder, 0, jnc_CharsetDecoder, [], 1, 3, 0, 0, ["$_init_75", $rt_wrapFunction3(jnci_BufferedDecoder__init_), "$decodeLoop", $rt_wrapFunction2(jnci_BufferedDecoder_decodeLoop)],
jnci_UTF8Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, ["$_init_54", $rt_wrapFunction1(jnci_UTF8Decoder__init_), "$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF8Decoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
bl_btTransform, 0, bi_IDLBase, [], 0, 3, 0, bl_btTransform_$callClinit, ["$_init_63", $rt_wrapFunction2(bl_btTransform__init_), "$getOrigin", $rt_wrapFunction0(bl_btTransform_getOrigin), "$getBasis", $rt_wrapFunction0(bl_btTransform_getBasis), "$setFromOpenGLMatrix", $rt_wrapFunction1(bl_btTransform_setFromOpenGLMatrix)],
jur_PossessiveQuantifierSet, "PossessiveQuantifierSet", 29, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_67", $rt_wrapFunction3(jur_PossessiveQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_PossessiveQuantifierSet_matches)],
jnci_BufferedDecoder$Controller, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_124", $rt_wrapFunction2(jnci_BufferedDecoder$Controller__init_), "$hasMoreInput", $rt_wrapFunction0(jnci_BufferedDecoder$Controller_hasMoreInput0), "$hasMoreInput0", $rt_wrapFunction1(jnci_BufferedDecoder$Controller_hasMoreInput), "$hasMoreOutput", $rt_wrapFunction1(jnci_BufferedDecoder$Controller_hasMoreOutput), "$setInPosition", $rt_wrapFunction1(jnci_BufferedDecoder$Controller_setInPosition), "$setOutPosition", $rt_wrapFunction1(jnci_BufferedDecoder$Controller_setOutPosition)],
jl_Thread$UncaughtExceptionHandler, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_DefaultUncaughtExceptionHandler, 0, jl_Object, [jl_Thread$UncaughtExceptionHandler], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_DefaultUncaughtExceptionHandler__init_)],
cbgggs_DefaultShader$Setters$28, "DefaultShader$Setters$28", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$28__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$28_set)],
cbgggs_DefaultShader$Setters$29, "DefaultShader$Setters$29", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$29__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$29_set)],
cbgggs_DefaultShader$Setters$26, "DefaultShader$Setters$26", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$26__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$26_set)]]);
$rt_metadata([cbgggs_DefaultShader$Setters$27, "DefaultShader$Setters$27", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$27__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$27_set)],
jur_AbstractCharClass$LazyJavaLetter$1, "AbstractCharClass$LazyJavaLetter$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_40", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetter$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetter$1_contains)],
cgxgbtdi_TeaWindow, 0, jl_Object, [otjb_AnimationFrameCallback], 0, 3, 0, cgxgbtdi_TeaWindow_$callClinit, ["$_init_0", $rt_wrapFunction0(cgxgbtdi_TeaWindow__init_), "$getDocument", $rt_wrapFunction0(cgxgbtdi_TeaWindow_getDocument), "$requestAnimationFrame", $rt_wrapFunction1(cgxgbtdi_TeaWindow_requestAnimationFrame), "$onAnimationFrame", $rt_wrapFunction1(cgxgbtdi_TeaWindow_onAnimationFrame), "$getLocation", $rt_wrapFunction0(cgxgbtdi_TeaWindow_getLocation), "$getClientWidth", $rt_wrapFunction0(cgxgbtdi_TeaWindow_getClientWidth),
"$getClientHeight", $rt_wrapFunction0(cgxgbtdi_TeaWindow_getClientHeight), "$addEventListener", $rt_wrapFunction2(cgxgbtdi_TeaWindow_addEventListener)],
cbg_Net, 0, jl_Object, [], 3, 3, 0, 0, 0,
jnci_Iso8859Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, ["$_init_54", $rt_wrapFunction1(jnci_Iso8859Decoder__init_), "$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_Iso8859Decoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
ju_HashMap$HashEntry, 0, ju_MapEntry, [], 0, 0, 0, 0, ["$_init_158", $rt_wrapFunction2(ju_HashMap$HashEntry__init_)],
cbgm_Shape2D, 0, jl_Object, [], 3, 3, 0, 0, 0,
jur_AbstractCharClass$LazyUpper, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyUpper__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyUpper_computeValue)],
otji_JSWrapper, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgss_Touchable, 0, jl_Enum, [], 12, 3, 0, cbgss_Touchable_$callClinit, 0,
ju_HashSet, "HashSet", 28, ju_AbstractSet, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_HashSet__init_0), "$_init_126", $rt_wrapFunction1(ju_HashSet__init_), "$add3", $rt_wrapFunction1(ju_HashSet_add), "$contains1", $rt_wrapFunction1(ju_HashSet_contains), "$remove4", $rt_wrapFunction1(ju_HashSet_remove), "$size", $rt_wrapFunction0(ju_HashSet_size)],
jur_MultiLineSOLSet, "MultiLineSOLSet", 29, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_185", $rt_wrapFunction1(jur_MultiLineSOLSet__init_), "$matches", $rt_wrapFunction3(jur_MultiLineSOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_MultiLineSOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_MultiLineSOLSet_getName)],
cbgggs_BaseShader$GlobalSetter, 0, jl_Object, [cbgggs_BaseShader$Setter], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_BaseShader$GlobalSetter__init_), "$isGlobal", $rt_wrapFunction2(cbgggs_BaseShader$GlobalSetter_isGlobal)],
cbgggs_DefaultShader$Setters$10, "DefaultShader$Setters$10", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$10__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$10_set)],
cbggg_VertexBufferObject, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, 0, ["$_init_127", $rt_wrapFunction3(cbggg_VertexBufferObject__init_), "$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObject_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObject_getNumVertices), "$getNumMaxVertices", $rt_wrapFunction0(cbggg_VertexBufferObject_getNumMaxVertices), "$setVertices0", $rt_wrapFunction3(cbggg_VertexBufferObject_setVertices), "$bind2", $rt_wrapFunction2(cbggg_VertexBufferObject_bind),
"$unbind1", $rt_wrapFunction2(cbggg_VertexBufferObject_unbind), "$dispose", $rt_wrapFunction0(cbggg_VertexBufferObject_dispose)],
cbggg_VertexArray, 0, cbggg_VertexBufferObject, [], 0, 3, 0, 0, ["$_init_215", $rt_wrapFunction2(cbggg_VertexArray__init_)],
cbgggs_DefaultShader$Setters$13, "DefaultShader$Setters$13", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$13__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$13_set)],
cbg_ApplicationListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbg_Game, 0, jl_Object, [cbg_ApplicationListener], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbg_Game__init_), "$dispose", $rt_wrapFunction0(cbg_Game_dispose), "$pause", $rt_wrapFunction0(cbg_Game_pause), "$resume", $rt_wrapFunction0(cbg_Game_resume), "$render3", $rt_wrapFunction0(cbg_Game_render), "$resize1", $rt_wrapFunction2(cbg_Game_resize), "$setScreen", $rt_wrapFunction1(cbg_Game_setScreen)],
cbgggs_DefaultShader$Setters$14, "DefaultShader$Setters$14", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$14__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$14_set)],
jur_AbstractCharClass$LazyLower, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyLower__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyLower_computeValue)],
cbgggs_DefaultShader$Setters$11, "DefaultShader$Setters$11", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$11__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$11_set)],
cbgggs_DefaultShader$Setters$12, "DefaultShader$Setters$12", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$12__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$12_set)],
bl_btIDebugDraw, 0, bi_IDLBase, [], 0, 3, 0, bl_btIDebugDraw_$callClinit, ["$_init_63", $rt_wrapFunction2(bl_btIDebugDraw__init_0), "$_init_0", $rt_wrapFunction0(bl_btIDebugDraw__init_), "$reportErrorWarning0", $rt_wrapFunction1(bl_btIDebugDraw_reportErrorWarning), "$draw3dText0", $rt_wrapFunction2(bl_btIDebugDraw_draw3dText)],
cbgggu_RenderContext, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_207", $rt_wrapFunction1(cbgggu_RenderContext__init_), "$begin", $rt_wrapFunction0(cbgggu_RenderContext_begin), "$end", $rt_wrapFunction0(cbgggu_RenderContext_end), "$setDepthMask", $rt_wrapFunction1(cbgggu_RenderContext_setDepthMask), "$setDepthTest", $rt_wrapFunction3(cbgggu_RenderContext_setDepthTest), "$setBlending0", $rt_wrapFunction3(cbgggu_RenderContext_setBlending), "$setCullFace", $rt_wrapFunction1(cbgggu_RenderContext_setCullFace)],
cbgg_TextureData, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_PixmapTextureData, "PixmapTextureData", 19, jl_Object, [cbgg_TextureData], 0, 3, 0, 0, ["$_init_59", $rt_wrapFunction4(cbggg_PixmapTextureData__init_0), "$_init_129", function(var_1, var_2, var_3, var_4, var_5) { cbggg_PixmapTextureData__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$disposePixmap", $rt_wrapFunction0(cbggg_PixmapTextureData_disposePixmap), "$consumePixmap", $rt_wrapFunction0(cbggg_PixmapTextureData_consumePixmap), "$getWidth0", $rt_wrapFunction0(cbggg_PixmapTextureData_getWidth),
"$getHeight0", $rt_wrapFunction0(cbggg_PixmapTextureData_getHeight), "$getFormat", $rt_wrapFunction0(cbggg_PixmapTextureData_getFormat), "$useMipMaps", $rt_wrapFunction0(cbggg_PixmapTextureData_useMipMaps), "$isManaged", $rt_wrapFunction0(cbggg_PixmapTextureData_isManaged), "$getType", $rt_wrapFunction0(cbggg_PixmapTextureData_getType), "$consumeCustomData", $rt_wrapFunction1(cbggg_PixmapTextureData_consumeCustomData), "$isPrepared", $rt_wrapFunction0(cbggg_PixmapTextureData_isPrepared), "$prepare", $rt_wrapFunction0(cbggg_PixmapTextureData_prepare)],
cbgg_GL20, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaGL20, "TeaGL20", 5, jl_Object, [cbgg_GL20], 0, 3, 0, 0, ["$_init_113", $rt_wrapFunction1(cgxgbt_TeaGL20__init_), "$getUniformLocation", $rt_wrapFunction1(cgxgbt_TeaGL20_getUniformLocation), "$glActiveTexture", $rt_wrapFunction1(cgxgbt_TeaGL20_glActiveTexture), "$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL20_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindBuffer), "$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL20_glBindTexture), "$glBlendFunc", $rt_wrapFunction2(cgxgbt_TeaGL20_glBlendFunc),
"$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL20_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL20_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL20_glBufferSubData), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL20_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL20_glClearColor), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL20_glCreateProgram), "$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glCreateShader),
"$glCullFace", $rt_wrapFunction1(cgxgbt_TeaGL20_glCullFace), "$glDeleteBuffer", $rt_wrapFunction1(cgxgbt_TeaGL20_glDeleteBuffer), "$glDeleteProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glDeleteProgram), "$glDeleteShader", $rt_wrapFunction1(cgxgbt_TeaGL20_glDeleteShader), "$glDeleteTexture", $rt_wrapFunction1(cgxgbt_TeaGL20_glDeleteTexture), "$glDepthFunc", $rt_wrapFunction1(cgxgbt_TeaGL20_glDepthFunc), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL20_glDepthMask), "$glDepthRangef", $rt_wrapFunction2(cgxgbt_TeaGL20_glDepthRangef),
"$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL20_glDisable), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20_glDisableVertexAttribArray), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL20_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL20_glDrawElements), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL20_glDrawElements0), "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL20_glEnable), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20_glEnableVertexAttribArray), "$glGenBuffer",
$rt_wrapFunction0(cgxgbt_TeaGL20_glGenBuffer), "$glGenerateMipmap", $rt_wrapFunction1(cgxgbt_TeaGL20_glGenerateMipmap), "$glGenTexture", $rt_wrapFunction0(cgxgbt_TeaGL20_glGenTexture), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL20_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL20_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetFloatv), "$glGetIntegerv", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetIntegerv),
"$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetProgramInfoLog), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL20_glGetProgramiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetShaderInfoLog), "$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL20_glGetShaderiv), "$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL20_glGetString), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL20_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glLinkProgram), "$glPixelStorei",
$rt_wrapFunction2(cgxgbt_TeaGL20_glPixelStorei), "$glScissor", $rt_wrapFunction4(cgxgbt_TeaGL20_glScissor), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL20_glShaderSource), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL20_glTexParameterf), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL20_glTexParameteri), "$glUniform1f",
$rt_wrapFunction2(cgxgbt_TeaGL20_glUniform1f), "$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL20_glUniform1i), "$glUniform2f", $rt_wrapFunction3(cgxgbt_TeaGL20_glUniform2f), "$glUniform3f", $rt_wrapFunction4(cgxgbt_TeaGL20_glUniform3f), "$glUniform3fv", $rt_wrapFunction4(cgxgbt_TeaGL20_glUniform3fv), "$glUniform4f", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL20_glUniform4f(this, var_1, var_2, var_3, var_4, var_5); }, "$glUniformMatrix3fv", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL20_glUniformMatrix3fv(this,
var_1, var_2, var_3, var_4, var_5); }, "$glUniformMatrix4fv", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL20_glUniformMatrix4fv(this, var_1, var_2, var_3, var_4, var_5); }, "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL20_glUseProgram), "$glVertexAttrib2f", $rt_wrapFunction3(cgxgbt_TeaGL20_glVertexAttrib2f), "$glVertexAttribPointer", function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL20_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL20_glViewport)],
cbgg_GL30, 0, jl_Object, [cbgg_GL20], 3, 3, 0, 0, 0,
cgxgbt_TeaGL30, "TeaGL30", 5, cgxgbt_TeaGL20, [cbgg_GL30], 0, 3, 0, 0, ["$_init_112", $rt_wrapFunction1(cgxgbt_TeaGL30__init_), "$glBindVertexArray", $rt_wrapFunction1(cgxgbt_TeaGL30_glBindVertexArray), "$glDeleteVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30_glDeleteVertexArrays), "$glDrawArraysInstanced", $rt_wrapFunction4(cgxgbt_TeaGL30_glDrawArraysInstanced), "$glDrawElementsInstanced", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL30_glDrawElementsInstanced(this, var_1, var_2, var_3, var_4,
var_5); }, "$glGenVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30_glGenVertexArrays), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL30_glGetFloatv), "$glGetIntegerv", $rt_wrapFunction2(cgxgbt_TeaGL30_glGetIntegerv)],
cgxgbt_TeaGL30Debug, "TeaGL30Debug", 5, cgxgbt_TeaGL30, [], 0, 3, 0, 0, ["$_init_112", $rt_wrapFunction1(cgxgbt_TeaGL30Debug__init_), "$glBindVertexArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glBindVertexArray), "$glDeleteVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glDeleteVertexArrays), "$glDrawArraysInstanced", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawArraysInstanced), "$glDrawElementsInstanced", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL30Debug_glDrawElementsInstanced(this, var_1,
var_2, var_3, var_4, var_5); }, "$glGenVertexArrays", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGenVertexArrays), "$glActiveTexture", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glActiveTexture), "$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glBindTexture), "$glBlendFunc", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glBlendFunc), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glClearColor), "$glCullFace", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glCullFace),
"$glDepthFunc", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDepthFunc), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDepthMask), "$glDepthRangef", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glDepthRangef), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawElements0), "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glEnable), "$glGetIntegerv", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetIntegerv),
"$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetString), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glPixelStorei), "$glScissor", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glScissor), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL30Debug_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glTexParameterf), "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glViewport),
"$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glBindBuffer), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glBufferSubData), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL30Debug_glCreateProgram),
"$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glCreateShader), "$glDeleteProgram", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDeleteProgram), "$glDeleteShader", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDeleteShader), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glDisableVertexAttribArray), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glDrawElements), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glEnableVertexAttribArray), "$glGenerateMipmap",
$rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetFloatv), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glGetProgramiv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetProgramInfoLog),
"$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glGetShaderiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glGetShaderInfoLog), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glLinkProgram), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glShaderSource), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glTexParameteri), "$glUniform1f", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glUniform1f),
"$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL30Debug_glUniform1i), "$glUniform2f", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glUniform2f), "$glUniform3f", $rt_wrapFunction4(cgxgbt_TeaGL30Debug_glUniform3f), "$glUniform4f", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL30Debug_glUniform4f(this, var_1, var_2, var_3, var_4, var_5); }, "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL30Debug_glUseProgram), "$glVertexAttrib2f", $rt_wrapFunction3(cgxgbt_TeaGL30Debug_glVertexAttrib2f), "$glVertexAttribPointer",
function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL30Debug_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
jur_AbstractCharClass$LazyJavaTitleCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaTitleCase__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaTitleCase_computeValue)],
cbggg_IndexBufferObjectSubData, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$_init_11", $rt_wrapFunction2(cbggg_IndexBufferObjectSubData__init_), "$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_getNumMaxIndices), "$setIndices1", $rt_wrapFunction3(cbggg_IndexBufferObjectSubData_setIndices), "$getBuffer0", $rt_wrapFunction1(cbggg_IndexBufferObjectSubData_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_bind),
"$unbind", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_unbind), "$dispose", $rt_wrapFunction0(cbggg_IndexBufferObjectSubData_dispose)],
jur_PreviousMatch, "PreviousMatch", 29, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_PreviousMatch__init_), "$matches", $rt_wrapFunction3(jur_PreviousMatch_matches), "$hasConsumed", $rt_wrapFunction1(jur_PreviousMatch_hasConsumed), "$getName", $rt_wrapFunction0(jur_PreviousMatch_getName)],
cbgggs_DefaultShader$Setters$17, "DefaultShader$Setters$17", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$17__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$17_set)],
cbgggs_DefaultShader$Setters$18, "DefaultShader$Setters$18", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$18__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$18_set)],
cbgggs_DefaultShader$Setters$15, "DefaultShader$Setters$15", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$15__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$15_set)],
cbgggs_DefaultShader$Setters$16, "DefaultShader$Setters$16", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$16__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$16_set)],
jur_NonCapFSet, "NonCapFSet", 29, jur_FSet, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_NonCapFSet__init_), "$matches", $rt_wrapFunction3(jur_NonCapFSet_matches), "$getName", $rt_wrapFunction0(jur_NonCapFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_NonCapFSet_hasConsumed)],
otjc_JSPromise$Executor, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
cgxgbta_AssetLoadImpl$getFile$lambda$_2_0, 0, jl_Object, [otjc_JSPromise$Executor], 0, 3, 0, 0, ["$_init_18", $rt_wrapFunction3(cgxgbta_AssetLoadImpl$getFile$lambda$_2_0__init_), "$onExecute", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$getFile$lambda$_2_0_onExecute)],
cbgggs_DefaultShader$Setters$19, "DefaultShader$Setters$19", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$19__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$19_set)],
cbgm_MathUtils, 0, jl_Object, [], 4, 3, 0, cbgm_MathUtils_$callClinit, 0,
otjde_Registration, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_81", $rt_wrapFunction4(otjde_Registration__init_)],
jur_UCISupplCharSet, "UCISupplCharSet", 29, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_UCISupplCharSet__init_), "$accepts", $rt_wrapFunction2(jur_UCISupplCharSet_accepts), "$getName", $rt_wrapFunction0(jur_UCISupplCharSet_getName)],
cbgggu_TextureBinder, 0, jl_Object, [], 3, 3, 0, 0, 0,
b_btDefaultCollisionConstructionInfo, 0, bi_IDLBase, [], 0, 3, 0, b_btDefaultCollisionConstructionInfo_$callClinit, ["$_init_0", $rt_wrapFunction0(b_btDefaultCollisionConstructionInfo__init_), "$_init_63", $rt_wrapFunction2(b_btDefaultCollisionConstructionInfo__init_0)],
cbgggu_TextureDescriptor, 0, jl_Object, [jl_Comparable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggu_TextureDescriptor__init_0), "$set52", $rt_wrapFunction1(cbgggu_TextureDescriptor_set), "$hashCode0", $rt_wrapFunction0(cbgggu_TextureDescriptor_hashCode)],
cbggg_BitmapFont$BitmapFontData, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_103", $rt_wrapFunction2(cbggg_BitmapFont$BitmapFontData__init_), "$load2", $rt_wrapFunction2(cbggg_BitmapFont$BitmapFontData_load), "$setGlyphRegion", $rt_wrapFunction2(cbggg_BitmapFont$BitmapFontData_setGlyphRegion), "$setGlyph", $rt_wrapFunction2(cbggg_BitmapFont$BitmapFontData_setGlyph), "$getFirstGlyph", $rt_wrapFunction0(cbggg_BitmapFont$BitmapFontData_getFirstGlyph), "$getGlyph", $rt_wrapFunction1(cbggg_BitmapFont$BitmapFontData_getGlyph),
"$getGlyphs", function(var_1, var_2, var_3, var_4, var_5) { cbggg_BitmapFont$BitmapFontData_getGlyphs(this, var_1, var_2, var_3, var_4, var_5); }, "$getWrapIndex", $rt_wrapFunction2(cbggg_BitmapFont$BitmapFontData_getWrapIndex), "$isBreakChar", $rt_wrapFunction1(cbggg_BitmapFont$BitmapFontData_isBreakChar), "$isWhitespace", $rt_wrapFunction1(cbggg_BitmapFont$BitmapFontData_isWhitespace)]]);
$rt_metadata([jur_AbstractCharClass$LazyRange, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_37", $rt_wrapFunction2(jur_AbstractCharClass$LazyRange__init_0), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyRange_computeValue)],
jur_AltQuantifierSet, "AltQuantifierSet", 29, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_67", $rt_wrapFunction3(jur_AltQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_AltQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltQuantifierSet_setNext)],
cbggg_Gdx2DPixmap, 0, jl_Object, [cbgu_Disposable, cbggg_PixmapNativeInterface], 0, 3, 0, 0, ["$_init_132", $rt_wrapFunction4(cbggg_Gdx2DPixmap__init_0), "$_init_133", $rt_wrapFunction3(cbggg_Gdx2DPixmap__init_), "$dispose", $rt_wrapFunction0(cbggg_Gdx2DPixmap_dispose), "$clear3", $rt_wrapFunction1(cbggg_Gdx2DPixmap_clear), "$drawPixmap3", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { cbggg_Gdx2DPixmap_drawPixmap(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$drawPixmap4", function(var_1,
var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cbggg_Gdx2DPixmap_drawPixmap0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$setBlend", $rt_wrapFunction1(cbggg_Gdx2DPixmap_setBlend), "$getBuffer", $rt_wrapFunction0(cbggg_Gdx2DPixmap_getBuffer), "$getHeight0", $rt_wrapFunction0(cbggg_Gdx2DPixmap_getHeight), "$getWidth0", $rt_wrapFunction0(cbggg_Gdx2DPixmap_getWidth), "$getFormat0", $rt_wrapFunction0(cbggg_Gdx2DPixmap_getFormat), "$getGLInternalFormat", $rt_wrapFunction0(cbggg_Gdx2DPixmap_getGLInternalFormat),
"$getGLFormat", $rt_wrapFunction0(cbggg_Gdx2DPixmap_getGLFormat), "$getGLType", $rt_wrapFunction0(cbggg_Gdx2DPixmap_getGLType)],
cbgm_Interpolation$ExpIn, 0, cbgm_Interpolation$Exp, [], 0, 3, 0, 0, ["$_init_8", $rt_wrapFunction2(cbgm_Interpolation$ExpIn__init_0)],
jur_AbstractCharClass$LazyJavaLowerCase$1, "AbstractCharClass$LazyJavaLowerCase$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_194", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLowerCase$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLowerCase$1_contains)],
cbgg_Camera, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgg_Camera__init_), "$lookAt", $rt_wrapFunction3(cbgg_Camera_lookAt), "$normalizeUp", $rt_wrapFunction0(cbgg_Camera_normalizeUp), "$rotate0", $rt_wrapFunction2(cbgg_Camera_rotate), "$rotateAround", $rt_wrapFunction3(cbgg_Camera_rotateAround), "$translate1", $rt_wrapFunction3(cbgg_Camera_translate), "$translate0", $rt_wrapFunction1(cbgg_Camera_translate0), "$unproject", function(var_1, var_2, var_3, var_4, var_5) { return cbgg_Camera_unproject(this,
var_1, var_2, var_3, var_4, var_5); }, "$project", function(var_1, var_2, var_3, var_4, var_5) { return cbgg_Camera_project(this, var_1, var_2, var_3, var_4, var_5); }],
cbgg_PerspectiveCamera, 0, cbgg_Camera, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgg_PerspectiveCamera__init_), "$update0", $rt_wrapFunction0(cbgg_PerspectiveCamera_update), "$update1", $rt_wrapFunction1(cbgg_PerspectiveCamera_update0)],
otji_IDBObjectStoreParameters, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
jl_Object$monitorExit$lambda$_8_0, 0, jl_Object, [otp_PlatformRunnable], 0, 3, 0, 0, ["$_init_2", $rt_wrapFunction1(jl_Object$monitorExit$lambda$_8_0__init_), "$run", $rt_wrapFunction0(jl_Object$monitorExit$lambda$_8_0_run)],
jur_UCISupplRangeSet, "UCISupplRangeSet", 29, jur_SupplRangeSet, [], 0, 0, 0, 0, ["$_init_136", $rt_wrapFunction1(jur_UCISupplRangeSet__init_), "$contains", $rt_wrapFunction1(jur_UCISupplRangeSet_contains), "$getName", $rt_wrapFunction0(jur_UCISupplRangeSet_getName)],
cbgu_Clipboard, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgssu_FocusListener$FocusEvent$Type, 0, jl_Enum, [], 12, 3, 0, cbgssu_FocusListener$FocusEvent$Type_$callClinit, 0,
jl_Void, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_AbstractCharClass$LazyPunct, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyPunct__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyPunct_computeValue)],
cbggg_VertexBufferObjectWithVAO, 0, jl_Object, [cbggg_VertexData], 0, 3, 0, cbggg_VertexBufferObjectWithVAO_$callClinit, ["$_init_127", $rt_wrapFunction3(cbggg_VertexBufferObjectWithVAO__init_), "$getAttributes", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_getAttributes), "$getNumVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_getNumVertices), "$getNumMaxVertices", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_getNumMaxVertices), "$setVertices0", $rt_wrapFunction3(cbggg_VertexBufferObjectWithVAO_setVertices),
"$bind2", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_bind), "$unbind1", $rt_wrapFunction2(cbggg_VertexBufferObjectWithVAO_unbind), "$dispose", $rt_wrapFunction0(cbggg_VertexBufferObjectWithVAO_dispose)],
cgxgbtu_Timer, 0, jl_Object, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbtu_Timer__init_), "$isRunning", $rt_wrapFunction0(cgxgbtu_Timer_isRunning), "$cancel", $rt_wrapFunction0(cgxgbtu_Timer_cancel), "$schedule0", $rt_wrapFunction1(cgxgbtu_Timer_schedule), "$fire", $rt_wrapFunction1(cgxgbtu_Timer_fire)],
cgxgbta_AssetDownloader, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl, 0, jl_Object, [cgxgbta_AssetDownloader], 0, 3, 0, 0, ["$_init_173", $rt_wrapFunction1(cgxgbta_AssetDownloadImpl__init_), "$load", $rt_wrapFunction4(cgxgbta_AssetDownloadImpl_load), "$loadScript", $rt_wrapFunction3(cgxgbta_AssetDownloadImpl_loadScript)],
cgxgbt_TeaGL20Debug, "TeaGL20Debug", 5, cgxgbt_TeaGL20, [], 0, 3, 0, 0, ["$_init_113", $rt_wrapFunction1(cgxgbt_TeaGL20Debug__init_), "$glActiveTexture", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glActiveTexture), "$glBindTexture", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindTexture), "$glBlendFunc", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBlendFunc), "$glClear", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glClear), "$glClearColor", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glClearColor), "$glCullFace", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCullFace),
"$glDepthFunc", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDepthFunc), "$glDepthMask", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDepthMask), "$glDepthRangef", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glDepthRangef), "$glDisable", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDisable), "$glDrawArrays", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glDrawArrays), "$glDrawElements", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glDrawElements), "$glEnable", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glEnable), "$glGetIntegerv", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetIntegerv),
"$glGetString", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetString), "$glPixelStorei", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glPixelStorei), "$glScissor", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glScissor), "$glTexImage2D", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cgxgbt_TeaGL20Debug_glTexImage2D(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$glTexParameterf", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glTexParameterf), "$glViewport", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glViewport),
"$glAttachShader", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glAttachShader), "$glBindBuffer", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glBindBuffer), "$glBlendFuncSeparate", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBlendFuncSeparate), "$glBufferData", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBufferData), "$glBufferSubData", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glBufferSubData), "$glCompileShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCompileShader), "$glCreateProgram", $rt_wrapFunction0(cgxgbt_TeaGL20Debug_glCreateProgram),
"$glCreateShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glCreateShader), "$glDeleteProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDeleteProgram), "$glDeleteShader", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDeleteShader), "$glDisableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glDisableVertexAttribArray), "$glDrawElements0", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glDrawElements0), "$glEnableVertexAttribArray", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glEnableVertexAttribArray), "$glGenerateMipmap",
$rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGenerateMipmap), "$glGetActiveAttrib", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glGetActiveAttrib), "$glGetActiveUniform", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glGetActiveUniform), "$glGetAttribLocation", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetAttribLocation), "$glGetFloatv", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetFloatv), "$glGetProgramiv", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glGetProgramiv), "$glGetProgramInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetProgramInfoLog),
"$glGetShaderiv", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glGetShaderiv), "$glGetShaderInfoLog", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glGetShaderInfoLog), "$glGetUniformLocation", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glGetUniformLocation), "$glLinkProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glLinkProgram), "$glShaderSource", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glShaderSource), "$glTexParameteri", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glTexParameteri), "$glUniform1f", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glUniform1f),
"$glUniform1i", $rt_wrapFunction2(cgxgbt_TeaGL20Debug_glUniform1i), "$glUniform2f", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glUniform2f), "$glUniform3f", $rt_wrapFunction4(cgxgbt_TeaGL20Debug_glUniform3f), "$glUniform4f", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGL20Debug_glUniform4f(this, var_1, var_2, var_3, var_4, var_5); }, "$glUseProgram", $rt_wrapFunction1(cgxgbt_TeaGL20Debug_glUseProgram), "$glVertexAttrib2f", $rt_wrapFunction3(cgxgbt_TeaGL20Debug_glVertexAttrib2f), "$glVertexAttribPointer",
function(var_1, var_2, var_3, var_4, var_5, var_6) { cgxgbt_TeaGL20Debug_glVertexAttribPointer(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
cbgggu_MeshBuilder, "MeshBuilder", 24, jl_Object, [cbgggu_MeshPartBuilder], 0, 3, 0, cbgggu_MeshBuilder_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgggu_MeshBuilder__init_), "$begin6", $rt_wrapFunction1(cbgggu_MeshBuilder_begin), "$begin3", $rt_wrapFunction2(cbgggu_MeshBuilder_begin0), "$part1", $rt_wrapFunction2(cbgggu_MeshBuilder_part0), "$part", $rt_wrapFunction3(cbgggu_MeshBuilder_part), "$end2", $rt_wrapFunction1(cbgggu_MeshBuilder_end0), "$end3", $rt_wrapFunction0(cbgggu_MeshBuilder_end), "$getAttributes",
$rt_wrapFunction0(cbgggu_MeshBuilder_getAttributes), "$getPrimitiveType", $rt_wrapFunction0(cbgggu_MeshBuilder_getPrimitiveType), "$setColor", $rt_wrapFunction1(cbgggu_MeshBuilder_setColor), "$setUVRange0", $rt_wrapFunction4(cbgggu_MeshBuilder_setUVRange), "$setUVRange", $rt_wrapFunction1(cbgggu_MeshBuilder_setUVRange0), "$setVertexTransform", $rt_wrapFunction1(cbgggu_MeshBuilder_setVertexTransform), "$ensureVertices", $rt_wrapFunction1(cbgggu_MeshBuilder_ensureVertices), "$ensureIndices", $rt_wrapFunction1(cbgggu_MeshBuilder_ensureIndices),
"$ensureRectangleIndices", $rt_wrapFunction1(cbgggu_MeshBuilder_ensureRectangleIndices), "$lastIndex", $rt_wrapFunction0(cbgggu_MeshBuilder_lastIndex), "$vertex0", $rt_wrapFunction4(cbgggu_MeshBuilder_vertex0), "$vertex1", $rt_wrapFunction1(cbgggu_MeshBuilder_vertex), "$index1", $rt_wrapFunction4(cbgggu_MeshBuilder_index0), "$index", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbgggu_MeshBuilder_index1(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$index0", function(var_1, var_2, var_3, var_4,
var_5, var_6, var_7, var_8) { cbgggu_MeshBuilder_index(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8); }, "$rect2", $rt_wrapFunction4(cbgggu_MeshBuilder_rect0), "$rect3", $rt_wrapFunction4(cbgggu_MeshBuilder_rect1), "$rect4", function(var_1, var_2, var_3, var_4, var_5) { cbgggu_MeshBuilder_rect(this, var_1, var_2, var_3, var_4, var_5); }, "$box0", $rt_wrapFunction3(cbgggu_MeshBuilder_box)],
jur_AbstractCharClass$LazySpace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazySpace__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpace_computeValue)],
cbgss_Stage$cancelTouchFocusExcept$lambda$_23_0, "Stage$cancelTouchFocusExcept$lambda$_23_0", 14, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_Stage$cancelTouchFocusExcept$lambda$_23_0__init_), "$get3", $rt_wrapFunction0(cbgss_Stage$cancelTouchFocusExcept$lambda$_23_0_get0), "$get6", $rt_wrapFunction0(cbgss_Stage$cancelTouchFocusExcept$lambda$_23_0_get)],
cgxgbtfi_IndexedDBFileData, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
ju_RandomAccess, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbtft_LocalDBStorage, "LocalDBStorage", 8, cgxgbtf_MemoryFileStorage, [], 0, 3, [0,0,0], 0, ["$_init_44", $rt_wrapFunction1(cgxgbtft_LocalDBStorage__init_), "$putFile", $rt_wrapFunction2(cgxgbtft_LocalDBStorage_putFile), "$removeFile", $rt_wrapFunction1(cgxgbtft_LocalDBStorage_removeFile)],
cbgm_Matrix3, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Matrix3__init_0), "$idt0", $rt_wrapFunction0(cbgm_Matrix3_idt), "$det", $rt_wrapFunction0(cbgm_Matrix3_det), "$inv", $rt_wrapFunction0(cbgm_Matrix3_inv), "$set28", $rt_wrapFunction1(cbgm_Matrix3_set), "$transpose", $rt_wrapFunction0(cbgm_Matrix3_transpose)],
cbgm_Matrix4, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Matrix4_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Matrix4__init_0), "$set1", $rt_wrapFunction1(cbgm_Matrix4_set6), "$set31", $rt_wrapFunction1(cbgm_Matrix4_set), "$set35", $rt_wrapFunction1(cbgm_Matrix4_set5), "$set32", $rt_wrapFunction4(cbgm_Matrix4_set3), "$set33", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return cbgm_Matrix4_set4(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$set41", $rt_wrapFunction3(cbgm_Matrix4_set2),
"$set34", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10) { return cbgm_Matrix4_set1(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10); }, "$mul1", $rt_wrapFunction1(cbgm_Matrix4_mul0), "$idt", $rt_wrapFunction0(cbgm_Matrix4_idt), "$det3x3", $rt_wrapFunction0(cbgm_Matrix4_det3x3), "$setToProjection", $rt_wrapFunction4(cbgm_Matrix4_setToProjection), "$setToOrtho2D", $rt_wrapFunction4(cbgm_Matrix4_setToOrtho2D), "$setToOrtho", function(var_1, var_2, var_3,
var_4, var_5, var_6) { return cbgm_Matrix4_setToOrtho(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$setToTranslation", $rt_wrapFunction3(cbgm_Matrix4_setToTranslation), "$setToRotation", $rt_wrapFunction2(cbgm_Matrix4_setToRotation), "$setToLookAt0", $rt_wrapFunction2(cbgm_Matrix4_setToLookAt), "$setToLookAt", $rt_wrapFunction3(cbgm_Matrix4_setToLookAt0), "$set0", $rt_wrapFunction1(cbgm_Matrix4_set0), "$getTranslation", $rt_wrapFunction1(cbgm_Matrix4_getTranslation), "$translate2", $rt_wrapFunction3(cbgm_Matrix4_translate),
"$rotate2", $rt_wrapFunction2(cbgm_Matrix4_rotate0), "$rotate1", $rt_wrapFunction1(cbgm_Matrix4_rotate), "$hasRotationOrScaling", $rt_wrapFunction0(cbgm_Matrix4_hasRotationOrScaling)],
jn_NativeBuffer, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_NegativeArraySizeException, "NegativeArraySizeException", 34, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_NegativeArraySizeException__init_0)],
cbgu_Timer, "Timer", 12, jl_Object, [], 0, 3, 0, cbgu_Timer_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgu_Timer__init_), "$scheduleTask0", $rt_wrapFunction2(cbgu_Timer_scheduleTask), "$scheduleTask", $rt_wrapFunction4(cbgu_Timer_scheduleTask0), "$start1", $rt_wrapFunction0(cbgu_Timer_start), "$update3", $rt_wrapFunction2(cbgu_Timer_update), "$delay", $rt_wrapFunction1(cbgu_Timer_delay)],
jn_ShortBufferImpl, 0, jn_ShortBuffer, [], 1, 0, 0, 0, ["$_init_37", $rt_wrapFunction2(jn_ShortBufferImpl__init_), "$isReadOnly", $rt_wrapFunction0(jn_ShortBufferImpl_isReadOnly)],
bbb_btBroadphaseInterface, 0, bi_IDLBase, [], 0, 3, 0, bbb_btBroadphaseInterface_$callClinit, ["$_init_63", $rt_wrapFunction2(bbb_btBroadphaseInterface__init_)],
bbb_btDbvtBroadphase, 0, bbb_btBroadphaseInterface, [], 0, 3, 0, bbb_btDbvtBroadphase_$callClinit, ["$_init_0", $rt_wrapFunction0(bbb_btDbvtBroadphase__init_), "$_init_63", $rt_wrapFunction2(bbb_btDbvtBroadphase__init_0)],
cbgm_Interpolation$Bounce, 0, cbgm_Interpolation$BounceOut, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgm_Interpolation$Bounce__init_)],
cbgss_Stage$setScrollFocus$lambda$_37_0, "Stage$setScrollFocus$lambda$_37_0", 14, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_Stage$setScrollFocus$lambda$_37_0__init_), "$get3", $rt_wrapFunction0(cbgss_Stage$setScrollFocus$lambda$_37_0_get0), "$get20", $rt_wrapFunction0(cbgss_Stage$setScrollFocus$lambda$_37_0_get)],
cbgm_Interpolation$Swing, 0, cbgm_Interpolation, [], 0, 3, 0, 0, ["$_init_10", $rt_wrapFunction1(cbgm_Interpolation$Swing__init_)],
jnci_UTF16Decoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, ["$_init_47", $rt_wrapFunction3(jnci_UTF16Decoder__init_), "$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_UTF16Decoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }],
cbgu_Array$ArrayIterable, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_14", $rt_wrapFunction1(cbgu_Array$ArrayIterable__init_0), "$_init_13", $rt_wrapFunction2(cbgu_Array$ArrayIterable__init_), "$iterator", $rt_wrapFunction0(cbgu_Array$ArrayIterable_iterator)],
jl_IllegalStateException, "IllegalStateException", 34, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalStateException__init_2), "$_init_", $rt_wrapFunction1(jl_IllegalStateException__init_1)],
cgxgbtd_FileReaderWrapper, 0, jl_Object, [otjde_EventTarget, otj_JSObject], 1, 3, 0, 0, 0,
ju_AbstractList, 0, ju_AbstractCollection, [ju_List], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_AbstractList__init_), "$iterator0", $rt_wrapFunction0(ju_AbstractList_iterator)],
jur_ReluctantCompositeQuantifierSet, "ReluctantCompositeQuantifierSet", 29, jur_CompositeQuantifierSet, [], 0, 0, 0, 0, ["$_init_109", $rt_wrapFunction4(jur_ReluctantCompositeQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_ReluctantCompositeQuantifierSet_matches)],
cbgggu_ShaderProvider, 0, jl_Object, [cbgu_Disposable], 3, 3, 0, 0, 0,
cbgggu_BaseShaderProvider, 0, jl_Object, [cbgggu_ShaderProvider], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggu_BaseShaderProvider__init_), "$getShader", $rt_wrapFunction1(cbgggu_BaseShaderProvider_getShader)],
jn_ByteBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jn_ByteBuffer__init_), "$get18", $rt_wrapFunction3(jn_ByteBuffer_get0), "$get14", $rt_wrapFunction1(jn_ByteBuffer_get), "$put2", $rt_wrapFunction3(jn_ByteBuffer_put0), "$put1", $rt_wrapFunction1(jn_ByteBuffer_put), "$hasArray", $rt_wrapFunction0(jn_ByteBuffer_hasArray), "$array", $rt_wrapFunction0(jn_ByteBuffer_array), "$toString", $rt_wrapFunction0(jn_ByteBuffer_toString), "$hashCode0", $rt_wrapFunction0(jn_ByteBuffer_hashCode),
"$equals", $rt_wrapFunction1(jn_ByteBuffer_equals), "$order", $rt_wrapFunction1(jn_ByteBuffer_order), "$onOrderChanged", $rt_wrapFunction0(jn_ByteBuffer_onOrderChanged), "$flip0", $rt_wrapFunction0(jn_ByteBuffer_flip), "$limit3", $rt_wrapFunction1(jn_ByteBuffer_limit0), "$position2", $rt_wrapFunction1(jn_ByteBuffer_position), "$flip", $rt_wrapFunction0(jn_ByteBuffer_flip0), "$limit", $rt_wrapFunction1(jn_ByteBuffer_limit), "$position", $rt_wrapFunction1(jn_ByteBuffer_position0)],
jur_SOLSet, "SOLSet", 29, jur_AbstractSet, [], 4, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_SOLSet__init_), "$matches", $rt_wrapFunction3(jur_SOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_SOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_SOLSet_getName)],
cbgm_Vector3, "Vector3", 17, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, cbgm_Vector3_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Vector3__init_2), "$_init_134", $rt_wrapFunction3(cbgm_Vector3__init_1), "$set8", $rt_wrapFunction3(cbgm_Vector3_set0), "$set7", $rt_wrapFunction1(cbgm_Vector3_set), "$add5", $rt_wrapFunction1(cbgm_Vector3_add0), "$add9", $rt_wrapFunction3(cbgm_Vector3_add), "$sub", $rt_wrapFunction1(cbgm_Vector3_sub), "$sub0", $rt_wrapFunction3(cbgm_Vector3_sub0), "$scl", $rt_wrapFunction1(cbgm_Vector3_scl),
"$len", $rt_wrapFunction0(cbgm_Vector3_len0), "$len2", $rt_wrapFunction0(cbgm_Vector3_len2), "$dst0", $rt_wrapFunction1(cbgm_Vector3_dst), "$dst2", $rt_wrapFunction1(cbgm_Vector3_dst2), "$nor0", $rt_wrapFunction0(cbgm_Vector3_nor), "$dot", $rt_wrapFunction1(cbgm_Vector3_dot), "$crs", $rt_wrapFunction1(cbgm_Vector3_crs), "$crs0", $rt_wrapFunction3(cbgm_Vector3_crs0), "$mul0", $rt_wrapFunction1(cbgm_Vector3_mul), "$mul2", $rt_wrapFunction1(cbgm_Vector3_mul0), "$prj", $rt_wrapFunction1(cbgm_Vector3_prj), "$rotate",
$rt_wrapFunction2(cbgm_Vector3_rotate), "$isZero", $rt_wrapFunction0(cbgm_Vector3_isZero), "$lerp", $rt_wrapFunction2(cbgm_Vector3_lerp), "$toString", $rt_wrapFunction0(cbgm_Vector3_toString), "$hashCode0", $rt_wrapFunction0(cbgm_Vector3_hashCode), "$equals", $rt_wrapFunction1(cbgm_Vector3_equals)],
cbgm_Vector2, 0, jl_Object, [ji_Serializable, cbgm_Vector], 0, 3, 0, cbgm_Vector2_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Vector2__init_1), "$_init_8", $rt_wrapFunction2(cbgm_Vector2__init_2), "$len", $rt_wrapFunction0(cbgm_Vector2_len), "$set5", $rt_wrapFunction1(cbgm_Vector2_set0), "$set2", $rt_wrapFunction2(cbgm_Vector2_set), "$nor", $rt_wrapFunction0(cbgm_Vector2_nor), "$dst", $rt_wrapFunction1(cbgm_Vector2_dst)],
cbgggs_BaseShader$Uniform, "BaseShader$Uniform", 23, jl_Object, [cbgggs_BaseShader$Validator], 0, 3, 0, 0, ["$_init_154", $rt_wrapFunction4(cbgggs_BaseShader$Uniform__init_2), "$_init_155", $rt_wrapFunction3(cbgggs_BaseShader$Uniform__init_3), "$_init_242", $rt_wrapFunction2(cbgggs_BaseShader$Uniform__init_1), "$_init_", $rt_wrapFunction1(cbgggs_BaseShader$Uniform__init_4), "$validate0", $rt_wrapFunction3(cbgggs_BaseShader$Uniform_validate)],
cbggga_DirectionalLightsAttribute, "DirectionalLightsAttribute", 25, cbggg_Attribute, [], 0, 3, 0, cbggga_DirectionalLightsAttribute_$callClinit, ["$_init_0", $rt_wrapFunction0(cbggga_DirectionalLightsAttribute__init_), "$_init_156", $rt_wrapFunction1(cbggga_DirectionalLightsAttribute__init_0), "$copy3", $rt_wrapFunction0(cbggga_DirectionalLightsAttribute_copy), "$hashCode0", $rt_wrapFunction0(cbggga_DirectionalLightsAttribute_hashCode), "$copy", $rt_wrapFunction0(cbggga_DirectionalLightsAttribute_copy0)]]);
$rt_metadata([cbgu_SnapshotArray, 0, cbgu_Array, [], 0, 3, 0, 0, ["$_init_6", $rt_wrapFunction3(cbgu_SnapshotArray__init_), "$_init_3", $rt_wrapFunction1(cbgu_SnapshotArray__init_0), "$begin0", $rt_wrapFunction0(cbgu_SnapshotArray_begin), "$end", $rt_wrapFunction0(cbgu_SnapshotArray_end), "$removeValue", $rt_wrapFunction2(cbgu_SnapshotArray_removeValue), "$removeIndex", $rt_wrapFunction1(cbgu_SnapshotArray_removeIndex), "$clear", $rt_wrapFunction0(cbgu_SnapshotArray_clear)],
bbb_btDispatcher, 0, bi_IDLBase, [], 0, 3, 0, bbb_btDispatcher_$callClinit, ["$_init_63", $rt_wrapFunction2(bbb_btDispatcher__init_)],
bbc_btCollisionDispatcher, 0, bbb_btDispatcher, [], 0, 3, 0, bbc_btCollisionDispatcher_$callClinit, ["$_init_199", $rt_wrapFunction1(bbc_btCollisionDispatcher__init_0), "$_init_63", $rt_wrapFunction2(bbc_btCollisionDispatcher__init_)],
cgxgbt_TeaClipboard$_init_$lambda$_0_1, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, ["$_init_231", $rt_wrapFunction1(cgxgbt_TeaClipboard$_init_$lambda$_0_1__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbt_TeaClipboard$_init_$lambda$_0_1_handleEvent)],
cgxgbt_TeaClipboard$_init_$lambda$_0_2, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, ["$_init_231", $rt_wrapFunction1(cgxgbt_TeaClipboard$_init_$lambda$_0_2__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbt_TeaClipboard$_init_$lambda$_0_2_handleEvent)],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaIdentifierIgnorable__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaIdentifierIgnorable_computeValue)],
ju_AbstractMap, 0, jl_Object, [ju_Map], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_AbstractMap__init_)],
ju_HashMap, 0, ju_AbstractMap, [jl_Cloneable, ji_Serializable], 0, 3, 0, 0, ["$newElementArray0", $rt_wrapFunction1(ju_HashMap_newElementArray), "$_init_0", $rt_wrapFunction0(ju_HashMap__init_2), "$_init_3", $rt_wrapFunction1(ju_HashMap__init_0), "$_init_110", $rt_wrapFunction2(ju_HashMap__init_1), "$containsKey", $rt_wrapFunction1(ju_HashMap_containsKey), "$get2", $rt_wrapFunction1(ju_HashMap_get), "$entryByKey", $rt_wrapFunction1(ju_HashMap_entryByKey), "$findNonNullKeyEntry", $rt_wrapFunction3(ju_HashMap_findNonNullKeyEntry),
"$findNullKeyEntry", $rt_wrapFunction0(ju_HashMap_findNullKeyEntry), "$put", $rt_wrapFunction2(ju_HashMap_put), "$rehash0", $rt_wrapFunction1(ju_HashMap_rehash), "$rehash", $rt_wrapFunction0(ju_HashMap_rehash0), "$remove2", $rt_wrapFunction1(ju_HashMap_remove), "$removeByKey", $rt_wrapFunction1(ju_HashMap_removeByKey), "$size", $rt_wrapFunction0(ju_HashMap_size)],
cgxgbt_TeaClipboard$_init_$lambda$_0_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, ["$_init_231", $rt_wrapFunction1(cgxgbt_TeaClipboard$_init_$lambda$_0_0__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbt_TeaClipboard$_init_$lambda$_0_0_handleEvent)],
cbgu_FloatArray, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_FloatArray__init_1), "$_init_11", $rt_wrapFunction2(cbgu_FloatArray__init_0), "$add8", $rt_wrapFunction1(cbgu_FloatArray_add), "$addAll3", $rt_wrapFunction1(cbgu_FloatArray_addAll0), "$addAll4", $rt_wrapFunction3(cbgu_FloatArray_addAll1), "$addAll0", $rt_wrapFunction3(cbgu_FloatArray_addAll), "$get8", $rt_wrapFunction1(cbgu_FloatArray_get), "$removeRange", $rt_wrapFunction2(cbgu_FloatArray_removeRange), "$first0", $rt_wrapFunction0(cbgu_FloatArray_first),
"$notEmpty", $rt_wrapFunction0(cbgu_FloatArray_notEmpty), "$clear", $rt_wrapFunction0(cbgu_FloatArray_clear), "$ensureCapacity2", $rt_wrapFunction1(cbgu_FloatArray_ensureCapacity), "$resize2", $rt_wrapFunction1(cbgu_FloatArray_resize), "$truncate0", $rt_wrapFunction1(cbgu_FloatArray_truncate)],
beb_TeaVMLauncher, 0, jl_Object, [], 0, 3, 0, beb_TeaVMLauncher_$callClinit, 0,
jn_ByteBufferJsImpl, "ByteBufferJsImpl", 30, jn_ByteBuffer, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$_init_153", function(var_1, var_2, var_3, var_4, var_5) { jn_ByteBufferJsImpl__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$arrayImpl", $rt_wrapFunction0(jn_ByteBufferJsImpl_arrayImpl), "$hasArrayImpl", $rt_wrapFunction0(jn_ByteBufferJsImpl_hasArrayImpl), "$capacityImpl", $rt_wrapFunction0(jn_ByteBufferJsImpl_capacityImpl), "$getImpl0", $rt_wrapFunction4(jn_ByteBufferJsImpl_getImpl), "$putImpl2",
$rt_wrapFunction4(jn_ByteBufferJsImpl_putImpl), "$get21", $rt_wrapFunction1(jn_ByteBufferJsImpl_get), "$compact0", $rt_wrapFunction0(jn_ByteBufferJsImpl_compact), "$isDirect", $rt_wrapFunction0(jn_ByteBufferJsImpl_isDirect), "$isReadOnly", $rt_wrapFunction0(jn_ByteBufferJsImpl_isReadOnly), "$asShortBuffer", $rt_wrapFunction0(jn_ByteBufferJsImpl_asShortBuffer), "$asIntBuffer", $rt_wrapFunction0(jn_ByteBufferJsImpl_asIntBuffer), "$asFloatBuffer", $rt_wrapFunction0(jn_ByteBufferJsImpl_asFloatBuffer), "$getArrayBufferView",
$rt_wrapFunction0(jn_ByteBufferJsImpl_getArrayBufferView)],
jnc_CoderResult, 0, jl_Object, [], 0, 3, 0, jnc_CoderResult_$callClinit, ["$_init_162", $rt_wrapFunction2(jnc_CoderResult__init_0), "$isUnderflow", $rt_wrapFunction0(jnc_CoderResult_isUnderflow), "$isOverflow", $rt_wrapFunction0(jnc_CoderResult_isOverflow), "$isError", $rt_wrapFunction0(jnc_CoderResult_isError), "$isMalformed", $rt_wrapFunction0(jnc_CoderResult_isMalformed), "$isUnmappable", $rt_wrapFunction0(jnc_CoderResult_isUnmappable), "$length", $rt_wrapFunction0(jnc_CoderResult_length), "$throwException",
$rt_wrapFunction0(jnc_CoderResult_throwException)],
jur_EOLSet, "EOLSet", 29, jur_AbstractSet, [], 4, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_EOLSet__init_), "$matches", $rt_wrapFunction3(jur_EOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_EOLSet_getName)],
jur_Lexer, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_23", $rt_wrapFunction2(jur_Lexer__init_), "$peek0", $rt_wrapFunction0(jur_Lexer_peek), "$setMode", $rt_wrapFunction1(jur_Lexer_setMode), "$restoreFlags", $rt_wrapFunction1(jur_Lexer_restoreFlags), "$peekSpecial", $rt_wrapFunction0(jur_Lexer_peekSpecial), "$isSpecial", $rt_wrapFunction0(jur_Lexer_isSpecial), "$isNextSpecial", $rt_wrapFunction0(jur_Lexer_isNextSpecial), "$next0", $rt_wrapFunction0(jur_Lexer_next), "$nextSpecial", $rt_wrapFunction0(jur_Lexer_nextSpecial),
"$lookAhead", $rt_wrapFunction0(jur_Lexer_lookAhead), "$back", $rt_wrapFunction0(jur_Lexer_back), "$toString", $rt_wrapFunction0(jur_Lexer_toString), "$isEmpty", $rt_wrapFunction0(jur_Lexer_isEmpty), "$isLetter0", $rt_wrapFunction0(jur_Lexer_isLetter0), "$isHighSurrogate1", $rt_wrapFunction0(jur_Lexer_isHighSurrogate0), "$isLowSurrogate1", $rt_wrapFunction0(jur_Lexer_isLowSurrogate0), "$getIndex", $rt_wrapFunction0(jur_Lexer_getIndex)],
jur_AbstractCharClass$LazyNonSpace, 0, jur_AbstractCharClass$LazySpace, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonSpace__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyNonSpace_computeValue)],
otjt_Int32Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
cbgss_Stage$_init_$lambda$_2_0, 0, jl_Object, [cbgu_ArraySupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_Stage$_init_$lambda$_2_0__init_), "$get", $rt_wrapFunction1(cbgss_Stage$_init_$lambda$_2_0_get0), "$get23", $rt_wrapFunction1(cbgss_Stage$_init_$lambda$_2_0_get)],
bbc_btConvexShape, 0, bbc_btCollisionShape, [], 0, 3, 0, bbc_btConvexShape_$callClinit, ["$_init_63", $rt_wrapFunction2(bbc_btConvexShape__init_)],
bbc_btConvexInternalShape, 0, bbc_btConvexShape, [], 0, 3, 0, bbc_btConvexInternalShape_$callClinit, ["$_init_63", $rt_wrapFunction2(bbc_btConvexInternalShape__init_)],
cbgss_Group$_init_$lambda$_0_0, 0, jl_Object, [cbgu_ArraySupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_Group$_init_$lambda$_0_0__init_), "$get", $rt_wrapFunction1(cbgss_Group$_init_$lambda$_0_0_get0), "$get24", $rt_wrapFunction1(cbgss_Group$_init_$lambda$_0_0_get)],
cbggg_GLVersion$Type, 0, jl_Enum, [], 12, 3, 0, cbggg_GLVersion$Type_$callClinit, 0,
cbgu_Timer$Task, 0, jl_Object, [jl_Runnable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Timer$Task__init_), "$cancel", $rt_wrapFunction0(cbgu_Timer$Task_cancel), "$isScheduled", $rt_wrapFunction0(cbgu_Timer$Task_isScheduled)],
cbgu_StreamUtils$OptimizedByteArrayOutputStream, 0, ji_ByteArrayOutputStream, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgu_StreamUtils$OptimizedByteArrayOutputStream__init_), "$toByteArray0", $rt_wrapFunction0(cbgu_StreamUtils$OptimizedByteArrayOutputStream_toByteArray)],
jl_AbstractStringBuilder$Constants, 0, jl_Object, [], 0, 0, 0, jl_AbstractStringBuilder$Constants_$callClinit, 0,
jur_SingleSet, "SingleSet", 29, jur_JointSet, [], 0, 0, 0, 0, ["$_init_166", $rt_wrapFunction2(jur_SingleSet__init_), "$matches", $rt_wrapFunction3(jur_SingleSet_matches), "$find", $rt_wrapFunction3(jur_SingleSet_find), "$findBack", $rt_wrapFunction4(jur_SingleSet_findBack), "$first", $rt_wrapFunction1(jur_SingleSet_first), "$processBackRefReplacement", $rt_wrapFunction0(jur_SingleSet_processBackRefReplacement), "$processSecondPass", $rt_wrapFunction0(jur_SingleSet_processSecondPass)],
jl_Thread, 0, jl_Object, [jl_Runnable], 0, 3, 0, jl_Thread_$callClinit, ["$_init_", $rt_wrapFunction1(jl_Thread__init_0), "$_init_165", $rt_wrapFunction2(jl_Thread__init_)],
jur_BackReferencedSingleSet, "BackReferencedSingleSet", 29, jur_SingleSet, [], 0, 0, 0, 0, ["$_init_164", $rt_wrapFunction1(jur_BackReferencedSingleSet__init_), "$find", $rt_wrapFunction3(jur_BackReferencedSingleSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferencedSingleSet_findBack), "$processBackRefReplacement", $rt_wrapFunction0(jur_BackReferencedSingleSet_processBackRefReplacement)],
jnc_BufferOverflowException, "BufferOverflowException", 31, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnc_BufferOverflowException__init_)],
otp_PlatformQueue, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
cbg_LifecycleListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgu_Timer$TimerThread, "Timer$TimerThread", 12, cgxgbtu_Timer, [jl_Runnable, cbg_LifecycleListener], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Timer$TimerThread__init_), "$run", $rt_wrapFunction0(cbgu_Timer$TimerThread_run), "$resume", $rt_wrapFunction0(cbgu_Timer$TimerThread_resume), "$pause", $rt_wrapFunction0(cbgu_Timer$TimerThread_pause)],
cbgu_IntSet, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_IntSet__init_0), "$_init_110", $rt_wrapFunction2(cbgu_IntSet__init_), "$place", $rt_wrapFunction1(cbgu_IntSet_place), "$add15", $rt_wrapFunction1(cbgu_IntSet_add), "$remove3", $rt_wrapFunction1(cbgu_IntSet_remove), "$contains", $rt_wrapFunction1(cbgu_IntSet_contains)],
ju_MissingResourceException, "MissingResourceException", 28, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_36", $rt_wrapFunction3(ju_MissingResourceException__init_)],
jl_StringIndexOutOfBoundsException, "StringIndexOutOfBoundsException", 34, jl_IndexOutOfBoundsException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_StringIndexOutOfBoundsException__init_0)],
jur_UCIBackReferenceSet, "UCIBackReferenceSet", 29, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$_init_37", $rt_wrapFunction2(jur_UCIBackReferenceSet__init_), "$matches", $rt_wrapFunction3(jur_UCIBackReferenceSet_matches), "$getName", $rt_wrapFunction0(jur_UCIBackReferenceSet_getName)],
cbgu_StreamUtils, 0, jl_Object, [], 4, 3, 0, cbgu_StreamUtils_$callClinit, 0,
jn_IntBufferOverDataView, 0, jn_IntBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$_init_160", function(var_1, var_2, var_3, var_4, var_5) { jn_IntBufferOverDataView__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$readOnly", $rt_wrapFunction0(jn_IntBufferOverDataView_readOnly), "$getElement", $rt_wrapFunction1(jn_IntBufferOverDataView_getElement), "$putElement", $rt_wrapFunction2(jn_IntBufferOverDataView_putElement), "$capacityImpl", $rt_wrapFunction0(jn_IntBufferOverDataView_capacityImpl)],
jn_ByteOrder, 0, jl_Object, [], 4, 3, 0, jn_ByteOrder_$callClinit, 0,
cbgg_TextureData$TextureDataType, 0, jl_Enum, [], 12, 3, 0, cbgg_TextureData$TextureDataType_$callClinit, 0,
jur_DotAllQuantifierSet, "DotAllQuantifierSet", 29, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_29", $rt_wrapFunction3(jur_DotAllQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_DotAllQuantifierSet_matches), "$find", $rt_wrapFunction3(jur_DotAllQuantifierSet_find), "$getName", $rt_wrapFunction0(jur_DotAllQuantifierSet_getName)],
jur_ReluctantGroupQuantifierSet, "ReluctantGroupQuantifierSet", 29, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_29", $rt_wrapFunction3(jur_ReluctantGroupQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_ReluctantGroupQuantifierSet_matches)],
cbg_Application, 0, jl_Object, [], 3, 3, 0, 0, 0,
jnc_CoderMalfunctionError, "CoderMalfunctionError", 31, jl_Error, [], 0, 3, 0, 0, ["$_init_53", $rt_wrapFunction1(jnc_CoderMalfunctionError__init_)],
cbgssu_Value, 0, jl_Object, [], 1, 3, 0, cbgssu_Value_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgssu_Value__init_)],
cbgssu_Value$Fixed, 0, cbgssu_Value, [], 0, 3, 0, cbgssu_Value$Fixed_$callClinit, ["$_init_10", $rt_wrapFunction1(cbgssu_Value$Fixed__init_0), "$get0", $rt_wrapFunction1(cbgssu_Value$Fixed_get)],
cbgg_Colors, 0, jl_Object, [], 4, 3, 0, cbgg_Colors_$callClinit, 0,
jur_CIDecomposedCharSet, "CIDecomposedCharSet", 29, jur_DecomposedCharSet, [], 0, 0, 0, 0, ["$_init_167", $rt_wrapFunction2(jur_CIDecomposedCharSet__init_)],
otjw_WebGLContextAttributes, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
jnci_AsciiDecoder, 0, jnci_BufferedDecoder, [], 0, 3, 0, 0, ["$_init_54", $rt_wrapFunction1(jnci_AsciiDecoder__init_), "$arrayDecode", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { return jnci_AsciiDecoder_arrayDecode(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }]]);
$rt_metadata([cbgm_Affine2, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Affine2__init_), "$setToTrnRotScl", function(var_1, var_2, var_3, var_4, var_5) { return cbgm_Affine2_setToTrnRotScl(this, var_1, var_2, var_3, var_4, var_5); }, "$preMul", $rt_wrapFunction1(cbgm_Affine2_preMul), "$translate", $rt_wrapFunction2(cbgm_Affine2_translate)],
cbgg_Pixmap, 0, jl_Object, [cbgu_Disposable, cbggg_PixmapNativeInterface], 0, 3, 0, 0, ["$_init_123", $rt_wrapFunction1(cbgg_Pixmap__init_1), "$_init_56", $rt_wrapFunction3(cbgg_Pixmap__init_0), "$setColor0", $rt_wrapFunction4(cbgg_Pixmap_setColor), "$setColor", $rt_wrapFunction1(cbgg_Pixmap_setColor0), "$fill3", $rt_wrapFunction0(cbgg_Pixmap_fill), "$drawPixmap", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { cbgg_Pixmap_drawPixmap0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$drawPixmap0",
function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cbgg_Pixmap_drawPixmap(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$getWidth0", $rt_wrapFunction0(cbgg_Pixmap_getWidth), "$getHeight0", $rt_wrapFunction0(cbgg_Pixmap_getHeight), "$dispose", $rt_wrapFunction0(cbgg_Pixmap_dispose), "$getGLFormat", $rt_wrapFunction0(cbgg_Pixmap_getGLFormat), "$getGLInternalFormat", $rt_wrapFunction0(cbgg_Pixmap_getGLInternalFormat), "$getGLType", $rt_wrapFunction0(cbgg_Pixmap_getGLType),
"$getPixels", $rt_wrapFunction0(cbgg_Pixmap_getPixels), "$getFormat", $rt_wrapFunction0(cbgg_Pixmap_getFormat), "$setBlending", $rt_wrapFunction1(cbgg_Pixmap_setBlending)],
cbggga_CubemapAttribute, 0, cbggg_Attribute, [], 0, 3, 0, cbggga_CubemapAttribute_$callClinit, 0,
cgxjl_JParserLibraryLoader$loadJS$lambda$_11_0, 0, jl_Object, [cgxjl_JParserLibraryLoaderListener], 0, 3, 0, 0, ["$_init_69", $rt_wrapFunction1(cgxjl_JParserLibraryLoader$loadJS$lambda$_11_0__init_), "$onLoad", $rt_wrapFunction2(cgxjl_JParserLibraryLoader$loadJS$lambda$_11_0_onLoad)],
cbgggu_DefaultShaderProvider, 0, cbgggu_BaseShaderProvider, [], 0, 3, 0, 0, ["$_init_168", $rt_wrapFunction1(cbgggu_DefaultShaderProvider__init_), "$_init_0", $rt_wrapFunction0(cbgggu_DefaultShaderProvider__init_0), "$createShader", $rt_wrapFunction1(cbgggu_DefaultShaderProvider_createShader)],
cbggg_FileTextureData, "FileTextureData", 19, jl_Object, [cbgg_TextureData], 0, 3, 0, 0, ["$_init_122", $rt_wrapFunction4(cbggg_FileTextureData__init_), "$isPrepared", $rt_wrapFunction0(cbggg_FileTextureData_isPrepared), "$prepare", $rt_wrapFunction0(cbggg_FileTextureData_prepare), "$consumePixmap", $rt_wrapFunction0(cbggg_FileTextureData_consumePixmap), "$disposePixmap", $rt_wrapFunction0(cbggg_FileTextureData_disposePixmap), "$getWidth0", $rt_wrapFunction0(cbggg_FileTextureData_getWidth), "$getHeight0", $rt_wrapFunction0(cbggg_FileTextureData_getHeight),
"$getFormat", $rt_wrapFunction0(cbggg_FileTextureData_getFormat), "$useMipMaps", $rt_wrapFunction0(cbggg_FileTextureData_useMipMaps), "$isManaged", $rt_wrapFunction0(cbggg_FileTextureData_isManaged), "$getType", $rt_wrapFunction0(cbggg_FileTextureData_getType), "$consumeCustomData", $rt_wrapFunction1(cbggg_FileTextureData_consumeCustomData)],
cbgm_Interpolation$PowOut, 0, cbgm_Interpolation$Pow, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgm_Interpolation$PowOut__init_0)],
cbggga_BlendingAttribute, 0, cbggg_Attribute, [], 0, 3, 0, cbggga_BlendingAttribute_$callClinit, 0,
otcit_DoubleAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcit_DoubleAnalyzer$Result__init_)],
cbg_InputMultiplexer, 0, jl_Object, [cbg_InputProcessor], 0, 3, 0, 0, ["$_init_202", $rt_wrapFunction1(cbg_InputMultiplexer__init_), "$keyDown", $rt_wrapFunction1(cbg_InputMultiplexer_keyDown), "$keyUp", $rt_wrapFunction1(cbg_InputMultiplexer_keyUp), "$keyTyped", $rt_wrapFunction1(cbg_InputMultiplexer_keyTyped), "$touchDown0", $rt_wrapFunction4(cbg_InputMultiplexer_touchDown), "$touchUp0", $rt_wrapFunction4(cbg_InputMultiplexer_touchUp), "$touchDragged0", $rt_wrapFunction3(cbg_InputMultiplexer_touchDragged),
"$mouseMoved", $rt_wrapFunction2(cbg_InputMultiplexer_mouseMoved), "$scrolled", $rt_wrapFunction2(cbg_InputMultiplexer_scrolled)],
cbggg_ImmediateModeRenderer, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbggg_ImmediateModeRenderer20, 0, jl_Object, [cbggg_ImmediateModeRenderer], 0, 3, 0, 0, ["$_init_80", $rt_wrapFunction4(cbggg_ImmediateModeRenderer20__init_0), "$_init_79", function(var_1, var_2, var_3, var_4, var_5) { cbggg_ImmediateModeRenderer20__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$begin2", $rt_wrapFunction2(cbggg_ImmediateModeRenderer20_begin), "$color", $rt_wrapFunction1(cbggg_ImmediateModeRenderer20_color1), "$color0", $rt_wrapFunction4(cbggg_ImmediateModeRenderer20_color), "$color1",
$rt_wrapFunction1(cbggg_ImmediateModeRenderer20_color0), "$vertex", $rt_wrapFunction3(cbggg_ImmediateModeRenderer20_vertex), "$flush", $rt_wrapFunction0(cbggg_ImmediateModeRenderer20_flush), "$end", $rt_wrapFunction0(cbggg_ImmediateModeRenderer20_end), "$getNumVertices", $rt_wrapFunction0(cbggg_ImmediateModeRenderer20_getNumVertices), "$getMaxVertices", $rt_wrapFunction0(cbggg_ImmediateModeRenderer20_getMaxVertices), "$dispose", $rt_wrapFunction0(cbggg_ImmediateModeRenderer20_dispose)],
cbgssu_ProgressBar$setValue$lambda$_18_0, "ProgressBar$setValue$lambda$_18_0", 15, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_ProgressBar$setValue$lambda$_18_0__init_), "$get3", $rt_wrapFunction0(cbgssu_ProgressBar$setValue$lambda$_18_0_get0), "$get25", $rt_wrapFunction0(cbgssu_ProgressBar$setValue$lambda$_18_0_get)],
ji_InputStream, 0, jl_Object, [ji_Closeable], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ji_InputStream__init_), "$read4", $rt_wrapFunction1(ji_InputStream_read)],
ji_ByteArrayInputStream, 0, ji_InputStream, [], 0, 3, 0, 0, ["$_init_171", $rt_wrapFunction3(ji_ByteArrayInputStream__init_), "$_init_118", $rt_wrapFunction1(ji_ByteArrayInputStream__init_0), "$read3", $rt_wrapFunction3(ji_ByteArrayInputStream_read), "$available", $rt_wrapFunction0(ji_ByteArrayInputStream_available), "$close", $rt_wrapFunction0(ji_ByteArrayInputStream_close)],
otci_IntegerUtil, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_PossessiveAltQuantifierSet, "PossessiveAltQuantifierSet", 29, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$_init_67", $rt_wrapFunction3(jur_PossessiveAltQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_PossessiveAltQuantifierSet_matches)],
cbgu_TimSort, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_TimSort__init_), "$doSort", $rt_wrapFunction4(cbgu_TimSort_doSort)],
otjc_JSObjects, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgm_Interpolation$SwingIn, 0, cbgm_Interpolation, [], 0, 3, 0, 0, ["$_init_10", $rt_wrapFunction1(cbgm_Interpolation$SwingIn__init_)],
bg_btDebugRenderer, 0, bl_btIDebugDraw, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(bg_btDebugRenderer__init_), "$setDebugMode", $rt_wrapFunction1(bg_btDebugRenderer_setDebugMode), "$getDebugMode", $rt_wrapFunction0(bg_btDebugRenderer_getDebugMode)],
ju_Objects, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbggge_AmbientCubemap, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggge_AmbientCubemap__init_0), "$set21", $rt_wrapFunction1(cbggge_AmbientCubemap_set0), "$set37", $rt_wrapFunction3(cbggge_AmbientCubemap_set), "$clamp2", $rt_wrapFunction0(cbggge_AmbientCubemap_clamp), "$add11", function(var_1, var_2, var_3, var_4, var_5, var_6) { return cbggge_AmbientCubemap_add1(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$add6", $rt_wrapFunction2(cbggge_AmbientCubemap_add0), "$add7", $rt_wrapFunction4(cbggge_AmbientCubemap_add)],
jur_SequenceSet, "SequenceSet", 29, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_180", $rt_wrapFunction1(jur_SequenceSet__init_), "$accepts", $rt_wrapFunction2(jur_SequenceSet_accepts), "$find", $rt_wrapFunction3(jur_SequenceSet_find), "$findBack", $rt_wrapFunction4(jur_SequenceSet_findBack), "$getName", $rt_wrapFunction0(jur_SequenceSet_getName), "$first", $rt_wrapFunction1(jur_SequenceSet_first), "$indexOf5", $rt_wrapFunction3(jur_SequenceSet_indexOf), "$lastIndexOf3", $rt_wrapFunction3(jur_SequenceSet_lastIndexOf),
"$startsWith1", $rt_wrapFunction2(jur_SequenceSet_startsWith)],
jur_AltGroupQuantifierSet, "AltGroupQuantifierSet", 29, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_29", $rt_wrapFunction3(jur_AltGroupQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_AltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_AltGroupQuantifierSet_setNext)],
jur_UCIRangeSet, "UCIRangeSet", 29, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_136", $rt_wrapFunction1(jur_UCIRangeSet__init_0), "$accepts", $rt_wrapFunction2(jur_UCIRangeSet_accepts), "$getName", $rt_wrapFunction0(jur_UCIRangeSet_getName)],
otcic_JsConsolePrintStream, 0, ji_PrintStream, [], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcic_JsConsolePrintStream__init_), "$println1", $rt_wrapFunction1(otcic_JsConsolePrintStream_println1), "$println", $rt_wrapFunction0(otcic_JsConsolePrintStream_println0), "$println0", $rt_wrapFunction1(otcic_JsConsolePrintStream_println)],
otcic_JSStdoutPrintStream, 0, otcic_JsConsolePrintStream, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcic_JSStdoutPrintStream__init_), "$print", $rt_wrapFunction1(otcic_JSStdoutPrintStream_print)],
cbgu_ArraySupplier$_clinit_$lambda$_3_0, 0, jl_Object, [cbgu_ArraySupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_ArraySupplier$_clinit_$lambda$_3_0__init_), "$get", $rt_wrapFunction1(cbgu_ArraySupplier$_clinit_$lambda$_3_0_get)],
otp_Platform, 0, jl_Object, [], 4, 3, 0, 0, 0,
jnc_CodingErrorAction, 0, jl_Object, [], 0, 3, 0, jnc_CodingErrorAction_$callClinit, ["$_init_", $rt_wrapFunction1(jnc_CodingErrorAction__init_0)],
jl_Boolean, 0, jl_Object, [ji_Serializable, jl_Comparable], 0, 3, 0, jl_Boolean_$callClinit, ["$_init_173", $rt_wrapFunction1(jl_Boolean__init_0)],
ju_NoSuchElementException, "NoSuchElementException", 28, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_NoSuchElementException__init_0), "$_init_", $rt_wrapFunction1(ju_NoSuchElementException__init_)],
jur_BackReferenceSet, "BackReferenceSet", 29, jur_CIBackReferenceSet, [], 0, 0, 0, 0, ["$_init_37", $rt_wrapFunction2(jur_BackReferenceSet__init_), "$matches", $rt_wrapFunction3(jur_BackReferenceSet_matches), "$find", $rt_wrapFunction3(jur_BackReferenceSet_find), "$findBack", $rt_wrapFunction4(jur_BackReferenceSet_findBack), "$first", $rt_wrapFunction1(jur_BackReferenceSet_first), "$getName", $rt_wrapFunction0(jur_BackReferenceSet_getName)],
jur_DotQuantifierSet, "DotQuantifierSet", 29, jur_QuantifierSet, [], 0, 0, 0, 0, ["$_init_184", $rt_wrapFunction4(jur_DotQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_DotQuantifierSet_matches), "$find", $rt_wrapFunction3(jur_DotQuantifierSet_find), "$getName", $rt_wrapFunction0(jur_DotQuantifierSet_getName)],
otcit_FloatAnalyzer, 0, jl_Object, [], 4, 3, 0, otcit_FloatAnalyzer_$callClinit, 0,
otcir_MethodInfo, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbg_Files$FileType, 0, jl_Enum, [], 12, 3, 0, cbg_Files$FileType_$callClinit, 0,
cbggg_ShaderProgram, "ShaderProgram", 19, jl_Object, [cbgu_Disposable], 0, 3, 0, cbggg_ShaderProgram_$callClinit, ["$_init_88", $rt_wrapFunction2(cbggg_ShaderProgram__init_0), "$createProgram", $rt_wrapFunction0(cbggg_ShaderProgram_createProgram), "$getLog", $rt_wrapFunction0(cbggg_ShaderProgram_getLog), "$isCompiled", $rt_wrapFunction0(cbggg_ShaderProgram_isCompiled), "$fetchUniformLocation", $rt_wrapFunction2(cbggg_ShaderProgram_fetchUniformLocation0), "$setUniformi", $rt_wrapFunction2(cbggg_ShaderProgram_setUniformi0),
"$setUniformi0", $rt_wrapFunction2(cbggg_ShaderProgram_setUniformi), "$setUniformf1", $rt_wrapFunction2(cbggg_ShaderProgram_setUniformf2), "$setUniformf2", $rt_wrapFunction3(cbggg_ShaderProgram_setUniformf0), "$setUniformf4", $rt_wrapFunction4(cbggg_ShaderProgram_setUniformf1), "$setUniformf3", function(var_1, var_2, var_3, var_4, var_5) { cbggg_ShaderProgram_setUniformf3(this, var_1, var_2, var_3, var_4, var_5); }, "$setUniform3fv", $rt_wrapFunction4(cbggg_ShaderProgram_setUniform3fv), "$setUniformMatrix",
$rt_wrapFunction2(cbggg_ShaderProgram_setUniformMatrix2), "$setUniformMatrix2", $rt_wrapFunction3(cbggg_ShaderProgram_setUniformMatrix1), "$setUniformMatrix0", $rt_wrapFunction2(cbggg_ShaderProgram_setUniformMatrix0), "$setUniformMatrix3", $rt_wrapFunction3(cbggg_ShaderProgram_setUniformMatrix3), "$setUniformMatrix1", $rt_wrapFunction2(cbggg_ShaderProgram_setUniformMatrix4), "$setUniformMatrix4", $rt_wrapFunction3(cbggg_ShaderProgram_setUniformMatrix), "$setUniformMatrix4fv", $rt_wrapFunction4(cbggg_ShaderProgram_setUniformMatrix4fv),
"$setUniformf", $rt_wrapFunction2(cbggg_ShaderProgram_setUniformf), "$setUniformf0", $rt_wrapFunction2(cbggg_ShaderProgram_setUniformf4), "$setVertexAttribute", function(var_1, var_2, var_3, var_4, var_5, var_6) { cbggg_ShaderProgram_setVertexAttribute(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$bind", $rt_wrapFunction0(cbggg_ShaderProgram_bind), "$dispose", $rt_wrapFunction0(cbggg_ShaderProgram_dispose), "$disableVertexAttribute", $rt_wrapFunction1(cbggg_ShaderProgram_disableVertexAttribute), "$disableVertexAttribute0",
$rt_wrapFunction1(cbggg_ShaderProgram_disableVertexAttribute0), "$enableVertexAttribute", $rt_wrapFunction1(cbggg_ShaderProgram_enableVertexAttribute), "$getAttributeLocation", $rt_wrapFunction1(cbggg_ShaderProgram_getAttributeLocation)],
jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1, "AbstractCharClass$LazyJavaJavaIdentifierStart$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_190", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaJavaIdentifierStart$1_contains)],
cbgg_OrthographicCamera, 0, cbgg_Camera, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgg_OrthographicCamera__init_), "$update0", $rt_wrapFunction0(cbgg_OrthographicCamera_update), "$update1", $rt_wrapFunction1(cbgg_OrthographicCamera_update0)],
cbggg_IndexBufferObject, 0, jl_Object, [cbggg_IndexData], 0, 3, 0, 0, ["$_init_11", $rt_wrapFunction2(cbggg_IndexBufferObject__init_1), "$_init_3", $rt_wrapFunction1(cbggg_IndexBufferObject__init_0), "$getNumIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumIndices), "$getNumMaxIndices", $rt_wrapFunction0(cbggg_IndexBufferObject_getNumMaxIndices), "$setIndices1", $rt_wrapFunction3(cbggg_IndexBufferObject_setIndices), "$getBuffer0", $rt_wrapFunction1(cbggg_IndexBufferObject_getBuffer), "$bind", $rt_wrapFunction0(cbggg_IndexBufferObject_bind),
"$unbind", $rt_wrapFunction0(cbggg_IndexBufferObject_unbind), "$dispose", $rt_wrapFunction0(cbggg_IndexBufferObject_dispose)],
cbggg_IndexArray, 0, cbggg_IndexBufferObject, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbggg_IndexArray__init_)],
ju_Arrays, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbta_AssetLoaderListener, 0, jl_Object, [], 3, 3, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress)],
cgxgbt_TeaPreloadApplicationListener$2, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress), "$_init_225", $rt_wrapFunction1(cgxgbt_TeaPreloadApplicationListener$2__init_), "$onSuccess0", $rt_wrapFunction2(cgxgbt_TeaPreloadApplicationListener$2_onSuccess), "$onSuccess", $rt_wrapFunction2(cgxgbt_TeaPreloadApplicationListener$2_onSuccess0)],
cgxgbt_TeaPreloadApplicationListener$1, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress), "$_init_225", $rt_wrapFunction1(cgxgbt_TeaPreloadApplicationListener$1__init_), "$onSuccess1", $rt_wrapFunction2(cgxgbt_TeaPreloadApplicationListener$1_onSuccess0), "$onSuccess", $rt_wrapFunction2(cgxgbt_TeaPreloadApplicationListener$1_onSuccess)],
jn_ShortBufferOverDataView, "ShortBufferOverDataView", 30, jn_ShortBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$_init_160", function(var_1, var_2, var_3, var_4, var_5) { jn_ShortBufferOverDataView__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$readOnly", $rt_wrapFunction0(jn_ShortBufferOverDataView_readOnly), "$putImpl1", $rt_wrapFunction4(jn_ShortBufferOverDataView_putImpl), "$capacityImpl", $rt_wrapFunction0(jn_ShortBufferOverDataView_capacityImpl), "$getArrayBufferView", $rt_wrapFunction0(jn_ShortBufferOverDataView_getArrayBufferView)],
bgg_btDebugRendererGdxGL, 0, bg_btDebugRenderer, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(bgg_btDebugRendererGdxGL__init_), "$drawLine0", $rt_wrapFunction3(bgg_btDebugRendererGdxGL_drawLine), "$drawContactPoint0", function(var_1, var_2, var_3, var_4, var_5) { bgg_btDebugRendererGdxGL_drawContactPoint0(this, var_1, var_2, var_3, var_4, var_5); }, "$debugDrawWorld0", $rt_wrapFunction2(bgg_btDebugRendererGdxGL_debugDrawWorld)],
jur_CharClass$3, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_95", $rt_wrapFunction3(jur_CharClass$3__init_), "$contains", $rt_wrapFunction1(jur_CharClass$3_contains)]]);
$rt_metadata([jur_CharClass$4, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_93", $rt_wrapFunction4(jur_CharClass$4__init_), "$contains", $rt_wrapFunction1(jur_CharClass$4_contains)],
jur_CharClass$1, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_94", $rt_wrapFunction2(jur_CharClass$1__init_), "$contains", $rt_wrapFunction1(jur_CharClass$1_contains)],
jur_CharClass$2, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_95", $rt_wrapFunction3(jur_CharClass$2__init_), "$contains", $rt_wrapFunction1(jur_CharClass$2_contains)],
jur_CharClass$7, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_94", $rt_wrapFunction2(jur_CharClass$7__init_), "$contains", $rt_wrapFunction1(jur_CharClass$7_contains)],
jur_CharClass$8, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_96", $rt_wrapFunction3(jur_CharClass$8__init_), "$contains", $rt_wrapFunction1(jur_CharClass$8_contains)],
jur_CharClass$5, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_93", $rt_wrapFunction4(jur_CharClass$5__init_), "$contains", $rt_wrapFunction1(jur_CharClass$5_contains)],
jur_CharClass$6, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_94", $rt_wrapFunction2(jur_CharClass$6__init_), "$contains", $rt_wrapFunction1(jur_CharClass$6_contains)],
cgxgbt_TeaGraphics$FullscreenChanged, 0, jl_Object, [otj_JSObject], 3, 3, 0, 0, 0,
jur_DotSet, "DotSet", 29, jur_JointSet, [], 4, 0, 0, 0, ["$_init_185", $rt_wrapFunction1(jur_DotSet__init_), "$matches", $rt_wrapFunction3(jur_DotSet_matches), "$getName", $rt_wrapFunction0(jur_DotSet_getName), "$setNext", $rt_wrapFunction1(jur_DotSet_setNext), "$getType0", $rt_wrapFunction0(jur_DotSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotSet_hasConsumed)],
jur_CharClass$9, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_96", $rt_wrapFunction3(jur_CharClass$9__init_), "$contains", $rt_wrapFunction1(jur_CharClass$9_contains)],
jl_Character, 0, jl_Object, [jl_Comparable], 0, 3, 0, jl_Character_$callClinit, 0,
jur_CICharSet, "CICharSet", 29, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_182", $rt_wrapFunction1(jur_CICharSet__init_), "$accepts", $rt_wrapFunction2(jur_CICharSet_accepts), "$getName", $rt_wrapFunction0(jur_CICharSet_getName)],
jur_SupplCharSet, "SupplCharSet", 29, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_SupplCharSet__init_), "$accepts", $rt_wrapFunction2(jur_SupplCharSet_accepts), "$find", $rt_wrapFunction3(jur_SupplCharSet_find), "$findBack", $rt_wrapFunction4(jur_SupplCharSet_findBack), "$getName", $rt_wrapFunction0(jur_SupplCharSet_getName), "$getCodePoint", $rt_wrapFunction0(jur_SupplCharSet_getCodePoint), "$first", $rt_wrapFunction1(jur_SupplCharSet_first)],
cgxgbtf_FileDB$1, 0, ji_OutputStream, [], 0, 0, 0, 0, ["$_init_117", function(var_1, var_2, var_3, var_4, var_5) { cgxgbtf_FileDB$1__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$write1", $rt_wrapFunction1(cgxgbtf_FileDB$1_write), "$close", $rt_wrapFunction0(cgxgbtf_FileDB$1_close)],
cbgggm_NodeAnimation, "NodeAnimation", 26, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggm_NodeAnimation__init_)],
cbgu_IntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(cbgu_IntMap__init_0), "$_init_110", $rt_wrapFunction2(cbgu_IntMap__init_), "$place", $rt_wrapFunction1(cbgu_IntMap_place), "$put13", $rt_wrapFunction2(cbgu_IntMap_put), "$get", $rt_wrapFunction1(cbgu_IntMap_get), "$remove1", $rt_wrapFunction1(cbgu_IntMap_remove), "$containsValue", $rt_wrapFunction2(cbgu_IntMap_containsValue)],
cbggg_ModelBatch$RenderablePool, 0, cbgu_FlushablePool, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_ModelBatch$RenderablePool__init_), "$newObject0", $rt_wrapFunction0(cbggg_ModelBatch$RenderablePool_newObject), "$obtain1", $rt_wrapFunction0(cbggg_ModelBatch$RenderablePool_obtain0), "$obtain0", $rt_wrapFunction0(cbggg_ModelBatch$RenderablePool_obtain), "$newObject", $rt_wrapFunction0(cbggg_ModelBatch$RenderablePool_newObject0)],
cbgm_Quaternion, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgm_Quaternion_$callClinit, ["$_init_4", $rt_wrapFunction4(cbgm_Quaternion__init_2), "$_init_0", $rt_wrapFunction0(cbgm_Quaternion__init_0), "$set39", $rt_wrapFunction4(cbgm_Quaternion_set), "$set43", $rt_wrapFunction1(cbgm_Quaternion_set0), "$set36", $rt_wrapFunction2(cbgm_Quaternion_set1), "$len2", $rt_wrapFunction0(cbgm_Quaternion_len2), "$nor1", $rt_wrapFunction0(cbgm_Quaternion_nor), "$toMatrix", $rt_wrapFunction1(cbgm_Quaternion_toMatrix), "$idt1",
$rt_wrapFunction0(cbgm_Quaternion_idt), "$setFromAxis", $rt_wrapFunction4(cbgm_Quaternion_setFromAxis), "$setFromAxisRad", $rt_wrapFunction4(cbgm_Quaternion_setFromAxisRad)],
jnc_StandardCharsets, 0, jl_Object, [], 4, 3, 0, jnc_StandardCharsets_$callClinit, 0,
otcir_ClassList, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaMirrored$1, "AbstractCharClass$LazyJavaMirrored$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_232", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaMirrored$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaMirrored$1_contains)],
jur_UEOLSet, "UEOLSet", 29, jur_AbstractSet, [], 4, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_UEOLSet__init_), "$matches", $rt_wrapFunction3(jur_UEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_UEOLSet_getName)],
jur_UCICharSet, "UCICharSet", 29, jur_LeafSet, [], 0, 0, 0, 0, ["$_init_182", $rt_wrapFunction1(jur_UCICharSet__init_), "$accepts", $rt_wrapFunction2(jur_UCICharSet_accepts), "$getName", $rt_wrapFunction0(jur_UCICharSet_getName)],
cgxgbta_AssetDownloadImpl$loadBinary$lambda$_3_0, 0, jl_Object, [otjb_TimerHandler], 0, 3, 0, 0, ["$_init_140", $rt_wrapFunction4(cgxgbta_AssetDownloadImpl$loadBinary$lambda$_3_0__init_), "$onTimer", $rt_wrapFunction0(cgxgbta_AssetDownloadImpl$loadBinary$lambda$_3_0_onTimer)],
cbggga_PointLightsAttribute, 0, cbggg_Attribute, [], 0, 3, 0, cbggga_PointLightsAttribute_$callClinit, 0,
jnci_Iso8859Charset, "Iso8859Charset", 32, jnc_Charset, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnci_Iso8859Charset__init_), "$newDecoder", $rt_wrapFunction0(jnci_Iso8859Charset_newDecoder)],
cbgg_Texture$TextureWrap, 0, jl_Enum, [], 12, 3, 0, cbgg_Texture$TextureWrap_$callClinit, ["$getGLEnum", $rt_wrapFunction0(cbgg_Texture$TextureWrap_getGLEnum)],
cbgggu_RenderableSorter, 0, jl_Object, [], 3, 3, 0, 0, 0,
cbgggu_DefaultRenderableSorter, 0, jl_Object, [cbgggu_RenderableSorter, ju_Comparator], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggu_DefaultRenderableSorter__init_), "$sort2", $rt_wrapFunction2(cbgggu_DefaultRenderableSorter_sort), "$compare1", $rt_wrapFunction2(cbgggu_DefaultRenderableSorter_compare), "$compare0", $rt_wrapFunction2(cbgggu_DefaultRenderableSorter_compare0)],
jur_CompositeGroupQuantifierSet, "CompositeGroupQuantifierSet", 29, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_176", function(var_1, var_2, var_3, var_4, var_5) { jur_CompositeGroupQuantifierSet__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$matches", $rt_wrapFunction3(jur_CompositeGroupQuantifierSet_matches), "$getName", $rt_wrapFunction0(jur_CompositeGroupQuantifierSet_getName)],
jur_RelCompositeGroupQuantifierSet, "RelCompositeGroupQuantifierSet", 29, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_176", function(var_1, var_2, var_3, var_4, var_5) { jur_RelCompositeGroupQuantifierSet__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$matches", $rt_wrapFunction3(jur_RelCompositeGroupQuantifierSet_matches)],
ju_ArrayList, 0, ju_AbstractList, [jl_Cloneable, ji_Serializable, ju_RandomAccess], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_ArrayList__init_1), "$_init_3", $rt_wrapFunction1(ju_ArrayList__init_), "$ensureCapacity", $rt_wrapFunction1(ju_ArrayList_ensureCapacity), "$get", $rt_wrapFunction1(ju_ArrayList_get), "$size", $rt_wrapFunction0(ju_ArrayList_size), "$add3", $rt_wrapFunction1(ju_ArrayList_add), "$add4", $rt_wrapFunction2(ju_ArrayList_add0), "$remove1", $rt_wrapFunction1(ju_ArrayList_remove)],
cgxgbt_TeaApplication$4, 0, jl_Object, [jl_Runnable], 0, 0, 0, 0, ["$_init_44", $rt_wrapFunction1(cgxgbt_TeaApplication$4__init_), "$run", $rt_wrapFunction0(cgxgbt_TeaApplication$4_run)],
cgxgbt_TeaApplication$5, 0, jl_Object, [jl_Runnable], 0, 0, 0, 0, ["$_init_213", $rt_wrapFunction2(cgxgbt_TeaApplication$5__init_), "$run", $rt_wrapFunction0(cgxgbt_TeaApplication$5_run)],
jl_IllegalMonitorStateException, "IllegalMonitorStateException", 34, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_IllegalMonitorStateException__init_0)],
cgxgbt_TeaApplication$6, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress), "$_init_44", $rt_wrapFunction1(cgxgbt_TeaApplication$6__init_), "$onSuccess2", $rt_wrapFunction2(cgxgbt_TeaApplication$6_onSuccess0), "$onFailure", $rt_wrapFunction1(cgxgbt_TeaApplication$6_onFailure), "$onSuccess", $rt_wrapFunction2(cgxgbt_TeaApplication$6_onSuccess)],
cgxgbtft_InternalStorage, "InternalStorage", 8, cgxgbtf_MemoryFileStorage, [], 0, 3, [0,0,0], 0, ["$_init_0", $rt_wrapFunction0(cgxgbtft_InternalStorage__init_)],
cgxgbt_TeaApplication$7, 0, jl_Object, [], 32, 0, 0, cgxgbt_TeaApplication$7_$callClinit, 0,
cgxgbt_TeaApplication$1, 0, jl_Object, [otjde_EventListener], 0, 0, 0, 0, ["$_init_44", $rt_wrapFunction1(cgxgbt_TeaApplication$1__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbt_TeaApplication$1_handleEvent)],
cgxgbt_TeaApplication$2, 0, jl_Object, [otjde_EventListener], 0, 0, 0, 0, ["$_init_44", $rt_wrapFunction1(cgxgbt_TeaApplication$2__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbt_TeaApplication$2_handleEvent)],
cgxgbt_TeaApplication$3, 0, jl_Object, [otjde_EventListener], 0, 0, 0, 0, ["$_init_44", $rt_wrapFunction1(cgxgbt_TeaApplication$3__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbt_TeaApplication$3_handleEvent)],
jur_RelAltGroupQuantifierSet, "RelAltGroupQuantifierSet", 29, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_29", $rt_wrapFunction3(jur_RelAltGroupQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_RelAltGroupQuantifierSet_matches)],
cgxgbtdt_TypedArrays, 0, jl_Object, [], 0, 3, 0, 0, 0,
cbgssu_Value$6, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Value$6__init_), "$get0", $rt_wrapFunction1(cbgssu_Value$6_get)],
cbgssu_Value$5, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Value$5__init_), "$get0", $rt_wrapFunction1(cbgssu_Value$5_get)],
cbgssu_Value$2, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Value$2__init_), "$get0", $rt_wrapFunction1(cbgssu_Value$2_get)],
cbgssu_Value$1, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Value$1__init_), "$get0", $rt_wrapFunction1(cbgssu_Value$1_get)],
otjt_Uint16Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
jnc_Charset$Charsets, 0, jl_Object, [], 0, 0, 0, jnc_Charset$Charsets_$callClinit, 0,
cbgssu_Value$4, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Value$4__init_), "$get0", $rt_wrapFunction1(cbgssu_Value$4_get)]]);
$rt_metadata([cbgssu_Value$3, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Value$3__init_), "$get0", $rt_wrapFunction1(cbgssu_Value$3_get)],
cbg_ApplicationLogger, 0, jl_Object, [], 3, 3, 0, 0, 0,
cgxgbt_TeaApplicationLogger, 0, jl_Object, [cbg_ApplicationLogger], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbt_TeaApplicationLogger__init_), "$log", $rt_wrapFunction2(cgxgbt_TeaApplicationLogger_log), "$error", $rt_wrapFunction2(cgxgbt_TeaApplicationLogger_error)],
jur_FSet$PossessiveFSet, "FSet$PossessiveFSet", 29, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_FSet$PossessiveFSet__init_), "$matches", $rt_wrapFunction3(jur_FSet$PossessiveFSet_matches), "$getName", $rt_wrapFunction0(jur_FSet$PossessiveFSet_getName), "$hasConsumed", $rt_wrapFunction1(jur_FSet$PossessiveFSet_hasConsumed)],
cbgm_Interpolation$ExpOut, 0, cbgm_Interpolation$Exp, [], 0, 3, 0, 0, ["$_init_8", $rt_wrapFunction2(cbgm_Interpolation$ExpOut__init_)],
jur_PosCompositeGroupQuantifierSet, "PosCompositeGroupQuantifierSet", 29, jur_CompositeGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_176", function(var_1, var_2, var_3, var_4, var_5) { jur_PosCompositeGroupQuantifierSet__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$matches", $rt_wrapFunction3(jur_PosCompositeGroupQuantifierSet_matches)],
cbgssu_FocusListener$FocusEvent, "FocusListener$FocusEvent", 16, cbgss_Event, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_FocusListener$FocusEvent__init_), "$reset2", $rt_wrapFunction0(cbgssu_FocusListener$FocusEvent_reset), "$setFocused", $rt_wrapFunction1(cbgssu_FocusListener$FocusEvent_setFocused), "$setType1", $rt_wrapFunction1(cbgssu_FocusListener$FocusEvent_setType), "$setRelatedActor", $rt_wrapFunction1(cbgssu_FocusListener$FocusEvent_setRelatedActor)],
cbgg_Texture$TextureFilter, 0, jl_Enum, [], 12, 3, 0, cbgg_Texture$TextureFilter_$callClinit, ["$getGLEnum", $rt_wrapFunction0(cbgg_Texture$TextureFilter_getGLEnum)],
jur_AbstractCharClass$LazyJavaDigit$1, "AbstractCharClass$LazyJavaDigit$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_45", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDigit$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaDigit$1_contains)],
cbgss_InputEvent, "InputEvent", 14, cbgss_Event, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_InputEvent__init_0), "$reset2", $rt_wrapFunction0(cbgss_InputEvent_reset), "$setStageX", $rt_wrapFunction1(cbgss_InputEvent_setStageX), "$setStageY", $rt_wrapFunction1(cbgss_InputEvent_setStageY), "$setType0", $rt_wrapFunction1(cbgss_InputEvent_setType), "$setPointer", $rt_wrapFunction1(cbgss_InputEvent_setPointer), "$setButton", $rt_wrapFunction1(cbgss_InputEvent_setButton), "$setRelatedActor", $rt_wrapFunction1(cbgss_InputEvent_setRelatedActor),
"$toString", $rt_wrapFunction0(cbgss_InputEvent_toString)],
cgxgbt_TeaWindowListener, 0, jl_Object, [], 3, 3, 0, 0, 0,
jl_NullPointerException, "NullPointerException", 34, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(jl_NullPointerException__init_2), "$_init_0", $rt_wrapFunction0(jl_NullPointerException__init_0)],
jur_AbstractCharClass$LazyJavaSpaceChar$1, "AbstractCharClass$LazyJavaSpaceChar$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_51", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaSpaceChar$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaSpaceChar$1_contains)],
cgxgbt_TeaGL20$CustomIntMap, 0, jl_Object, [otj_JSObject], 0, 0, 0, 0, 0,
jl_Math, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUnicodeIdentifierPart_computeValue)],
jur_PatternSyntaxException, "PatternSyntaxException", 29, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_163", $rt_wrapFunction3(jur_PatternSyntaxException__init_0), "$getMessage", $rt_wrapFunction0(jur_PatternSyntaxException_getMessage)],
cbggg_ShapeRenderer$ShapeType, "ShapeRenderer$ShapeType", 19, jl_Enum, [], 12, 3, 0, cbggg_ShapeRenderer$ShapeType_$callClinit, ["$getGlType", $rt_wrapFunction0(cbggg_ShapeRenderer$ShapeType_getGlType)],
jur_AbstractCharClass$LazyJavaDefined, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDefined__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaDefined_computeValue)],
cbggga_DepthTestAttribute, 0, cbggg_Attribute, [], 0, 3, 0, cbggga_DepthTestAttribute_$callClinit, 0,
cbgg_Mesh$VertexDataType, 0, jl_Enum, [], 12, 3, 0, cbgg_Mesh$VertexDataType_$callClinit, 0,
cbgu_ObjectMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, cbgu_ObjectMap_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgu_ObjectMap__init_0), "$_init_110", $rt_wrapFunction2(cbgu_ObjectMap__init_1), "$place0", $rt_wrapFunction1(cbgu_ObjectMap_place), "$locateKey0", $rt_wrapFunction1(cbgu_ObjectMap_locateKey), "$put", $rt_wrapFunction2(cbgu_ObjectMap_put), "$get2", $rt_wrapFunction1(cbgu_ObjectMap_get), "$remove2", $rt_wrapFunction1(cbgu_ObjectMap_remove), "$clear", $rt_wrapFunction0(cbgu_ObjectMap_clear), "$containsKey",
$rt_wrapFunction1(cbgu_ObjectMap_containsKey), "$resize0", $rt_wrapFunction1(cbgu_ObjectMap_resize)],
jur_Pattern, 0, jl_Object, [ji_Serializable], 4, 3, 0, 0, ["$matcher", $rt_wrapFunction1(jur_Pattern_matcher), "$split0", $rt_wrapFunction2(jur_Pattern_split), "$split", $rt_wrapFunction1(jur_Pattern_split0), "$pattern", $rt_wrapFunction0(jur_Pattern_pattern), "$groupCount", $rt_wrapFunction0(jur_Pattern_groupCount), "$compCount", $rt_wrapFunction0(jur_Pattern_compCount), "$consCount", $rt_wrapFunction0(jur_Pattern_consCount)],
ji_UnsupportedEncodingException, "UnsupportedEncodingException", 33, ji_IOException, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(ji_UnsupportedEncodingException__init_)],
jur_PosAltGroupQuantifierSet, "PosAltGroupQuantifierSet", 29, jur_AltGroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_29", $rt_wrapFunction3(jur_PosAltGroupQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_PosAltGroupQuantifierSet_matches), "$setNext", $rt_wrapFunction1(jur_PosAltGroupQuantifierSet_setNext)],
cbgm_Interpolation$12, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$12__init_)],
cbgm_Interpolation$13, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$13__init_)],
cbgm_Interpolation$14, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$14__init_)],
cbgm_Rectangle, "Rectangle", 17, jl_Object, [ji_Serializable, cbgm_Shape2D], 0, 3, 0, cbgm_Rectangle_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Rectangle__init_0), "$set4", $rt_wrapFunction4(cbgm_Rectangle_set), "$toString", $rt_wrapFunction0(cbgm_Rectangle_toString), "$hashCode0", $rt_wrapFunction0(cbgm_Rectangle_hashCode), "$equals", $rt_wrapFunction1(cbgm_Rectangle_equals)],
cbgm_Interpolation$10, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$10__init_)],
cbgm_Interpolation$11, 0, cbgm_Interpolation, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgm_Interpolation$11__init_)],
cgxgbt_TeaGraphics$2, 0, cbg_Graphics$DisplayMode, [], 0, 0, 0, 0, ["$_init_116", function(var_1, var_2, var_3, var_4, var_5) { cgxgbt_TeaGraphics$2__init_(this, var_1, var_2, var_3, var_4, var_5); }],
cgxgbt_TeaGraphics$1, 0, jl_Object, [cgxgbt_TeaGraphics$FullscreenChanged], 0, 0, 0, 0, ["$_init_115", $rt_wrapFunction1(cgxgbt_TeaGraphics$1__init_), "$fullscreenChanged", $rt_wrapFunction0(cgxgbt_TeaGraphics$1_fullscreenChanged)],
cbggg_Environment, 0, cbggg_Attributes, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_Environment__init_), "$add13", $rt_wrapFunction1(cbggg_Environment_add)],
cbg_AbstractInput, 0, jl_Object, [cbg_Input], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbg_AbstractInput__init_), "$isCatchKey", $rt_wrapFunction1(cbg_AbstractInput_isCatchKey)],
cbgu_Collections, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxjl_JParserLibraryLoader$loadScript$lambda$_12_1, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, ["$_init_71", $rt_wrapFunction3(cgxjl_JParserLibraryLoader$loadScript$lambda$_12_1__init_), "$handleEvent1", $rt_wrapFunction1(cgxjl_JParserLibraryLoader$loadScript$lambda$_12_1_handleEvent)],
cbgu_Sort, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Sort__init_), "$sort", $rt_wrapFunction4(cbgu_Sort_sort)],
jur_UnicodeCategory, "UnicodeCategory", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_UnicodeCategory__init_), "$contains", $rt_wrapFunction1(jur_UnicodeCategory_contains)],
jur_UnicodeCategoryScope, "UnicodeCategoryScope", 29, jur_UnicodeCategory, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_UnicodeCategoryScope__init_), "$contains", $rt_wrapFunction1(jur_UnicodeCategoryScope_contains)],
jnc_UnmappableCharacterException, "UnmappableCharacterException", 31, jnc_CharacterCodingException, [], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(jnc_UnmappableCharacterException__init_), "$getMessage", $rt_wrapFunction0(jnc_UnmappableCharacterException_getMessage)],
beb_BulletGame, 0, cbg_Game, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(beb_BulletGame__init_), "$create", $rt_wrapFunction0(beb_BulletGame_create)],
otcit_FloatAnalyzer$Result, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcit_FloatAnalyzer$Result__init_)],
jur_UCIDecomposedCharSet, "UCIDecomposedCharSet", 29, jur_DecomposedCharSet, [], 0, 0, 0, 0, ["$_init_167", $rt_wrapFunction2(jur_UCIDecomposedCharSet__init_)],
jn_FloatBuffer, 0, jn_Buffer, [jl_Comparable], 1, 3, 0, 0, ["$_init_37", $rt_wrapFunction2(jn_FloatBuffer__init_), "$put3", $rt_wrapFunction3(jn_FloatBuffer_put), "$clear5", $rt_wrapFunction0(jn_FloatBuffer_clear), "$flip3", $rt_wrapFunction0(jn_FloatBuffer_flip), "$limit2", $rt_wrapFunction1(jn_FloatBuffer_limit), "$position4", $rt_wrapFunction1(jn_FloatBuffer_position0), "$flip", $rt_wrapFunction0(jn_FloatBuffer_flip0), "$clear0", $rt_wrapFunction0(jn_FloatBuffer_clear0), "$limit", $rt_wrapFunction1(jn_FloatBuffer_limit0),
"$position", $rt_wrapFunction1(jn_FloatBuffer_position)],
jn_FloatBufferImpl, 0, jn_FloatBuffer, [], 1, 0, 0, 0, ["$_init_37", $rt_wrapFunction2(jn_FloatBufferImpl__init_), "$get8", $rt_wrapFunction1(jn_FloatBufferImpl_get), "$put8", $rt_wrapFunction2(jn_FloatBufferImpl_put), "$isReadOnly", $rt_wrapFunction0(jn_FloatBufferImpl_isReadOnly)],
cgxgbta_AssetDownloadImpl$loadScript$lambda$_2_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, ["$_init_139", $rt_wrapFunction3(cgxgbta_AssetDownloadImpl$loadScript$lambda$_2_0__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbta_AssetDownloadImpl$loadScript$lambda$_2_0_handleEvent)],
jl_String$_clinit_$lambda$_115_0, 0, jl_Object, [ju_Comparator], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_String$_clinit_$lambda$_115_0__init_)],
cgxjl_JParserLibraryLoader$loadScript$lambda$_12_0, 0, jl_Object, [otjde_EventListener], 0, 3, 0, 0, ["$_init_69", $rt_wrapFunction1(cgxjl_JParserLibraryLoader$loadScript$lambda$_12_0__init_), "$handleEvent1", $rt_wrapFunction1(cgxjl_JParserLibraryLoader$loadScript$lambda$_12_0_handleEvent)],
jur_AbstractCharClass$LazyJavaWhitespace$1, "AbstractCharClass$LazyJavaWhitespace$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_230", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaWhitespace$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaWhitespace$1_contains)]]);
$rt_metadata([jur_AbstractCharClass$LazyJavaJavaIdentifierStart, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierStart__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaJavaIdentifierStart_computeValue)],
cbgg_Pixmap$Blending, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Blending_$callClinit, 0,
cgxgbt_TeaApplication$AppState, 0, jl_Enum, [], 12, 3, 0, cgxgbt_TeaApplication$AppState_$callClinit, 0,
otjt_Uint8Array, 0, otjt_TypedArray, [], 0, 3, 0, 0, 0,
otji_IDBFactory, 0, jl_Object, [otj_JSObject], 1, 3, 0, 0, 0,
jl_Long, 0, jl_Number, [jl_Comparable], 0, 3, 0, jl_Long_$callClinit, 0,
jur_SequenceSet$IntHash, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_SequenceSet$IntHash__init_), "$put4", $rt_wrapFunction2(jur_SequenceSet$IntHash_put), "$get1", $rt_wrapFunction1(jur_SequenceSet$IntHash_get)],
cbgssu_Image, "Image", 15, cbgssu_Widget, [], 0, 3, 0, 0, ["$_init_104", $rt_wrapFunction1(cbgssu_Image__init_1), "$_init_191", $rt_wrapFunction1(cbgssu_Image__init_), "$_init_193", $rt_wrapFunction3(cbgssu_Image__init_0), "$layout", $rt_wrapFunction0(cbgssu_Image_layout), "$draw", $rt_wrapFunction2(cbgssu_Image_draw), "$setDrawable", $rt_wrapFunction1(cbgssu_Image_setDrawable), "$setScaling", $rt_wrapFunction1(cbgssu_Image_setScaling), "$getMinWidth", $rt_wrapFunction0(cbgssu_Image_getMinWidth), "$getMinHeight",
$rt_wrapFunction0(cbgssu_Image_getMinHeight), "$getPrefWidth", $rt_wrapFunction0(cbgssu_Image_getPrefWidth), "$getPrefHeight", $rt_wrapFunction0(cbgssu_Image_getPrefHeight), "$toString", $rt_wrapFunction0(cbgssu_Image_toString)],
otcin_Buffers, 0, jl_Object, [], 4, 3, 0, 0, 0,
jur_AbstractCharClass$LazyJavaLowerCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLowerCase__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaLowerCase_computeValue)],
cbgg_Pixmap$Format, 0, jl_Enum, [], 12, 3, 0, cbgg_Pixmap$Format_$callClinit, 0,
cgxgbt_TeaApplicationConfiguration, 0, jl_Object, [], 0, 3, 0, 0, ["$isFixedSizeApplication", $rt_wrapFunction0(cgxgbt_TeaApplicationConfiguration_isFixedSizeApplication), "$isAutoSizeApplication", $rt_wrapFunction0(cgxgbt_TeaApplicationConfiguration_isAutoSizeApplication), "$_init_", $rt_wrapFunction1(cgxgbt_TeaApplicationConfiguration__init_)],
bbc_btConstraintSolver, 0, bi_IDLBase, [], 0, 3, 0, bbc_btConstraintSolver_$callClinit, ["$_init_63", $rt_wrapFunction2(bbc_btConstraintSolver__init_)],
bbc_btSequentialImpulseConstraintSolver, 0, bbc_btConstraintSolver, [], 0, 3, 0, bbc_btSequentialImpulseConstraintSolver_$callClinit, ["$_init_0", $rt_wrapFunction0(bbc_btSequentialImpulseConstraintSolver__init_0), "$_init_63", $rt_wrapFunction2(bbc_btSequentialImpulseConstraintSolver__init_)],
jur_AbstractCharClass$LazyJavaLetterOrDigit$1, "AbstractCharClass$LazyJavaLetterOrDigit$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_84", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetterOrDigit$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaLetterOrDigit$1_contains)],
cgxjc_JPlatformMap, 0, jl_Object, [], 4, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxjc_JPlatformMap__init_), "$put12", $rt_wrapFunction2(cgxjc_JPlatformMap_put), "$getObject0", $rt_wrapFunction2(cgxjc_JPlatformMap_getObject)],
jur_CharClass$18, "CharClass$18", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_97", $rt_wrapFunction2(jur_CharClass$18__init_), "$contains", $rt_wrapFunction1(jur_CharClass$18_contains), "$toString", $rt_wrapFunction0(jur_CharClass$18_toString)],
jur_PossessiveGroupQuantifierSet, "PossessiveGroupQuantifierSet", 29, jur_GroupQuantifierSet, [], 0, 0, 0, 0, ["$_init_29", $rt_wrapFunction3(jur_PossessiveGroupQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_PossessiveGroupQuantifierSet_matches)],
cbggga_ColorAttribute, "ColorAttribute", 25, cbggg_Attribute, [], 0, 3, 0, cbggga_ColorAttribute_$callClinit, ["$_init_99", $rt_wrapFunction1(cbggga_ColorAttribute__init_), "$_init_196", $rt_wrapFunction2(cbggga_ColorAttribute__init_0), "$_init_195", function(var_1, var_2, var_3, var_4, var_5) { cbggga_ColorAttribute__init_1(this, var_1, var_2, var_3, var_4, var_5); }, "$_init_197", $rt_wrapFunction1(cbggga_ColorAttribute__init_3), "$copy", $rt_wrapFunction0(cbggga_ColorAttribute_copy), "$hashCode0", $rt_wrapFunction0(cbggga_ColorAttribute_hashCode)],
jur_CharClass$13, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_94", $rt_wrapFunction2(jur_CharClass$13__init_), "$contains", $rt_wrapFunction1(jur_CharClass$13_contains)],
jur_CharClass$12, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_94", $rt_wrapFunction2(jur_CharClass$12__init_), "$contains", $rt_wrapFunction1(jur_CharClass$12_contains)],
jur_CharClass$11, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_93", $rt_wrapFunction4(jur_CharClass$11__init_), "$contains", $rt_wrapFunction1(jur_CharClass$11_contains)],
jur_CharClass$10, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_93", $rt_wrapFunction4(jur_CharClass$10__init_), "$contains", $rt_wrapFunction1(jur_CharClass$10_contains)],
jur_CharClass$17, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_93", $rt_wrapFunction4(jur_CharClass$17__init_), "$contains", $rt_wrapFunction1(jur_CharClass$17_contains)],
jur_CharClass$16, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_93", $rt_wrapFunction4(jur_CharClass$16__init_), "$contains", $rt_wrapFunction1(jur_CharClass$16_contains)],
jur_CharClass$15, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_96", $rt_wrapFunction3(jur_CharClass$15__init_), "$contains", $rt_wrapFunction1(jur_CharClass$15_contains)],
jur_CharClass$14, 0, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_96", $rt_wrapFunction3(jur_CharClass$14__init_), "$contains", $rt_wrapFunction1(jur_CharClass$14_contains)],
jl_StringBuilder, 0, jl_AbstractStringBuilder, [jl_Appendable], 0, 3, 0, 0, ["$_init_3", $rt_wrapFunction1(jl_StringBuilder__init_1), "$_init_0", $rt_wrapFunction0(jl_StringBuilder__init_2), "$append", $rt_wrapFunction1(jl_StringBuilder_append), "$append1", $rt_wrapFunction1(jl_StringBuilder_append4), "$append2", $rt_wrapFunction1(jl_StringBuilder_append0), "$append31", $rt_wrapFunction1(jl_StringBuilder_append7), "$append20", $rt_wrapFunction1(jl_StringBuilder_append3), "$append0", $rt_wrapFunction1(jl_StringBuilder_append1),
"$append7", $rt_wrapFunction3(jl_StringBuilder_append5), "$append18", $rt_wrapFunction1(jl_StringBuilder_append8), "$append19", $rt_wrapFunction1(jl_StringBuilder_append2), "$insert19", $rt_wrapFunction2(jl_StringBuilder_insert3), "$insert18", $rt_wrapFunction2(jl_StringBuilder_insert11), "$insert14", $rt_wrapFunction4(jl_StringBuilder_insert10), "$insert16", $rt_wrapFunction2(jl_StringBuilder_insert12), "$insert15", $rt_wrapFunction2(jl_StringBuilder_insert9), "$insert17", $rt_wrapFunction2(jl_StringBuilder_insert1),
"$delete0", $rt_wrapFunction2(jl_StringBuilder_delete), "$deleteCharAt", $rt_wrapFunction1(jl_StringBuilder_deleteCharAt), "$insert20", $rt_wrapFunction2(jl_StringBuilder_insert6), "$substring", $rt_wrapFunction2(jl_StringBuilder_substring), "$setLength", $rt_wrapFunction1(jl_StringBuilder_setLength), "$subSequence", $rt_wrapFunction2(jl_StringBuilder_subSequence), "$insert9", $rt_wrapFunction4(jl_StringBuilder_insert5), "$append9", $rt_wrapFunction3(jl_StringBuilder_append6), "$isEmpty", $rt_wrapFunction0(jl_StringBuilder_isEmpty),
"$length", $rt_wrapFunction0(jl_StringBuilder_length), "$toString", $rt_wrapFunction0(jl_StringBuilder_toString), "$ensureCapacity", $rt_wrapFunction1(jl_StringBuilder_ensureCapacity), "$insert7", $rt_wrapFunction2(jl_StringBuilder_insert0), "$insert0", $rt_wrapFunction2(jl_StringBuilder_insert8), "$insert6", $rt_wrapFunction2(jl_StringBuilder_insert7), "$insert5", $rt_wrapFunction2(jl_StringBuilder_insert4), "$insert3", $rt_wrapFunction2(jl_StringBuilder_insert), "$insert1", $rt_wrapFunction2(jl_StringBuilder_insert2)],
ju_ConcurrentModificationException, "ConcurrentModificationException", 28, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_ConcurrentModificationException__init_)],
cgxgbtft_ClasspathStorage, "ClasspathStorage", 8, cgxgbtf_MemoryFileStorage, [], 0, 3, [0,0,0], 0, ["$_init_0", $rt_wrapFunction0(cgxgbtft_ClasspathStorage__init_)],
ju_Hashtable$1, 0, jl_Object, [ju_Enumeration], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Hashtable$1__init_)],
ju_Hashtable$2, 0, jl_Object, [ju_Iterator], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(ju_Hashtable$2__init_)],
cgxgbt_TeaNet, 0, jl_Object, [cbg_Net], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbt_TeaNet__init_)],
b_BulletLoader, 0, jl_Object, [], 0, 3, 0, 0, 0,
beb_BulletTestScreen, "BulletTestScreen", 44, cbg_ScreenAdapter, [cbg_InputProcessor], 0, 3, 0, beb_BulletTestScreen_$callClinit, ["$_init_0", $rt_wrapFunction0(beb_BulletTestScreen__init_), "$show", $rt_wrapFunction0(beb_BulletTestScreen_show), "$createBox0", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12, var_13, var_14, var_15, var_16) { return beb_BulletTestScreen_createBox(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11,
var_12, var_13, var_14, var_15, var_16); }, "$resetBoxes", $rt_wrapFunction0(beb_BulletTestScreen_resetBoxes), "$render4", $rt_wrapFunction1(beb_BulletTestScreen_render), "$resize1", $rt_wrapFunction2(beb_BulletTestScreen_resize), "$pause", $rt_wrapFunction0(beb_BulletTestScreen_pause), "$resume", $rt_wrapFunction0(beb_BulletTestScreen_resume), "$keyDown", $rt_wrapFunction1(beb_BulletTestScreen_keyDown), "$keyUp", $rt_wrapFunction1(beb_BulletTestScreen_keyUp), "$keyTyped", $rt_wrapFunction1(beb_BulletTestScreen_keyTyped),
"$touchDown0", $rt_wrapFunction4(beb_BulletTestScreen_touchDown), "$touchUp0", $rt_wrapFunction4(beb_BulletTestScreen_touchUp), "$touchDragged0", $rt_wrapFunction3(beb_BulletTestScreen_touchDragged), "$mouseMoved", $rt_wrapFunction2(beb_BulletTestScreen_mouseMoved), "$scrolled", $rt_wrapFunction2(beb_BulletTestScreen_scrolled)],
bg_btGdx, 0, jl_Object, [], 0, 3, 0, bg_btGdx_$callClinit, 0,
jn_ShortBufferOverTypedArray, "ShortBufferOverTypedArray", 30, jn_ShortBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$_init_82", function(var_1, var_2, var_3, var_4, var_5) { jn_ShortBufferOverTypedArray__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$readOnly", $rt_wrapFunction0(jn_ShortBufferOverTypedArray_readOnly), "$capacityImpl", $rt_wrapFunction0(jn_ShortBufferOverTypedArray_capacityImpl), "$putImpl1", $rt_wrapFunction4(jn_ShortBufferOverTypedArray_putImpl), "$getArrayBufferView", $rt_wrapFunction0(jn_ShortBufferOverTypedArray_getArrayBufferView)],
cbgu_Scaling$8, 0, cbgu_Scaling, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Scaling$8__init_)],
cbgu_Scaling$7, 0, cbgu_Scaling, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Scaling$7__init_)],
cbgu_Scaling$6, 0, cbgu_Scaling, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Scaling$6__init_), "$apply5", $rt_wrapFunction4(cbgu_Scaling$6_apply)],
cbgu_Scaling$5, 0, cbgu_Scaling, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Scaling$5__init_)],
cbgg_VertexAttributes, 0, jl_Object, [jl_Iterable, jl_Comparable], 4, 3, 0, 0, ["$_init_146", $rt_wrapFunction1(cbgg_VertexAttributes__init_0), "$findByUsage", $rt_wrapFunction1(cbgg_VertexAttributes_findByUsage), "$size", $rt_wrapFunction0(cbgg_VertexAttributes_size), "$get15", $rt_wrapFunction1(cbgg_VertexAttributes_get), "$equals", $rt_wrapFunction1(cbgg_VertexAttributes_equals), "$getMask", $rt_wrapFunction0(cbgg_VertexAttributes_getMask), "$getMaskWithSizePacked", $rt_wrapFunction0(cbgg_VertexAttributes_getMaskWithSizePacked),
"$getBoneWeights", $rt_wrapFunction0(cbgg_VertexAttributes_getBoneWeights), "$getTextureCoordinates", $rt_wrapFunction0(cbgg_VertexAttributes_getTextureCoordinates)],
cbgu_Scaling$9, 0, cbgu_Scaling, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Scaling$9__init_)],
cbggg_ModelBatch, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, ["$_init_208", $rt_wrapFunction3(cbggg_ModelBatch__init_), "$_init_0", $rt_wrapFunction0(cbggg_ModelBatch__init_0), "$begin4", $rt_wrapFunction1(cbggg_ModelBatch_begin), "$flush", $rt_wrapFunction0(cbggg_ModelBatch_flush), "$end", $rt_wrapFunction0(cbggg_ModelBatch_end), "$render6", $rt_wrapFunction2(cbggg_ModelBatch_render)],
cbgu_Scaling$4, 0, cbgu_Scaling, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Scaling$4__init_)],
cbgu_Scaling$3, 0, cbgu_Scaling, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Scaling$3__init_), "$apply5", $rt_wrapFunction4(cbgu_Scaling$3_apply)],
cbgu_Scaling$2, 0, cbgu_Scaling, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Scaling$2__init_)],
cbgu_Scaling$1, 0, cbgu_Scaling, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_Scaling$1__init_)],
jur_AbstractCharClass$LazyASCII, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyASCII__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyASCII_computeValue)],
cbggg_GlyphLayout, "GlyphLayout", 20, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, cbggg_GlyphLayout_$callClinit, ["$_init_0", $rt_wrapFunction0(cbggg_GlyphLayout__init_), "$setText", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cbggg_GlyphLayout_setText(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$reset2", $rt_wrapFunction0(cbggg_GlyphLayout_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout_toString)]]);
$rt_metadata([cbggg_HdpiMode, 0, jl_Enum, [], 12, 3, 0, cbggg_HdpiMode_$callClinit, 0,
cbgggm_Node, "Node", 26, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggm_Node__init_0), "$calculateLocalTransform", $rt_wrapFunction0(cbgggm_Node_calculateLocalTransform), "$calculateWorldTransform", $rt_wrapFunction0(cbgggm_Node_calculateWorldTransform), "$calculateTransforms0", $rt_wrapFunction1(cbgggm_Node_calculateTransforms), "$calculateBoneTransforms", $rt_wrapFunction1(cbgggm_Node_calculateBoneTransforms), "$detach", $rt_wrapFunction0(cbgggm_Node_detach), "$getChildCount", $rt_wrapFunction0(cbgggm_Node_getChildCount),
"$getChild", $rt_wrapFunction1(cbgggm_Node_getChild), "$addChild", $rt_wrapFunction1(cbgggm_Node_addChild), "$insertChild", $rt_wrapFunction2(cbgggm_Node_insertChild), "$removeChild", $rt_wrapFunction1(cbgggm_Node_removeChild), "$getChildren0", $rt_wrapFunction0(cbgggm_Node_getChildren), "$getParent0", $rt_wrapFunction0(cbgggm_Node_getParent), "$copy1", $rt_wrapFunction0(cbgggm_Node_copy), "$set42", $rt_wrapFunction1(cbgggm_Node_set)],
cgxgbta_TeaWebAgent, 0, jl_Object, [], 0, 3, 0, 0, 0,
jur_Quantifier, "Quantifier", 29, jur_SpecialToken, [jl_Cloneable], 0, 0, 0, 0, ["$_init_37", $rt_wrapFunction2(jur_Quantifier__init_), "$min1", $rt_wrapFunction0(jur_Quantifier_min), "$max1", $rt_wrapFunction0(jur_Quantifier_max), "$toString", $rt_wrapFunction0(jur_Quantifier_toString)],
cbggg_GlyphLayout$_clinit_$lambda$_17_0, "GlyphLayout$<clinit>$lambda$_17_0", 20, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_GlyphLayout$_clinit_$lambda$_17_0__init_), "$get3", $rt_wrapFunction0(cbggg_GlyphLayout$_clinit_$lambda$_17_0_get0), "$get28", $rt_wrapFunction0(cbggg_GlyphLayout$_clinit_$lambda$_17_0_get)],
jur_AbstractCharClass$LazyJavaUpperCase$1, "AbstractCharClass$LazyJavaUpperCase$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_224", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUpperCase$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaUpperCase$1_contains)],
otpp_ResourceAccessor, 0, jl_Object, [], 4, 0, 0, 0, 0,
cgxgbta_QueueAsset, "QueueAsset", 6, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbta_QueueAsset__init_)],
cgxgbt_TeaApplication, "TeaApplication", 5, jl_Object, [cbg_Application], 0, 3, 0, cgxgbt_TeaApplication_$callClinit, ["$_init_159", $rt_wrapFunction2(cgxgbt_TeaApplication__init_0), "$_init_209", $rt_wrapFunction3(cgxgbt_TeaApplication__init_), "$createDefaultPreloadAppListener", $rt_wrapFunction0(cgxgbt_TeaApplication_createDefaultPreloadAppListener), "$init0", $rt_wrapFunction0(cgxgbt_TeaApplication_init), "$getConfig", $rt_wrapFunction0(cgxgbt_TeaApplication_getConfig), "$getApplicationListener", $rt_wrapFunction0(cgxgbt_TeaApplication_getApplicationListener),
"$log", $rt_wrapFunction2(cgxgbt_TeaApplication_log), "$error", $rt_wrapFunction2(cgxgbt_TeaApplication_error), "$getApplicationLogger", $rt_wrapFunction0(cgxgbt_TeaApplication_getApplicationLogger), "$getType1", $rt_wrapFunction0(cgxgbt_TeaApplication_getType), "$postRunnable", $rt_wrapFunction1(cgxgbt_TeaApplication_postRunnable), "$addLifecycleListener", $rt_wrapFunction1(cgxgbt_TeaApplication_addLifecycleListener), "$setPreloadReady", $rt_wrapFunction0(cgxgbt_TeaApplication_setPreloadReady), "$addInitQueue",
$rt_wrapFunction0(cgxgbt_TeaApplication_addInitQueue), "$subtractInitQueue", $rt_wrapFunction0(cgxgbt_TeaApplication_subtractInitQueue), "$createGraphics", $rt_wrapFunction1(cgxgbt_TeaApplication_createGraphics)],
jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1, "AbstractCharClass$LazyJavaIdentifierIgnorable$1", 29, jur_AbstractCharClass, [], 0, 0, 0, 0, ["$_init_157", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1__init_), "$contains", $rt_wrapFunction1(jur_AbstractCharClass$LazyJavaIdentifierIgnorable$1_contains)],
otcir_FieldInfo, 0, jl_Object, [], 0, 3, 0, 0, 0,
bi_IDLEnum, 0, jl_Object, [], 3, 3, 0, 0, ["$or0", $rt_wrapFunction1(bi_IDLEnum_or)],
b_DebugDrawModes, "DebugDrawModes", 42, jl_Enum, [bi_IDLEnum], 12, 3, 0, b_DebugDrawModes_$callClinit, ["$or0", $rt_wrapFunction1(bi_IDLEnum_or), "$getValue0", $rt_wrapFunction0(b_DebugDrawModes_getValue), "$setValue1", $rt_wrapFunction1(b_DebugDrawModes_setValue), "$getCustom0", $rt_wrapFunction0(b_DebugDrawModes_getCustom), "$getCustom", $rt_wrapFunction0(b_DebugDrawModes_getCustom0), "$setValue0", $rt_wrapFunction1(b_DebugDrawModes_setValue0)],
jur_ReluctantQuantifierSet, "ReluctantQuantifierSet", 29, jur_LeafQuantifierSet, [], 0, 0, 0, 0, ["$_init_67", $rt_wrapFunction3(jur_ReluctantQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_ReluctantQuantifierSet_matches)],
cbgggm_Animation, "Animation", 26, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggm_Animation__init_)],
cbggg_BitmapFontCache$addText$lambda$_31_0, "BitmapFontCache$addText$lambda$_31_0", 20, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_BitmapFontCache$addText$lambda$_31_0__init_), "$get3", $rt_wrapFunction0(cbggg_BitmapFontCache$addText$lambda$_31_0_get0), "$get29", $rt_wrapFunction0(cbggg_BitmapFontCache$addText$lambda$_31_0_get)],
cbgg_Mesh, "Mesh", 18, jl_Object, [cbgu_Disposable], 0, 3, 0, cbgg_Mesh_$callClinit, ["$_init_170", $rt_wrapFunction4(cbgg_Mesh__init_2), "$_init_147", $rt_wrapFunction4(cbgg_Mesh__init_1), "$_init_87", function(var_1, var_2, var_3, var_4, var_5) { cbgg_Mesh__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$_init_214", function(var_1, var_2, var_3, var_4, var_5) { cbgg_Mesh__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$setVertices", $rt_wrapFunction3(cbgg_Mesh_setVertices), "$setIndices", $rt_wrapFunction1(cbgg_Mesh_setIndices),
"$setIndices0", $rt_wrapFunction3(cbgg_Mesh_setIndices0), "$getNumIndices", $rt_wrapFunction0(cbgg_Mesh_getNumIndices), "$getNumVertices", $rt_wrapFunction0(cbgg_Mesh_getNumVertices), "$getMaxVertices", $rt_wrapFunction0(cbgg_Mesh_getMaxVertices), "$getMaxIndices", $rt_wrapFunction0(cbgg_Mesh_getMaxIndices), "$getIndexData", $rt_wrapFunction0(cbgg_Mesh_getIndexData), "$bind3", $rt_wrapFunction1(cbgg_Mesh_bind), "$bind0", $rt_wrapFunction3(cbgg_Mesh_bind0), "$unbind2", $rt_wrapFunction1(cbgg_Mesh_unbind0), "$unbind0",
$rt_wrapFunction3(cbgg_Mesh_unbind), "$render5", $rt_wrapFunction2(cbgg_Mesh_render0), "$render0", $rt_wrapFunction4(cbgg_Mesh_render), "$render", function(var_1, var_2, var_3, var_4, var_5) { cbgg_Mesh_render1(this, var_1, var_2, var_3, var_4, var_5); }, "$dispose", $rt_wrapFunction0(cbgg_Mesh_dispose), "$getVertexAttribute", $rt_wrapFunction1(cbgg_Mesh_getVertexAttribute), "$getVertexAttributes", $rt_wrapFunction0(cbgg_Mesh_getVertexAttributes), "$getInstancedAttributes", $rt_wrapFunction0(cbgg_Mesh_getInstancedAttributes),
"$getIndicesBuffer", $rt_wrapFunction1(cbgg_Mesh_getIndicesBuffer)],
cbgu_ObjectSet, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, 0,
jur_EOISet, "EOISet", 29, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_EOISet__init_), "$matches", $rt_wrapFunction3(jur_EOISet_matches), "$hasConsumed", $rt_wrapFunction1(jur_EOISet_hasConsumed), "$getName", $rt_wrapFunction0(jur_EOISet_getName)],
cbgu_ObjectIntMap, 0, jl_Object, [jl_Iterable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_ObjectIntMap__init_1), "$_init_110", $rt_wrapFunction2(cbgu_ObjectIntMap__init_0), "$place0", $rt_wrapFunction1(cbgu_ObjectIntMap_place), "$locateKey0", $rt_wrapFunction1(cbgu_ObjectIntMap_locateKey), "$put11", $rt_wrapFunction2(cbgu_ObjectIntMap_put), "$get26", $rt_wrapFunction2(cbgu_ObjectIntMap_get), "$resize0", $rt_wrapFunction1(cbgu_ObjectIntMap_resize)],
cgxgbtf_FileData, "FileData", 7, jl_Object, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(cgxgbtf_FileData__init_0), "$_init_119", $rt_wrapFunction2(cgxgbtf_FileData__init_1), "$_init_216", $rt_wrapFunction3(cgxgbtf_FileData__init_), "$getBytes0", $rt_wrapFunction0(cgxgbtf_FileData_getBytes), "$isDirectory", $rt_wrapFunction0(cgxgbtf_FileData_isDirectory), "$getType0", $rt_wrapFunction0(cgxgbtf_FileData_getType), "$getBytesSize", $rt_wrapFunction0(cgxgbtf_FileData_getBytesSize)],
cbgm_Plane, 0, jl_Object, [ji_Serializable], 0, 3, 0, 0, ["$_init_217", $rt_wrapFunction2(cbgm_Plane__init_), "$set44", $rt_wrapFunction3(cbgm_Plane_set)],
cbgggs_DefaultShader$Config, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Config__init_)],
cbgm_Frustum, 0, jl_Object, [], 0, 3, 0, cbgm_Frustum_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgm_Frustum__init_), "$update2", $rt_wrapFunction1(cbgm_Frustum_update)],
cbgss_Stage$cancelTouchFocus$lambda$_21_0, "Stage$cancelTouchFocus$lambda$_21_0", 14, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_Stage$cancelTouchFocus$lambda$_21_0__init_), "$get3", $rt_wrapFunction0(cbgss_Stage$cancelTouchFocus$lambda$_21_0_get0), "$get6", $rt_wrapFunction0(cbgss_Stage$cancelTouchFocus$lambda$_21_0_get)],
cbgmc_Ray, 0, jl_Object, [ji_Serializable], 0, 3, 0, cbgmc_Ray_$callClinit, ["$_init_135", $rt_wrapFunction2(cbgmc_Ray__init_)],
cgxgbt_TeaInput, 0, cbg_AbstractInput, [otjde_EventListener], 0, 3, 0, 0, ["$_init_211", $rt_wrapFunction2(cgxgbt_TeaInput__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbt_TeaInput_handleEvent), "$reset2", $rt_wrapFunction0(cgxgbt_TeaInput_reset), "$setDelta", $rt_wrapFunction3(cgxgbt_TeaInput_setDelta), "$getRelativeX", $rt_wrapFunction2(cgxgbt_TeaInput_getRelativeX), "$getRelativeY", $rt_wrapFunction2(cgxgbt_TeaInput_getRelativeY), "$getRelativeX0", $rt_wrapFunction2(cgxgbt_TeaInput_getRelativeX0), "$getRelativeY0",
$rt_wrapFunction2(cgxgbt_TeaInput_getRelativeY1), "$getX0", $rt_wrapFunction0(cgxgbt_TeaInput_getX), "$getY0", $rt_wrapFunction0(cgxgbt_TeaInput_getY), "$isTouched", $rt_wrapFunction1(cgxgbt_TeaInput_isTouched), "$getCurrentEventTime", $rt_wrapFunction0(cgxgbt_TeaInput_getCurrentEventTime), "$setInputProcessor", $rt_wrapFunction1(cgxgbt_TeaInput_setInputProcessor), "$isCursorCatched", $rt_wrapFunction0(cgxgbt_TeaInput_isCursorCatched)],
cbgggus_BoxShapeBuilder, 0, cbgggus_BaseShapeBuilder, [], 0, 3, 0, 0, 0,
jnc_BufferUnderflowException, "BufferUnderflowException", 31, jl_RuntimeException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jnc_BufferUnderflowException__init_)],
cbgss_Stage$setKeyboardFocus$lambda$_35_0, "Stage$setKeyboardFocus$lambda$_35_0", 14, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_Stage$setKeyboardFocus$lambda$_35_0__init_), "$get3", $rt_wrapFunction0(cbgss_Stage$setKeyboardFocus$lambda$_35_0_get0), "$get20", $rt_wrapFunction0(cbgss_Stage$setKeyboardFocus$lambda$_35_0_get)],
cbgssu_Table$5, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Table$5__init_), "$get0", $rt_wrapFunction1(cbgssu_Table$5_get)],
cbgssu_Table$4, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Table$4__init_), "$get0", $rt_wrapFunction1(cbgssu_Table$4_get)],
otcic_JSStderrPrintStream, 0, otcic_JsConsolePrintStream, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otcic_JSStderrPrintStream__init_), "$print", $rt_wrapFunction1(otcic_JSStderrPrintStream_print)],
cbgssu_Table$3, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Table$3__init_), "$get0", $rt_wrapFunction1(cbgssu_Table$3_get)],
cbgssu_Table$2, 0, cbgssu_Value, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Table$2__init_), "$get0", $rt_wrapFunction1(cbgssu_Table$2_get)],
cbgssu_Table$1, 0, cbgu_Pool, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgssu_Table$1__init_), "$newObject1", $rt_wrapFunction0(cbgssu_Table$1_newObject0), "$newObject", $rt_wrapFunction0(cbgssu_Table$1_newObject)],
cbgggu_ModelBuilder, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggu_ModelBuilder__init_), "$begin", $rt_wrapFunction0(cbgggu_ModelBuilder_begin), "$end4", $rt_wrapFunction0(cbgggu_ModelBuilder_end), "$node", $rt_wrapFunction1(cbgggu_ModelBuilder_node0), "$node0", $rt_wrapFunction0(cbgggu_ModelBuilder_node), "$part0", $rt_wrapFunction2(cbgggu_ModelBuilder_part1), "$part2", $rt_wrapFunction4(cbgggu_ModelBuilder_part), "$part3", $rt_wrapFunction4(cbgggu_ModelBuilder_part0), "$createBox", function(var_1,
var_2, var_3, var_4, var_5) { return cbgggu_ModelBuilder_createBox(this, var_1, var_2, var_3, var_4, var_5); }, "$createBox1", function(var_1, var_2, var_3, var_4, var_5, var_6) { return cbgggu_ModelBuilder_createBox0(this, var_1, var_2, var_3, var_4, var_5, var_6); }],
oti_AsyncCallback, 0, jl_Object, [], 3, 3, 0, 0, 0,
otja_XMLHttpRequest, 0, jl_Object, [otj_JSObject, otjde_EventTarget], 0, 3, 0, 0, 0,
cbgggu_CameraInputController, "CameraInputController", 24, cbgi_GestureDetector, [], 0, 3, 0, 0, ["$_init_220", $rt_wrapFunction2(cbgggu_CameraInputController__init_), "$_init_100", $rt_wrapFunction1(cbgggu_CameraInputController__init_0), "$touchDown0", $rt_wrapFunction4(cbgggu_CameraInputController_touchDown), "$touchUp0", $rt_wrapFunction4(cbgggu_CameraInputController_touchUp), "$process", $rt_wrapFunction3(cbgggu_CameraInputController_process), "$touchDragged0", $rt_wrapFunction3(cbgggu_CameraInputController_touchDragged),
"$scrolled", $rt_wrapFunction2(cbgggu_CameraInputController_scrolled), "$zoom0", $rt_wrapFunction1(cbgggu_CameraInputController_zoom), "$pinchZoom", $rt_wrapFunction1(cbgggu_CameraInputController_pinchZoom), "$keyDown", $rt_wrapFunction1(cbgggu_CameraInputController_keyDown), "$keyUp", $rt_wrapFunction1(cbgggu_CameraInputController_keyUp)],
jl_System, 0, jl_Object, [], 4, 3, 0, 0, 0,
jn_FloatBufferOverTypedArray, "FloatBufferOverTypedArray", 30, jn_FloatBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$_init_161", function(var_1, var_2, var_3, var_4, var_5) { jn_FloatBufferOverTypedArray__init_0(this, var_1, var_2, var_3, var_4, var_5); }, "$readOnly", $rt_wrapFunction0(jn_FloatBufferOverTypedArray_readOnly), "$getElement0", $rt_wrapFunction1(jn_FloatBufferOverTypedArray_getElement), "$putElement0", $rt_wrapFunction2(jn_FloatBufferOverTypedArray_putElement), "$capacityImpl", $rt_wrapFunction0(jn_FloatBufferOverTypedArray_capacityImpl),
"$putImpl4", $rt_wrapFunction4(jn_FloatBufferOverTypedArray_putImpl), "$getArrayBufferView", $rt_wrapFunction0(jn_FloatBufferOverTypedArray_getArrayBufferView)],
jur_AbstractCharClass$LazyXDigit, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyXDigit__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyXDigit_computeValue)],
cbgi_GestureDetector$VelocityTracker, 0, jl_Object, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgi_GestureDetector$VelocityTracker__init_), "$start", $rt_wrapFunction3(cbgi_GestureDetector$VelocityTracker_start), "$update", $rt_wrapFunction3(cbgi_GestureDetector$VelocityTracker_update), "$getVelocityX", $rt_wrapFunction0(cbgi_GestureDetector$VelocityTracker_getVelocityX), "$getVelocityY", $rt_wrapFunction0(cbgi_GestureDetector$VelocityTracker_getVelocityY)],
cbgi_GestureDetector$1, "GestureDetector$1", 11, cbgu_Timer$Task, [], 0, 0, 0, 0, ["$_init_27", $rt_wrapFunction1(cbgi_GestureDetector$1__init_), "$run", $rt_wrapFunction0(cbgi_GestureDetector$1_run)],
jur_Matcher, 0, jl_Object, [jur_MatchResult], 4, 3, 0, 0, ["$appendReplacement", $rt_wrapFunction2(jur_Matcher_appendReplacement), "$reset4", $rt_wrapFunction0(jur_Matcher_reset), "$appendTail", $rt_wrapFunction1(jur_Matcher_appendTail), "$replaceFirst", $rt_wrapFunction1(jur_Matcher_replaceFirst), "$replaceAll", $rt_wrapFunction1(jur_Matcher_replaceAll), "$group", $rt_wrapFunction1(jur_Matcher_group), "$find1", $rt_wrapFunction1(jur_Matcher_find0), "$find0", $rt_wrapFunction0(jur_Matcher_find), "$start0", $rt_wrapFunction1(jur_Matcher_start0),
"$end0", $rt_wrapFunction1(jur_Matcher_end0), "$start2", $rt_wrapFunction0(jur_Matcher_start), "$end1", $rt_wrapFunction0(jur_Matcher_end), "$hasTransparentBounds", $rt_wrapFunction0(jur_Matcher_hasTransparentBounds), "$_init_179", $rt_wrapFunction2(jur_Matcher__init_)],
bbc_btPolyhedralConvexShape, 0, bbc_btConvexInternalShape, [], 0, 3, 0, bbc_btPolyhedralConvexShape_$callClinit, ["$_init_63", $rt_wrapFunction2(bbc_btPolyhedralConvexShape__init_)],
jur_DotAllSet, "DotAllSet", 29, jur_JointSet, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_DotAllSet__init_), "$matches", $rt_wrapFunction3(jur_DotAllSet_matches), "$getName", $rt_wrapFunction0(jur_DotAllSet_getName), "$setNext", $rt_wrapFunction1(jur_DotAllSet_setNext), "$getType0", $rt_wrapFunction0(jur_DotAllSet_getType), "$hasConsumed", $rt_wrapFunction1(jur_DotAllSet_hasConsumed)],
bbc_btBoxShape, 0, bbc_btPolyhedralConvexShape, [], 0, 3, 0, bbc_btBoxShape_$callClinit, ["$_init_205", $rt_wrapFunction1(bbc_btBoxShape__init_), "$_init_63", $rt_wrapFunction2(bbc_btBoxShape__init_0)],
jn_FloatBufferOverDataView, "FloatBufferOverDataView", 30, jn_FloatBufferImpl, [jn_ArrayBufferViewProvider], 0, 0, 0, 0, ["$_init_160", function(var_1, var_2, var_3, var_4, var_5) { jn_FloatBufferOverDataView__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$readOnly", $rt_wrapFunction0(jn_FloatBufferOverDataView_readOnly), "$getElement0", $rt_wrapFunction1(jn_FloatBufferOverDataView_getElement), "$putElement0", $rt_wrapFunction2(jn_FloatBufferOverDataView_putElement), "$putImpl4", $rt_wrapFunction4(jn_FloatBufferOverDataView_putImpl),
"$capacityImpl", $rt_wrapFunction0(jn_FloatBufferOverDataView_capacityImpl), "$getArrayBufferView", $rt_wrapFunction0(jn_FloatBufferOverDataView_getArrayBufferView)]]);
$rt_metadata([cbgss_Actor$clipBegin$lambda$_93_0, "Actor$clipBegin$lambda$_93_0", 14, jl_Object, [cbgu_DefaultPool$PoolSupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_Actor$clipBegin$lambda$_93_0__init_), "$get3", $rt_wrapFunction0(cbgss_Actor$clipBegin$lambda$_93_0_get0), "$get30", $rt_wrapFunction0(cbgss_Actor$clipBegin$lambda$_93_0_get)],
jur_AbstractCharClass$LazyJavaUpperCase, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUpperCase__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaUpperCase_computeValue)],
js_ScriptException, "ScriptException", 36, jl_Exception, [], 0, 3, 0, 0, ["$_init_", $rt_wrapFunction1(js_ScriptException__init_), "$getMessage", $rt_wrapFunction0(js_ScriptException_getMessage)],
jur_HangulDecomposedCharSet, "HangulDecomposedCharSet", 29, jur_JointSet, [], 0, 0, 0, 0, ["$_init_181", $rt_wrapFunction2(jur_HangulDecomposedCharSet__init_), "$setNext", $rt_wrapFunction1(jur_HangulDecomposedCharSet_setNext), "$getName", $rt_wrapFunction0(jur_HangulDecomposedCharSet_getName), "$matches", $rt_wrapFunction3(jur_HangulDecomposedCharSet_matches), "$first", $rt_wrapFunction1(jur_HangulDecomposedCharSet_first), "$hasConsumed", $rt_wrapFunction1(jur_HangulDecomposedCharSet_hasConsumed)],
cbggg_GlyphLayout$GlyphRun, "GlyphLayout$GlyphRun", 20, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun__init_), "$appendRun", $rt_wrapFunction1(cbggg_GlyphLayout$GlyphRun_appendRun), "$reset2", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_reset), "$toString", $rt_wrapFunction0(cbggg_GlyphLayout$GlyphRun_toString)],
cbggg_Model, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggg_Model__init_), "$manageDisposable", $rt_wrapFunction1(cbggg_Model_manageDisposable)],
jur_WordBoundary, "WordBoundary", 29, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_173", $rt_wrapFunction1(jur_WordBoundary__init_), "$matches", $rt_wrapFunction3(jur_WordBoundary_matches), "$hasConsumed", $rt_wrapFunction1(jur_WordBoundary_hasConsumed), "$getName", $rt_wrapFunction0(jur_WordBoundary_getName)],
cbggga_SpotLightsAttribute, 0, cbggg_Attribute, [], 0, 3, 0, cbggga_SpotLightsAttribute_$callClinit, 0,
cbgggus_BaseShapeBuilder$2, 0, cbgu_FlushablePool, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggus_BaseShapeBuilder$2__init_)],
cbgggus_BaseShapeBuilder$1, 0, cbgu_FlushablePool, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggus_BaseShapeBuilder$1__init_), "$newObject2", $rt_wrapFunction0(cbgggus_BaseShapeBuilder$1_newObject0), "$newObject", $rt_wrapFunction0(cbgggus_BaseShapeBuilder$1_newObject)],
cbgu_BufferUtils, 0, jl_Object, [], 4, 3, 0, cbgu_BufferUtils_$callClinit, 0,
bbd_btRigidBody, "btRigidBody", 46, bbc_btCollisionObject, [], 0, 3, [0,0,0], bbd_btRigidBody_$callClinit, ["$_init_206", $rt_wrapFunction4(bbd_btRigidBody__init_0), "$_init_63", $rt_wrapFunction2(bbd_btRigidBody__init_), "$deleteNative", $rt_wrapFunction0(bbd_btRigidBody_deleteNative)],
cbg_ApplicationAdapter, 0, jl_Object, [cbg_ApplicationListener], 1, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbg_ApplicationAdapter__init_), "$pause", $rt_wrapFunction0(cbg_ApplicationAdapter_pause), "$resume", $rt_wrapFunction0(cbg_ApplicationAdapter_resume)],
cgxgbt_TeaPreloadApplicationListener, 0, cbg_ApplicationAdapter, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbt_TeaPreloadApplicationListener__init_), "$create", $rt_wrapFunction0(cgxgbt_TeaPreloadApplicationListener_create), "$setupPreloadAssets", $rt_wrapFunction0(cgxgbt_TeaPreloadApplicationListener_setupPreloadAssets), "$addQueue", $rt_wrapFunction0(cgxgbt_TeaPreloadApplicationListener_addQueue), "$subtractQueue", $rt_wrapFunction0(cgxgbt_TeaPreloadApplicationListener_subtractQueue), "$createTexture0",
$rt_wrapFunction1(cgxgbt_TeaPreloadApplicationListener_createTexture), "$createTexture", $rt_wrapFunction1(cgxgbt_TeaPreloadApplicationListener_createTexture0), "$createStage", $rt_wrapFunction0(cgxgbt_TeaPreloadApplicationListener_createStage), "$clearScreen", $rt_wrapFunction0(cgxgbt_TeaPreloadApplicationListener_clearScreen), "$render3", $rt_wrapFunction0(cgxgbt_TeaPreloadApplicationListener_render), "$resize1", $rt_wrapFunction2(cgxgbt_TeaPreloadApplicationListener_resize), "$dispose", $rt_wrapFunction0(cgxgbt_TeaPreloadApplicationListener_dispose)],
cbgssu_Cell, "Cell", 15, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, cbgssu_Cell_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgssu_Cell__init_), "$setTable", $rt_wrapFunction1(cbgssu_Cell_setTable), "$width0", $rt_wrapFunction1(cbgssu_Cell_width), "$width", $rt_wrapFunction1(cbgssu_Cell_width0), "$height0", $rt_wrapFunction1(cbgssu_Cell_height), "$height", $rt_wrapFunction1(cbgssu_Cell_height0), "$padBottom", $rt_wrapFunction1(cbgssu_Cell_padBottom), "$row", $rt_wrapFunction0(cbgssu_Cell_row), "$clear", $rt_wrapFunction0(cbgssu_Cell_clear),
"$reset2", $rt_wrapFunction0(cbgssu_Cell_reset), "$set3", $rt_wrapFunction1(cbgssu_Cell_set), "$merge", $rt_wrapFunction1(cbgssu_Cell_merge), "$toString", $rt_wrapFunction0(cbgssu_Cell_toString)],
jur_IntHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
cbgss_Stage, 0, cbg_InputAdapter, [cbgu_Disposable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgss_Stage__init_0), "$_init_229", $rt_wrapFunction2(cbgss_Stage__init_), "$draw8", $rt_wrapFunction0(cbgss_Stage_draw), "$act1", $rt_wrapFunction0(cbgss_Stage_act), "$act0", $rt_wrapFunction1(cbgss_Stage_act0), "$cancelTouchFocus0", $rt_wrapFunction1(cbgss_Stage_cancelTouchFocus0), "$cancelTouchFocus", $rt_wrapFunction0(cbgss_Stage_cancelTouchFocus), "$cancelTouchFocusExcept", $rt_wrapFunction2(cbgss_Stage_cancelTouchFocusExcept),
"$addActor", $rt_wrapFunction1(cbgss_Stage_addActor), "$actorRemoved", $rt_wrapFunction1(cbgss_Stage_actorRemoved), "$clear", $rt_wrapFunction0(cbgss_Stage_clear), "$unfocusAll", $rt_wrapFunction0(cbgss_Stage_unfocusAll), "$unfocus", $rt_wrapFunction1(cbgss_Stage_unfocus), "$setKeyboardFocus", $rt_wrapFunction1(cbgss_Stage_setKeyboardFocus), "$setScrollFocus", $rt_wrapFunction1(cbgss_Stage_setScrollFocus), "$getViewport", $rt_wrapFunction0(cbgss_Stage_getViewport), "$setViewport", $rt_wrapFunction1(cbgss_Stage_setViewport),
"$getWidth", $rt_wrapFunction0(cbgss_Stage_getWidth), "$getHeight", $rt_wrapFunction0(cbgss_Stage_getHeight), "$getRoot", $rt_wrapFunction0(cbgss_Stage_getRoot), "$hit", $rt_wrapFunction3(cbgss_Stage_hit), "$screenToStageCoordinates", $rt_wrapFunction1(cbgss_Stage_screenToStageCoordinates), "$calculateScissors", $rt_wrapFunction2(cbgss_Stage_calculateScissors), "$getActionsRequestRendering", $rt_wrapFunction0(cbgss_Stage_getActionsRequestRendering), "$getDebugColor", $rt_wrapFunction0(cbgss_Stage_getDebugColor),
"$dispose", $rt_wrapFunction0(cbgss_Stage_dispose)],
jur_ReluctantAltQuantifierSet, "ReluctantAltQuantifierSet", 29, jur_AltQuantifierSet, [], 0, 0, 0, 0, ["$_init_67", $rt_wrapFunction3(jur_ReluctantAltQuantifierSet__init_), "$matches", $rt_wrapFunction3(jur_ReluctantAltQuantifierSet_matches)],
jur_AbstractCharClass$LazyJavaWhitespace, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaWhitespace__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaWhitespace_computeValue)],
jur_Matcher$1, "Matcher$1", 29, jl_Object, [], 0, 0, 0, 0, ["$_init_222", $rt_wrapFunction2(jur_Matcher$1__init_), "$toString", $rt_wrapFunction0(jur_Matcher$1_toString)],
cbggg_Gdx2DPixmapNative, 0, jl_Object, [cbgu_Disposable], 0, 3, 0, 0, ["$_init_132", $rt_wrapFunction4(cbggg_Gdx2DPixmapNative__init_), "$_init_133", $rt_wrapFunction3(cbggg_Gdx2DPixmapNative__init_0), "$dispose", $rt_wrapFunction0(cbggg_Gdx2DPixmapNative_dispose), "$clear3", $rt_wrapFunction1(cbggg_Gdx2DPixmapNative_clear), "$drawPixmap1", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { cbggg_Gdx2DPixmapNative_drawPixmap0(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$drawPixmap2",
function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9) { cbggg_Gdx2DPixmapNative_drawPixmap(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9); }, "$setBlend", $rt_wrapFunction1(cbggg_Gdx2DPixmapNative_setBlend), "$getBuffer", $rt_wrapFunction0(cbggg_Gdx2DPixmapNative_getBuffer), "$getHeapData", $rt_wrapFunction1(cbggg_Gdx2DPixmapNative_getHeapData)],
jl_NumberFormatException, "NumberFormatException", 34, jl_IllegalArgumentException, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(jl_NumberFormatException__init_2), "$_init_", $rt_wrapFunction1(jl_NumberFormatException__init_0)],
cgxgbt_TeaClipboard, 0, jl_Object, [cbgu_Clipboard], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cgxgbt_TeaClipboard__init_)],
cbgu_Array$ArrayIterator, 0, jl_Object, [ju_Iterator, jl_Iterable], 0, 3, 0, 0, ["$_init_13", $rt_wrapFunction2(cbgu_Array$ArrayIterator__init_0), "$hasNext", $rt_wrapFunction0(cbgu_Array$ArrayIterator_hasNext), "$next", $rt_wrapFunction0(cbgu_Array$ArrayIterator_next)],
jur_IntArrHash, 0, jl_Object, [], 0, 0, 0, 0, 0,
jur_AbstractCharClass$LazyJavaMirrored, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaMirrored__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaMirrored_computeValue)],
jur_AbstractCharClass$LazyJavaISOControl, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaISOControl__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazyJavaISOControl_computeValue)],
cbgggu_MeshPartBuilder$VertexInfo, 0, jl_Object, [cbgu_Pool$Poolable], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggu_MeshPartBuilder$VertexInfo__init_0), "$reset2", $rt_wrapFunction0(cbgggu_MeshPartBuilder$VertexInfo_reset), "$set30", $rt_wrapFunction4(cbgggu_MeshPartBuilder$VertexInfo_set), "$setUV", $rt_wrapFunction2(cbgggu_MeshPartBuilder$VertexInfo_setUV)],
cbgggm_NodeKeyframe, "NodeKeyframe", 26, jl_Object, [], 0, 3, 0, 0, ["$_init_91", $rt_wrapFunction2(cbgggm_NodeKeyframe__init_0)],
jur_HighSurrogateCharSet, "HighSurrogateCharSet", 29, jur_JointSet, [], 0, 0, 0, 0, ["$_init_182", $rt_wrapFunction1(jur_HighSurrogateCharSet__init_), "$setNext", $rt_wrapFunction1(jur_HighSurrogateCharSet_setNext), "$matches", $rt_wrapFunction3(jur_HighSurrogateCharSet_matches), "$find", $rt_wrapFunction3(jur_HighSurrogateCharSet_find), "$findBack", $rt_wrapFunction4(jur_HighSurrogateCharSet_findBack), "$getName", $rt_wrapFunction0(jur_HighSurrogateCharSet_getName), "$first", $rt_wrapFunction1(jur_HighSurrogateCharSet_first),
"$hasConsumed", $rt_wrapFunction1(jur_HighSurrogateCharSet_hasConsumed)],
cbgssu_Table$DebugRect, "Table$DebugRect", 15, cbgm_Rectangle, [], 0, 3, 0, cbgssu_Table$DebugRect_$callClinit, ["$_init_0", $rt_wrapFunction0(cbgssu_Table$DebugRect__init_)],
cgxgbta_TeaBlob, 0, jl_Object, [], 4, 3, 0, 0, ["$_init_144", $rt_wrapFunction2(cgxgbta_TeaBlob__init_), "$getData", $rt_wrapFunction0(cgxgbta_TeaBlob_getData)],
cbgm_Interpolation$ElasticIn, 0, cbgm_Interpolation$Elastic, [], 0, 3, 0, 0, ["$_init_9", $rt_wrapFunction4(cbgm_Interpolation$ElasticIn__init_)],
otpp_AsyncCallbackWrapper, 0, jl_Object, [oti_AsyncCallback], 0, 0, 0, 0, ["$_init_234", $rt_wrapFunction1(otpp_AsyncCallbackWrapper__init_), "$complete", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_complete), "$error0", $rt_wrapFunction1(otpp_AsyncCallbackWrapper_error)],
cbguv_ScalingViewport, 0, cbguv_Viewport, [], 0, 3, 0, 0, ["$_init_228", $rt_wrapFunction4(cbguv_ScalingViewport__init_), "$update4", $rt_wrapFunction3(cbguv_ScalingViewport_update)],
cbgu_IntArray, "IntArray", 12, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_IntArray__init_2), "$_init_3", $rt_wrapFunction1(cbgu_IntArray__init_3), "$_init_11", $rt_wrapFunction2(cbgu_IntArray__init_0), "$add2", $rt_wrapFunction1(cbgu_IntArray_add), "$add14", $rt_wrapFunction2(cbgu_IntArray_add0), "$get1", $rt_wrapFunction1(cbgu_IntArray_get), "$set6", $rt_wrapFunction2(cbgu_IntArray_set), "$insert", $rt_wrapFunction2(cbgu_IntArray_insert), "$pop", $rt_wrapFunction0(cbgu_IntArray_pop), "$peek0",
$rt_wrapFunction0(cbgu_IntArray_peek), "$clear", $rt_wrapFunction0(cbgu_IntArray_clear), "$shrink", $rt_wrapFunction0(cbgu_IntArray_shrink), "$ensureCapacity0", $rt_wrapFunction1(cbgu_IntArray_ensureCapacity), "$resize4", $rt_wrapFunction1(cbgu_IntArray_resize), "$hashCode0", $rt_wrapFunction0(cbgu_IntArray_hashCode), "$equals", $rt_wrapFunction1(cbgu_IntArray_equals), "$toString", $rt_wrapFunction0(cbgu_IntArray_toString)],
cbgu_OrderedMap, 0, cbgu_ObjectMap, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_OrderedMap__init_), "$put", $rt_wrapFunction2(cbgu_OrderedMap_put), "$remove2", $rt_wrapFunction1(cbgu_OrderedMap_remove)],
cbgggs_DefaultShader, "DefaultShader", 23, cbgggs_BaseShader, [], 0, 3, 0, cbgggs_DefaultShader_$callClinit, ["$_init_169", $rt_wrapFunction2(cbgggs_DefaultShader__init_2), "$_init_235", $rt_wrapFunction3(cbgggs_DefaultShader__init_0), "$_init_236", function(var_1, var_2, var_3, var_4, var_5) { cbgggs_DefaultShader__init_(this, var_1, var_2, var_3, var_4, var_5); }, "$_init_237", $rt_wrapFunction3(cbgggs_DefaultShader__init_1), "$init0", $rt_wrapFunction0(cbgggs_DefaultShader_init), "$canRender", $rt_wrapFunction1(cbgggs_DefaultShader_canRender),
"$equals", $rt_wrapFunction1(cbgggs_DefaultShader_equals0), "$equals4", $rt_wrapFunction1(cbgggs_DefaultShader_equals), "$begin5", $rt_wrapFunction2(cbgggs_DefaultShader_begin), "$render1", $rt_wrapFunction2(cbgggs_DefaultShader_render), "$end", $rt_wrapFunction0(cbgggs_DefaultShader_end), "$bindMaterial", $rt_wrapFunction1(cbgggs_DefaultShader_bindMaterial), "$bindLights", $rt_wrapFunction2(cbgggs_DefaultShader_bindLights)],
cbggge_SpotLight, 0, cbggge_BaseLight, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbggge_SpotLight__init_), "$set49", $rt_wrapFunction1(cbggge_SpotLight_set), "$set51", function(var_1, var_2, var_3, var_4, var_5, var_6) { return cbggge_SpotLight_set0(this, var_1, var_2, var_3, var_4, var_5, var_6); }, "$set46", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9, var_10, var_11, var_12) { return cbggge_SpotLight_set1(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7, var_8, var_9,
var_10, var_11, var_12); }, "$equals6", $rt_wrapFunction1(cbggge_SpotLight_equals)],
cgxgbta_AssetInstance, 0, jl_Object, [], 0, 3, 0, 0, 0,
cgxgbta_AssetDownloadImpl$1, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$_init_138", $rt_wrapFunction2(cgxgbta_AssetDownloadImpl$1__init_), "$onSuccess1", $rt_wrapFunction2(cgxgbta_AssetDownloadImpl$1_onSuccess0), "$onFailure", $rt_wrapFunction1(cgxgbta_AssetDownloadImpl$1_onFailure), "$onProgress", $rt_wrapFunction2(cgxgbta_AssetDownloadImpl$1_onProgress), "$onSuccess", $rt_wrapFunction2(cgxgbta_AssetDownloadImpl$1_onSuccess)],
cgxgbta_AssetDownloadImpl$2, 0, jl_Object, [otjde_EventListener], 0, 0, 0, 0, ["$_init_139", $rt_wrapFunction3(cgxgbta_AssetDownloadImpl$2__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbta_AssetDownloadImpl$2_handleEvent)],
cbgu_ShortArray, 0, jl_Object, [], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgu_ShortArray__init_0), "$_init_11", $rt_wrapFunction2(cbgu_ShortArray__init_), "$add10", $rt_wrapFunction1(cbgu_ShortArray_add), "$clear", $rt_wrapFunction0(cbgu_ShortArray_clear), "$ensureCapacity3", $rt_wrapFunction1(cbgu_ShortArray_ensureCapacity), "$resize5", $rt_wrapFunction1(cbgu_ShortArray_resize)],
cgxgbta_AssetDownloadImpl$3, 0, jl_Object, [], 32, 0, 0, cgxgbta_AssetDownloadImpl$3_$callClinit, 0,
beb_BulletInitScreen$show$lambda$_1_0, 0, jl_Object, [cgxjl_JParserLibraryLoaderListener], 0, 3, 0, 0, ["$_init_55", $rt_wrapFunction1(beb_BulletInitScreen$show$lambda$_1_0__init_), "$onLoad", $rt_wrapFunction2(beb_BulletInitScreen$show$lambda$_1_0_onLoad)],
cbgu_NumberUtils, 0, jl_Object, [], 4, 3, 0, 0, 0,
cbgggm_NodePart$set$lambda$_4_1, 0, jl_Object, [cbgu_ArraySupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggm_NodePart$set$lambda$_4_1__init_), "$get", $rt_wrapFunction1(cbgggm_NodePart$set$lambda$_4_1_get0), "$get33", $rt_wrapFunction1(cbgggm_NodePart$set$lambda$_4_1_get)],
cbgggm_NodePart$set$lambda$_4_0, 0, jl_Object, [cbgu_ArraySupplier], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggm_NodePart$set$lambda$_4_0__init_), "$get", $rt_wrapFunction1(cbgggm_NodePart$set$lambda$_4_0_get0), "$get34", $rt_wrapFunction1(cbgggm_NodePart$set$lambda$_4_0_get)],
jur_UMultiLineEOLSet, "UMultiLineEOLSet", 29, jur_AbstractSet, [], 0, 0, 0, 0, ["$_init_3", $rt_wrapFunction1(jur_UMultiLineEOLSet__init_), "$matches", $rt_wrapFunction3(jur_UMultiLineEOLSet_matches), "$hasConsumed", $rt_wrapFunction1(jur_UMultiLineEOLSet_hasConsumed), "$getName", $rt_wrapFunction0(jur_UMultiLineEOLSet_getName)],
cbggga_TextureAttribute, "TextureAttribute", 25, cbggg_Attribute, [], 0, 3, 0, cbggga_TextureAttribute_$callClinit, ["$_init_99", $rt_wrapFunction1(cbggga_TextureAttribute__init_), "$_init_239", $rt_wrapFunction2(cbggga_TextureAttribute__init_0), "$_init_240", function(var_1, var_2, var_3, var_4, var_5, var_6, var_7) { cbggga_TextureAttribute__init_1(this, var_1, var_2, var_3, var_4, var_5, var_6, var_7); }, "$_init_238", $rt_wrapFunction2(cbggga_TextureAttribute__init_2), "$_init_241", $rt_wrapFunction1(cbggga_TextureAttribute__init_3),
"$copy", $rt_wrapFunction0(cbggga_TextureAttribute_copy), "$hashCode0", $rt_wrapFunction0(cbggga_TextureAttribute_hashCode)]]);
$rt_metadata([cbgggs_DefaultShader$Inputs, 0, jl_Object, [], 0, 3, 0, cbgggs_DefaultShader$Inputs_$callClinit, 0,
cbgggs_DefaultShader$Setters$1, "DefaultShader$Setters$1", 23, cbgggs_BaseShader$GlobalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$1__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$1_set)],
cbgggs_DefaultShader$Setters$3, "DefaultShader$Setters$3", 23, cbgggs_BaseShader$GlobalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$3__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$3_set)],
cbgggs_DefaultShader$Setters$2, "DefaultShader$Setters$2", 23, cbgggs_BaseShader$GlobalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$2__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$2_set)],
cbgggs_DefaultShader$Setters$5, "DefaultShader$Setters$5", 23, cbgggs_BaseShader$GlobalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$5__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$5_set)],
cbgggs_DefaultShader$Setters$4, "DefaultShader$Setters$4", 23, cbgggs_BaseShader$GlobalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$4__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$4_set)],
cbgggs_DefaultShader$Setters$7, "DefaultShader$Setters$7", 23, cbgggs_BaseShader$GlobalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$7__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$7_set)],
cgxgbt_TeaFileHandle$1, 0, jl_Object, [], 32, 0, 0, cgxgbt_TeaFileHandle$1_$callClinit, 0,
cbgggu_DefaultTextureBinder, 0, jl_Object, [cbgggu_TextureBinder], 4, 3, 0, 0, ["$_init_37", $rt_wrapFunction2(cbgggu_DefaultTextureBinder__init_0), "$_init_133", $rt_wrapFunction3(cbgggu_DefaultTextureBinder__init_), "$begin", $rt_wrapFunction0(cbgggu_DefaultTextureBinder_begin), "$end", $rt_wrapFunction0(cbgggu_DefaultTextureBinder_end), "$bind1", $rt_wrapFunction1(cbgggu_DefaultTextureBinder_bind)],
cbgggs_DefaultShader$Setters$6, "DefaultShader$Setters$6", 23, cbgggs_BaseShader$GlobalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$6__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$6_set)],
cbgggs_DefaultShader$Setters$9, "DefaultShader$Setters$9", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$9__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$9_set)],
cbgggs_DefaultShader$Setters$8, "DefaultShader$Setters$8", 23, cbgggs_BaseShader$LocalSetter, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(cbgggs_DefaultShader$Setters$8__init_), "$set18", $rt_wrapFunction4(cbgggs_DefaultShader$Setters$8_set)],
jur_AbstractCharClass$LazySpecialsBlock, 0, jur_AbstractCharClass$LazyCharClass, [], 0, 0, 0, 0, ["$_init_0", $rt_wrapFunction0(jur_AbstractCharClass$LazySpecialsBlock__init_), "$computeValue", $rt_wrapFunction0(jur_AbstractCharClass$LazySpecialsBlock_computeValue)],
cbgss_Stage$TouchFocus, 0, jl_Object, [cbgu_Pool$Poolable], 4, 3, 0, 0, 0,
otji_JSWrapper$Helper$_clinit_$lambda$_3_1, 0, jl_Object, [otji_JSWrapper$Helper$FinalizationRegistryConsumer], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otji_JSWrapper$Helper$_clinit_$lambda$_3_1__init_), "$accept", $rt_wrapFunction1(otji_JSWrapper$Helper$_clinit_$lambda$_3_1_accept)],
cgxgbta_AssetLoadImpl$6, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress), "$_init_21", $rt_wrapFunction4(cgxgbta_AssetLoadImpl$6__init_), "$onSuccess1", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$6_onSuccess0), "$onSuccess", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$6_onSuccess)],
otji_JSWrapper$Helper$_clinit_$lambda$_3_0, 0, jl_Object, [otji_JSWrapper$Helper$FinalizationRegistryConsumer], 0, 3, 0, 0, ["$_init_0", $rt_wrapFunction0(otji_JSWrapper$Helper$_clinit_$lambda$_3_0__init_), "$accept", $rt_wrapFunction1(otji_JSWrapper$Helper$_clinit_$lambda$_3_0_accept)],
cgxgbta_AssetLoadImpl$5, 0, jl_Object, [cgxgbta_AssetLoaderListener], 0, 0, 0, 0, ["$onProgress", $rt_wrapFunction2(cgxgbta_AssetLoaderListener_onProgress), "$_init_20", $rt_wrapFunction3(cgxgbta_AssetLoadImpl$5__init_), "$onSuccess1", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$5_onSuccess0), "$onSuccess", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$5_onSuccess)],
cgxgbta_AssetLoadImpl$4, 0, jl_Object, [otjde_EventListener], 0, 0, 0, 0, ["$_init_22", $rt_wrapFunction3(cgxgbta_AssetLoadImpl$4__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbta_AssetLoadImpl$4_handleEvent)],
cgxgbta_AssetLoadImpl$3, 0, jl_Object, [otjde_EventListener], 0, 0, 0, 0, ["$_init_17", $rt_wrapFunction2(cgxgbta_AssetLoadImpl$3__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbta_AssetLoadImpl$3_handleEvent)],
cgxgbta_AssetLoadImpl$2, 0, jl_Object, [otjde_EventListener], 0, 0, 0, 0, ["$_init_16", $rt_wrapFunction1(cgxgbta_AssetLoadImpl$2__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbta_AssetLoadImpl$2_handleEvent)],
cgxgbta_AssetLoadImpl$1, 0, jl_Object, [otjde_EventListener], 0, 0, 0, 0, ["$_init_16", $rt_wrapFunction1(cgxgbta_AssetLoadImpl$1__init_), "$handleEvent1", $rt_wrapFunction1(cgxgbta_AssetLoadImpl$1_handleEvent)]]);
let $rt_booleanArrayCls = $rt_arraycls($rt_booleancls),
$rt_charArrayCls = $rt_arraycls($rt_charcls),
$rt_byteArrayCls = $rt_arraycls($rt_bytecls),
$rt_shortArrayCls = $rt_arraycls($rt_shortcls),
$rt_intArrayCls = $rt_arraycls($rt_intcls),
$rt_longArrayCls = $rt_arraycls($rt_longcls),
$rt_floatArrayCls = $rt_arraycls($rt_floatcls);
$rt_stringPool(["Can\'t enter monitor from another thread synchronously", "Actor: ", "The event target cannot be null.", "|  ", "actor cannot be null.", "bounces cannot be < 2 or > 5: ", "String is null", "String is empty", "String contains invalid digits: ", "String contains digits out of radix ", ": ", "The value is too big for int type: ", "The value is too big for integer type", "Illegal radix: ", "start + count must be <= size: ", " + ", " <= ", "index can\'t be >= size: ", " >= ", "index can\'t be > size: ",
" > ", "end can\'t be >= size: ", "start can\'t be > end: ", "Array is empty.", "additionalCapacity must be >= 0: ", "newSize must be >= 0: ", "[]", ", ", "begin must be called before end.", "assets/", "scripts/", "\\", "/", "failure", "success", "Android", "Desktop", "HeadlessDesktop", "Applet", "WebGL", "iOS", "CI sequence: ", "listener cannot be null.", "object cannot be null.", "objects cannot be null.", "fSet", "BehindFSet", "JointSet", " ", "^ ", "range:", "\tat ", "Caused by: ", "<GroupQuant>", "Error reading layout file: ",
"Error reading file: ", "FileType \'", "\' Not supported in web backend", "File not found: ", " (", "", "null", "false", "true", "New position ", " is outside of range [0;", "Lower", "Upper", "ASCII", "Alpha", "Digit", "Alnum", "Punct", "Graph", "Print", "Blank", "Cntrl", "XDigit", "javaLowerCase", "javaUpperCase", "javaWhitespace", "javaMirrored", "javaDefined", "javaDigit", "javaIdentifierIgnorable", "javaISOControl", "javaJavaIdentifierPart", "javaJavaIdentifierStart", "javaLetter", "javaLetterOrDigit", "javaSpaceChar",
"javaTitleCase", "javaUnicodeIdentifierPart", "javaUnicodeIdentifierStart", "Space", "w", "W", "s", "S", "d", "D", "BasicLatin", "Latin-1Supplement", "LatinExtended-A", "LatinExtended-B", "IPAExtensions", "SpacingModifierLetters", "CombiningDiacriticalMarks", "Greek", "Cyrillic", "CyrillicSupplement", "Armenian", "Hebrew", "Arabic", "Syriac", "ArabicSupplement", "Thaana", "Devanagari", "Bengali", "Gurmukhi", "Gujarati", "Oriya", "Tamil", "Telugu", "Kannada", "Malayalam", "Sinhala", "Thai", "Lao", "Tibetan",
"Myanmar", "Georgian", "HangulJamo", "Ethiopic", "EthiopicSupplement", "Cherokee", "UnifiedCanadianAboriginalSyllabics", "Ogham", "Runic", "Tagalog", "Hanunoo", "Buhid", "Tagbanwa", "Khmer", "Mongolian", "Limbu", "TaiLe", "NewTaiLue", "KhmerSymbols", "Buginese", "PhoneticExtensions", "PhoneticExtensionsSupplement", "CombiningDiacriticalMarksSupplement", "LatinExtendedAdditional", "GreekExtended", "GeneralPunctuation", "SuperscriptsandSubscripts", "CurrencySymbols", "CombiningMarksforSymbols", "LetterlikeSymbols",
"NumberForms", "Arrows", "MathematicalOperators", "MiscellaneousTechnical", "ControlPictures", "OpticalCharacterRecognition", "EnclosedAlphanumerics", "BoxDrawing", "BlockElements", "GeometricShapes", "MiscellaneousSymbols", "Dingbats", "MiscellaneousMathematicalSymbols-A", "SupplementalArrows-A", "BraillePatterns", "SupplementalArrows-B", "MiscellaneousMathematicalSymbols-B", "SupplementalMathematicalOperators", "MiscellaneousSymbolsandArrows", "Glagolitic", "Coptic", "GeorgianSupplement", "Tifinagh", "EthiopicExtended",
"SupplementalPunctuation", "CJKRadicalsSupplement", "KangxiRadicals", "IdeographicDescriptionCharacters", "CJKSymbolsandPunctuation", "Hiragana", "Katakana", "Bopomofo", "HangulCompatibilityJamo", "Kanbun", "BopomofoExtended", "CJKStrokes", "KatakanaPhoneticExtensions", "EnclosedCJKLettersandMonths", "CJKCompatibility", "CJKUnifiedIdeographsExtensionA", "YijingHexagramSymbols", "CJKUnifiedIdeographs", "YiSyllables", "YiRadicals", "ModifierToneLetters", "SylotiNagri", "HangulSyllables", "HighSurrogates", "HighPrivateUseSurrogates",
"LowSurrogates", "PrivateUseArea", "CJKCompatibilityIdeographs", "AlphabeticPresentationForms", "ArabicPresentationForms-A", "VariationSelectors", "VerticalForms", "CombiningHalfMarks", "CJKCompatibilityForms", "SmallFormVariants", "ArabicPresentationForms-B", "HalfwidthandFullwidthForms", "all", "Specials", "Cn", "IsL", "Lu", "Ll", "Lt", "Lm", "Lo", "IsM", "Mn", "Me", "Mc", "N", "Nd", "Nl", "No", "IsZ", "Zs", "Zl", "Zp", "IsC", "Cc", "Cf", "Co", "Cs", "IsP", "Pd", "Ps", "Pe", "Pc", "Po", "IsS", "Sm", "Sc",
"Sk", "So", "Pi", "Pf", "AheadFSet", "NonCapJointSet", "PosLookaheadJointSet", "NegLookaheadJointSet", "Capacity is negative: ", "Binary", "b", "Directory", "Type ", " is not supported", "charsetName is null", "Should never been thrown", "PosBehindJointSet", "Replacement preconditions do not hold", "Action must be non-null", "-2147483648", "US-ASCII", "GL_EXT_texture_filter_anisotropic", "New data must have the same managed status as the old data", "decomposed char:", "NegBehindJointSet", "Disposing warning - ",
" is not memory owned", "IDL", " is already disposed", "Disposing error - ", " native_address is 0", "0", "<Quant>", "interface ", "class ", " is not subtype of ", ".html", "index.html", "index-wasm.html", "index-debug.html", "Should implement listener", "//", "WEB_SCRIPT_PATH", "JMultiplatform ", " is not set", ".wasm.js", ".js", "Failed to load .wasm.js or .js script: ", "OnInit", "mtl", "GL_ARB_framebuffer_object", "GL_EXT_framebuffer_object", "com.badlogic.gdx.backends.lwjgl3.Lwjgl3GLES20", "texture width and height must be square when using mipmapping.",
"AtomicFSet", "This buffer is not allocated in linear memory and does not wrap native JS buffer", "touchDown", "touchUp", "touchDragged", "mouseMoved", "enter", "exit", "scrolled", "keyDown", "keyUp", "keyTyped", "none", "table", "cell", "actor", "UTF-8", "<MultiLine $>", "autoShapeType must be true to use this method.", "Call end() before beginning a new shape batch.", "begin must be called first.", "autoShapeType must be enabled.", "Must call begin(ShapeType.", ").", ") or begin(ShapeType.", "GLVersion", "OpenGL ES (\\d(\\.\\d){0,2})",
"WebGL (\\d(\\.\\d){0,2})", "(\\d(\\.\\d){0,2})", "Invalid version string: ", "\\.", "libGDX GL", "Error parsing number: ", ", assuming: ", "Index ", "max must be > min. min,max: ", "stepSize must be > 0: ", "style cannot be null.", "Can\'t have more than 8191 sprites per batch: ", "a_position", "a_color", "a_texCoord0", "attribute vec4 a_position;\nattribute vec4 a_color;\nattribute vec2 a_texCoord0;\nuniform mat4 u_projTrans;\nvarying vec4 v_color;\nvarying vec2 v_texCoords;\n\nvoid main()\n{\n   v_color = a_color;\n   v_color.a = v_color.a * (255.0/254.0);\n   v_texCoords = a_texCoord0;\n   gl_Position =  u_projTrans * a_position;\n}\n",
"#ifdef GL_ES\n#define LOWP lowp\nprecision mediump float;\n#else\n#define LOWP \n#endif\nvarying LOWP vec4 v_color;\nvarying vec2 v_texCoords;\nuniform sampler2D u_texture;\nvoid main()\n{\n  gl_FragColor = v_color * texture2D(u_texture, v_texCoords);\n}", "Error compiling shader: ", "SpriteBatch.end must be called before begin.", "SpriteBatch.begin must be called before end.", "SpriteBatch.begin must be called before draw.", "u_projTrans", "u_texture", "Cannot register an uniform after initialization", "Already initialized",
"Malformed input of length ", "NearestNeighbour", "BiLinear", "Cannot register ", ", maximum registered attribute count reached.", "shininess", "alphaTest", "offset + length must be <= size: ", "com/badlogic/gdx/utils/lsans-15.fnt", "com/badlogic/gdx/utils/lsans-15.png", "If no regions are specified, the font data must have an images path.", "CI back reference: ", "loadFactor must be > 0 and < 1: ", "The specified font must contain at least one texture page.", "UCI sequence: ", "CompositeRangeSet:  <nonsurrogate> ",
" <surrogate> ", "FinalSet", "<Empty set>", "cullface", "texture cannot be null.", "px", " Error: ", ".", "./", " GET FOLDER: ", " GET FILE: ", " Size: ", " Path: ", " PUT FILE: ", " Bytes: ", "Cannot put an empty folder name", " PUT FOLDER: ", " REMOVE FOLDER: ", " REMOVE FILE: ", " CONTAINS FOLDER: ", " CONTAINS FILE: ", "PRELOAD_LOADING_ASSETS", "PRELOAD_ASSETS", "�", "averageCharsPerByte must be positive. Actual value is ", "maxCharsPerByte must be positive. Actual value is ", "newAction must be non-null",
"object", "function", "string", "number", "undefined", "enabled", "disabled", "childrenOnly", "^", "This TextureData implementation does not upload data itself", "prepare() must not be called on a PixmapTextureData instance as it is already prepared.", "glGetFloat not supported by WebGL backend", "glGetInteger not supported by WebGL backend", "GL error: ", "IndexBufferObject cannot be used after it has been disposed.", "PreviousMatch", "NonCapFSet", "UCI ", "Already loaded.", "File is empty.", "padding=", ",",
"Invalid padding.", "Missing common header.", "Invalid common header.", "lineHeight=", "Missing: lineHeight", "base=", "Missing: base", "pages=", "Missing additional page definitions.", ".*id=(\\d+)", ".*file=\"?([^\"]+)\"?", "\\\\", "Missing: file", "Page IDs must be indices starting at 0: ", "Invalid page id: ", "kernings ", "metrics ", "char ", " =", "kerning ", "Error loading font file: ", "No glyphs found.", "unknown format: ", "UCI range:", "keyboard", "scroll", "must be non-negative", "Loading asset: ",
"Unsupported asset type ", "Loading script: ", "Script download failed: ", "a_normal", "Call end() first", "Cannot build mesh without position attribute", "Call begin() first", "Mesh attributes don\'t match", "Mesh can\'t hold enough vertices: ", " * ", " < ", "Mesh can\'t hold enough indices: ", "Too many vertices used", "Incorrect primitive type", "PUT FOLDER DB: ", "PUT FILE DB: ", "REMOVE FILE DB: ", "IndexedDB Error cursor", "IndexedDB Error removing file: ", "IndexedDB Error putting file: ", "IndexedDB Error opening database: ",
"Can\'t invert a singular matrix", "The same task may not be scheduled twice.", "unable to provide a shader for this renderable", " at ", "[ByteBuffer position=", ", limit=", ", capacity=", ", mark ", "<SOL>", "(", ")", "directionalLights", "canvas", "<EOL>", "Is", "In", "OpenGL", "GLES", "NONE", "main", "Task failed: ", "UCI back reference: ", "BIG_ENDIAN", "LITTLE_ENDIAN", "Pixmap", "Custom", "<DotAllQuant>", "CLEAR", "CLEAR_WHITE", "BLACK", "WHITE", "LIGHT_GRAY", "GRAY", "DARK_GRAY", "BLUE", "NAVY", "ROYAL",
"SLATE", "SKY", "CYAN", "TEAL", "GREEN", "CHARTREUSE", "LIME", "FOREST", "OLIVE", "YELLOW", "GOLD", "GOLDENROD", "ORANGE", "BROWN", "TAN", "FIREBRICK", "RED", "SCARLET", "CORAL", "SALMON", "PINK", "MAGENTA", "PURPLE", "VIOLET", "MAROON", "File is null, it does not exist: ", "Pixmap already disposed!", "environmentCubemap", "Already prepared", "Call prepare() before calling getPixmap()", "blended", "u_sampler", "a_texCoord", "u_projModelView", "attribute vec4 a_position;\n", "attribute vec3 a_normal;\n", "attribute vec4 a_color;\n",
"attribute vec2 a_texCoord", ";\n", "uniform mat4 u_projModelView;\n", "varying vec4 v_col;\n", "varying vec2 v_tex", "void main() {\n   gl_Position = u_projModelView * a_position;\n", "   v_col = a_color;\n   v_col.a *= 255.0 / 254.0;\n", "   v_tex", " = ", "   gl_PointSize = 1.0;\n}\n", "#ifdef GL_ES\nprecision mediump float;\n#endif\n", "uniform sampler2D u_sampler", "void main() {\n   gl_FragColor = ", "vec4(1, 1, 1, 1)", "v_col", " texture2D(u_sampler", ",  v_tex", ") *", ";\n}", "Comparison method violates its general contract!",
"fromIndex(", ") > toIndex(", "sequence: ", "\n", "IGNORE", "REPLACE", "REPORT", "back reference: ", "<DotQuant>", "Classpath", "Internal", "External", "Absolute", "Local", "vertex shader must not be null", "fragment shader must not be null", "Fragment shader:\n", "Vertex shader\n", "An attempted fetch uniform from uncompiled shader \n", "No uniform with name \'", "\' in shader", "No buffer allocated!", "CI ", "UTF-16", "UTF-16BE", "UTF-16LE", "pointLights", "ISO-8859-1", "MirroredRepeat", "ClampToEdge", "Repeat",
"Gdx script failed to load", "hidden", "visible", "No support for buffer ", "posFSet", "Nearest", "Linear", "MipMap", "MipMapNearestNearest", "MipMapLinearNearest", "MipMapNearestLinear", "MipMapLinearLinear", "Point", "Line", "Filled", "depthStencil", "VertexArray", "VertexBufferObject", "VertexBufferObjectSubData", "VertexBufferObjectWithVAO", "key cannot be null.", "Patter is null", "\\Q", "\\E", "\\\\E\\Q", "[", "]", "Unmappable characters of length ", "None", "SourceOver", "INIT", "APP_LOOP", "IndexedDB is not supported in this browser",
"scaling cannot be null.", "Image ", "Can only free direct buffer", "Unknown Format: ", "Unknown Gdx2DPixmap Format: ", "Intensity", "LuminanceAlpha", "RGB565", "RGBA4444", "RGB888", "RGBA8888", "app", "db/assets", "high-performance", "Invalid type specified", "diffuseColor", "specularColor", "ambientColor", "emissiveColor", "reflectionColor", "ambientLightColor", "fogColor", "bullet", "data/badlogic.jpg", "ground", "ID: ", "\nFPS: ", "\nTotal Boxes: ", "\nBullet Version: ", "\nInputs: Enter for fullscreen, Space to un/freeze simulation\nHold Left/Right mouse to manipulate camera",
"Libgdx teaVM Backend + teaVM Bullet Extension by xpenatan", "attributes must be >= 1", "Call end() first.", "Logical", "Pixels", "Could not remove child from its current parent", "Cannot add a parent as a child", "java.runtime.name", "userAgent", "os.name", "Windows", "OS X", "no OS", "Linux", "pagehide", "resize", "gdx.wasm.js", "WEB_ASSET_PATH", "Flags cannot be null", "Cannot change none CUSTOM value", "CUSTOM", "DBG_NoDebug", "DBG_DrawWireframe", "DBG_DrawAabb", "DBG_DrawFeaturesText", "DBG_DrawContactPoints",
"DBG_NoDeactivation", "DBG_NoHelpText", "DBG_DrawText", "DBG_ProfileTimings", "DBG_EnableSatComparison", "DBG_DisableBulletLCP", "DBG_EnableCCD", "DBG_DrawConstraints", "DBG_DrawConstraintLimits", "DBG_FastWireframe", "DBG_DrawNormals", "DBG_DrawFrames", "DBG_MAX_DEBUG_DRAW_MODE", "Mesh attempting to access memory outside of the index buffer (count: ", ", offset: ", ", max: ", "capacity must be >= 0: ", "The required capacity is too large: ", "EOI", "mousedown", "mouseup", "mousemove", "wheel", "touchstart",
"touchmove", "touchcancel", "touchend", "keydown", "keypress", "keyup", "CSS1Compat", "node", "box", "progress", "Either src or dest is null", "java.version", "1.8", "TeaVM", "file.separator", "path.separator", ":", "line.separator", "java.io.tmpdir", "java.vm.version", "user.home", "/tmp", "DotAll", " in ", " at line number ", " at column number ", "decomposed Hangul syllable:", "WordBoundary", "spotLights", "data must be a ByteBuffer or FloatBuffer", "buffer not allocated with newUnsafeByteBuffer or already disposed",
"startup-logo.png", "assets.txt", "width cannot be null.", "height cannot be null.", "viewport cannot be null.", "batch cannot be null.", "#iterator() cannot be used nested.", "com/badlogic/gdx/graphics/g3d/shaders/default.vertex.glsl", "com/badlogic/gdx/graphics/g3d/shaders/default.fragment.glsl", "u_dirLights[0].color", "u_dirLights[0].direction", "u_dirLights[1].color", "u_pointLights[0].color", "u_pointLights[0].position", "u_pointLights[0].intensity", "u_pointLights[1].color", "u_spotLights[0].color", "u_spotLights[0].position",
"u_spotLights[0].intensity", "u_spotLights[0].direction", "u_spotLights[0].cutoffAngle", "u_spotLights[0].exponent", "u_spotLights[1].color", "u_fogColor", "u_shadowMapProjViewTrans", "u_shadowTexture", "u_shadowPCFOffset", "Some attributes not implemented yet (", "too many bones: ", ", max configured: ", "too many bone weights: ", "u_time", "a_boneWeight", "#define positionFlag\n", "#define colorFlag\n", "#define binormalFlag\n", "#define tangentFlag\n", "#define normalFlag\n", "#define lightingFlag\n", "#define ambientCubemapFlag\n",
"#define numDirectionalLights ", "#define numPointLights ", "#define numSpotLights ", "#define fogFlag\n", "#define shadowMapFlag\n", "#define environmentCubemapFlag\n", "#define texCoord", "Flag\n", "#define boneWeight", "#define blendedFlag\n", "#define diffuseTextureFlag\n", "#define diffuseTextureCoord texCoord0\n", "#define specularTextureFlag\n", "#define specularTextureCoord texCoord0\n", "#define normalTextureFlag\n", "#define normalTextureCoord texCoord0\n", "#define emissiveTextureFlag\n", "#define emissiveTextureCoord texCoord0\n",
"#define reflectionTextureFlag\n", "#define reflectionTextureCoord texCoord0\n", "#define ambientTextureFlag\n", "#define ambientTextureCoord texCoord0\n", "#define diffuseColorFlag\n", "#define specularColorFlag\n", "#define emissiveColorFlag\n", "#define reflectionColorFlag\n", "#define shininessFlag\n", "#define alphaTestFlag\n", "#define numBones ", "Unknown material attribute: ", "Asset download success: ", "Asset download failed: ", "Script download success: ", "<Unix MultiLine $>", "diffuseTexture", "specularTexture",
"bumpTexture", "normalTexture", "ambientTexture", "emissiveTexture", "reflectionTexture", "u_viewTrans", "u_projViewTrans", "u_cameraPosition", "u_cameraDirection", "u_cameraUp", "u_cameraNearFar", "u_worldTrans", "u_viewWorldTrans", "u_projViewWorldTrans", "u_normalMatrix", "u_bones", "u_shininess", "u_opacity", "u_diffuseColor", "u_diffuseTexture", "u_diffuseUVTransform", "u_specularColor", "u_specularTexture", "u_specularUVTransform", "u_emissiveColor", "u_emissiveTexture", "u_emissiveUVTransform", "u_reflectionColor",
"u_reflectionTexture", "u_reflectionUVTransform", "u_normalTexture", "u_normalUVTransform", "u_ambientTexture", "u_ambientUVTransform", "u_alphaTest", "u_ambientCubemap", "u_dirLights", "u_pointLights", "u_spotLights", "u_environmentCubemap", "Illegal arguments", "Error writing file: ", "Invalid assets description file. ", "1", "c", "l"]);
jl_String.prototype.toString = function() {
    return $rt_ustr(this);
};
jl_String.prototype.valueOf = jl_String.prototype.toString;
jl_Object.prototype.toString = function() {
    return $rt_ustr(jl_Object_toString(this));
};
jl_Object.prototype.__teavm_class__ = function() {
    return $dbg_class(this);
};
let $rt_export_main = $rt_mainStarter(beb_TeaVMLauncher_main);
$rt_export_main.javaException = $rt_javaException;
let $rt_jso_marker = Symbol('jsoClass');
(() => {
    let c;
    c = cgxgbt_TeaClipboard$ClipboardWriteHandler.prototype;
    c.denied = $rt_callWithReceiver(cgxgbt_TeaClipboard$ClipboardWriteHandler_denied$exported$2);
    c.prompt = $rt_callWithReceiver(cgxgbt_TeaClipboard$ClipboardWriteHandler_prompt$exported$1);
    c.granted = $rt_callWithReceiver(cgxgbt_TeaClipboard$ClipboardWriteHandler_granted$exported$0);
    c = cgxgbtu_Timer$1.prototype;
    c.onTimer = $rt_callWithReceiver(cgxgbtu_Timer$1_onTimer$exported$0);
    c = cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_0_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1.prototype;
    c.apply = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_1_apply$exported$0);
    c = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2.prototype;
    c.get = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_2_get$exported$0);
    c = cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_2_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$readAllFilesAsync$lambda$_4_1_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0.prototype;
    c.apply = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$downloadDroppedFile$lambda$_3_0_apply$exported$0);
    c = bl_btIDebugDraw$2.prototype;
    c.drawContactPoint = $rt_callWithReceiver(bl_btIDebugDraw$2_drawContactPoint$exported$0);
    c = bl_btIDebugDraw$1.prototype;
    c.drawLine = $rt_callWithReceiver(bl_btIDebugDraw$1_drawLine$exported$0);
    c = bl_btIDebugDraw$6.prototype;
    c.getDebugMode = $rt_callWithReceiver(bl_btIDebugDraw$6_getDebugMode$exported$0);
    c = bl_btIDebugDraw$5.prototype;
    c.setDebugMode = $rt_callWithReceiver(bl_btIDebugDraw$5_setDebugMode$exported$0);
    c = bl_btIDebugDraw$4.prototype;
    c.draw3dText = $rt_callWithReceiver(bl_btIDebugDraw$4_draw3dText$exported$0);
    c = bl_btIDebugDraw$3.prototype;
    c.reportErrorWarning = $rt_callWithReceiver(bl_btIDebugDraw$3_reportErrorWarning$exported$0);
    c = cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_10_0.prototype;
    c.onTimer = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$lambda$loadBinaryInternally$3$lambda$_10_0_onTimer$exported$0);
    c = cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$removeFile$lambda$_3_0_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_2_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_1_handleEvent$exported$0);
    c = cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$setupIndexedDB$lambda$_1_0_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$setOnProgress$lambda$_5_0_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_4_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$loadBinaryInternally$lambda$_4_0_handleEvent$exported$0);
    c = cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_17_0.prototype;
    c.onInit = $rt_callWithReceiver(cgxjl_JParserLibraryLoader$lambda$loadWasm$1$lambda$_17_0_onInit$exported$0);
    c = bl_btMotionState$2.prototype;
    c.setWorldTransform = $rt_callWithReceiver(bl_btMotionState$2_setWorldTransform$exported$0);
    c = bl_btMotionState$1.prototype;
    c.getWorldTransform = $rt_callWithReceiver(bl_btMotionState$1_getWorldTransform$exported$0);
    c = cgxgbtft_LocalDBStorage$putFile$lambda$_2_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbtft_LocalDBStorage$putFile$lambda$_2_0_handleEvent$exported$0);
    c = cgxgbtdi_TeaWindow.prototype;
    c.onAnimationFrame = $rt_callWithReceiver(cgxgbtdi_TeaWindow_onAnimationFrame$exported$0);
    c = cgxgbta_AssetLoadImpl$getFile$lambda$_2_0.prototype;
    c.onExecute = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$getFile$lambda$_2_0_onExecute$exported$0);
    c = cgxgbt_TeaClipboard$_init_$lambda$_0_1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaClipboard$_init_$lambda$_0_1_handleEvent$exported$0);
    c = cgxgbt_TeaClipboard$_init_$lambda$_0_2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaClipboard$_init_$lambda$_0_2_handleEvent$exported$0);
    c = cgxgbt_TeaClipboard$_init_$lambda$_0_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaClipboard$_init_$lambda$_0_0_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$loadBinary$lambda$_3_0.prototype;
    c.onTimer = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$loadBinary$lambda$_3_0_onTimer$exported$0);
    c = cgxgbt_TeaApplication$1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaApplication$1_handleEvent$exported$0);
    c = cgxgbt_TeaApplication$2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaApplication$2_handleEvent$exported$0);
    c = cgxgbt_TeaApplication$3.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaApplication$3_handleEvent$exported$0);
    c = cgxgbt_TeaGraphics$1.prototype;
    c.fullscreenChanged = $rt_callWithReceiver(cgxgbt_TeaGraphics$1_fullscreenChanged$exported$0);
    c = cgxjl_JParserLibraryLoader$loadScript$lambda$_12_1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxjl_JParserLibraryLoader$loadScript$lambda$_12_1_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$loadScript$lambda$_2_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$loadScript$lambda$_2_0_handleEvent$exported$0);
    c = cgxjl_JParserLibraryLoader$loadScript$lambda$_12_0.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxjl_JParserLibraryLoader$loadScript$lambda$_12_0_handleEvent$exported$0);
    c = cgxgbt_TeaInput.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbt_TeaInput_handleEvent$exported$0);
    c = cgxgbta_AssetDownloadImpl$2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetDownloadImpl$2_handleEvent$exported$0);
    c = otji_JSWrapper$Helper$_clinit_$lambda$_3_1.prototype;
    c.accept = $rt_callWithReceiver(otji_JSWrapper$Helper$_clinit_$lambda$_3_1_accept$exported$0);
    c = otji_JSWrapper$Helper$_clinit_$lambda$_3_0.prototype;
    c.accept = $rt_callWithReceiver(otji_JSWrapper$Helper$_clinit_$lambda$_3_0_accept$exported$0);
    c = cgxgbta_AssetLoadImpl$4.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$4_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$3.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$3_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$2.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$2_handleEvent$exported$0);
    c = cgxgbta_AssetLoadImpl$1.prototype;
    c.handleEvent = $rt_callWithReceiver(cgxgbta_AssetLoadImpl$1_handleEvent$exported$0);
})();
$rt_exports.main = $rt_export_main;
}));
